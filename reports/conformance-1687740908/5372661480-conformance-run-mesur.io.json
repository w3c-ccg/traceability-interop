{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e1015ee0-bbb3-4386-99fd-2a4c4d6c711d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "249bc270-56b8-4998-8c9a-74a1f5c08f36",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b0c04a17-48ce-488b-b7a8-354abc48ef67",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7cb6873f-75c9-4764-9401-e2e03d26e012"
                }
              }
            ]
          },
          {
            "id": "f30f6c9f-16f3-45bb-9825-a29868c9232d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4cc06a84-9128-48b8-87bf-1f2b9c878641",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a16a954f-3561-4377-840c-a448b9122f4c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b0174bde-5929-4d2b-8d88-3980264dce71",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f6966e56-3d2c-4b4e-887b-c7e3338e2562",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb6ef717-5828-4c8b-9df7-01377b0ef471",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34c922d4-d0cc-47f3-8029-d8648767c7d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e263d3e-331d-4480-baf6-fe19b58815b4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e742e66-8277-418e-8807-fbc4e77603c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc57aa73-79c9-4ed7-b52b-da3e4dc7fc53"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a20bb9fb-3436-44c8-896c-9809f589baac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fda8c2e9-34b6-4fd5-bcee-1b6368e58df1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f562c103-736e-49e2-8547-762fd90986f7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2c4b673a-c20a-48f7-9056-3e1b73d52fd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17cc0c5b-6014-4e50-9e26-24add62c29c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8bad206-2aa3-4557-bc9c-21946f680593"
            }
          }
        ]
      },
      {
        "id": "0bd5eaba-a476-4b54-af44-bcaff7a93905",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c3115c04-4f52-41e3-bfab-23e0aba54ab8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4fd34a4-c660-49b8-a0d8-49390760e066",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0fc66893-ce0d-4ae9-8840-21db2527932c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f494b4a-ef14-4145-8e30-f9f7a11c1309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32083d08-5965-4f79-ade5-036820e6108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7db7343-a93a-4692-a06c-35e0506a29d1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3719a5f-b716-4d9f-a190-95c9a6126c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3edbc3bb-c4b8-47ba-bc06-8e3393a68638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c8be5f-8439-4810-891d-2ac920888c57",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fe9f70-9da9-45d9-92ad-712f12470dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dd5a669-34fb-44ea-a0db-4c18ba68b320"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0bd2f122-80e5-499f-aaf6-d26bc7fb4242",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "064b23a3-bae3-4f5f-9c73-304b8686ade7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8ea665-5b6c-4d92-b310-91c9b3d88229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4efd21e6-2ad3-48c3-b7d6-36d5b7241b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1937e4-7536-4c08-a241-04a59ddad43d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15230c97-808a-4fd9-ab59-b2b082cfa438"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2dc504a0-233d-4395-94db-2918489667b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fdcec9b6-751c-4913-bbcb-6e9318515d9f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5bdda63-660b-4165-b63c-65d457890b44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8b891e5d-d719-45a4-bdae-f55fa95846fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e47443d9-5cb3-43be-9433-375d0793b63b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ceb65f7e-56e0-4974-8346-7a75c73a691f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf0914af-b73c-489a-be12-14d093e159d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "257d62da-97c4-4286-aa18-eb43093594fa"
            }
          }
        ]
      },
      {
        "id": "fedfca85-35e3-4ca3-95bc-acd640462973",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "27f76b7a-2f20-4672-8f0f-44ad7f39d731",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c4fd49e-562a-4bef-bf12-d20b2d3e7a34",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7fad441d-05e2-4ff9-baae-039709911d36",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7681943e-92f3-4ef0-9657-320441b65166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b52dff-cb87-4abc-9b67-497e9a0da42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87160931-62d8-4a90-b59f-2653fc9e019c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "228123fc-a56e-4148-8d63-b7461ed7f92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02580a4b-ca4e-4bed-9499-cc68f061315f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738a4c42-1d22-495b-ab26-35efdecdbd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dad329f-2c56-4858-bf12-0f471b51d9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8312906-8865-4361-a386-2e0a4b095f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0287d96d-25e7-43f5-8ed4-75ce51598b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3679e2-4533-412f-9ac8-59fce9014f7b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1930ee-1fae-49aa-a2a5-007df719b41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba11d2b-df79-465e-95fc-424531252535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b868c326-1917-4602-aed4-b74d364eaba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e28ef10-b5a7-487f-bf3d-41db2dc32e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972b9d88-907f-4003-b944-6889f2e8f2e1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edbe28b-6ed1-4096-a690-82ca5a15b560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77ff78d-cddb-4a3c-9694-adfa371aea41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c547e1-6465-40b2-b080-bcefbdef0190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5abbeb02-118e-48c0-bbc5-451ac7cbb2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5257fa-e51e-4e16-8cc2-1c91909539a6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b5a1af-cd5c-4da4-aafd-2d10368ec174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20cdb36-bd06-4140-a4d7-5dcbe4d20f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ab4710-56c9-4c3e-8c73-2950000423a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9705601-a1c9-4d14-9efc-b7c0700ae4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9da3958-4b18-425e-afc7-d76e164778ae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80da21b0-55ec-4b82-bf36-230819a0b59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75799a84-7461-42e8-9eee-53fd216af320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a62d49c-60b4-49bd-b79a-e0295f291d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a396c55-55e9-473b-a1cf-d2cc3d08f5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d735ab-892f-45ac-8d51-0f8d8f9baf58",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4e611d-dfaf-4468-8a47-4d176932f6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3ac1f1-d31d-411b-abf9-a8bc194ca0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efe19b5-d374-441e-a5a7-1047aaeba1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04ace899-e4dd-47bc-a12f-2a0211beb7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91ea1b6-94ed-4a5a-9dce-bba3174f3a67",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09441239-9f91-40ec-9f55-9201dd264c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b659c0-8f42-46d5-9118-d1bcb7522b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe06a678-649f-4481-9d54-2bb244b018e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4edad98a-5365-4450-9007-54d30aef8de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73ac802-5caf-4145-a444-db3aceb06dec",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3caf5b6e-424d-4998-bd7a-2b3f2bdae5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac82354e-0c27-444e-9203-b3292348cd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e027205-8c86-4ab5-befc-db4469d72599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb73b35e-47a7-4a5c-859f-395f7de89f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bdc976-0d34-4b19-b530-bedf88935cf9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310e9e7b-cca0-4486-9214-5daddb88fce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d4e9db-4f57-4fa0-89a0-7a08531c5d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831416d8-2b9a-4a3f-a540-033faf00466e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f04c7b93-0d2d-4ec8-a6d1-dc3211dc128e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c59dd12-9d53-4fdd-b50e-ed8ce2f95124",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bd800a-130e-4fcb-8d87-a585ce06cc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6528372c-1038-4782-89f1-3e9cc4638dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d963e6-b4fa-49d0-a557-ea19d4bdb77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46814818-513b-490f-ae5a-270cf37c025e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3a9b99-dac1-4fc7-8d53-a9989b1ff6fe",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f77f527-b5d7-4a8b-864d-6960a9f80258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f82aee-94f7-481d-9ff9-3772bfcc4917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48372d9a-a4b5-4cfd-bc92-3b6e963469eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e9022fa-5621-47ed-bf89-677d0fd8d39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683c9614-0472-40af-9113-dfe6d14446ad",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae99ff5-dbb9-4826-b89b-f4c6354f738e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524a14ed-3f03-4b8d-81ef-8a7b685482eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75040c7e-e8d0-44c8-88f9-4118636bba2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac773f3e-0e44-4527-bef7-df8052a9f3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290ea340-3ec5-40e0-9cd9-4502aaf5e254",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c8af28-ede0-4ea8-9fad-db429688e86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9db8f66-d3a8-46c9-839f-442564466d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fcc74d-1c70-446b-9f0c-0e6383bf7508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb0d977e-39cd-4777-a639-6739e8d2bba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6dcefe-61b0-4759-b158-c36521670d1b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a7d798-bb39-47bc-9d6e-0a46feffc8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ef8a26-09c3-4792-82dc-aaa419692f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325b648c-b184-4467-a2b7-ec264c8b4944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2afbad56-396c-4c86-a50b-32fc6f738d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a794c8c3-dfb8-4f94-86c2-5c7a868057c0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8d3af0-ad11-4273-b574-d9322fefc4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c1da4a-dc10-4733-8188-0464d2133b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac68321-c297-48c1-9882-4e3aff057039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df2a3565-8a49-41c3-a2f4-a7c1f136f779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7e8786-95b8-4729-bf07-eb57a1f4e3b6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594118ef-660e-4a26-ada8-8b9532873a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b77afb-6064-428b-95a3-9836cb6475cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e0535c-1ce2-4105-a63f-3faccb6bbc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28dec4dc-e020-4ed7-ae4b-dc70a75d089a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edd9ab7-dc1d-4e64-bd37-9e068cabe658",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cc9e72-f2e7-485e-9db7-107aaabcd0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d509c816-9afc-44e6-b44e-ce15ef0c4e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0767a852-e34b-44f2-863b-35672b01ef18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "27a1c16e-fd6a-423d-b4dc-d90baee2e86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29701890-7f8a-486a-a663-2e22edc5f9aa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9357190-5701-4c6f-9dee-ec76043db220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330a8271-0323-48e4-a730-e7035932cb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1918b12a-4033-4bd4-bead-b571eca0557c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9342e68-e279-4214-b19b-f2d106333ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e60597-1971-48d8-8913-c56e247a2154",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b150e5a-28a7-4e59-acc1-feeaaae85b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163f9b18-8738-4c22-ac31-345592de8385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152ec9a3-469d-4b24-90c8-09ab6d9a0158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e685f63e-312d-4264-9636-517a0631d8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b13455-dec8-40eb-8a21-17457514c821",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743dcba3-5591-4504-a6cb-23fdaad644e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702529a7-fc63-49bf-bb98-0928f88c42e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2508b00a-5ddb-43a5-876b-d4e761fa2d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e87893ec-d07f-4fd3-9212-4f269517d6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e340baca-1723-44cb-87f7-90c1b8823b09",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dd0cc5-c1f1-4ac6-b65a-19bda1b19220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c2e7eb-9dec-4797-b559-27866c7903cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831e312d-ecf0-452c-8917-048fa02123c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bcdae9-e3e8-41c0-bb8e-f86318f411b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f529ed0b-8c6f-49a3-8dd5-4826ca22fdd6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fac08cb-0e6d-4f87-99d4-d5fd79e2d143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0108dcb-b51d-4416-a317-66132eaeaffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42feb387-f3ee-4285-a85a-80b6bf32e089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f09a742-d82a-4539-8cce-376b922c5166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0367271d-0c8a-4de8-96c6-629e2fc1f0c2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5183dcf-70a7-4001-873a-d979adee5ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c632e8-d305-4cdb-8f2d-17042d02cc50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37666ea1-1066-4962-bb11-25a0e17834b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2169bda0-4432-444d-af38-996c18e22624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00a0c60-7f86-4281-9864-f1efc38d6bd2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c370f5-5883-4d7c-8f95-98fad1f2f6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c10cb3-138e-471e-b096-46afa26af8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8d9e1d-0eab-4788-84ec-7f07b9cf2186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "788360d2-d9a2-4bb9-ab42-90c71e55a0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060aa618-a3ad-421f-9d13-32cef0c2bd21",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e06609e-481a-4eb3-8607-f8a280365c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c04193e-b624-4ff0-b710-e3e26be74c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86c7b06-f763-41c3-976b-5c73398eebd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffbd98e-4006-4fad-8b21-ab23e4bb3296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66d7482-96ea-4941-a0c9-22ce932de8eb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf534763-a4b5-4c6d-84d6-ec0fcd288d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b39154-96bf-48cc-83e2-e4f4268079d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379eee15-0160-4088-920d-1795daa20e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70aca3be-d4d5-48f2-9b95-864409e0ac53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb404de3-dd8f-488a-84d3-5ca1f5cdf2f7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4fd2a1-c825-4cf8-943b-5dd9d51286b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9752d1-d375-42f9-a5bd-0e387e60af93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbe06c6-adc9-4051-9bce-7de66a8de413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "430dec54-31bd-4604-a73e-1f730440e472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca0cabb-869c-4c7b-9e9f-64be4102c21f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8f1c64-ab86-4635-82d7-f4a1a9d74cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06960d8e-8dea-4047-92d3-59d2bd6d13b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef028ec5-698d-49e2-9832-1673d7179c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e095b70-e169-4a45-8b4e-db7210fce06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17af8be9-e440-4eda-98be-6a09c921f00e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ddd930-bef5-4be7-9b73-543a46df498f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fcf79a-9173-4b29-ae0d-3b50a4344b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e1f374-e22f-4bd1-9ece-4a9263bbf27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "34f002e1-0c1d-4dcf-b567-e0a69feaf4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ba14d3-ed76-4080-a1e5-f9571ed104c9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acacb6d8-d67a-4c56-a7ce-034404152186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c5b647-8666-4f71-b330-45d7de71599e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c00c4b5-74a6-417e-8981-c7959c377145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b13eb741-6aaf-437c-9ff9-380aa987d14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77d144e-3834-4e22-8f94-213cfb85dd92",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb576256-d91b-4ee9-a20e-285f2b9ca9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a36caa-e86d-42eb-b0e0-8e157e6fcb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed34d056-1ff5-4b95-9592-97c9278a22b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce3bc22-a28a-4db3-b4fa-c9601467f0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190af09e-df85-464d-9c24-2b950435509a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81bd35d-bcf8-4015-987f-41ebf0b5cc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1df65a9-51f2-4e7e-98ef-87d3f955e105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05774323-f8b4-4435-879d-fd949e015c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30cb7f26-58c8-4f23-87c4-80ec58f7e781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fd00dd-68ed-4625-a93b-4ebc0d210428",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cd7064-c57f-4d01-a47e-2bd77838190a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6325822-8657-426b-8aa9-2f2601ce9aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb2408e-3d9c-4f5d-aefe-f76c5f1437f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d110413-a4e8-4ca3-a323-8eb49d628e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4464cf7-f8d4-48b7-9011-8d0b1e4befd4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17f7350-616f-4725-a5a6-f22a5f02ac82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe38bf4-6ca9-496b-aa5d-900474612ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94adf7bb-0dda-4cd0-848e-39b33639adb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d3339d69-694f-4b56-becf-9583503133c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3625c403-9e2e-4595-8a44-ae40c0ce7cb6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f6e1ad-0b08-4ae1-a18c-3691d05c9a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9602d45d-f65a-4d32-9986-d322c151f5eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427228ba-d5f1-4784-b7e3-e4ea9a9f905e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f975817f-7509-4204-b22f-392633d626ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1085e88a-34f3-4a46-bd37-3158589dedba",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99ebda1-2525-4df7-b809-287d399b48fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f26cf4-909b-4797-b22f-b017e9069971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef7bae1-ce03-43d6-88c4-10dc34edc838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5653782b-1e8e-4294-b5bd-b0d765061498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364cdcd4-e1f6-4d88-9965-3de1e29c99a6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8300af7a-c888-4629-a429-1f78c9bd40a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbb8dd8-c8e8-450a-ae70-23c13b1942c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85373b23-c13e-4170-8c98-f6082331adc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4271ac6-944c-4b3c-a7b5-364529a387d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c9b4ff-09fc-4fdf-8604-9d91c8b008c0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08bc88a-9cbe-446d-af6f-de5018cdf38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058378ac-3cee-4da7-9830-9898bd204ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1861a690-8228-431f-b491-1b754bb77f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "41b7db19-ddab-4278-b9d8-ed2703c24768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dac68a-46fc-4f58-8e68-930562e5362a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9240f7-7be2-46dd-9264-512f92275c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49888472-fabe-4e3d-94fd-2f05d825eeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bb3699-9c8f-4706-93cd-05e5f3bc70ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68971c70-d3fd-444b-a719-36776c97cdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa76c9f-82b3-46cf-aae7-6e5acde3a457",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3f76b8-1b06-47d7-a7ae-210685b59769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6450bb91-1bf2-49f9-a651-cd108fe04bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8e7f45-5dbf-4bce-9c59-8174c5f6370d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4568421-abac-486f-ba13-22522f174764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8964ca9d-a711-4930-8ac7-0f9f654f9e48",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4892d441-cc80-4718-9c6d-9356d42f9868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33d815f-9e03-4f67-9ec9-0ee20c30a238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aee865a-6e13-4632-a39f-54d8bb90c021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3f52b58d-de37-4755-965b-67be65d0f434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eec5ec1-a57b-4d08-abb1-2005d28fd85f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5d6f21-e069-44f7-bec4-24902f8cac9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348d7f04-82d7-4eab-87e5-9296bebc6966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd44446b-0c49-438a-b060-47fcb8812dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "874cd497-72df-4f48-81d6-51db7fb3794b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31e53f0-dbf3-4d28-befc-e240b4407ac7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e64a5c3-b920-42ce-9130-922fca798f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1059b87-7a59-4caf-b4d5-f4f61668187b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee426b5-c1a4-4694-acc6-30163c03d6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f35d7f5f-e1fa-4b60-807c-1f53d7daf9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1823fe-d7e7-4852-a56a-3df1cf473518",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d95863-bbe3-4c22-9c14-583f10258cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd7d2ed-14e5-4ae9-a76f-96e38adbc198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349e4b09-482a-46cd-9eca-a56f15b97ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "987da294-585a-43e0-b3be-4e3bd15cc944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d41ffcf-0165-4940-aa87-2e9f4dec5e15",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcdca02-cbf3-4fe6-abdd-15e47eaddb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858c71b6-1cd2-4072-8bc8-41f9a6501f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54911a91-9339-43e5-b197-14d2250c4681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "017804d8-57d3-4654-8093-c0ef11755029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd68b89-94f6-48f5-a20b-1f1b244673c3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c29f24d-1bf6-4f0a-a984-4bb0d8dc789e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c37d15-c359-4c9d-88b4-358888947511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874e6b54-4fc2-40ba-aca7-d034f7791541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85b3ea2b-33b5-4318-a6f5-6fc6dc42e75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4886b811-6aac-41c1-b237-d2d886c73909",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea4e2e3-8406-4341-bc0d-993931974694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a2d645-143c-4432-9128-a8d4fd13e339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ce88ad-54df-471f-a373-7a63d10f82a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "172af1fb-382b-4121-9f48-f42b377e7db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1b9815-3d92-49e3-b934-a4d3e5cf5dc6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd76fbfe-fd81-4ce0-bf72-2fd1fb756b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a921c1a-8997-41ec-9841-61ae0cb71910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765ab485-52d4-4640-8d21-b9d348033f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "037fa568-4c46-4fb7-b14c-b72dbfccaaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad23bec0-75ec-402b-87f7-b379c9148e58",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f566821c-48bd-453a-bebd-7430315f6932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fdb906-af5c-46eb-b6a5-81353c48714e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae483174-bf0f-465d-8739-398bdba1e6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc814793-012b-403e-a2ed-a821de3f8e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091b742d-4f9c-47a8-94e2-862eb13a4a2d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c180365c-92cf-456e-b732-52df37fde920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067534c9-3c91-4032-b589-88f52b63d947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538aa7c5-8091-45f9-bbee-982488f4b484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9676bd20-64b0-403c-a0a5-7de7c696ab15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b785c1e6-3783-4842-926b-72ae85666461",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19610c68-041d-4b80-8f6c-7d1ec9cb9ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9287503-ad54-42a6-95b2-970a6fc306b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b102d1-f39a-490e-b28d-387ca16e1cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39cc6145-be09-4c58-b387-42c9329a8be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8ea3dd-5ef7-45fe-b8d6-794eb4cc446c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999f920d-6e17-47b2-b10b-6e710b24cf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f85f253-5f66-44d2-b0fd-02af80c50179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9ed869-83b4-42b4-a1ea-6e38a3ba517c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e23e40a8-3c53-4f7e-aa24-5e3ca6260ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53c68a8-250b-46e8-9a76-ec1c13e9ddbd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2fe8d3-a1a9-4e2e-838b-a36596859202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ba9e7e-88b0-4b40-b9b3-50b67131e358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19eb1ede-fdd1-46e9-9d74-f76aca82b7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69778886-f147-433a-97d9-6320baa3319b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1181276b-d5ed-4786-9d3f-3cbd0d633d9b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e280bf-b4bd-47bc-9874-76eb02cd2ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8dd0f63-6e3b-4c33-82d1-93d1e82fc0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff3f8da-df4e-4380-9547-9b9fea0669c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6ddf0e-e314-487c-bdbe-bd439cdd951d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7cd803-3621-456f-abcd-1431588eff1a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4840a96-9fba-4024-8229-dc45530d60c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ea6411-c06f-4d44-89ca-d83a3d20e5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37301565-a73b-46cb-a555-712b03bacb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b5580459-ce64-4455-9d59-10645c2afa03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb36949-dafc-442b-8cf9-11025a956942",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a947e97a-7e6b-468f-acac-fa160abf359c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf1a1a4-9d8a-4f9e-8e90-d0394d658c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446f4f12-d50c-4815-a6db-a71351534c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8989ad0f-5c6b-4dcf-8f9b-5721a73d2163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa86e09b-11c5-46c5-bae7-39eada3bb86f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1701bd-3a3d-4870-b65e-e11fc0ebf2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83d6dad-3201-42fd-b098-6965e9d4840b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8d69cb-9751-4bb2-889e-df91511622d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2c8979-bd6c-441d-8c31-fd7397c1e103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f692bd-f0f1-432f-829d-fa69f88b4d75",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de168cf6-c199-4299-981c-b2afe12d514e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f6a4a9-9940-4363-b77d-da9cbf9ab412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c210f2-af3b-41c0-b363-52224618779d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3baa17-4f3c-466e-9c4b-7613d9039589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa65d732-7532-45a8-b21f-b124d28a48fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63c4ad1-2e0a-4ba6-8621-45856f7b714d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de287b2-5218-4671-9ff1-d9695aee3d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643f99c3-7fd6-43f5-b492-c789e3db3f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "54dd10df-16bf-44ad-8aef-642ba91fc756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db743691-e83f-4704-89db-e28317b8f130",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb90ee9e-147d-4aa8-a204-50442cffb114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ce870f-ce03-40e3-b4fa-32833358b443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ca8dc3-abaa-45f1-a7c6-65ebe9cab7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c54ced-12e4-46b7-8274-80156b4c9f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dffc12-989d-42f1-bf75-1263e445230c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455a0329-0e74-4b4b-bbb5-231b1a19c5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad03246-f706-4dfe-9e65-20bd4b46fd31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b953115-aa7d-48ee-8dcb-e5e573721998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "47c5fd80-01fc-470e-8b31-d438b831696f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37c44c3-0f9b-445f-8486-bf8fcf0d348d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec19ed5-5b0d-4a39-aedf-a3f78dde7539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb726fa-4d7b-4888-b9c2-91f773241750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cf35b3-b33b-4783-afe8-b1cfa34088c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a26e4d3-ac45-4a56-bb7a-624d2c114fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a59671-2d38-498f-9521-d387e89726c2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ed3ff6-a99d-4350-a5a8-0f3bc19b5c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e16c3b4-ff01-42ca-aa66-2ceb338a7b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36db28b0-403a-44a7-97ae-583c1203ef45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea6bbcb-1a77-412e-a427-0b85d578bf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d68422-8c04-4ac6-ab61-1e21b15d62e8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2678dbc-2aff-4663-8681-6afcd83cc964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731e0c8f-632f-4889-b05c-3bf9afde21a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d26aa8-dc47-4ae2-bba2-e1d1a4012c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64ec208b-3c8a-4450-969b-d37ea1797fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4484383-9dd3-445f-b268-f6ee8e91b856",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c31556-700b-4050-a21d-bf0fb2b4553f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bf86c3-5603-4ba2-8940-74b5ea729115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22de162d-42c9-47b6-ae22-6f329dee0b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7ffc76-9dea-411b-abd1-1c03bc9b2a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b856e12e-53d7-40d5-9754-e85a2c1bc484",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f76805-dbca-421d-a4ab-fac0290142d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c75b4e-d1f8-465a-8245-eb7c565a8b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da90a5a5-78d1-422a-8c86-7764ea2c6511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a56ca0-e35c-46ac-ae80-34cf14c95a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78abf19d-aff3-4e7d-9df4-b42a4e2ba6d5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ce021a-02e5-4c76-ae5a-ad688cbe93d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045080d9-9e38-4951-bcd6-062bcd9b3184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63dbd3d2-600a-4780-81b5-992673d979ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2574209d-02b6-48c3-b308-f09c77c1238b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d8d1f0-38cc-4a6a-be74-a9f567df202a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00d5fe4-c09c-4b8b-a34f-d14c35f875fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d233f1e4-15f3-4190-8ec5-8ee00a43ce25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e901d7d-0413-4a99-8218-1603438c97ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9ae91b-c9c7-497d-926e-ed40d7ae8dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc818a4-e192-473e-8e96-fb851d00db7b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3d8995-d12b-4636-9be1-5754eb96defc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ed5c69-1d56-4155-97a9-9dae8fcb9486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6e904d-5acc-4d12-a7f9-873ccab2cc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74413517-341e-4ef9-8c52-213743520189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45af776-a854-4e77-bf24-ea63420b9019",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16472910-94ac-4a4a-b874-7c7d02eeaad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd73dbc-84ae-4c9c-87f4-e85cd3dbc5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fedc0a-fd00-4c3a-8f90-87cb2d99b334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90024eaf-fe82-4478-b7d0-b22906986b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f76161-8cdd-4f5c-a776-3ae96e2f7a1b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f37345-d4b9-4d1e-b12c-8b0fe7700fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481852de-5674-4332-8ded-f3c8b374b446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d0a4e9-c188-4668-ac3e-5e683708bae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f439e5a-d257-4a5c-96db-43ce31c2922c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418e975d-2140-4f90-a6aa-f3eff70128c8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005147c2-a60a-43fe-8bdc-16dcde5d9857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c01bdc7-d740-44be-a7ca-dc86fe4511e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b84ae80-cc12-41cc-8ff6-25b2baeadbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c495ad1-b839-4a13-96fc-bd5f8364bc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc516ec5-a5b2-4ddb-9e55-585d38febe9b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed7c322-30c4-468f-aef2-ba26d71a1007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19220e7-b9d6-4f67-b215-3610c1cf28bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad41026-72d3-4cf6-9fc3-d1bd59c1dc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58c82725-8050-4010-a9bd-4f02cb0d23dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36a8d80-a6b7-425d-a545-57a715bba407",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8a6fcd-9814-4094-94e7-aa0d028e870f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aaf8715-33ae-4fdc-ba13-24824a035c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1684b2cf-8864-431b-bf52-7a190249920e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f67df2-fba1-4053-b8f0-9d0072e37f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65612957-6a2b-4426-9676-64c5d4caa063",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e801f917-f1c3-43e8-97b8-ccaa72544cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bd6116-fdd8-4f93-b7a1-c4a3f1c7ac54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7ae786-9f63-4190-9ef1-c9e3c8456e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65cda183-38fd-4c93-a0e4-ec141187a5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365ed5bf-4cef-4740-b77e-f023db473cb8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31892fdd-76b2-423e-9449-1d2133b43ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c901fac-c2be-4aea-814d-d45639edff16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6c19e6-49b9-4b27-bcdc-bd82d2f18dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56179b68-6d22-43ba-b2f0-2c5a5facae94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711144c3-bc25-43ff-809a-e0dc3ba7794c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7feefd84-5528-4751-98d4-c90dad090af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80082e52-717f-4a95-b465-eea1e62dfe9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99924a6-4ab9-431f-88d3-a0c667a1ff89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "497984c8-e7c2-4799-b561-83840d984b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5065471d-54be-4c68-a639-5048bd7af70a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4a65ef-18c1-4fef-9bc2-622bbdde346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7e2018-f0dd-4f32-bedf-8c22890037b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95c8646-c5ad-4bbe-9080-09607e18dc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ed65c3-0e72-4ae0-a4a3-64395df04b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649ddc06-b48f-4860-af28-1417e7e1fd2c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678bfae4-66bc-41e9-83d7-00b9ac9eea83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a83252d-bce8-42ba-9577-452ddc89d4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc7515e-bd90-4cfc-810a-cde47a738c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3aa98f-240e-4aa1-9c3d-bc83e6c595ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8990b361-6650-4cbd-a788-4b3e979d0de8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a42665-c7d2-4243-98cc-d6afd5c0cec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1f889f-d5b2-48fd-827a-5f07d8c15c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9493be-741e-4747-b4d4-e60ea87f91b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "45fa455d-eb24-47c6-9b9a-ceeb80cc0044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645f88bf-6637-45ca-aad1-5933a26d5edf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf553d0-0b77-47a5-b3c3-1a6b24d95ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c894299e-3ed5-457d-afbc-a869e62bebfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76056857-7a7c-4a38-a175-3dc7bc91185a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f82941ac-2e26-4f2c-9598-dd83af535b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90b717b-8579-42be-a4c8-c0a05e43ffea",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83adfe44-8f93-4f52-b2d8-57bccc976a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2ec78e-ab79-49f3-832f-f5083847d5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a843dbd-43df-48cc-8d58-6c33de614d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85836cd1-29f7-4511-acca-13ffedad7c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa90d22-25b3-4a70-b83c-ddde3aa61517",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65a09ea-df0f-4943-9a6e-b940d9cffc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1747f5a-948c-4a2d-a797-3ae27c165b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbadae7f-60b3-4624-8297-c25b63c63b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6949c18a-cefc-4a16-a0f7-0897db971e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd12794-b3e0-466b-a405-8b70198ea65d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80adf6eb-faa9-4aa5-858e-cdc6f81d6946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2ab7b2-857f-46d6-9a1d-96ab4d968a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967c8770-ff4e-471c-92f8-25979f41a2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8a2a03-6eb4-4154-9e41-1865bce44178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddb9e65-133b-46a9-bea4-cfecb9bd7adb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aff5c5-6da3-44f6-9e92-428d888b1752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8568a493-b059-42e9-b24e-b1868412f057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fae069-5233-4024-b1d2-49f6c1cb5e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c380739-7f6e-492f-97f4-efe80ba66a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7993fea4-f0d1-4603-b8f3-febb98498fe0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddf6f46-f503-4928-90be-4808e21e4367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136caafd-eb7e-4281-9c59-d2a686eac52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435fd472-66d4-40c0-81fa-34d30aaf68a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b236d66-0109-453f-a9b4-13367ee08e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64c2746-cb2b-4c28-94be-4e63887bd415",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51dbf43-5944-4dff-8f65-6354de46d966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8d129b-6d29-4dec-ba1e-6dd149589224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b34376-0724-4a30-b987-1447aa80352b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae6053b-79a6-4d5c-81c9-c1e8ed678145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa424d8b-d32a-46a0-99a7-0b396ab48152",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b29d36-d432-4a2e-8814-04e7b35ffc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564cabc6-8586-4fea-8cd2-edda9f02f24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5703bbd6-301f-436d-982d-31bd8106c6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "460d1a17-4bd4-4011-9567-3eee02723058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc68fe81-8707-4648-a309-660e5ca950fa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9ab7f9-25bc-450d-86e7-a953314ec965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79971241-a9a9-44a7-a6d8-e32e5ba2d088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559a0a48-166c-4b10-93d2-55d727692ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd98954-79da-4f28-a617-f1e00f01a0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e743eb-5a51-4ea1-aeb3-bd839c8915b6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172d1cb6-238a-4607-a887-360bcff5d29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9fc5bdd-8d5c-446c-a2cc-506393700030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98403442-08a9-413c-908f-1695f254607e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f33d356d-ae60-46e7-a306-d37a71d3e4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1c4f3c-1e40-43eb-883c-f7fac2fcb288",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55676bb8-351f-406c-b68c-c8df1d2f9fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5ef96d7e-96cf-41d9-989e-4b407f34ed08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d730d9d7-9cc6-4db0-bc4c-371fcd061a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "83a9b0d1-f90e-4713-99cc-d82e35711f60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13ff95b3-87ba-4670-8452-3a2b816d12eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd8f2224-33cd-4046-b401-347574e81588",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcee23e-e7b4-4b89-b5bd-debc25b892a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c052deef-610b-4238-8d78-1d2073f04c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82b39e8-1413-4d34-b8fd-800542356ed4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16e2b132-2ef1-4e4a-ab0a-b3646a08dbeb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f4992f2-2d20-4b6e-ba8b-9f18198971f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5755c5ba-4efb-43a5-9c8b-213cf139d6e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e14584d6-f8a9-4306-ae23-2b2d4e306b54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "772c7613-b10f-47ce-99d4-9d82c88002d4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4043f5e5-045b-4adb-af26-f189edbfff59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e759925e-235e-49f5-8ed6-52c29494ec88"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4f1702f-c29f-41c0-a906-b6a4207c18a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63027620-b750-43e3-b7b7-ef66716ffc93"
                }
              }
            ]
          },
          {
            "id": "cc173bcb-b2fb-4fc4-beb0-13717625bfbb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8800ce4f-a278-4ff4-a36f-1b2a1452c551",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5c10660-9f59-419a-b12f-bfed2dc41fce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd638fb9-db54-4723-aef1-fd42aa54320d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "031b1d23-0fb2-4c3c-b307-9a71b3b75928",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60146986-d155-4569-a79c-52e5f2b69d86"
                    }
                  }
                ]
              },
              {
                "id": "c99ce947-1049-4365-9454-f8b835510495",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9d4e9db-ac45-4676-9f5c-3bf7e8fa6524",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9c43e6c-29b5-4253-9da3-f232b3fd5970"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7de3db4f-c3de-45e6-af03-b58baadf5e72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "75fa06ad-c6b6-44e2-9d0a-94501040fbf8"
                    }
                  }
                ]
              },
              {
                "id": "07fd952a-9e4e-4f0d-aad6-dab7cdfe7bdc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3504d840-dd26-42ca-8cee-dd39254ad9d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "429a8175-45af-4238-a763-77b457aed67c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0da3deef-ad2d-4a66-aafe-8c1a4286ffb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3754482d-3a0e-4419-acac-7abddbd0b225"
                    }
                  }
                ]
              },
              {
                "id": "0373d83e-77d4-4faf-9afe-778da540cef4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af0c1ef4-3c41-4ee0-b519-9c8fa3d0b8a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4955685-50ba-4493-8035-516eb85b443f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c04d017b-c3b0-4e87-bc7e-ea93a58695c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "43e112a8-d801-4976-bbf4-9966fd1643d0"
                    }
                  }
                ]
              },
              {
                "id": "93d18572-9bdd-4992-8c5b-121d758154f7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e1fe6ea-b755-4b42-a288-5068612ad082",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77a4f1d1-df3b-42ce-9644-d3135e5f4de2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfde67ae-ef18-4cde-8354-6fdabbed22f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ad78dd5e-a97a-49b7-b30f-a047c621f09f"
                    }
                  }
                ]
              },
              {
                "id": "e3596b0f-6731-4bc5-84eb-cc2b17f17aee",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1794a750-feef-4c1b-9d7b-9257d7356dce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0cde4775-a15d-4a1c-87ae-ea6374b7b9ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "941dc6e4-995d-4206-b7ef-30ee645dc2bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d882766c-04a8-4e3f-b662-f7403e16cafd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9b19dc3-6013-43b8-a645-a29eab57e585",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9cc99d6-24eb-49a2-bdc1-609fcfef7aa7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9229b4b9-0814-43ea-af10-8914efbf8d56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e81d924-9dee-4625-9150-030123764622"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d172ca18-5a0d-45cd-a730-172728f6bf52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d158f1fe-ae96-4bd7-9107-0a918f05eec9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c995eb7-3388-4a74-bad8-731d62bb97c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47f7051f-2dbb-4cda-8bfa-2443998e39f2"
            }
          }
        ]
      },
      {
        "id": "45529247-7930-46bf-9df5-438978b0e08c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ad17dbe8-11fc-4450-805b-2a7942487b0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2900c42a-5add-4784-88fc-a34a24c6b380",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a55cbe3-3340-4e1e-aa7d-9d3bc9813977",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe116ec3-ef48-4542-b218-820d08d35d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2333aae1-a9cb-43d2-ab46-6e08052c4f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7959dc0-9211-4b10-96fe-faa2c9c75a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "76236a12-60cd-4ae1-ae7c-3c338806a6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5e134f-0474-4920-8681-7df5eb6467c7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03791d9a-af90-47c7-896c-eaec97c2eefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd76d1e-5687-407f-a4d0-5b06eb68e3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c2d232-451f-4b72-8513-8c536e18f620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc46e6f-0ee6-4d1f-b88b-db132d89e635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f24f6bf-b37d-4535-a2a4-9ccae4afa029",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb326ce-e16b-4554-a05d-f10952f32812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b326321-691e-4ff9-a16d-b06892a2f39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d733ef28-493b-477e-badb-ba31f3f4498e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4df9b516-b5e6-4b6d-82db-57307151fb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b694db1a-98bd-4892-8a96-d293324d5ed2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c9a36f-db7f-429a-a766-df3b93056083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9503d9f4-4180-4edc-bf3f-14477a647416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb8b8ce-0514-4580-adcb-57deedaf00dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24d6bc4f-9ba5-4d66-8de4-0ac3b3f70b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3752b044-a899-4c77-8e00-92e6a7ed023e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e102cae4-680a-492a-afc6-b715afe1c95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62a18a7-4b10-4a18-b246-7a9c6cfccec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524d0c82-258b-4ad7-ab7e-11dc2d595f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e36bcf75-6b79-4755-9e78-81d952166448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53d4504-af8e-4300-955e-ca76d5b3dd43",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e6cc13-f664-4998-a21b-288bece25f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9416eb-147d-4c93-a656-f46cfe6e530b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355e711f-ee90-422c-bcd8-cac2b3400f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37e4b390-4f36-48b5-9aad-a4dd91b5c687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abddd0ff-07d1-42bf-aa33-7c34348bc5a2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82ad451-683d-4237-b6a3-faa8b627e527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ac00fd-7723-4782-80d8-65761da67498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71e1989-30a6-446e-b93e-8b7a0ae71c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3abf799-97a8-4f92-b24b-37346e3edc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420e84c7-6705-4e9c-a0f0-2da735696697",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2856ca9-8717-437d-ac6f-f1b859c6fcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543ba335-fecb-4caf-aa30-582b9dc70710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbabd8c-a380-4e18-93ca-ceb94e218f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2bbd45-c6bd-4b68-b051-dcf666308831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efc663e-9e54-455a-aec1-089db95dddcb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2747111-3f65-40d6-962c-39291245bb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51047af8-a66d-4d7b-ad99-4aa094b49f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6597927-73cb-471e-aeb1-3b47a8dc1611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d56ddd8e-ae4a-4e8c-8f79-58e162ad8fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0e2dea-8145-450f-9327-8be506f85110",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dbc843-41c1-434f-bd73-c1c8ab2ec5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da510ac3-dc63-4093-b201-ca23d1556ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7e3e66-6d58-4f4e-abed-00aa82c2afb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4f06e7-d519-4a47-a73e-265fb98764ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f202157-cc54-4302-86d8-7500b00e2b45",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bcf35a-763b-410f-ae05-519d01f5700a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1438320-06a7-4b93-8292-413ea98a5c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472b8911-f678-42a9-a999-ccfbfcf82a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8cac1c04-28b6-4f2c-928c-335233aae690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccaf2c8-cf0f-4edf-91d0-11bfa1188539",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7930a9-b789-4652-9b95-9917d2be72b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873f45c0-c509-4a8e-9d5d-b370f1902710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a35137-c094-4a21-b6fd-308874701d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e10a2d74-988f-492f-b38a-4f1a3f1f5756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6f726a-686d-4f8e-a131-ce43d65354d3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13399788-f3de-4701-bbab-3d38eb04e959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b01b24-b283-45b3-9ba2-e344be676ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0081c2-984a-46ff-9c3b-04e5ad86ab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76dd38f4-c299-40ca-afdd-088ec7158c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1885a4-cd0e-4fec-8fcd-bebe290f9bbb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446b4152-3b26-4584-8d2b-9152b01c2ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6f429a-69b9-4dfb-87a6-3e9e970048cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdd1f8d-548b-4c14-a062-c854977d8a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0f31fd-b0a2-479c-9740-096e0b4c5a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1454bdb9-68c7-4c75-9338-5301184ab38e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f430125a-0ca1-4aaa-8b17-dac012c82903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f3de98-e73c-47d4-bf95-ae535c04a57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e920df38-9f29-4dcd-bed5-5b16d3bfef48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "17c979a8-3d3b-4f4b-bd2a-7f0c166d783a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d1990a-cd51-4092-ae0b-0ea02d6e6cfe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c28c32e-b60e-40e1-8bb7-c96d6f3e694e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e4bae5-853f-4acf-91eb-a5b02d6fde1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0722c305-e3b9-4c4a-9d4a-f63cb723ea7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "956a6dbe-9d36-49a0-8fe9-488f2d2b8c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152d0fa0-ffe7-4506-b592-baa7e82202f5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c228025d-f1d9-48d7-9f7a-aec21d36fcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de228835-3e94-4592-b89e-729342b024e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158f1c89-565f-493f-9109-9fd778ee1560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "979fd6bb-d7e0-4609-b3ac-418bcddf90db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606dc01b-c7fc-4813-a70a-27f7895e6cae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccce20a6-d981-4763-b4bc-9d85671c2cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72b23f2-a325-49c8-9ac1-838418d2b2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832d9f86-9afa-42fe-b8b8-397261c5cfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf5b55e-e20b-4c77-b56a-98c94965f844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b9136e-6fe3-485a-93ad-c609d616d33c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f38ec7-4e49-465a-83bb-49fe04e3ae00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fba19e-ba64-459b-a5da-2d9f6f38c9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9b1268-6e1b-4c33-a34a-780e3745c8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52da88d7-3ac1-44c1-86f8-51b2c15fccad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2c49b8-7390-4770-acc0-7c60a7306ec4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27ec957-252c-40b4-b2b1-2643dd17ee06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff792c1-2de0-464b-959a-becc9ed6b0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fb063c-3846-419f-aac2-3296dc341f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "675552fe-ee50-4306-a2f9-06ae220760b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfffbb90-b0e2-4605-8af4-0c4b27b9b9fd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dbede6-b7dd-4b54-9bb6-39a782e292d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec79a4c0-f4b4-46b7-b9f2-98b6f3824124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae71730-b621-4dd2-a226-b918bb496d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0b8ce7-1248-4275-b69b-dcc887b7f597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1a189d-bcbd-4785-a015-53a42c95d757",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b1ef7d-34e9-495a-8336-40583376a5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61b88e1-9a5b-4634-8d66-730826cddd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e20a28c-9eb8-4611-b91e-a3c2cfaadb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d2d011-64ff-4286-9119-fb8820e57460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17695cf0-9a89-4128-8939-f26464659c78",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07befd95-6afe-43ce-ac3a-cd6652f2da27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ea6e55-e911-4f3d-b077-c6e9bffa6866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc789ab-cead-4f54-827a-dfd800e8a9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "499c2123-6531-4c4b-a172-ecf3dc12eda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a58acbb-0e44-4dcd-a7a1-e90eb6d9ffb4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790c6242-011c-4a4e-ac16-a950251dc825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2679d0-6448-46b0-a49a-338c8681490e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725a97b2-ab56-453f-b3c7-d52286497e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa92c14c-5025-4ab7-a347-cb2f25ea026d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559c7460-eb20-40ee-b998-9b089a97fc4c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1f9a34-1d56-4f81-ad8f-a3829ce00961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38e2d63-81b7-41c4-88f5-e6f32e417b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e070f4a3-b926-4d8d-ad2d-eabc3e5ed01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "062e3458-2049-46c6-88b8-877308e62e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8b9110-cd33-49dd-8b81-c71ffc6a1f4f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f74ed36-a165-459b-b1bb-e5a151c740c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6aa7b9-3c29-49d6-923d-c60c1fe5c49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e9106c-7e14-49ac-9a09-697276813774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1989ec-61c7-408f-b123-b6e19f15450e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b3cb33-f51d-4c0f-81ea-e63b0de1fa50",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d459b00b-7509-40eb-bab1-48e1298c2fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2aa293f-9148-4aa7-bdc0-cf71c765e450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5c70d9-5252-424a-827c-4e8b6f8fd97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6106c2-02e3-48f1-845b-2b24af0bc4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e019838-94bc-429e-9596-7782a94b6921",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d998c93c-567a-474a-b467-d4595d225195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89347688-9e48-4d55-87b2-1abdae9664e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16ba97b-0255-4b94-af15-cd0127540c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdce976-336b-4abf-8c9e-54b2517217d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8916926-9f09-42ff-9d88-6a103259063b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd96002-2a05-458c-93bc-bdaa41d5726a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d53cd9e-b0ad-47cf-a1eb-6bc28f872f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f238701-feda-4d8f-9148-38c020a43120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4df0f8-ee14-443c-85ae-d7e0dd0fa2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77be681-8439-4f05-81af-a67e15fa731e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35c5253-3b80-422a-a899-9874eb0ed599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98001cd-16db-4918-96fe-a47b0d523b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef533cb7-ad57-498e-843e-57ce4567f91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f744f86-d476-47b9-adf7-ea785fc6ac32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1b9836-4dd0-4324-b171-d861e09132e8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce606c76-1488-471a-b56e-e1f09400f59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c0740d-1869-4bbe-9621-3eecf30bf82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdccb4a0-6c8e-4946-b699-e5d5e44cd10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "812cc103-988d-4f7f-b289-2647a0bad5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1a1b47-d3bc-4eb3-bccb-0930ad4cad3b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad87044-08f2-42db-9f4e-cbb0960995cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ca6852-302e-479a-971c-6fa35de54755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae73fc9-7ec2-4169-a141-a7183a61e476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6524ba1f-2a5e-4723-a063-326329b50a1d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25a2603f-2fb5-4a90-a1d7-033fa9f7d117",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7cfc306d-78e4-479b-b573-9d74d121e5f9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28687bbd-9355-47eb-9077-154b8b34fe73",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bc92f896-e5f6-4032-a663-e93f1a6c6dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d63c41-31ef-470b-9698-638d64fb13ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d07f2489-7ace-402c-a982-7b625dfe2bb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cfef0df-1210-4d4f-a840-9914ebfac414",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67f65927-fc3f-4f4a-ad91-b7f6a1008c88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04f9198b-88fc-4062-9763-3cdc6eb04791",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7dc7820-736e-453d-a5e6-d4e68d690266"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "244e43e2-25cd-44c5-b64e-91293404460e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5703e2ee-7bcc-4690-8eca-c1851f1fd35e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e8dcb0f-cbe2-4ded-8daa-be3c4854a1dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "740ac16c-e218-4c4c-a99d-b3ee4cf9332d"
            }
          }
        ]
      },
      {
        "id": "f5e1dbf8-f298-4add-af8c-206839c1be94",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bc7ff9a1-bfbb-47d6-86ee-2c022109b64f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eacc0ac2-8d02-4e79-8d06-046fbd13a16f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ed92fe64-c5f8-4f24-8ec3-03a24a9fc21f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91c7eef-de61-411c-a2e4-5986017b4e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df6be3b-a908-4d83-b01b-d952b9cc4145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ac9d18-b6a0-4162-b080-00fa3dcea49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeae7d82-8a88-4d2b-b426-64309702f6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e20737-6311-4d42-8536-8bd14f2ebf65",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac350e9-cd9d-4f5e-a595-9ba5ab50dc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b631358-9caa-464b-be04-db089f935178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc4eb2f-b3b9-41ac-bea9-799d57bb3a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59a14713-2114-4295-a6fd-754ec08a53c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f0a13f-dc73-4e69-9853-0eca6aef0341",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db006e9-21ef-433b-bc4e-01ae20298768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675e3461-f151-453f-ad9f-c3dbfe0a975a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8f908c-ff99-4c7b-988f-e37c5c80839f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8382bfce-16c1-421e-af47-15de43a1bc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e081400-0306-4e69-a223-084144f2626c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6032ce59-eb63-4a21-ae15-0d7820b45ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b010f2-bc9c-4b31-9f7e-e2e97e6602d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf79e6c-0906-4c7f-8c67-bad223585cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9f388f-e7f6-40b1-9480-1126c23c5501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57e4858-b920-4c59-994c-42f58ece5c97",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cfa6c9-066f-4297-a292-b9df1e513c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f60eb72-5b6e-40f1-86dc-cff85df1829a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdac71c7-b419-460a-bce4-f909ce884278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "229e0834-b702-4482-9af1-72e40246d8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5cb420-5994-4413-9edd-c57f498306fc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60922163-5d59-4657-b0bd-61938d340a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6ae390-6ab3-4294-a1df-d17f2c87b710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9f332f-485a-4a03-8bcb-d040d81e682d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38f7642b-91d8-4f4a-806e-e58c79a782ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9bd1a7-ad21-442b-a4f1-24e14b773531",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7022a65-67d7-485b-858b-4498e5e02dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10dd640b-0083-4fc8-8a22-1a4487bedafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e41396e-80e1-4dc2-8bc1-262a7416027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "290967c9-d5c4-460d-9974-71d3d5b56128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6810cba6-6c68-4d81-874a-1ed88cd16b21",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa894fc9-6da3-4571-9f91-665332bb2361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f2c9af-3a48-4793-a81b-8d2a5579c7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb02cd9-3d5b-4dc4-8365-1a61a5db3001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93b14d91-e64f-4b54-a4a8-392e2d9bfdf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6027ad9e-850e-44ea-9e92-999a1d446718",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f84209b-270c-4f28-8755-fee9433f8e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f65c45f-dde6-434e-bcb7-12ca3cd3ff86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d2f114-ed92-413e-aa6c-45d26bb0c149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b840f0c0-57ab-463b-8c35-7a18423ab210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e304292c-5830-4b4d-9947-1e1bb4c90b2e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af86d925-c783-41e8-a59d-e5544302ebbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173d52fc-7a44-40f4-9158-cbf560dc6fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399d95dc-35f2-45e0-bd7c-679b72eb95e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17dcbb93-0f5f-4818-bfa1-1950e7cd031f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c01ea56-35a7-4a7a-abd4-ecf9c396600f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b9354a-223b-4bd2-95c1-b1877ddaa6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2549917f-da4a-4cad-9385-678f2cfa564c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ce5f34-888b-4b44-a853-1fdb0f32a68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "181c8d5e-0b70-4378-8011-0cba5522e58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dc263e-6ad0-425a-9cf4-530e996c0490",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fea15d-fe9a-4550-9e39-08c22179058f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba32b53-d03b-470d-9fbc-d6c58f6c0baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f242ff24-5f9f-482c-bae4-24ef6fb2bcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b641ad2-6ce0-4e72-a1ed-a3900968b54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ec2691-848f-4c3a-9c26-0e9400c0b562",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4814a7-66b8-427d-92a3-f7edaed56066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744a1d26-2bd0-4478-b019-06b67d74292f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16020bde-f5bb-47ee-af5a-c2e0391edfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d15ea3-d51e-43f0-ae78-d18021756f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5139f20-5bf5-4d41-b5a4-0f1b0d25ba8d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d2ce56-1f51-4e79-96ac-b8cdcb9e0aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0661e03-e95b-4c6d-b280-3b679576f4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce22b55a-3693-4728-a07a-e05d92caf279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7821ec2-abc8-4c14-91e1-86c882e33251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d89f55-9413-40ea-8b8e-4122a03e7024",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2377eca8-6d42-4be7-ac6d-a3204aa313cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4bf179-1cf3-4574-9fcd-3181c382271e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab78032c-6710-49f2-ba3e-678452cb61b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8578cecd-cf66-4ffb-b509-15fa0417163d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b509b0ce-b4f7-4818-b4a5-138855e2afb2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854fd81a-a608-4af3-838d-5a571cb9c496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e46922a-9267-4d0b-a6d9-4512ecee7103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4a0405-b851-4b3a-aa23-d65fb06f9ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "644f1b4b-1661-4522-9a11-67ed9de50bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00f8cac-aa43-4f32-aff9-f4ca2e8fe04b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f49cd6d-2e2e-41e4-a54d-cd253d977fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1104f86f-d946-458a-9b8b-1aa9405a85ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f884744-75c2-4da6-a8a8-6c55d8814615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae870bb3-03cb-4d3c-90b2-a6d42413bb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d0b12e-9e5a-4f9e-a8be-467a55306585",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775c0cb7-c74b-4b56-8bbf-614233bf5fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840902aa-c3fa-4d9b-a504-9278786f16e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1789d3b7-c707-40a7-bb44-ef76c823cbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f9c99e-e7de-4037-aa68-aea639298ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4178cd61-528b-4261-9c93-f2ebd22045f9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68880c8b-76e2-4f75-9a81-dea86fc9336c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93adce5f-10f5-43e7-9c13-e1fd2f1a8ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1817e75-6136-4d2b-aad1-a932e99d1e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4151e11-cdc8-480a-8d66-993b22a5abbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8020644-d030-48cd-8af2-b1450163184b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e2e6b0-9833-4a6a-87af-f3629fa63726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb933148-fce2-469d-b1f3-cfe0dec64ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05a3094-2b65-4299-97eb-00ffd890f3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac56b2d-4dda-47bb-a0d3-55b4ea43cccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab758657-adbf-4d9a-9d08-9fe071db32fe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70994a6-7307-47d2-9cd0-d34195851818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1f5d1a-a028-4c0d-8009-595bf38528c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e31c43-f35b-45ca-80c1-ef91cf302158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df822124-1cde-4a56-94a7-33f96f36bfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204c6a4b-ea98-4fdc-b39b-563be997f1fb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d9c1ae-2b91-4a7e-8a32-155fe068a58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c99428a-b184-4112-a542-20160b540f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f97255-c808-431b-a734-be532a725899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15208c43-241d-4bb7-baa8-29b6a3be1779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e834b6-cc21-4e69-beef-31fb40a243ec",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b39bc25-db10-46fc-bd5b-291ae78717a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f39b0d-1637-4af3-aebf-9bfcc2669d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7dd25c8-4d2c-41b0-b323-e7ce14401a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ce5311-e48f-46bf-ad51-9468ea2633a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41345b04-1a30-4c63-9eaa-517932b6288a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6281ee3e-0ff0-4052-bce1-60d9a3ff479f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93208ffd-46b6-4a31-916a-4e2b62ecfe61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db36933c-1c13-4d45-b224-e07841d648be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97547f25-0e65-4a17-9600-6a066e17885c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407c8824-e265-4c5c-9217-8eb6aec33d2a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb314fa-7fb6-4e73-a2b5-501e75151677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d99e2a-2eb9-410e-871d-72370c65b7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e123caf-c6a2-4126-b3f5-8afd87698f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cea2dd6f-4f4e-4b96-b9ed-a94b725754ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21407230-c979-4c19-9809-821441fb51ed",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cce7c9-3fb5-4dff-9c09-55d5a0193e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4b3b5b-1b49-45b3-ac18-9138310cf306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a07e06-a57e-4383-851b-3035ba9962c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eafa200-5dbc-48bf-8211-43a3693db190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f7cd8f-2b4f-4c95-9fc7-491fdc8687ae",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc90c72-83cb-400f-af77-cc1c6c5b0a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33f9882-1bdb-4266-9619-8a41ed6975e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bba73d-0404-4a2f-b0e5-9f0449c78e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9314eb-1c97-4879-b97b-03067afaafb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77049c5c-059e-4bb8-a62d-9863a7240cda",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3644e178-fa04-4ba8-92c7-c5c29e03355c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51b45fd-de4c-4e77-89ce-b8c8a9a8e2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e609b46f-f4fe-40d8-a70b-0dbf8c8845b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42204883-fb5f-4f8c-9696-2b5fdfb39498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2983d564-1699-4793-9e58-2c45f23fb286",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7841ae-f749-4124-a70d-f97457661bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d4bc43-7a55-4515-b0f2-93acef10c99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cbb02f-d279-4780-9f78-cea8b4c8e501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "531ef608-e349-4870-8c4f-d39c53e98f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ddbf21-b333-4bc1-a523-e8bf719e1bd8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf3477a-303d-4065-9728-5d4b10663ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05fc4db3-6019-4d93-b862-d5f4ecc192f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0491463c-4f92-4e19-82b8-f0dc5c6a5cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "658ed96c-c5fa-49cc-8062-3534034cdc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad08519d-eb81-45c5-897f-3d49739cbf57",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b666d663-f443-4cf3-b6ae-df69762c8068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32778873-7275-48de-9876-fc4ba6280a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa19055-2566-4fce-9a22-a8cb0b148aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0872763-f553-435f-99de-aced786f3e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09226d3f-e1d8-48e0-8b06-b84734c01e4e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b30ae42-9df4-4d1e-8da1-d22d4d220334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca712bcc-c7a3-4761-a707-3358d1af13cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5166886c-b657-4d68-8e8b-1069936de7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a56047fb-a805-4f00-8418-a2c2996212ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46012c00-6644-4d7a-ba03-776bb5485f52",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06285e56-a3f8-4539-bb21-3668cc0d85ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf46b0ec-cf93-48d0-bb98-e39fff367e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a5b423-a50d-4097-8bde-64e38aa05c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce20c7d5-fdd7-43dd-8429-4af5b20b32b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cf2a1c-c329-4b2c-8e0c-f6639c62c8ab",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7fd7c4-5787-4904-9101-5766bc35e0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b74b287-6aac-4a5a-a863-cec037c5fd6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f463e95-fc7f-4888-b9f6-ebf0180cb85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93c33333-f52c-4aa5-80cb-592bf4046e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c6044d-1207-4fa4-8728-c3108a55c1f8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe05266-2e94-49cd-9c8f-13324631cbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5dbe02-fab7-424b-9eec-aa4b4546935d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efb3a8e-3738-4fb6-8f9a-4577f0ac75b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af86fc7-c3ab-4f4c-af09-be7e3bc66615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fafe879-fca5-4d24-85fb-df9a01facb13",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d978016-6595-4273-a94e-09542c062e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17bf5f88-1788-451f-812d-849085578bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa85e32-8e8d-42b6-8f62-b16ea4ddeed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e46eaf2d-0048-41bb-920e-d6e748057a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef82bea8-489a-4343-a363-400bd010ec25",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc53fa9-765c-45d9-8f56-fcf3ff7cff6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e385c2-398a-4423-bd55-861a388b6598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48df93a6-0da1-475f-8b93-e7dae51949d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c50773-1bac-401f-8a27-a33209feb070"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77b8182a-2451-44c1-b8c8-510b19f740a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65a31830-27ca-4c35-8885-76be9519a249",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e52937-0623-4338-91d3-677274d4595d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6340c01a-1009-4d71-9ab4-e2a7b84726d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee63d128-b0a3-45c7-aaa8-480f9fe53a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71f495cc-a079-4c96-8cb5-cda9c01aa756"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4669132d-d1f8-4213-b8a3-b367b6e74a66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c6ec16c-8586-4eaa-b407-0ce45c9526e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c05b97dd-024f-4918-9031-e19ec7e15302",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49c7a20a-f730-4a6c-bb71-143c9a1a08c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60583f98-ead9-4e1a-80e1-348d7dd48eca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e4b88d1-af83-4215-8feb-64fa58ae671b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8643bdc-10d8-41ad-b245-eb0b12fe2c07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12c57f7d-4be2-4a1e-88b1-d8b76f40dc77"
            }
          }
        ]
      },
      {
        "id": "687657bb-b6ea-4fef-96d5-c92623aae848",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6a931c6f-26ae-4b01-bc5e-fc3d69244952",
            "name": "Negative Testing",
            "item": [
              {
                "id": "593bc8ca-f436-4698-b44e-852e8f4e8ca2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8f8fd1ce-af0b-437f-9075-c77c2a974255",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95ae843-eef6-4975-86c8-c77828a40df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90651dd0-fce2-4084-8002-4a00108f0a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5475e961-b891-401c-b3f5-5787b7c1f80a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1feefbf-8017-4286-ba4a-2ab22a8a2a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a03880-74c7-4c6d-bff4-fb88400d3e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462fdc4f-ad88-41a3-864b-7a61128b3c9f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0acf20-399f-4412-a9a7-09f5204d8507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2adfcc9-cf9d-4cbd-8223-4e1b22c2c9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258e6f5b-5bf1-4662-bf40-0fe34954151d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b126104-4254-420e-9bd9-37f1815b8d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97ca880-45bb-4c6e-be0d-a7062aa58b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0dcd480-9040-4dd4-82dc-b48dfaca68b7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f787de89-c341-42aa-b1b0-655dff6bb6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad4e3c9-0305-430a-9ef1-6037058d9997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f5ceda-e478-4eca-a1a7-addcb28f2466",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071b8707-3f9f-4c24-bfc8-b3b60370664b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0a0746-0795-4cf1-bb92-583a9d60cff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6f854b-b74b-4cec-97a7-b265fbc9ae35",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5171d9-9573-456f-bcc7-0f0de2773669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779b1520-086f-4d3a-ab8a-c94a63aa033e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ae6eb9-e34e-47a1-a87f-83bda1cd0b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0479be54-319c-472f-b7ca-a6d04fe15d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4ad123-fe7a-40ce-9dbf-0debb66171c0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1196fbb7-8665-4e44-bcc4-21d5f61fb35b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7408eaf7-83fe-4bae-b958-a1cb1961f335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3449018-85ad-4c60-9024-6f080a0452c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7d152f-ef80-4baf-8896-fbeb4925b22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbcd42b-8027-47c0-9609-17b210c5acc3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c622635e-b39f-49f9-a4d6-57cb9dc57449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "494e9a97-a5a8-4d8b-8830-351a53bf8f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5446be98-251b-45aa-b379-9f3e9ae34dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5c69ee-aa4e-4431-9dcb-f088ba32e8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e3b596-cac1-4d1e-9944-09ab41fd9a1c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2494c49-be66-4a3b-88df-06f5503a5aeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b89d174-9988-4e3a-b415-34f8c0575157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3927ae87-4370-4cf9-8c65-224cc7318d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e29ebac-c13b-48d4-b8f7-6af3b38fc248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89662df-a357-4d6a-a463-fa120ab27770",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85651b84-5846-4746-99a9-c59d08bfb5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b52cfc-2707-4f5e-ac4f-7d97d44b1cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ccb3b5-d436-4773-8ff2-45acf08aacfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfba916c-7eb6-4643-a7af-2593714f5e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924248a6-5650-4573-a24b-c1692e085150",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c07a2e-0e27-4171-acfd-38f6fdf98c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce65fd0f-5170-4676-9edc-b302d30884fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea9b9fd-7626-4f29-ad07-c841a3925839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cc3e1e-7b24-40f5-9c4a-7d6c849d944c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e77899-a5b3-4943-98c9-2b21074dc38f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c928e6-8a6c-4428-abf0-19da5621a92b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d51a81-c9b7-4a1d-b0af-85bb8485bff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0113859c-1a61-4228-bf5f-5f015d2b8836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b10d81-de2b-4d97-b9a3-02af473b9514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14353d23-0cc6-4068-b115-e70d097acb66",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce547af1-4240-427d-9d2b-68762ae8d26b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af46151d-c5c5-4ca5-b3aa-e976ba12f339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0ae665-8569-4989-838e-58b2392fc9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99580253-2f2e-44e5-aa99-509ccc9697fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1fcb85-b9d1-43f7-a04e-44127424cec7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ff80e5-6224-42d1-ae89-a74179276700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06398a9c-c06f-4ef7-ace1-ad7659f5449c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd61d1cb-ee57-4eca-b819-c4fe4437e8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c34756-bea5-465b-8c30-c1491e4b9a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe1fa11-5f66-41a7-bac1-0638169ec84a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a61a0b1-b671-48cc-adbf-f67f2b519cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc169cff-58d0-4fca-8b1e-3c84f49cbcef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63e5573-54bc-4b11-9a05-4b41e51eda50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87dfd39f-9b05-46e8-b7cb-7ca4a2fe56cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b19d66-1d8e-4d8e-8880-be01e3237d2d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767b5ea9-0337-400e-932a-2abc2e1485df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e7d8c2-3676-4f6a-9d98-dc6854ede87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "637eb3ed-6259-4314-af18-254d603743a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08dec75c-5d2a-48d9-b171-454c282a628f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59825aa1-5615-45de-b7ce-252028df8388",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91cfec6-b676-4cc5-950a-78cff59c1070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558137ff-7dd9-4f57-9442-bb65359c42c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8f04d4-7cda-46c1-b0b9-d9adc5fbacbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55536fb-c42b-4870-8b17-344c27d82272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbc3b45-089a-4082-886d-6e7968255d39",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476e21a6-6f35-46ea-97db-0e752f50a23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d77750d-9165-4316-a89b-ccb2f872a6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c975db-58c8-4c5e-8464-bac434dd63ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a700dbe-f273-452b-b3a1-20216fe96074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae2b056-8888-415e-a516-1fc5eed7b598",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ea7285-08f0-464e-84ac-07ada21b897c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0dcf8c-247b-4716-9733-d4e524f0173e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167006cc-b3ae-4c51-8daa-49ced914f744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d5b2f4-0bbe-4367-8e5b-a810ebc78672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e556c7b-90fc-4f33-9bc6-8bbcbdb68d5d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9ac128-d5ad-40ba-b2a9-b5fc1ba698f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1860a74-65c5-4628-a983-af10285d594e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ec91ba-75ba-48f3-ab12-a9a0e38a2d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22460466-28ab-4ac9-96fd-b2b1a08e71b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cda833-c44f-4c02-8bce-31c42b854745",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11963ae4-3dad-4e40-99bd-5f0a3e3db064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01574327-6452-4048-9173-6fa4b97ed1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a4f977-8042-4df9-9bca-434103a079c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c562fb8-6e57-42b2-b66a-a7902d7caf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bcfe51-f540-46d0-beb4-381ac4f1d495",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26488832-1812-4e32-b56d-b4911f85567a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e22d9bf-5299-45e5-8a78-654b5c666336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99e5726-e201-443f-aed0-2917406c6283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17d09cf-2250-4017-ada1-911166fd97f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c5dddd-3bed-4f5c-970f-9252c2f863d8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959b8137-03f4-4735-8915-56f181e446a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0b0d6b9-1996-4407-b1b3-8a4965aa9f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d8b8b8-4e85-46d6-bcdc-1f4877578f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1900acef-366e-4ce1-a951-daf6729d7b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a92b266-52c5-4e9e-8424-d91c4526d6b4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b060115a-6270-4540-93aa-d9d2b8edbb22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef4fe46c-04d5-46ab-a253-94e506df77e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941ffd10-4347-4dd1-a631-c7f06c9c8f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c18cca-71d0-40cd-8957-08d61fff8fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa0817f-cdfe-43d4-86c1-2436687eb842",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8a4848-5c04-4e8a-b22c-2587f56814ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01352f5e-653a-43f4-9c5b-1a0ac9928edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f6919f-a30b-4ebc-8dc0-24b0fdca4a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be31155-8208-4a0e-8e24-0a172622c1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1083e3aa-ebfe-4d4f-9235-4664bbb866de",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725a8823-9be4-4a3f-ac74-ee48b94a51db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58774667-4570-4050-8267-6c140bdddb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e247492-1323-42cd-8a50-66aea2382465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d0c4b6-6433-4805-a667-7a10622a203c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da488eb-73a4-434c-ab93-8703c877aeac",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da4f520-d2c0-403a-96ec-fd6363870001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a748b9c-c8da-4121-82f5-abee7f3420e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ea2095-96fc-4a27-9ca4-5895b32790db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef45deb6-6185-450e-9135-afd48430ed67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe74e13e-3341-4799-b938-7080f084ac21",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcc6506-39ae-426e-a287-7ddf34057649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22bf14d7-efbe-48ff-9ca7-02af29f62b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa14682-aea2-4694-8a38-c9b7963f1119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc31eea-5b02-4de8-b86b-b347e247ff10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637c9a97-e989-4166-a3a5-6e5ea02bff1e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc819f3e-f845-4e7e-a820-fbc571bef179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77444eac-c8fe-4567-9ed7-9af59ca720c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae88a97-2bb0-43dc-9921-939f1dc5a57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e08712-ec53-40c4-a7eb-7a5b88ddf417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97e7db6-3dd0-4f26-aae2-a053b5035975",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4783d2-24ef-4efe-9fd7-3296e1f47b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ea07bf-e70c-4f7d-b80d-807237487a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8b005c-1cc0-40bb-b3d1-3926ebcb8603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baadd5a6-967f-4204-baa2-e4155406eec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b657b162-d162-44ee-b84a-b5d316b041d5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0777671-03db-4ffa-9fb5-cb420564e152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca9ef78-8b4a-43c2-b31a-3546014224c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d01e86-ec74-4a66-837b-e2f8d3e7eed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7b0ba5-1506-467b-a6ca-33236aa27bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80772b26-9890-4fce-a4a7-a944921ac30c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b773d322-7940-4ab6-8e1d-4a3b051246ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "224fca83-c28e-4653-9360-f852a0c806f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f94b5d1-1780-4a18-948c-fa09efd08322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef94c0ba-d2c5-4abb-b7e8-65e0b507ec2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d313e13-add1-4b37-998c-0d7bb4c2d072",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050c9f4c-e6e4-486a-9cde-1ec18814571e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b96ffd92-f31f-4f86-bed7-e8fb964c62b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11459e82-8bef-466d-b03b-2bdad595dc6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17efcf0-fcff-4120-acb8-744abdd21558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d427455-40d6-41ae-8819-6db5dee2aafc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f73d14-8a3a-406f-a362-4d28fffe505c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e236844-dcb6-4aea-a1cd-320b7cee25bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd16502-c9f5-47fd-b4ea-a757c7d1a878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3f21db-b263-42e7-b395-e3d25aaa9420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d453df-740d-4894-ad2f-100a36380f30",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d42760c-b190-4985-b3dc-ded05e288afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c318f50b-6850-43aa-ada1-01b1ff0637a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8ed1eb-5759-4ac9-880b-8d3323046866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccae688a-5b9c-42ea-a416-8cc4cd7440c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101ab7eb-d41f-41f7-b47a-07dc87e5c3f6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4761364-fe6d-476e-a431-b6bcb150bc09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc67354-574b-4f07-a610-7a716c5b241c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dc3ede-5f98-4231-b3e0-b94e500af3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3169dfee-1e70-49c9-8ae3-d8b6f0ccde12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844340a2-a887-4248-95a1-57078c6fbe10",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2582d0a5-184e-4ba5-9737-d7a26014248c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9559dc-4784-474f-8b14-98870484de74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ef0795-a480-46c9-90f8-c3ec03b24610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550fc4ac-36d8-4ea8-acf8-edeff8955ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e867bc3c-bbb8-420d-a0bc-e2fa291e251e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ed181b-c869-4c2e-989d-e5e3fe9cb63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb8c2b1-a041-4d62-8505-e6ac7a52ebff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9de5bb-e2e1-4d9a-8c33-201710348dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c00dd4c-97e9-4544-a5c1-f472debaac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787689fa-cd1d-436d-8cbd-8bba4c18b1ca",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923fb6e2-314c-4769-a681-820c2e27e0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d8e7c5-46d6-4311-b5e9-cff1f750f191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520eabc4-aee0-4797-8834-09a7789a2534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f055680-020c-4e45-83a9-1da80bbf1c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd01bc6-020c-4a05-8ee2-7eacea421d4a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf0c4e6-b8b9-4966-a372-3cf427b931e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4aa208-b715-4f79-8676-e6ee263cec42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881f6d78-0883-4a26-aca6-471db2a13576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fcf906-1116-4201-9ba5-66524a09b280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831376c7-d3b3-45d6-a316-c0074bf9eda7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171942d4-22c8-4311-a099-569f83eaee07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea0e488-fff1-48f4-8f1b-20d62c5d2e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6337fa6e-4514-44bb-9caf-90f6fefc309d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fb0f6d-02bf-4fdd-8163-338e9a5a3b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1375977c-ffad-4f2a-8680-6a865abf34c9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9af7a2-0681-4330-a7ad-3c801714bf06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cfd7a7-1186-4c26-990b-355614b504d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111ce627-6b59-4128-a224-04f9e5744cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e0a22e-26e9-4d5f-9806-246bc294f967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccccc2f7-aa22-434d-abe3-cf97ca6217dc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33c31a0-74d3-4021-a2a1-e9c714edc0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910bc2c9-de2e-4c78-8b96-31a27c8af415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ff15e6-5858-409c-a267-fe9dfa130a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916f1295-4b2e-4138-92ab-131379f84dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a32ff28-2c4c-4a21-b773-674e1f13b6e1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c32b16c-1d5b-4ccc-a27e-ff19f39693f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86f3d8c-107f-4279-869f-978eed74447a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dceaca-0e69-40d9-bba5-9a09b09c7ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83aa03d-6e8d-439a-af80-7466d4c6feb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027b076b-2b56-4203-af14-41154e0fc738",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5b6f96-6986-47cc-adfe-e11623ae678a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd0a9ca-3f32-4271-a262-d963a7b3af26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f988c3-4aef-4a99-aa8c-62664e9f6c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efddc4fe-4651-437c-8f13-1aa3995c02f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74bd4ec-c347-4abf-9bdd-331ca3baea1c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43952cf2-1154-494c-bfda-45756557c531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0599f1c0-b376-4b7b-ab2d-f1b758df020a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a542ff3-c890-4c7d-8edc-2aca7cd9bf22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651272a8-fc74-4bbc-8e8d-4219628913e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305255f9-d9b7-47ae-bb4e-cc089df07039",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20371646-231d-4e91-9fa3-61b21121c677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda1a819-daae-4dda-a826-4275ec2853f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f07e89-d483-46bb-84e8-ed19feb729a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e66774-1184-44c3-842b-66bc5b84edd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a2a3b2-a52d-4141-a524-5d9d9cfb3de4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4777d16-a497-490b-ace1-d40fbe047eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334e0f6c-e60b-40e0-9077-e77e962431a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d2e549-66cb-4a9c-bfc6-c1a8216ae15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795b5d5e-eb33-4f76-a275-6d59d9b6bc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50395936-241a-4747-b398-2822c293bb54",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa58d45-15e0-4b81-807e-b03bd389fba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719ec79e-c71d-474c-b425-2c251e266603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf605e9b-c4af-46dd-bca7-0832c7e903f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36fd520b-a621-4ab5-b1c2-eed4ad0b821d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5945c4da-50cc-4f74-92c3-099fda8025aa",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8f25de-70cd-4b23-b1b8-6192d2b50805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69efa67-24aa-4f41-9473-0c07556c66fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d2f3ee-09a8-4099-b7b2-152fe84c2a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425705eb-b18f-4cea-b8a3-67c20bb85758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c87845-a82b-44b3-aab9-9329f87a13ad",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df507de2-ec49-4b26-ab3d-1900c0dbd876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae8c7d7-bb77-4922-98a8-4bafbf7fabb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703ead1b-66a1-44d0-a4c6-ce86bfcb0ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276f2885-dc53-498d-94e1-ff05fe38479a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d9d3fb-59e5-496b-9b87-6370063b27b3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0c6b3c-8c6f-401e-a449-8705c7f3d1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9066baff-2c09-4192-bd5d-e5f31169a086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bbaa44-b594-407a-ac60-11647628df5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901f7d86-3641-4ab5-909d-01973cd4ad8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c9e501-8d5d-4fd4-8a7b-fa6021574706",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb163a94-4936-4cd9-afbd-1b34d8c89ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2001ff71-0740-4936-a149-c319b7c1483e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4fffe9-26a9-45cd-9146-6f6864eb5d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c232b23-8c90-4534-bc3c-66bcee6fcdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf79da1-4295-4da4-9adf-b959a0264d09",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956f80ef-14f1-4018-b921-e4a4d9c4546b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186f6862-d157-48d6-bbb0-b384c2be5fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51351fc3-70ca-49c3-a444-ad6128211619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61b8455-56bb-462e-add8-63620a93bfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b7801b-1618-429e-bfe8-9ea634b2d101",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f79a32-5f9b-49e1-97d9-aed7381b4679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b1fb86-b554-4300-af86-aa5a94a3d903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cbf497-ff45-45e8-88f0-602c27ddf660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2610b20e-4345-48d7-97e9-5e8d4ac9aca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f00af91-2dd2-4b9b-a64f-620c1492196a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f2dd5a-312f-4811-9e9a-4da18c0eb269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17a7fff-7b17-4fe4-a1d7-315e87270ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec24065f-ac85-44ed-8431-7ece17020126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8aef439-a753-4f8e-b293-b3ade30472e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfabe516-e697-4106-8e5d-739290b2cd70",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e14991-df17-4440-8567-280dbb2b7a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c29082-50d0-4f53-8579-df32d89dcf68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45139f5-a774-43ac-85fe-5922ed94ad1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2876620-2912-4562-a112-c800afd8413b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279e26f9-8d0d-4380-895e-1307a21444c5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1b2204-e561-4eb0-afc3-b521c1748d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5cfe7b-da9b-4a1b-a1bc-ad80abd4edc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ef59c2-7ad8-4a7d-9c36-dad3638a3b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e9aff8-47d6-4f4e-ba19-e721fe6eb984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ffab9a-af55-441f-aa22-9453064c18c7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f37a9d-ba1c-4ca9-91ee-9a1525a01766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594ff6a1-8ac6-42c9-86a5-1702df20bf48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657a0aea-82bd-4391-a7ed-44cc17b1a303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aaa4747-0cbd-4d2b-a858-e11001e8d707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb86c6d0-1ccf-4066-a71e-08304b56ee4c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecc95b4-c5fa-43a5-9a87-523027ce4b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d283a57d-4d98-4f01-be29-fa83d53137bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b7d89a-22ae-497c-847a-f86c9d1847b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7fba40-3513-43b1-9f52-16e7c7e69534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e96f30-d0af-4f20-8090-b735f6263cd4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9daf398-3b05-430a-972d-a9f28942137a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301fcbe0-e029-4c87-8c95-f12a7632e9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd53d0c-0e3d-402c-9c46-8eca2b1966f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70821578-177b-4fd7-a05f-44a5f4c2f577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff227479-e0dd-4ec3-a324-2d21ecb2d253",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f6e0a0-1391-4d56-92f5-ca089a172c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf4177e-c199-4095-b28e-ce10827e72db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a83487d-2703-4356-a461-64a01b10d504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a0181e-b101-477f-ace0-c27b2fd3bd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdadaf7b-17d5-4319-96b3-e355f2c209c5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67288bab-a003-4ba1-8c4a-c22f49065925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2956edd6-e8a8-4135-b4e8-505f2c597721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbf574d-3dc2-4900-b76a-6e997e68a6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3bf808-72fc-4e15-9443-3113ef86b1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311f78c2-4ff7-423c-828d-467f0477c486",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a50f0b6-1485-4281-a7d8-6712cfa4e92f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54ba7c3-7699-42af-9939-4ff6c62137e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cb88a4-ce22-4864-8e99-34ebc91b27ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3e59bc-4f06-4002-9b01-a71da42a4ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad391f2f-e6eb-4ba5-9244-2839a3b01c0a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1f89b2-be01-4021-8545-cf7ea5613e0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82d8fe89-6171-47fc-ae11-a026f2f2bffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cc8290-b446-4ac8-960e-705a6abb8cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf62861-df96-4b6d-8dff-d04ac6893a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4c4cfc-c6f1-4783-a6e3-e0d1add10b54",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5cac6f-9af6-4d07-9dcb-72ae02ddcb12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35de3092-616f-4e32-a502-4e935c14fbf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efde0be-6317-481b-b2b3-bda0ec43941b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecd47c3-d33d-40f4-8e43-59b53e8c1ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789d031e-c1b5-4698-a448-f998f08f3450",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb0265a-a579-4332-bffd-1f025cae6703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940b36f3-5727-4eef-87c7-fc64624a826f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4f4235-d639-4b1c-a382-ccc968ab3915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d71a50-ecf5-4828-ab27-c846d6c6a91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe262f20-16f6-48f3-9e59-e939f9c3c051",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36d0157-bf07-48ee-9506-23b263f5a5c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b4dd3d-ddef-438a-a452-0391a2bf9554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4717aa2-56fa-400a-87db-2c9e9f01c9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5423cc-5193-4c6c-8a01-5f88bdcd1a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63f0fc8-a821-4be8-a423-5dc9582575d8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbab48f4-f49e-4812-89d7-4917e541a4e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "281ccd82-68f4-49fb-922d-86b3e6024d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4acd807-0842-4c90-b737-6a32abfb9ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ea1e36-c2c7-476d-9517-55b2e88e9192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea99bb53-b026-4e9e-a025-21822a5b45ff",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f6b2a6-c947-4422-bdb5-7eff3c78aa7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83341fa1-817d-4bd6-980a-7d9476bbd2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea8b077-052b-404e-9dec-a43394c9cb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7e4512-5ba6-4ed9-aa6d-f01029a6b22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e78ff9e-764b-4f94-83fd-90991327d582",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5255906a-291f-49dd-bea4-31656e9cab92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "854aa612-ff07-4f93-a26e-629b7de8df34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6eda2ce-ef9e-4972-bf4c-b392251da7a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9956c1f9-e9a3-4d5a-9874-274b296a5da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f52165c-6690-4468-942e-c7c06ed20e97",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8865dacf-9efb-4263-bd04-7b71bb1e4622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd2f8bd1-6eab-47cb-b209-73c6e9ab434c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8374f6-8180-486d-9de6-85084d47ffcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788e2ac5-f00e-4a31-992a-322500cb4176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875bd316-83eb-4aa6-928d-40c7a7de6678",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06f89e2-1259-45cb-b6da-ec569ba3eac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf02b6c-6c90-412d-bd56-9ad1ca888cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a07a12-e992-43cd-903c-b0834098bdc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f80f55-5962-4622-bec8-fe07d8ba6df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fe3868-9ca6-473d-9d94-519cf9fc4519",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671d4f5c-9384-462b-876a-82c3ed3d122a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12b7e53-4fe5-4a3d-92f9-ef23f95af534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d108e7dd-bd25-4971-8d24-87add3de5f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402f7120-ad63-4c35-ad26-46bf983f373d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5a4ec8-4465-4955-81e6-182633e4e68a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccf21c6-75f4-4382-ba1c-6453dd8de2cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7081589b-2ac6-4656-8c0c-08736b2b83b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c868bb-9bfb-4481-924b-124bd7c3b4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02278181-da62-43bd-8f19-7418eab877ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f727d1-86ac-4f79-b2f0-d43b8257f4c7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c4e6fe-f535-4de4-8cf0-dab81fa88a25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b98e83e5-cce1-4ee7-bc56-3a199332c876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbfc405-c922-46c0-9c1d-a754e6b42a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df900fd-90f0-43cd-80b9-1824ea318a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c0009c-496a-4f5d-82ee-44bce7a840f9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f1a96f-451d-4441-9685-383d836a6ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb946e4d-b438-4d58-af0b-53cb40a16473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae9acfb-7048-4501-9a71-ccfd071874d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb386473-9fbb-441c-9adc-2812b1d71f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab91c70-904f-4833-adc3-a6a7d0bc05d9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fad1f6f-e864-4b8b-8f81-77a6b20617f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dc4b97f-ab20-4cd0-8931-ae783aab8263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd92693a-886f-49e4-bb30-ee08dd54f1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d073d26-ec2e-426f-a4e7-5c117b0f72b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f54e39-b01c-47ac-bb93-c2ea2467f993",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d627346-941c-479d-9e1a-1fcdb195dbd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bdb401b-10d0-48d6-9396-334f61ff8940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c5a352-2171-470f-ad8f-3db4e26bbb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b25402-f9c2-4d9d-b033-879b2cb09fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b212d00-8594-4e10-a1cd-0c2842154d92",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24d81bd-deda-4a18-b698-9a1d3872618e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "325034a7-ecef-46ad-8049-8ce57f0ddd9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2641f7-7e22-4af3-bc6f-26386cb87df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06041f7-5b0e-4961-a01a-da4ed8abd2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2693bb0-b336-4dae-99c3-0d86ddd00d10",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa038328-3763-4842-bd86-9cbad44150a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "558434a3-f80d-4078-8dee-d50c39cdb093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3b70e9-04b5-487c-a813-c116cac1cd86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1432d6f5-3799-48af-828d-c32abe961f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd8fe79-6eef-4399-8dbe-6db0b0c37ab5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51e9019-6660-4ca3-a98e-d3b18ed81606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63eeee58-5dfc-4a2a-aa49-6a9c0c235392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59a74b8-1786-443d-8ac2-13973c091398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa94e12-09ad-466a-8076-082e1ca5b2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bbc4af-f2ff-4f1b-8fa3-6890a99e17db",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899d03a0-d2b4-4994-bf42-2f104ba5e95e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d477b4-9729-4f8b-87c3-000c576ffcc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcd2b8a-3e80-41e0-bd09-a09d1f4c259f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7919ec65-5308-4dee-a4cd-15ad53f4c500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1a1200-772d-469c-8472-450a137905c6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39edcc8-0f1e-4566-bfbc-0556324f0726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d21abe-fc2e-4f36-bdba-ecd49bf066ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9c09f5-83b8-441c-b2bc-c22adc8fbcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb77735-dbf2-4cb1-bb68-2a0ba8dc63ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12a870a-8580-48a6-ad4a-df717e960815",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fc5b99-6d70-4528-957c-e5350656fcbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f623f413-a13f-43a6-acfd-f4acc90bb3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084bb858-4e74-4c44-8096-534badfa012c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca386065-66ff-4559-acce-810818fe2a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da48a8f7-7474-4786-b0f9-b8c678ca077f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bc132a-071a-4b86-9787-75456c398092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca01478e-f6ec-4d60-9c85-6686fc3ac8fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74eee296-50cc-4b75-9873-604880245804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd16ede-d7d8-485b-ba03-ee151825abf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e18680-b4f3-4673-adfa-538434c35fab",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c0ea7d-1071-4512-b3e9-97824e454055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "458970e6-38dc-4338-87dd-1e6aaceb700c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efef0dd-e1dc-4f21-914d-62ac439902ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba87e41-a156-40ae-9e27-9f9e8fdf8be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd73748-5609-4b69-b8df-caaa294e90a7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01d9e9d-e9f5-4913-9077-41ae34e6201a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c4d33c6-5e5e-42da-8d05-ab39b44514f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa984828-ad57-4353-b7ff-7756a9587907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbba8cf-b2e8-417a-9851-1eb6b50f32ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdb843f-ed54-4a5f-ad0c-d437d253b23f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d4e6fe-9231-4960-8c3c-71192e992eba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b2002b-2c57-436b-bd9a-2fa0026b0d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93be7377-2575-436e-bf4f-e5962694684b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c1cab4-9902-4bfe-8a97-190faef0137c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08080acb-9380-4a9a-a5c5-983e56ad1888",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea88c7a-ae01-49c1-becd-61ead1fa5de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bac9c8a-339f-4828-b12f-4f367b2ee905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65d1aa4-4b93-4ee3-8308-7ea817fdc477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef8b621-256a-4925-aa3e-b221be19a07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ddcd66-80e8-4798-a83b-4056fb91b46a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5044124f-81bc-4947-9e03-d9bb76152a24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "483491b8-fb07-4827-8034-ad1d02ea0c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a8535d-687f-408b-8b9c-d756b42a042b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e3a66c-720f-4ccd-8adf-daa86ff34788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035f3547-ecda-4a00-9550-f3782b8c6751",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0ffb74-ffcc-4bc4-8d05-234740181434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc43e9c-0283-49c4-92c7-9a2b5d388d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c7412e-d322-496f-badd-473d7a3d58ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97b346f-07cf-4ae7-bd4a-632084826a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6cf67f-76fc-4fb4-9e58-9cc47cf7a0f4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5ef8f4-10b7-435f-a95a-0e17d6854f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "089fda24-f841-4426-91f2-73a49bbd4d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc859fef-5681-4ed4-b044-6084f443d77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a10c9a-ec9f-47bf-b70d-2fc86efd56d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05928c10-35da-4ad8-a8d0-4bfdeac8371d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bf98d9-8651-4176-bf6d-f593d2edebd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0461b8d1-75dd-46b2-a5d5-71ecbe316ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e04192-119f-4364-9ef2-667ac273730e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ca1c56-86ec-408f-ac5a-c19b16983267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d0a97c-70e2-4a01-8ca4-ede37167400b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d54bf9-2f2a-45ac-aecb-8ecdca97d444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0ab926-9542-4ea5-bf35-aed19bc2b9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9764b7-c712-47f7-af3a-3bd8c67aefb3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd725ed-7b9e-4138-ab5b-3b5e2445f840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82301065-96de-4bf5-a43d-c149cbdf3d7d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605e5900-c38f-4868-baf5-63bd420dcfcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0b1907a-c1b8-4734-8062-1a022200f1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8287575d-c7ed-4e1e-9a82-c1074032d9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bb8f81-648e-43ad-b559-7cdf1448531d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e9dba27-849b-4e75-9f25-652e9476b622",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc32f178-ecff-4da9-b913-9a0ab266140e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53b06d98-b0ba-41b9-adcf-7990d23cc003",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cff007f-e3ab-4ff4-bba5-3d1b234400df"
                    }
                  }
                ]
              },
              {
                "id": "0c72bb98-d61c-4a60-ba1a-c5299290daa5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec94dea7-7e27-494e-b8a1-5633df06a892",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd895d3a-e11a-4596-a11d-88255a9c3383",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "815319d0-5d22-4f8e-b5ab-677ac9298992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4179e36d-9e96-4dd7-80a1-62e561e72a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dd4b068-f60b-42a0-b0d3-293e9b3dd75c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1896e52f-283f-4d74-9619-de8cf840c43b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4256195-b8e6-4509-b235-fa5f83040001"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7114d689-fa9f-4be6-9691-94974cde3c3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56fdf0e3-375f-4185-839f-09d77b1d5484"
                    }
                  }
                ]
              },
              {
                "id": "03483766-e837-40bd-9efd-3b1e1caf119e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "39b2331e-13a7-4ddb-a999-d48c7153447f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbdd106-0726-40bf-9e97-80d683d5645c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f9223c41-6c34-4ee4-be93-750dab677011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829a68b4-c831-4259-a917-974e227338c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fd3128-44f3-496f-a56f-99013384c328"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c7cb08a6-3077-4d40-92aa-70078655e378",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0ea0cc52-4846-42b0-93c3-a01c415841a7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a19774eb-06f3-4874-8f05-78f5ad5c67dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e75103b9-1f47-4b04-8ce6-591e437976f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30dc9efe-8cee-43d1-877b-81d5eeb5ae33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e77d9155-1a03-4844-8312-696fd829301c"
                    }
                  }
                ]
              },
              {
                "id": "7b6a670b-ad5a-47fe-ab37-57a923db3c20",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed7fbf08-5054-46d2-ad92-925b9b1994ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "56ef72f2-26ce-4a51-8bb9-c89fbe848683"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59350576-75bc-4d5b-a727-b467a674b190",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94644466-62f0-4e13-bb2e-0d4cebb7d2d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3117f732-c79e-47c6-8588-13e4f4fe290d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "61da518f-d3c1-474f-ab53-64ec1cd1d7e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41cb575b-cbb5-4eb1-9f83-3ac107d5cda8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc951295-7f66-4561-800d-2c737763caf4"
            }
          }
        ]
      },
      {
        "id": "60d8f892-ef07-4828-b1da-e6a50b20a837",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8b4954ea-9963-415d-b8fc-036a7f17b23a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e99866e7-351b-41b6-b0a3-1b54f807578d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30f4fa4d-0ade-41e7-8695-e3753d56185d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70057f5-013a-4b8b-8dc6-562b4b7e29c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0e1797e6-5176-48be-b38f-03f5db846730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49ef146-62d6-4466-be0d-8bc63434b996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27713f06-bc28-4d0a-9a31-711331a86562"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dadc3b69-8d04-4d46-9218-13159ba63744",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8cebc1a-4c2e-48c9-be5b-a594b06ce76c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49ffc480-a5d5-4394-8212-f29ddaaa4fde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "affd989c-50de-40bd-a36e-674be8991968"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f265b5e4-2386-4de3-a83f-b5bdec2af840",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "09e9c29a-071f-4493-b24b-fd13073b61ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2a116b3-7bb0-4983-9507-1b452d074eb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ae39f06-3c51-4d88-84fb-907d02e1f50e"
            }
          }
        ]
      },
      {
        "id": "b8fbcf71-d9e3-4811-bda7-e8389ea1e614",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "83e9c2f1-cb7d-46c5-9c02-410083e6772e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a63d03cb-5060-4ef2-b404-0bd3872d9303",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84a3ea80-1b3c-4838-80e7-e8bddc173577",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b4e962-dba3-4ebe-adfb-830782caa85f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89248bb5-b388-40fd-ba3a-1f6a38565c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468567af-a153-4d9f-b10c-ddc76e62a564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf011079-e7a3-40d4-b8c8-c7d516a61dee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba6b4d84-02c7-40a1-867c-b676ca1dbc50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8778c079-a98d-476e-8820-109991f6fd20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67c4a605-8930-41ed-a10f-bda84db335d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcf79b80-3d5c-4b50-ba9f-c946be575fc0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da047848-0cd9-45b7-8295-47bb9ed35e3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a8618548-537f-4926-902e-7bce34e93d17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b256f84-541d-4010-bc65-7023a66dcdf5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b084b41c-800e-4b97-9af8-c6be840bacf6"
            }
          }
        ]
      },
      {
        "id": "68e98979-6a45-4c41-9125-a3c13f3fe96f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bb62af3c-7d86-4e04-983b-af589c4156e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6919b2c2-d70b-4dc4-a146-eb5b459bb798",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88290e04-dad1-4f86-8b60-0a6e2653e72e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245d600e-f7be-4192-a15b-ea846382c986",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2eb527e-2d75-4f48-a743-a59d3761427c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a23f46-8c26-4993-92fe-37a854cc11c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b9facf7-be77-4a7a-9f10-0feef7c8d7bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0902210-8e05-4bb0-bb9b-794a84a77867",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "969118ba-979f-4815-ab61-f7dc20d046ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e8ba519-49f3-4d4d-9809-45bb057fe698",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02642c30-977e-41e6-a781-e1a7741bae9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b9e568a-b692-4bfe-a658-f6a1ea37fb22",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "490d8143-e4a0-4539-a16a-a0faefb8de0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dbb7d0b-1fb9-4105-90ff-b385d95bfd94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5903a955-89d3-4e09-a73a-a13354934f6d"
            }
          }
        ]
      },
      {
        "id": "369f93ff-b40d-4486-b3d9-105f2aefa3d0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4e79ecb-0d1a-477e-b12a-85ef5ae475aa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5367087-bf1f-4498-a44e-f6c45234c450",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c2366726-cd18-46a4-93b5-2b210940e93b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0b9cd5d-8401-4c09-a39d-b009212d6c1b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fc6b5d8-9e41-4140-b81f-0dcc94f4f2bb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.45422535211264,
      "responseMin": 9,
      "responseMax": 334,
      "responseSd": 30.301908374894225,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687740539472,
      "completed": 1687740575309
    },
    "executions": [
      {
        "id": "249bc270-56b8-4998-8c9a-74a1f5c08f36",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d44ad3db-d2c1-4d06-811d-e041cf17aed4",
          "httpRequestId": "65e3835d-58a4-44e1-bd05-34a8b55d2616"
        },
        "item": {
          "id": "249bc270-56b8-4998-8c9a-74a1f5c08f36",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fc0596ca-89fa-47e9-ad93-5bae1369eefa",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 0
        }
      },
      {
        "id": "f30f6c9f-16f3-45bb-9825-a29868c9232d",
        "cursor": {
          "ref": "59135424-8561-411b-b5ae-8ed0f869ab3d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "48f481bb-41f1-4144-9d7c-be65230df209"
        },
        "item": {
          "id": "f30f6c9f-16f3-45bb-9825-a29868c9232d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "453b1643-d869-4ae6-932e-aecfed9a064c",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "bb6ef717-5828-4c8b-9df7-01377b0ef471",
        "cursor": {
          "ref": "4ec1ef9d-c5bd-4766-975f-f7277f3a8941",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6982f04c-a780-4a26-afce-f71dbe1a569f"
        },
        "item": {
          "id": "bb6ef717-5828-4c8b-9df7-01377b0ef471",
          "name": "did_json"
        },
        "response": {
          "id": "0a53af07-24ff-4d40-8b56-dd5354a6792b",
          "status": "OK",
          "code": 200,
          "responseTime": 238,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc66893-ce0d-4ae9-8840-21db2527932c",
        "cursor": {
          "ref": "6b4a355c-043c-4a23-a7c8-aa8f28c5ebf4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6692ff31-a00d-4bbe-a916-9fc7f3ce7e34"
        },
        "item": {
          "id": "0fc66893-ce0d-4ae9-8840-21db2527932c",
          "name": "did:invalid"
        },
        "response": {
          "id": "7802debc-9879-48ed-adfa-615d6be2d29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc66893-ce0d-4ae9-8840-21db2527932c",
        "cursor": {
          "ref": "6b4a355c-043c-4a23-a7c8-aa8f28c5ebf4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6692ff31-a00d-4bbe-a916-9fc7f3ce7e34"
        },
        "item": {
          "id": "0fc66893-ce0d-4ae9-8840-21db2527932c",
          "name": "did:invalid"
        },
        "response": {
          "id": "7802debc-9879-48ed-adfa-615d6be2d29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7db7343-a93a-4692-a06c-35e0506a29d1",
        "cursor": {
          "ref": "b507fe64-aa4d-4bf0-a8ad-7e9c5136ec2c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "98d2ae2c-f431-4b45-9ac9-57a2a6a84d80"
        },
        "item": {
          "id": "d7db7343-a93a-4692-a06c-35e0506a29d1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "94f5bbaa-4515-4e4c-95db-00c6b6c3026b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 334,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c8be5f-8439-4810-891d-2ac920888c57",
        "cursor": {
          "ref": "87f72ee2-d019-4d67-a08b-f9248448446e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a6596cd9-d807-41e6-82eb-5ad5ff57ef70"
        },
        "item": {
          "id": "f0c8be5f-8439-4810-891d-2ac920888c57",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eebaf340-eb7a-446a-83fc-7c9c2deaf609",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064b23a3-bae3-4f5f-9c73-304b8686ade7",
        "cursor": {
          "ref": "235eed4e-1004-4412-9065-bf94a9413197",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c1081cc7-d160-4dd7-9dd8-a7410665c694"
        },
        "item": {
          "id": "064b23a3-bae3-4f5f-9c73-304b8686ade7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2965c2d9-0d5a-41e9-8ad6-01d199131c61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcec9b6-751c-4913-bbcb-6e9318515d9f",
        "cursor": {
          "ref": "4ab4f4b1-90f7-426c-b5eb-9df53cf1196a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6ee3d1c1-145e-40c4-ad6c-2b3a0c072de2"
        },
        "item": {
          "id": "fdcec9b6-751c-4913-bbcb-6e9318515d9f",
          "name": "identifiers"
        },
        "response": {
          "id": "78227822-90da-4cfc-9f8e-dca813769edd",
          "status": "OK",
          "code": 200,
          "responseTime": 310,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fad441d-05e2-4ff9-baae-039709911d36",
        "cursor": {
          "ref": "6fa1bbcf-8b2c-460c-ac69-109d12c5cf81",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "70bd549b-d285-47b9-83b4-4c95a193326a"
        },
        "item": {
          "id": "7fad441d-05e2-4ff9-baae-039709911d36",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "46edba95-8364-4c98-9f79-aa0cd22a38a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02580a4b-ca4e-4bed-9499-cc68f061315f",
        "cursor": {
          "ref": "fb3cda12-6467-48ee-a498-7550b73dc63e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "705f8ea0-b0c1-4a10-ad31-600a9f91b333"
        },
        "item": {
          "id": "02580a4b-ca4e-4bed-9499-cc68f061315f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "60205835-b0c5-4ae4-8703-7ac99d4a93f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3679e2-4533-412f-9ac8-59fce9014f7b",
        "cursor": {
          "ref": "2dd5738e-7b4e-42c7-be8e-0633815b0a87",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "22bbc69c-532a-4566-8bba-a0bff3500688"
        },
        "item": {
          "id": "8b3679e2-4533-412f-9ac8-59fce9014f7b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1834d41c-9ce6-4341-b77f-5311979090ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972b9d88-907f-4003-b944-6889f2e8f2e1",
        "cursor": {
          "ref": "eb53ab0e-3464-4c1e-b8d0-e1062c88f83c",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "988f1fed-a4d7-404f-a0f1-ed231c9f5719"
        },
        "item": {
          "id": "972b9d88-907f-4003-b944-6889f2e8f2e1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b459bd35-00fa-4d7a-a934-ebe155138112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5257fa-e51e-4e16-8cc2-1c91909539a6",
        "cursor": {
          "ref": "282dafb9-bae6-4d72-9058-dbe72582c3d0",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d0dd6045-4db3-4c86-99fb-043e3dbc0292"
        },
        "item": {
          "id": "5d5257fa-e51e-4e16-8cc2-1c91909539a6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "497c115d-5ae1-4c09-b82f-71b34107ab47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9da3958-4b18-425e-afc7-d76e164778ae",
        "cursor": {
          "ref": "29c86287-a7c5-464a-a041-65fd9eea9796",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "65d3c870-9eb3-4629-9189-9e0fbf7462a2"
        },
        "item": {
          "id": "a9da3958-4b18-425e-afc7-d76e164778ae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "47cd1404-7260-4985-84ae-b902c8796c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d735ab-892f-45ac-8d51-0f8d8f9baf58",
        "cursor": {
          "ref": "975f38af-c6a7-4e9c-afe1-69e2bee296e5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2e4fcf6d-162d-423b-bfe9-f2f845af285f"
        },
        "item": {
          "id": "35d735ab-892f-45ac-8d51-0f8d8f9baf58",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "aeba5c52-6360-4050-ac23-ca80e0b6fb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91ea1b6-94ed-4a5a-9dce-bba3174f3a67",
        "cursor": {
          "ref": "d8d76ca4-cb4a-4191-a571-1c723290bf5a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1dc760f1-a369-4b32-9665-bb7b408a01e4"
        },
        "item": {
          "id": "d91ea1b6-94ed-4a5a-9dce-bba3174f3a67",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "535b1db6-6c19-4021-b676-5ec90d2cf365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73ac802-5caf-4145-a444-db3aceb06dec",
        "cursor": {
          "ref": "816959f8-a6fd-4b82-bfd5-de3176c8c6e8",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "50baf7bc-80ec-44b4-9a91-93969174d2f7"
        },
        "item": {
          "id": "f73ac802-5caf-4145-a444-db3aceb06dec",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6e7d8a9e-fd76-4fd8-a976-23d3f8aa65f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bdc976-0d34-4b19-b530-bedf88935cf9",
        "cursor": {
          "ref": "f6f8866d-5b8b-4238-ad17-b2c16f46d371",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cd0113b3-9e74-4ee3-9c74-0c479b346044"
        },
        "item": {
          "id": "80bdc976-0d34-4b19-b530-bedf88935cf9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "aee96403-b63c-4a6b-89e0-2253c3e5ebb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c59dd12-9d53-4fdd-b50e-ed8ce2f95124",
        "cursor": {
          "ref": "a0f846a7-b6d7-478d-9743-b0370129d3cf",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b15f0120-350a-429b-bb51-ca1aa58a12e2"
        },
        "item": {
          "id": "4c59dd12-9d53-4fdd-b50e-ed8ce2f95124",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "614f146c-5920-4e1a-9e69-5a1eea29cbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3a9b99-dac1-4fc7-8d53-a9989b1ff6fe",
        "cursor": {
          "ref": "4b16823d-040f-49da-81e1-4c46dd84a592",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3015cb55-5918-4ff1-bda8-638450bdc135"
        },
        "item": {
          "id": "7d3a9b99-dac1-4fc7-8d53-a9989b1ff6fe",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "72ac3ce8-4f31-441f-b669-bf23b4e64cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683c9614-0472-40af-9113-dfe6d14446ad",
        "cursor": {
          "ref": "cf926b07-5df2-4186-80d4-7bb3c108a5fb",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b1076755-37ec-4bbb-9b8e-00a1707debe2"
        },
        "item": {
          "id": "683c9614-0472-40af-9113-dfe6d14446ad",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e8696b5d-4a2a-4d3f-abd1-51d68f0428ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290ea340-3ec5-40e0-9cd9-4502aaf5e254",
        "cursor": {
          "ref": "e78b47b7-55de-46b5-9a55-8a75e433e464",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "29c9d340-4fbe-44d5-b565-380a42ed1d6e"
        },
        "item": {
          "id": "290ea340-3ec5-40e0-9cd9-4502aaf5e254",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7ccd32e0-81ae-42a1-a9e9-6bdf9c3b29a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6dcefe-61b0-4759-b158-c36521670d1b",
        "cursor": {
          "ref": "3fb06b34-bfed-411e-8f88-c48016a2c7ff",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "737e551d-d3f8-4a88-8f7e-6165d585e3d1"
        },
        "item": {
          "id": "ea6dcefe-61b0-4759-b158-c36521670d1b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "30080c02-d5c8-451e-9d91-64fe5849e93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a794c8c3-dfb8-4f94-86c2-5c7a868057c0",
        "cursor": {
          "ref": "7bf5c489-db82-487e-9e4c-010a89e9f9d8",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ed8a9bd6-08bb-449c-9781-31b25922c664"
        },
        "item": {
          "id": "a794c8c3-dfb8-4f94-86c2-5c7a868057c0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f36c600f-b505-416a-9153-9eb44f7eda23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7e8786-95b8-4729-bf07-eb57a1f4e3b6",
        "cursor": {
          "ref": "8fad2ecf-10c8-4387-9f09-203f01b78dd4",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d6e1d0e4-6bb0-4000-996a-8c7ad00184c7"
        },
        "item": {
          "id": "dc7e8786-95b8-4729-bf07-eb57a1f4e3b6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d4440ea1-3585-48e0-9eea-c015253c6305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edd9ab7-dc1d-4e64-bd37-9e068cabe658",
        "cursor": {
          "ref": "e1130199-0150-4976-b80e-006bd6b59010",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9b71398f-9c0d-45a9-9efe-93c317dbbcfd"
        },
        "item": {
          "id": "8edd9ab7-dc1d-4e64-bd37-9e068cabe658",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "173a020b-e6dd-4676-a435-6d3c2f0982a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29701890-7f8a-486a-a663-2e22edc5f9aa",
        "cursor": {
          "ref": "021e2a57-55bd-47cd-8f9d-69344c3191c1",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e71b5059-c5da-4400-b854-a67d1b980457"
        },
        "item": {
          "id": "29701890-7f8a-486a-a663-2e22edc5f9aa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9685cd0b-55b9-48ef-865f-7acbaf1c45c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e60597-1971-48d8-8913-c56e247a2154",
        "cursor": {
          "ref": "05897f3a-fea4-430a-ab7e-40a95d2c4f03",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ee2199b3-f1b9-4a57-a4d9-e4c9e24de2ac"
        },
        "item": {
          "id": "d1e60597-1971-48d8-8913-c56e247a2154",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2d5c691c-d7a2-438d-b415-23ee4da9760e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b13455-dec8-40eb-8a21-17457514c821",
        "cursor": {
          "ref": "1f9073cd-d111-4512-a61f-506e3099fabd",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "eecc66e9-230f-45f8-880f-244321f3067f"
        },
        "item": {
          "id": "d3b13455-dec8-40eb-8a21-17457514c821",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "56a0cdfd-b2a8-44be-bb15-dc905300239e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e340baca-1723-44cb-87f7-90c1b8823b09",
        "cursor": {
          "ref": "20ed0abb-5c85-43cf-b8a0-8b9b3797b2c8",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f69aa84e-dae1-402f-85c3-de0c29ae3dff"
        },
        "item": {
          "id": "e340baca-1723-44cb-87f7-90c1b8823b09",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "21191865-5b39-4ef3-9f95-1cc1c7b28b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f529ed0b-8c6f-49a3-8dd5-4826ca22fdd6",
        "cursor": {
          "ref": "ab9a8b55-6af1-4241-96f0-85d5f4c216c4",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1c11b66e-c9d8-42cb-ada5-b5d589f2387e"
        },
        "item": {
          "id": "f529ed0b-8c6f-49a3-8dd5-4826ca22fdd6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a849dac1-2c97-40d5-88a3-fa18bb144cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0367271d-0c8a-4de8-96c6-629e2fc1f0c2",
        "cursor": {
          "ref": "c0e0afc5-c7a4-4640-bb9c-bedd9a77d60d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6520d4e3-b164-4e2f-9108-daa7e0c8952d"
        },
        "item": {
          "id": "0367271d-0c8a-4de8-96c6-629e2fc1f0c2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2825e36a-e62c-4d86-b38d-2925d0f7fe17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00a0c60-7f86-4281-9864-f1efc38d6bd2",
        "cursor": {
          "ref": "cbd2e110-afed-46de-8008-faa71cd1500d",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5c1b6f9b-541a-4af3-bfe1-791c9faea5ac"
        },
        "item": {
          "id": "c00a0c60-7f86-4281-9864-f1efc38d6bd2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "79a2127b-75c2-4ee6-b2fa-fc5ba5fc2e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060aa618-a3ad-421f-9d13-32cef0c2bd21",
        "cursor": {
          "ref": "96b96903-25a7-44be-849a-a7f8e68e997f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dfc9c95f-a995-4ca1-a1e0-55f7cd8d3318"
        },
        "item": {
          "id": "060aa618-a3ad-421f-9d13-32cef0c2bd21",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8ba57f6f-af51-4eb8-9def-026c46a6d657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66d7482-96ea-4941-a0c9-22ce932de8eb",
        "cursor": {
          "ref": "f1343586-1ab5-4c81-a724-eb6d28ee4636",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f989ce58-95b2-42e8-803c-1ae4e86f1ac4"
        },
        "item": {
          "id": "e66d7482-96ea-4941-a0c9-22ce932de8eb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b8cd295b-7c35-4f73-b31c-e1c12751b259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb404de3-dd8f-488a-84d3-5ca1f5cdf2f7",
        "cursor": {
          "ref": "e9b35dbd-be1d-4b07-aac6-3a700ecdde5d",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b169f893-ed63-4d9a-afc6-1737fc8a8a58"
        },
        "item": {
          "id": "cb404de3-dd8f-488a-84d3-5ca1f5cdf2f7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5416a098-a3d1-4378-b11a-4e95d7b8ef47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca0cabb-869c-4c7b-9e9f-64be4102c21f",
        "cursor": {
          "ref": "d27d203d-f31d-412b-b335-cfc7aaa52628",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e58a47d9-365c-43f1-960e-2ef853a186c5"
        },
        "item": {
          "id": "0ca0cabb-869c-4c7b-9e9f-64be4102c21f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "963c2594-844b-4678-ab3f-8922b20ebc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17af8be9-e440-4eda-98be-6a09c921f00e",
        "cursor": {
          "ref": "19d7f28b-eda5-4dfc-b746-f8fd44fca7c7",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6364a5b4-7e07-455f-8e7e-d3505c9413c3"
        },
        "item": {
          "id": "17af8be9-e440-4eda-98be-6a09c921f00e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "77fb60c8-b265-4017-a61d-c848ed97fea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ba14d3-ed76-4080-a1e5-f9571ed104c9",
        "cursor": {
          "ref": "05a6a74f-376e-4e93-8e0f-55adf9335e4d",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "984025df-c1bd-4a1c-9b06-e289bc7ee7f1"
        },
        "item": {
          "id": "52ba14d3-ed76-4080-a1e5-f9571ed104c9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "91830eee-3783-473d-927c-24c9e389aa35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77d144e-3834-4e22-8f94-213cfb85dd92",
        "cursor": {
          "ref": "1d531d7f-d36c-4bb9-a9bf-967837df7f21",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8dc3766b-876d-488b-aec9-a406dab3e034"
        },
        "item": {
          "id": "b77d144e-3834-4e22-8f94-213cfb85dd92",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "35f6b115-ef76-44b5-8c1a-9339e6b691fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190af09e-df85-464d-9c24-2b950435509a",
        "cursor": {
          "ref": "9ec378fb-0c28-49f7-aae7-3d283a2a71d4",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8f9a6f65-8571-455a-b81d-0d37679f1a03"
        },
        "item": {
          "id": "190af09e-df85-464d-9c24-2b950435509a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "57f2d2ff-4a04-41e9-983c-b94b09c9bb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fd00dd-68ed-4625-a93b-4ebc0d210428",
        "cursor": {
          "ref": "42a43f0c-8dfc-4c96-8070-2bc70ad218f8",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8b2fb55d-306c-4ed7-8295-30eef27256ab"
        },
        "item": {
          "id": "c8fd00dd-68ed-4625-a93b-4ebc0d210428",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "68c47114-bba8-4218-aa43-ace23de7cfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4464cf7-f8d4-48b7-9011-8d0b1e4befd4",
        "cursor": {
          "ref": "d1777865-2130-4fd5-ac0e-028956d70a72",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b4cad43d-cc15-4a65-a8be-16028ae53e15"
        },
        "item": {
          "id": "b4464cf7-f8d4-48b7-9011-8d0b1e4befd4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "375e0c47-2c05-45af-84cc-c0126b1b7ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3625c403-9e2e-4595-8a44-ae40c0ce7cb6",
        "cursor": {
          "ref": "bdfe8e3d-90f7-44e0-9376-eee3b9bf1c81",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "096c58f3-de86-4086-92c9-1963367cbfda"
        },
        "item": {
          "id": "3625c403-9e2e-4595-8a44-ae40c0ce7cb6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ee53f9b4-bde0-4d0b-9c0a-e36bd8c9ce26",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1085e88a-34f3-4a46-bd37-3158589dedba",
        "cursor": {
          "ref": "23dfd89e-2386-4434-a8f2-b3b9cd1be899",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "70ac459d-c6b1-4fe5-86a1-0c8c6cc06ff5"
        },
        "item": {
          "id": "1085e88a-34f3-4a46-bd37-3158589dedba",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0d62e7f8-d0f9-4fa5-87e6-49b7da886a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364cdcd4-e1f6-4d88-9965-3de1e29c99a6",
        "cursor": {
          "ref": "7edea257-814e-44d1-b691-17721db98356",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "55d2e5e1-e555-44f0-95f6-1443d7f742bf"
        },
        "item": {
          "id": "364cdcd4-e1f6-4d88-9965-3de1e29c99a6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f79039f4-cb66-431b-baff-6fc12ccc36fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c9b4ff-09fc-4fdf-8604-9d91c8b008c0",
        "cursor": {
          "ref": "280880ee-e7f1-4696-a514-c6191805b01c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c3ceed32-2c18-4380-9368-7a70d12479e3"
        },
        "item": {
          "id": "85c9b4ff-09fc-4fdf-8604-9d91c8b008c0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dbfa4bf2-1dc8-47b3-8af6-8580ce6219e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dac68a-46fc-4f58-8e68-930562e5362a",
        "cursor": {
          "ref": "ee179a93-9a3f-472f-a0b6-147f5cb42d0e",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "07dcdcbb-1258-44a9-9e88-c0615523a90e"
        },
        "item": {
          "id": "d7dac68a-46fc-4f58-8e68-930562e5362a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e0731704-2f0d-4a53-ad85-2ad1c1dbd151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa76c9f-82b3-46cf-aae7-6e5acde3a457",
        "cursor": {
          "ref": "c7ead8ef-d73b-4949-ad2d-65e27ba66a23",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ac0ffaec-b665-466b-ae27-ef1beaac89e6"
        },
        "item": {
          "id": "6aa76c9f-82b3-46cf-aae7-6e5acde3a457",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "20e7799f-d420-4663-b68f-93ae42ec52fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8964ca9d-a711-4930-8ac7-0f9f654f9e48",
        "cursor": {
          "ref": "02381711-c1ef-48ad-b273-9294cb24190a",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6ca55cb0-ccba-48cd-9e32-a7c54d5ad910"
        },
        "item": {
          "id": "8964ca9d-a711-4930-8ac7-0f9f654f9e48",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "540034b3-9c24-4202-9254-57c2e3a55121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eec5ec1-a57b-4d08-abb1-2005d28fd85f",
        "cursor": {
          "ref": "fb689aeb-1541-418e-aaff-6ac0ae73544d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "50099c46-abc4-4882-8a3a-2bd901cd9de4"
        },
        "item": {
          "id": "8eec5ec1-a57b-4d08-abb1-2005d28fd85f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7397cae4-4a9f-43df-bfc2-753f9d11b6f0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31e53f0-dbf3-4d28-befc-e240b4407ac7",
        "cursor": {
          "ref": "5851306c-fb65-455f-9b44-c234132c22b1",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "701b5a06-19f5-40bd-85a3-ae86b48e7a08"
        },
        "item": {
          "id": "d31e53f0-dbf3-4d28-befc-e240b4407ac7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "29159b47-b9ba-4350-979b-05ee932cdd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1823fe-d7e7-4852-a56a-3df1cf473518",
        "cursor": {
          "ref": "b9358818-c329-4d3c-94c1-11a49cb3b9ad",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "56b14afd-b7c6-43e4-9c6b-6213c970d1a9"
        },
        "item": {
          "id": "0e1823fe-d7e7-4852-a56a-3df1cf473518",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9953aab3-674d-45cf-b087-1665fd8f33c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d41ffcf-0165-4940-aa87-2e9f4dec5e15",
        "cursor": {
          "ref": "4fb57b37-54fb-4844-b629-6da34ed489ea",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dba11403-a46a-427f-86c5-6558c02e3284"
        },
        "item": {
          "id": "3d41ffcf-0165-4940-aa87-2e9f4dec5e15",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "638eca01-b440-4aaf-bd0b-890617ef4946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd68b89-94f6-48f5-a20b-1f1b244673c3",
        "cursor": {
          "ref": "c5f25847-ee03-4af1-813e-f80d9aed3bef",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "639dec1f-7cfe-42b0-b10a-ff76f22a1135"
        },
        "item": {
          "id": "4bd68b89-94f6-48f5-a20b-1f1b244673c3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "23f03df3-a184-422a-a23a-3a811983a66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4886b811-6aac-41c1-b237-d2d886c73909",
        "cursor": {
          "ref": "99769829-4d91-4f00-9214-49144d472ba8",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9f09b313-ba6a-4758-b607-f8c76ac8e1a3"
        },
        "item": {
          "id": "4886b811-6aac-41c1-b237-d2d886c73909",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "73549f53-eab1-4a3b-a9a9-6ed47395386f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1b9815-3d92-49e3-b934-a4d3e5cf5dc6",
        "cursor": {
          "ref": "8d90cb05-9fb2-4180-ae57-df78c635a5c7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4be2a68a-bfbf-4ef4-9c12-f6a78a26650a"
        },
        "item": {
          "id": "9e1b9815-3d92-49e3-b934-a4d3e5cf5dc6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f49f2037-39df-4f25-a0d6-74c0f80ffa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad23bec0-75ec-402b-87f7-b379c9148e58",
        "cursor": {
          "ref": "97f6b568-b62c-40f0-a0d6-0514a92b1994",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7c65c89a-f90d-4bfe-a491-0d080db871c9"
        },
        "item": {
          "id": "ad23bec0-75ec-402b-87f7-b379c9148e58",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "266192d3-b029-49db-804c-f09256ea5630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091b742d-4f9c-47a8-94e2-862eb13a4a2d",
        "cursor": {
          "ref": "cc8061fd-721c-4c92-91db-32aa695eba30",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0db94bc1-3cad-4e59-a9bc-3796e1d2c1a2"
        },
        "item": {
          "id": "091b742d-4f9c-47a8-94e2-862eb13a4a2d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d426c943-4d15-4654-8cfd-f9f14b7a2b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b785c1e6-3783-4842-926b-72ae85666461",
        "cursor": {
          "ref": "889607f1-9290-41c3-9b62-b78d992a843e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e1cfed80-d2d1-450d-89f0-0cfdee93ea52"
        },
        "item": {
          "id": "b785c1e6-3783-4842-926b-72ae85666461",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "37e887f2-b5e6-43fb-ac05-b4cd1ea9a671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8ea3dd-5ef7-45fe-b8d6-794eb4cc446c",
        "cursor": {
          "ref": "e4cde974-de0b-442c-87b0-982f5b6fad57",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5e560b35-68e3-40fc-a94d-de6e3055812f"
        },
        "item": {
          "id": "8a8ea3dd-5ef7-45fe-b8d6-794eb4cc446c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2e0458e5-af58-43ff-84fa-da33511674d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53c68a8-250b-46e8-9a76-ec1c13e9ddbd",
        "cursor": {
          "ref": "e110dcb2-9a65-4b64-8826-c13c471b6b43",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "74f87e74-8f3a-42b8-9067-09c4cc780021"
        },
        "item": {
          "id": "e53c68a8-250b-46e8-9a76-ec1c13e9ddbd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "37483331-4858-407a-83f3-b456076717a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1181276b-d5ed-4786-9d3f-3cbd0d633d9b",
        "cursor": {
          "ref": "2bd57a58-9529-4df0-9c91-568da170b475",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "02acf5de-67d2-4727-85c5-b3341699c9f6"
        },
        "item": {
          "id": "1181276b-d5ed-4786-9d3f-3cbd0d633d9b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "97c5ab78-5f22-407f-8e5d-8e635599d6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7cd803-3621-456f-abcd-1431588eff1a",
        "cursor": {
          "ref": "c2ecbd46-72f1-4627-8fd5-361653c88a33",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "280e7b28-ff71-43ac-9184-9b4ff9043d07"
        },
        "item": {
          "id": "fc7cd803-3621-456f-abcd-1431588eff1a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "db9fa098-de4a-4c1b-9a98-2823ed8c15a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb36949-dafc-442b-8cf9-11025a956942",
        "cursor": {
          "ref": "a4f10cf9-9d8a-4a73-9f23-7e9a0bbf36b7",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c914b9a7-9910-4a95-907b-c286fbf41841"
        },
        "item": {
          "id": "9cb36949-dafc-442b-8cf9-11025a956942",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fb10767c-23cc-48a3-9fa4-24328cb63c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa86e09b-11c5-46c5-bae7-39eada3bb86f",
        "cursor": {
          "ref": "4b20666b-fd17-45c5-964e-99c15c769d55",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9cf3f474-1402-46cf-80b2-e6f8a5bf8027"
        },
        "item": {
          "id": "aa86e09b-11c5-46c5-bae7-39eada3bb86f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7b2121c4-b033-48fe-a5e4-8bb3e562d938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f692bd-f0f1-432f-829d-fa69f88b4d75",
        "cursor": {
          "ref": "b1c31b4a-8b8a-41bf-8f78-e52647438ca2",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5e196734-c70d-4750-8669-c61fb75d3c32"
        },
        "item": {
          "id": "88f692bd-f0f1-432f-829d-fa69f88b4d75",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "da499785-d871-4516-a621-fc6f203c4bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa65d732-7532-45a8-b21f-b124d28a48fa",
        "cursor": {
          "ref": "b3c6a3d2-d608-49fb-b938-38257ddaadc6",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "093eac1d-67b9-47a2-be5b-75e31e8d9fe0"
        },
        "item": {
          "id": "fa65d732-7532-45a8-b21f-b124d28a48fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8e447283-6bd4-45f1-bf37-4631ffb1fb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db743691-e83f-4704-89db-e28317b8f130",
        "cursor": {
          "ref": "02c3259e-9c93-4140-b15c-b4bc1c4494d1",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2a54928e-ccc0-4775-a3fa-79c3930db36d"
        },
        "item": {
          "id": "db743691-e83f-4704-89db-e28317b8f130",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0550f6de-d857-4f3d-9a87-759a0dde9681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dffc12-989d-42f1-bf75-1263e445230c",
        "cursor": {
          "ref": "c673ac5d-c29e-4e7f-babd-0e1d6cdb51a4",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "beefad6c-1a03-4b0b-8cca-6443729c1b0e"
        },
        "item": {
          "id": "77dffc12-989d-42f1-bf75-1263e445230c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "75e5b35b-3294-4446-b78c-eb79e4d31e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37c44c3-0f9b-445f-8486-bf8fcf0d348d",
        "cursor": {
          "ref": "d7dbb503-9d30-4142-ad8b-8dc511713463",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "287bd674-2cf8-4ac9-8fc4-b2dcdc77b8ea"
        },
        "item": {
          "id": "c37c44c3-0f9b-445f-8486-bf8fcf0d348d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c1d57af1-265d-4743-9a16-698fb0528c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a59671-2d38-498f-9521-d387e89726c2",
        "cursor": {
          "ref": "07fbe0c1-d689-4041-8949-68a84c3533c6",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9149ba81-4777-40dd-aa6e-d5f83858ae0b"
        },
        "item": {
          "id": "e7a59671-2d38-498f-9521-d387e89726c2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4a9853b5-cc47-46d5-ba5c-186558234f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d68422-8c04-4ac6-ab61-1e21b15d62e8",
        "cursor": {
          "ref": "5d934e13-4105-4c8c-abcf-fd2326233da8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "54384c1c-51ac-4c7e-b9e6-848aaa9cad61"
        },
        "item": {
          "id": "62d68422-8c04-4ac6-ab61-1e21b15d62e8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "247604f6-cba8-456f-a5be-5f4aaa3e7a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4484383-9dd3-445f-b268-f6ee8e91b856",
        "cursor": {
          "ref": "6edaad6a-148b-4d24-ad9c-ae338e696f38",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8fa2aee7-ef0b-4bf9-aa1b-ed81b0e25c88"
        },
        "item": {
          "id": "b4484383-9dd3-445f-b268-f6ee8e91b856",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "46c8f604-3679-4896-9a87-0d8f1dd2d3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b856e12e-53d7-40d5-9754-e85a2c1bc484",
        "cursor": {
          "ref": "33482f84-ac94-48b5-aed9-d94ca3ef9875",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e91a1942-ba71-4795-8491-1f130d9031a0"
        },
        "item": {
          "id": "b856e12e-53d7-40d5-9754-e85a2c1bc484",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d67ded0c-8d2f-4d8d-9b4f-e39993d96d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78abf19d-aff3-4e7d-9df4-b42a4e2ba6d5",
        "cursor": {
          "ref": "7eaddbf9-9c4f-40da-bccd-80ee91772c87",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cc445662-b88c-4166-a149-0b65fdf14191"
        },
        "item": {
          "id": "78abf19d-aff3-4e7d-9df4-b42a4e2ba6d5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4a386ddc-adf7-4186-b625-94daa4621955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d8d1f0-38cc-4a6a-be74-a9f567df202a",
        "cursor": {
          "ref": "e6a9abd3-9a58-419e-9210-0f508e74a524",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "994f7682-6c29-4b12-8f11-2616acb89d09"
        },
        "item": {
          "id": "a4d8d1f0-38cc-4a6a-be74-a9f567df202a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cc69bd3e-549a-4b0c-a869-56f93b56e2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc818a4-e192-473e-8e96-fb851d00db7b",
        "cursor": {
          "ref": "7d58f03c-a474-4967-96dc-a5806a274924",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3dbdd154-5534-4b69-bb35-0b4d3c6899a7"
        },
        "item": {
          "id": "0dc818a4-e192-473e-8e96-fb851d00db7b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c12ee2f2-d81e-476a-a492-3833739cfec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45af776-a854-4e77-bf24-ea63420b9019",
        "cursor": {
          "ref": "2780dcbc-49ca-44e5-b5f7-964eddb6f91a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "91788022-2add-41a1-9a6d-9230e664c25b"
        },
        "item": {
          "id": "a45af776-a854-4e77-bf24-ea63420b9019",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2fc670bd-5344-45f8-a3aa-74b110d6790e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f76161-8cdd-4f5c-a776-3ae96e2f7a1b",
        "cursor": {
          "ref": "e6e7141b-28e6-49c9-a683-27248df2361f",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5e0da406-4da8-410f-909d-4fcdddf0ee8f"
        },
        "item": {
          "id": "35f76161-8cdd-4f5c-a776-3ae96e2f7a1b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "009515f2-bad9-4205-9f73-a748c07f0b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418e975d-2140-4f90-a6aa-f3eff70128c8",
        "cursor": {
          "ref": "400764dc-b1ab-404f-8051-e4434bacbe1d",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "139691c1-d601-497e-9f5d-9f786741af9b"
        },
        "item": {
          "id": "418e975d-2140-4f90-a6aa-f3eff70128c8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f6f7e71d-1a77-481b-bf67-9295341030e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc516ec5-a5b2-4ddb-9e55-585d38febe9b",
        "cursor": {
          "ref": "5d5fd076-6391-41ee-9bf0-39fa25fac535",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "57b79514-f526-490b-9513-b33e94303e2e"
        },
        "item": {
          "id": "fc516ec5-a5b2-4ddb-9e55-585d38febe9b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "82d28917-2d97-4838-a713-2bb547a44e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36a8d80-a6b7-425d-a545-57a715bba407",
        "cursor": {
          "ref": "217829a0-61f9-4c65-a161-16230d91688a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "06e5346e-0ae8-4771-a9b5-5902cc77f493"
        },
        "item": {
          "id": "a36a8d80-a6b7-425d-a545-57a715bba407",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a6ff60a6-b624-459a-af53-6920ff7b1463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65612957-6a2b-4426-9676-64c5d4caa063",
        "cursor": {
          "ref": "f35478de-a76d-4725-a5f1-54f262636208",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5346fcbf-67f2-47f4-8520-eb640433c8cf"
        },
        "item": {
          "id": "65612957-6a2b-4426-9676-64c5d4caa063",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "87d3748c-e202-41f6-97c8-ba659f37f133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365ed5bf-4cef-4740-b77e-f023db473cb8",
        "cursor": {
          "ref": "d8fb6a92-62df-412b-a539-33300245e08c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cfe565a1-20fc-4ef5-ab0d-cd2efaedd6a5"
        },
        "item": {
          "id": "365ed5bf-4cef-4740-b77e-f023db473cb8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "43c9ab81-2c99-4271-a01e-31562411575d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711144c3-bc25-43ff-809a-e0dc3ba7794c",
        "cursor": {
          "ref": "5341b026-04e0-4134-a26c-4e6cdea293e9",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "177fcb25-6b84-4bb3-9370-3bd8298bfde0"
        },
        "item": {
          "id": "711144c3-bc25-43ff-809a-e0dc3ba7794c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "18988556-9709-412c-b51b-69d5932a6129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5065471d-54be-4c68-a639-5048bd7af70a",
        "cursor": {
          "ref": "3ba0719f-a96c-4a6a-9c92-341a8058a051",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "18443b82-cc08-4242-aba0-aec9ee5fedba"
        },
        "item": {
          "id": "5065471d-54be-4c68-a639-5048bd7af70a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0f401585-9237-4aa8-8862-afab496cc437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649ddc06-b48f-4860-af28-1417e7e1fd2c",
        "cursor": {
          "ref": "3f99bd3a-0155-48ce-95dc-433b25a9532d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a75288be-0577-4cef-aa0f-ecbeb9d516cf"
        },
        "item": {
          "id": "649ddc06-b48f-4860-af28-1417e7e1fd2c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9c468a90-5795-4c54-b014-78047cedc4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8990b361-6650-4cbd-a788-4b3e979d0de8",
        "cursor": {
          "ref": "ae7dc649-5cad-45e3-933d-d5a0a446ea2c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b2a27044-e542-4f7e-bef5-5a1c80e0381d"
        },
        "item": {
          "id": "8990b361-6650-4cbd-a788-4b3e979d0de8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8912ab68-7c49-43cf-ae80-519eec1567f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645f88bf-6637-45ca-aad1-5933a26d5edf",
        "cursor": {
          "ref": "9ecd7a04-7c03-403a-877b-24c38b1b0513",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b0a9bc29-f34b-4e4c-a1c6-49b9c03c20d9"
        },
        "item": {
          "id": "645f88bf-6637-45ca-aad1-5933a26d5edf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0b9920ae-7fef-4e2d-a94e-a4e970b65357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90b717b-8579-42be-a4c8-c0a05e43ffea",
        "cursor": {
          "ref": "6246bc2a-0854-4736-b96d-99b485991f31",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "61e13cd2-b4cf-4619-85f9-7c8282db542d"
        },
        "item": {
          "id": "e90b717b-8579-42be-a4c8-c0a05e43ffea",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bdda25d8-dc23-4b0f-8c6c-1107dbd65e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa90d22-25b3-4a70-b83c-ddde3aa61517",
        "cursor": {
          "ref": "bc6af967-b842-40d7-95a2-ef7dd423bbe2",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4e1cd573-1a44-4588-95da-c026852fbba3"
        },
        "item": {
          "id": "1aa90d22-25b3-4a70-b83c-ddde3aa61517",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c3a6360e-0706-4c25-9508-5c8c42fdb3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd12794-b3e0-466b-a405-8b70198ea65d",
        "cursor": {
          "ref": "cca1ddb1-f7a3-4582-be38-bc1f06fe116a",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "94b794a6-ddc2-4497-b335-54bbf7248acc"
        },
        "item": {
          "id": "9dd12794-b3e0-466b-a405-8b70198ea65d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a87975fc-80e7-49b4-97b5-ab514f84edea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddb9e65-133b-46a9-bea4-cfecb9bd7adb",
        "cursor": {
          "ref": "b82f0d11-c0c0-4bc4-89e1-8ebbefed1070",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bff95079-2b06-4d3f-bb8c-c494201b734d"
        },
        "item": {
          "id": "9ddb9e65-133b-46a9-bea4-cfecb9bd7adb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4c3db81e-b243-4404-9df6-cc8cfb9dd4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7993fea4-f0d1-4603-b8f3-febb98498fe0",
        "cursor": {
          "ref": "e679812e-d5a6-495c-88f8-618dd58d4586",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "24d7a877-b0e1-45a5-ae29-09c17e905158"
        },
        "item": {
          "id": "7993fea4-f0d1-4603-b8f3-febb98498fe0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4e1f6522-2aa6-4ca0-a067-d8aa7ac2979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64c2746-cb2b-4c28-94be-4e63887bd415",
        "cursor": {
          "ref": "782d2826-bd66-46c2-a01f-264d75263f8d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0924faed-85da-45ab-9c0c-3ca3a932a6e3"
        },
        "item": {
          "id": "a64c2746-cb2b-4c28-94be-4e63887bd415",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8e59bca9-cdc0-4401-bd82-074731616a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa424d8b-d32a-46a0-99a7-0b396ab48152",
        "cursor": {
          "ref": "0523f973-35c5-4a09-8ed5-31bd4d46fbec",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f4aaff98-f5ce-4d29-8af5-691db083fdf1"
        },
        "item": {
          "id": "fa424d8b-d32a-46a0-99a7-0b396ab48152",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "18c1b384-b072-4a3a-ad33-b8a5c46e9622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc68fe81-8707-4648-a309-660e5ca950fa",
        "cursor": {
          "ref": "6f573856-4063-4658-a295-10fe53652a03",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fd49a538-2057-4bd0-8049-d72b584a7cfd"
        },
        "item": {
          "id": "fc68fe81-8707-4648-a309-660e5ca950fa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ac316501-5bf1-42ad-a63c-92472cb6f02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e743eb-5a51-4ea1-aeb3-bd839c8915b6",
        "cursor": {
          "ref": "53265031-2e77-4cdf-bf1c-2e26b96f25eb",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "979d390e-60b0-4df7-8fcc-3889ed58a889"
        },
        "item": {
          "id": "e0e743eb-5a51-4ea1-aeb3-bd839c8915b6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0add51fb-3916-4959-83cf-74c493d6a842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1c4f3c-1e40-43eb-883c-f7fac2fcb288",
        "cursor": {
          "ref": "150fbd68-560e-42f1-a55d-cf2327e06f04",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cb6c9511-f548-4479-9c49-effd6d44cccb"
        },
        "item": {
          "id": "8c1c4f3c-1e40-43eb-883c-f7fac2fcb288",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5601464b-1bb8-4f3e-a1d3-044fcfa86ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8f2224-33cd-4046-b401-347574e81588",
        "cursor": {
          "ref": "0c441be6-0bcd-404d-bad6-75d0bc1926cd",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "71fb32ae-7b4f-4fb7-9b7c-0b0ee3e2448c"
        },
        "item": {
          "id": "dd8f2224-33cd-4046-b401-347574e81588",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "64099faa-823e-40d5-81d5-8f44c36dc6a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8800ce4f-a278-4ff4-a36f-1b2a1452c551",
        "cursor": {
          "ref": "08b97992-e73d-4a31-8cda-1ffcb6db88a8",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fa3ef8c8-f6fe-4310-89ca-6fdf2236b44b"
        },
        "item": {
          "id": "8800ce4f-a278-4ff4-a36f-1b2a1452c551",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e25eb8c5-3d39-4e20-b340-0f7de05aec16",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99ce947-1049-4365-9454-f8b835510495",
        "cursor": {
          "ref": "1abde567-5bba-4a7c-83bf-85e2688663b4",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d8aad958-1826-46a3-9f8c-3bf178bb5dec"
        },
        "item": {
          "id": "c99ce947-1049-4365-9454-f8b835510495",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "493e8c22-9eb5-40a7-9bd1-287bca89f1fd",
          "status": "Created",
          "code": 201,
          "responseTime": 256,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fd952a-9e4e-4f0d-aad6-dab7cdfe7bdc",
        "cursor": {
          "ref": "9a4e9cf6-a3a6-4e2f-b4c8-8d8a4de2e3ae",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "318d9dfc-93ab-4ee9-ab4e-9a9b5ff9a24b"
        },
        "item": {
          "id": "07fd952a-9e4e-4f0d-aad6-dab7cdfe7bdc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cd2c369b-3759-43ce-bc56-d26899ac2d97",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0373d83e-77d4-4faf-9afe-778da540cef4",
        "cursor": {
          "ref": "9cc75500-d126-4fad-abc1-32da99e67f79",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4857d174-b158-499e-ae51-d9959094837c"
        },
        "item": {
          "id": "0373d83e-77d4-4faf-9afe-778da540cef4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0833e12c-772f-48d7-8930-84603e246757",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d18572-9bdd-4992-8c5b-121d758154f7",
        "cursor": {
          "ref": "9494f86c-3df3-4ea7-bd87-d346ac6031f1",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e8e9efc4-c831-4840-a336-14ebe0bf9c44"
        },
        "item": {
          "id": "93d18572-9bdd-4992-8c5b-121d758154f7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4a120ee6-4e31-4847-b27b-3857b258eb15",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3596b0f-6731-4bc5-84eb-cc2b17f17aee",
        "cursor": {
          "ref": "4c507ec6-11f5-403e-b50d-297486b93f98",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "acf8e14a-278c-41c1-bff3-b2d899304261"
        },
        "item": {
          "id": "e3596b0f-6731-4bc5-84eb-cc2b17f17aee",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "68a04b18-db8b-45b1-b852-a03b1b69cc69",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a55cbe3-3340-4e1e-aa7d-9d3bc9813977",
        "cursor": {
          "ref": "9372925b-ce6a-4c11-b5bd-28d16cb51bff",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "85d154a9-b4f4-4b5e-b0ef-d1427cb6ba0f"
        },
        "item": {
          "id": "1a55cbe3-3340-4e1e-aa7d-9d3bc9813977",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bde3454a-6e73-422e-8bf5-3fe1d14fb558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5e134f-0474-4920-8681-7df5eb6467c7",
        "cursor": {
          "ref": "cf60c491-fa40-4fbb-91d0-234f93101e49",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "624313f6-ef54-4cae-8f21-589315e503e3"
        },
        "item": {
          "id": "2a5e134f-0474-4920-8681-7df5eb6467c7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7d5a17a9-5b04-4bc8-a463-1b0c69fdb670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f24f6bf-b37d-4535-a2a4-9ccae4afa029",
        "cursor": {
          "ref": "a7b7b964-0da3-4679-8608-4a90d28baa37",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7b90e608-b69d-41ea-adeb-2740e3c15442"
        },
        "item": {
          "id": "7f24f6bf-b37d-4535-a2a4-9ccae4afa029",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "87a183fe-488c-4756-af8a-53303fafe928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b694db1a-98bd-4892-8a96-d293324d5ed2",
        "cursor": {
          "ref": "ff0caa09-83f8-4ea1-87ca-698678aa53ff",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "46b90549-3d47-4bd0-a437-a0da61c8858a"
        },
        "item": {
          "id": "b694db1a-98bd-4892-8a96-d293324d5ed2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8f28c535-38e0-4085-9154-161b258154b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3752b044-a899-4c77-8e00-92e6a7ed023e",
        "cursor": {
          "ref": "b99cf5b1-21e3-43c2-bedb-54825e09544f",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ac3db434-9d15-4382-8830-23e086cbd10d"
        },
        "item": {
          "id": "3752b044-a899-4c77-8e00-92e6a7ed023e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6e4c85bf-ca55-4296-a4cd-355948ad05b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53d4504-af8e-4300-955e-ca76d5b3dd43",
        "cursor": {
          "ref": "a4dbd80f-2a59-4756-b232-ff60a7c96b9e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5ca9c4a0-3b7e-4ddd-978f-eb112ddbc4fc"
        },
        "item": {
          "id": "e53d4504-af8e-4300-955e-ca76d5b3dd43",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "025ef8e7-3cd6-4202-b608-27b78d1d42ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abddd0ff-07d1-42bf-aa33-7c34348bc5a2",
        "cursor": {
          "ref": "af5d8cf7-b328-4b33-9ebe-ece374c1d585",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d8689358-2b53-470d-bcd9-dea98958cd69"
        },
        "item": {
          "id": "abddd0ff-07d1-42bf-aa33-7c34348bc5a2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "072b81ea-7d6a-4ed9-bc16-95d588935228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420e84c7-6705-4e9c-a0f0-2da735696697",
        "cursor": {
          "ref": "9c6bfc61-a9ed-486a-a3d6-f9930cadd39e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "da81fea5-c1d7-4f6e-8614-b6008a1c94cd"
        },
        "item": {
          "id": "420e84c7-6705-4e9c-a0f0-2da735696697",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a5d6f582-e408-43d2-8e18-9452c2f0e70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efc663e-9e54-455a-aec1-089db95dddcb",
        "cursor": {
          "ref": "82c7f4f1-32e7-4290-868b-160363d418df",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "84126e32-7848-40ce-a625-a933b0905313"
        },
        "item": {
          "id": "2efc663e-9e54-455a-aec1-089db95dddcb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3109b29d-256d-42d0-baba-f019942d6b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0e2dea-8145-450f-9327-8be506f85110",
        "cursor": {
          "ref": "33f5ff55-641d-4621-883a-a5b3504abb25",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a827bd26-4364-49ff-9d2e-1a1b0b768d3a"
        },
        "item": {
          "id": "fa0e2dea-8145-450f-9327-8be506f85110",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6bc40451-577c-4011-ba19-6229d4df0945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f202157-cc54-4302-86d8-7500b00e2b45",
        "cursor": {
          "ref": "9294e152-b828-4cfb-b0da-47eead22085b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f006ff03-62ee-4955-9e1b-559adbea11b5"
        },
        "item": {
          "id": "0f202157-cc54-4302-86d8-7500b00e2b45",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7cd57bf3-f9a3-4f42-96bf-8ea7230789c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccaf2c8-cf0f-4edf-91d0-11bfa1188539",
        "cursor": {
          "ref": "176f1877-97eb-4c2a-a953-0e7ca897c441",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "289e8248-ac48-4895-8068-54a14ebea06e"
        },
        "item": {
          "id": "9ccaf2c8-cf0f-4edf-91d0-11bfa1188539",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6f05c6a8-c59b-4587-b3e8-c0977de14030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6f726a-686d-4f8e-a131-ce43d65354d3",
        "cursor": {
          "ref": "cca84d90-5ca5-4fcf-ace9-bcd18076a4af",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ba973869-9aeb-4bb1-a6a1-11b67641d382"
        },
        "item": {
          "id": "6e6f726a-686d-4f8e-a131-ce43d65354d3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "536ed0d9-4ee5-43b1-a802-01969871919d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1885a4-cd0e-4fec-8fcd-bebe290f9bbb",
        "cursor": {
          "ref": "4d00ca57-a8d9-4dce-945b-66a5e2abc71a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c42bb2f7-d43a-401a-996a-8a63b69ee5f2"
        },
        "item": {
          "id": "8d1885a4-cd0e-4fec-8fcd-bebe290f9bbb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "27afcd7a-41fe-4ef1-a745-57d09ffab047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1454bdb9-68c7-4c75-9338-5301184ab38e",
        "cursor": {
          "ref": "f97fd521-545c-48d9-8b51-6b8838c2b828",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "af039375-e5d8-4bc6-b69e-f0270cb53e69"
        },
        "item": {
          "id": "1454bdb9-68c7-4c75-9338-5301184ab38e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "73a84d37-274a-4899-9599-acad61de007f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d1990a-cd51-4092-ae0b-0ea02d6e6cfe",
        "cursor": {
          "ref": "488a1645-24d8-462a-9a1c-c64e4d4f1e1e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "199fadfc-2380-47eb-800f-217b15005c64"
        },
        "item": {
          "id": "a9d1990a-cd51-4092-ae0b-0ea02d6e6cfe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "220a7e69-3a1a-404d-9bea-393f81d893ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152d0fa0-ffe7-4506-b592-baa7e82202f5",
        "cursor": {
          "ref": "0225c744-f220-4146-a3fd-4c9bb658d817",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "49ed93bf-5371-4894-87ec-5f4e1ae22375"
        },
        "item": {
          "id": "152d0fa0-ffe7-4506-b592-baa7e82202f5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "49742a5e-171f-4ade-bdaa-adeec6d540a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606dc01b-c7fc-4813-a70a-27f7895e6cae",
        "cursor": {
          "ref": "9f6e9955-ccfd-4a6c-9b8d-9138a87192fc",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "15591932-dffe-4c31-9f0a-7c2e7abea382"
        },
        "item": {
          "id": "606dc01b-c7fc-4813-a70a-27f7895e6cae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ec71de03-4c92-4fd7-8248-221ff468773e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b9136e-6fe3-485a-93ad-c609d616d33c",
        "cursor": {
          "ref": "12db9131-bc3b-4712-8a1f-bb26909e6290",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "eb1176c1-2b22-4caf-b64a-827eaa071efc"
        },
        "item": {
          "id": "31b9136e-6fe3-485a-93ad-c609d616d33c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dc78fb01-d3d0-4b9b-8eb5-2995f1aa992a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2c49b8-7390-4770-acc0-7c60a7306ec4",
        "cursor": {
          "ref": "83b61a7d-32c3-43ad-a339-479bb273ac68",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dddf25ed-7d28-497f-aa09-f30f5a714f98"
        },
        "item": {
          "id": "1e2c49b8-7390-4770-acc0-7c60a7306ec4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0083fc1d-b30e-406f-bef4-9193072a4dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfffbb90-b0e2-4605-8af4-0c4b27b9b9fd",
        "cursor": {
          "ref": "5e6c217d-0fe0-4a06-a998-8a826e96e8e3",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5241ac28-20df-4ba7-83ce-6bfc05a64440"
        },
        "item": {
          "id": "cfffbb90-b0e2-4605-8af4-0c4b27b9b9fd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "655369f3-c0c0-418a-961e-9482a634dee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1a189d-bcbd-4785-a015-53a42c95d757",
        "cursor": {
          "ref": "7978cd81-2918-40ec-b8f0-ecaafd11fd29",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6724587f-114a-479e-bb92-c6d1df28e549"
        },
        "item": {
          "id": "2b1a189d-bcbd-4785-a015-53a42c95d757",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "977bf8e5-db24-4bda-a2e5-5d123abe9683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17695cf0-9a89-4128-8939-f26464659c78",
        "cursor": {
          "ref": "31283a84-85dc-454f-915d-85c997f4d891",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1434315d-0adf-4535-ab59-33b7e45eff26"
        },
        "item": {
          "id": "17695cf0-9a89-4128-8939-f26464659c78",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b51e1c50-2b79-45e8-aa53-342ccce572ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a58acbb-0e44-4dcd-a7a1-e90eb6d9ffb4",
        "cursor": {
          "ref": "bb9e2cba-4898-4b09-bbfc-38a0530c3e0f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "22834572-aba2-4686-94ae-9eb24bb2f4b6"
        },
        "item": {
          "id": "9a58acbb-0e44-4dcd-a7a1-e90eb6d9ffb4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "749d30ab-d49f-4910-9902-25ab3d7a0f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559c7460-eb20-40ee-b998-9b089a97fc4c",
        "cursor": {
          "ref": "29b9f59b-9f24-4097-aaaa-a6f7dd6f186b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "057faad3-233d-4aba-a17a-57de8883f6cb"
        },
        "item": {
          "id": "559c7460-eb20-40ee-b998-9b089a97fc4c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "030c6673-ecb5-42e6-933f-d8db7d61e882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8b9110-cd33-49dd-8b81-c71ffc6a1f4f",
        "cursor": {
          "ref": "a05dbc69-6750-4f1e-a825-47af446c81f6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0fc3be92-10af-41cb-abb0-51efde7bbdc5"
        },
        "item": {
          "id": "5d8b9110-cd33-49dd-8b81-c71ffc6a1f4f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8d7ddc78-a14c-46bd-87d3-41074c20d69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b3cb33-f51d-4c0f-81ea-e63b0de1fa50",
        "cursor": {
          "ref": "f3290105-1e14-490f-b844-6418b72617ef",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7ecb9e5b-68e9-4f34-87e4-4a5c138a09c3"
        },
        "item": {
          "id": "61b3cb33-f51d-4c0f-81ea-e63b0de1fa50",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5f143c15-3e2d-4f1e-8d97-4a7d5c90d4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e019838-94bc-429e-9596-7782a94b6921",
        "cursor": {
          "ref": "466780ba-4b19-4daf-8019-4fcb9c83476b",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "69956d97-8936-469f-aef1-da711bf7f154"
        },
        "item": {
          "id": "6e019838-94bc-429e-9596-7782a94b6921",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "68ec7dc0-b822-4e67-bc55-2aa657dc8306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8916926-9f09-42ff-9d88-6a103259063b",
        "cursor": {
          "ref": "af42c482-0d4e-4157-bcdc-7a870fe4136a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "34dac67f-e7ee-470f-8111-24fb107528c7"
        },
        "item": {
          "id": "d8916926-9f09-42ff-9d88-6a103259063b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f57030cd-8bcd-4f55-9d5d-6dab180fe7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77be681-8439-4f05-81af-a67e15fa731e",
        "cursor": {
          "ref": "789613a4-1c69-44d5-ae6e-248dce0b5617",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1e602275-c54c-4f26-b62e-111ca9d94ad4"
        },
        "item": {
          "id": "e77be681-8439-4f05-81af-a67e15fa731e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "631de792-ead5-41e7-9d56-09c52554110c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1b9836-4dd0-4324-b171-d861e09132e8",
        "cursor": {
          "ref": "870fb183-bff4-4b6e-bdaa-2233d6723232",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "de2ed250-f115-411d-898e-cd8821fa8aa5"
        },
        "item": {
          "id": "cc1b9836-4dd0-4324-b171-d861e09132e8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5866763d-a0d5-4b4d-8cb6-d9ecc190ecd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1a1b47-d3bc-4eb3-bccb-0930ad4cad3b",
        "cursor": {
          "ref": "2f3c6c38-a129-4de4-bdd3-3d6f887fc0aa",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a393a07f-94b4-41d9-af29-c7aca23d07ba"
        },
        "item": {
          "id": "0f1a1b47-d3bc-4eb3-bccb-0930ad4cad3b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2a9ff6fa-8c11-4918-8225-c4e73a9015bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfc306d-78e4-479b-b573-9d74d121e5f9",
        "cursor": {
          "ref": "111b1078-dd66-4e10-b8e2-538ddd4a1aee",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b1f58653-f6bd-4c9d-8f79-b7f0ebded637"
        },
        "item": {
          "id": "7cfc306d-78e4-479b-b573-9d74d121e5f9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "92a8be4d-9cf3-4bd0-9c05-c08b01987292",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed92fe64-c5f8-4f24-8ec3-03a24a9fc21f",
        "cursor": {
          "ref": "3f86918c-1478-4455-bd68-f601438ffbc0",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f0799d39-3208-490b-a9eb-a17d7218b107"
        },
        "item": {
          "id": "ed92fe64-c5f8-4f24-8ec3-03a24a9fc21f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7dc80da7-12c7-43f2-85c1-92426ff4c5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e20737-6311-4d42-8536-8bd14f2ebf65",
        "cursor": {
          "ref": "e9d3e7ec-d0b7-40ed-8d98-dce0ce4c3997",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eba1a13e-d716-4a4b-8b85-197bfd0906cb"
        },
        "item": {
          "id": "a9e20737-6311-4d42-8536-8bd14f2ebf65",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a07da179-6dae-4e9b-b7e2-106d2fe0cb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f0a13f-dc73-4e69-9853-0eca6aef0341",
        "cursor": {
          "ref": "559109d7-4bcd-41e5-93b4-a184f98ee97e",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c573aaa6-d183-4965-ba47-9272fb823ecf"
        },
        "item": {
          "id": "14f0a13f-dc73-4e69-9853-0eca6aef0341",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "620148d7-4169-4e15-8a70-f1c193cd0b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e081400-0306-4e69-a223-084144f2626c",
        "cursor": {
          "ref": "c492dc3a-7d2f-4a59-a5c6-ed6e8a300080",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "70ed86e6-de66-4d7a-a1e8-f4ff7167228e"
        },
        "item": {
          "id": "4e081400-0306-4e69-a223-084144f2626c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ecb45765-0a63-462d-9a5a-3f2c5dd9333f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57e4858-b920-4c59-994c-42f58ece5c97",
        "cursor": {
          "ref": "afeac8f1-5591-41be-b5c4-2b09ac1608b5",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "941fa4e0-a866-4e64-a8be-52f6df656d46"
        },
        "item": {
          "id": "e57e4858-b920-4c59-994c-42f58ece5c97",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "91fa51d1-0418-43ce-bdfd-727ed96fcdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5cb420-5994-4413-9edd-c57f498306fc",
        "cursor": {
          "ref": "555f941b-e840-469f-83c5-811e2da802fd",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "86f09f93-73be-47b3-9b0c-0620d6a0f20f"
        },
        "item": {
          "id": "aa5cb420-5994-4413-9edd-c57f498306fc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "28af6a29-8b78-4bfa-957d-1103491b7780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9bd1a7-ad21-442b-a4f1-24e14b773531",
        "cursor": {
          "ref": "fde828b6-b7e9-4c55-a674-d3b16904b99b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6c33ae9b-ff64-4f56-9a50-e8ad10c96e2e"
        },
        "item": {
          "id": "af9bd1a7-ad21-442b-a4f1-24e14b773531",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6bf359f0-870a-4b2e-89a1-9ed789088b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6810cba6-6c68-4d81-874a-1ed88cd16b21",
        "cursor": {
          "ref": "32322c9c-adbd-415b-8c38-89376a1f1482",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b7bbd623-33b3-49c5-8182-18bbdcaf5f29"
        },
        "item": {
          "id": "6810cba6-6c68-4d81-874a-1ed88cd16b21",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "83fef955-b2e7-4e2a-9bed-21734e9585ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6027ad9e-850e-44ea-9e92-999a1d446718",
        "cursor": {
          "ref": "530dcf05-85b4-45b1-b3d0-a88e3387f68e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "608f85f9-1840-4f82-8827-287c35732cfe"
        },
        "item": {
          "id": "6027ad9e-850e-44ea-9e92-999a1d446718",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9df7b7e2-3196-42c8-8f40-113b17103966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e304292c-5830-4b4d-9947-1e1bb4c90b2e",
        "cursor": {
          "ref": "504ee10d-13a7-48f7-a902-3194d9c2676c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "74613604-c83f-4aaa-8945-36be1671e7ec"
        },
        "item": {
          "id": "e304292c-5830-4b4d-9947-1e1bb4c90b2e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7e429964-69af-4415-a4c9-c280d1edb82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c01ea56-35a7-4a7a-abd4-ecf9c396600f",
        "cursor": {
          "ref": "00a008dc-8160-4ff5-8cf9-0e51b06f8eb7",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2564f88b-807c-4aae-a7ac-3f1dd0180007"
        },
        "item": {
          "id": "9c01ea56-35a7-4a7a-abd4-ecf9c396600f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4784d2b5-feac-4061-a893-4df9dcbbc8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dc263e-6ad0-425a-9cf4-530e996c0490",
        "cursor": {
          "ref": "8ce2268f-dc35-43b6-93c6-71a14f8526e0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "37e178b4-083c-4256-8d44-18e0c18e708b"
        },
        "item": {
          "id": "f9dc263e-6ad0-425a-9cf4-530e996c0490",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4940f1a7-0b03-49f8-a37e-ca12bdb1b6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ec2691-848f-4c3a-9c26-0e9400c0b562",
        "cursor": {
          "ref": "c56e914c-be0f-4926-a53c-50407dc6c69d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b09c364a-a87a-4a31-b4df-7b61415afb3f"
        },
        "item": {
          "id": "c6ec2691-848f-4c3a-9c26-0e9400c0b562",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "517c4848-5078-4f2d-a78d-e3cd4a53546e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5139f20-5bf5-4d41-b5a4-0f1b0d25ba8d",
        "cursor": {
          "ref": "0016ed57-6115-4a76-8636-9642dad8e380",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f80083b7-80b2-4575-b95e-481596d2525d"
        },
        "item": {
          "id": "e5139f20-5bf5-4d41-b5a4-0f1b0d25ba8d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dbb45041-dc8b-49f1-9574-703b119f9920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d89f55-9413-40ea-8b8e-4122a03e7024",
        "cursor": {
          "ref": "35762dbb-9c0d-4fa4-9462-22f3b4647f03",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "87aa38a6-10a9-4547-81e1-0615580092c5"
        },
        "item": {
          "id": "51d89f55-9413-40ea-8b8e-4122a03e7024",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "be3464c5-f176-4154-9ff1-315dcffdd164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b509b0ce-b4f7-4818-b4a5-138855e2afb2",
        "cursor": {
          "ref": "a73dc8b2-2649-4a2c-8884-bc647699cdb2",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b727106a-e84a-4791-990f-b3dd3c20ffa9"
        },
        "item": {
          "id": "b509b0ce-b4f7-4818-b4a5-138855e2afb2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e5d0b26a-f85a-47bf-933d-77b4e09ace74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00f8cac-aa43-4f32-aff9-f4ca2e8fe04b",
        "cursor": {
          "ref": "d4de339b-4018-47bc-8b9a-e2013927564d",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "62991ab3-2617-4861-b84a-f04dcdeb300b"
        },
        "item": {
          "id": "f00f8cac-aa43-4f32-aff9-f4ca2e8fe04b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "59e1a0d3-2b8f-4019-989f-788d4c7e9dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d0b12e-9e5a-4f9e-a8be-467a55306585",
        "cursor": {
          "ref": "f39d6ba0-06c5-4381-980f-b80818c248da",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2e4a5d62-f07f-47f4-abc8-b96412399dde"
        },
        "item": {
          "id": "15d0b12e-9e5a-4f9e-a8be-467a55306585",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ab2081bb-6d8e-4f39-bb7a-54c28581320f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4178cd61-528b-4261-9c93-f2ebd22045f9",
        "cursor": {
          "ref": "55c8802d-e511-461b-b88e-4e3e0a4a2b0b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "303bba5c-9796-46ee-8312-920e719fdb3c"
        },
        "item": {
          "id": "4178cd61-528b-4261-9c93-f2ebd22045f9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0658b2b6-6491-484d-80a1-6761171aed98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8020644-d030-48cd-8af2-b1450163184b",
        "cursor": {
          "ref": "181e3d40-4940-41e5-8c2a-77afcb0931d0",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4cf48567-b2d4-4d1c-b48f-419f858cbfa5"
        },
        "item": {
          "id": "c8020644-d030-48cd-8af2-b1450163184b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b4ac1794-6e3f-46ee-af87-87f6c6af5a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab758657-adbf-4d9a-9d08-9fe071db32fe",
        "cursor": {
          "ref": "11c7b151-369c-48d7-ab70-a78ae364ab95",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a67e24cb-4c6a-4aad-a86a-4d35fa7ebb23"
        },
        "item": {
          "id": "ab758657-adbf-4d9a-9d08-9fe071db32fe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "be41d5d5-3723-4c7c-ade6-9243dad50f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204c6a4b-ea98-4fdc-b39b-563be997f1fb",
        "cursor": {
          "ref": "fcd38543-02ab-41cf-ba6a-22fbf21abe37",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9667c928-0af9-4dff-84d8-be1d8892eaac"
        },
        "item": {
          "id": "204c6a4b-ea98-4fdc-b39b-563be997f1fb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ac044c6a-e57f-4201-8bfa-4ad8adcc5c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e834b6-cc21-4e69-beef-31fb40a243ec",
        "cursor": {
          "ref": "5797e7f1-634f-4c6e-af38-6b3e119bc905",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c3e33fb3-9bc8-42c9-a63c-2a60232bb8bf"
        },
        "item": {
          "id": "86e834b6-cc21-4e69-beef-31fb40a243ec",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "688a63d6-5047-48c9-9df8-f5eb40483d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41345b04-1a30-4c63-9eaa-517932b6288a",
        "cursor": {
          "ref": "c2b22c5a-0e32-46b5-a2db-65631f6a54e9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4c0e38c2-4225-4e57-aa21-fe2f43f77eeb"
        },
        "item": {
          "id": "41345b04-1a30-4c63-9eaa-517932b6288a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c9011184-607d-43fb-b536-50d5086f014f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407c8824-e265-4c5c-9217-8eb6aec33d2a",
        "cursor": {
          "ref": "dfc01b7b-d432-42ae-8c08-5705303b4fb2",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "05459b3a-7fe7-491f-b426-099064060d0a"
        },
        "item": {
          "id": "407c8824-e265-4c5c-9217-8eb6aec33d2a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c01f3d9c-0b8d-4626-a977-0c4479917288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21407230-c979-4c19-9809-821441fb51ed",
        "cursor": {
          "ref": "c61447b8-e91a-4b47-9c76-cf58b669dc26",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5d91f0e3-1087-4ae1-a1f8-167c7d993471"
        },
        "item": {
          "id": "21407230-c979-4c19-9809-821441fb51ed",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f1fa3e46-145c-4efe-b453-08c901190a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f7cd8f-2b4f-4c95-9fc7-491fdc8687ae",
        "cursor": {
          "ref": "0dc1bc29-bfdf-4393-8844-6db5e7f2eba0",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "834bd2b3-6d6e-4b5a-a89f-64b01b20b912"
        },
        "item": {
          "id": "d5f7cd8f-2b4f-4c95-9fc7-491fdc8687ae",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4d1f84c8-cdfd-455c-a882-63be87724f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77049c5c-059e-4bb8-a62d-9863a7240cda",
        "cursor": {
          "ref": "217a65e2-3adb-4eab-99ea-485d071a24a4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ee9e92c7-38e0-4fc5-86ad-88c141a12b9a"
        },
        "item": {
          "id": "77049c5c-059e-4bb8-a62d-9863a7240cda",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3d9417d2-6518-4e7a-85e8-b2848613c215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2983d564-1699-4793-9e58-2c45f23fb286",
        "cursor": {
          "ref": "a61dcd47-196c-467c-b422-01b2787ef58e",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9cfb153e-4977-43bc-8dc2-a3fccb6b65e5"
        },
        "item": {
          "id": "2983d564-1699-4793-9e58-2c45f23fb286",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "84c669cc-ebd5-43a6-9e2f-dc77639c0eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ddbf21-b333-4bc1-a523-e8bf719e1bd8",
        "cursor": {
          "ref": "680a269d-f523-4f56-b4e4-0bbec2de2c8d",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8a970fc9-9147-425e-ab5d-3a8012289dd4"
        },
        "item": {
          "id": "a2ddbf21-b333-4bc1-a523-e8bf719e1bd8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "513a604e-7069-4377-a244-94e3bf89fc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad08519d-eb81-45c5-897f-3d49739cbf57",
        "cursor": {
          "ref": "627febab-7cad-4ff8-a828-6f26cb707e27",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2c6c29eb-d26f-4645-8d4a-69c65f74a5d1"
        },
        "item": {
          "id": "ad08519d-eb81-45c5-897f-3d49739cbf57",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2d802b1a-c107-453f-b48f-04e87c398c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09226d3f-e1d8-48e0-8b06-b84734c01e4e",
        "cursor": {
          "ref": "f1a0eae3-4093-41e6-b7a1-47c730c23e12",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d96e8c3c-7d5e-4b2d-ae6d-a25c5129d118"
        },
        "item": {
          "id": "09226d3f-e1d8-48e0-8b06-b84734c01e4e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "46e27abd-d9ca-45c9-a0f0-c7e3bf9d40d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46012c00-6644-4d7a-ba03-776bb5485f52",
        "cursor": {
          "ref": "c7b915df-0d57-4ed9-b4a9-87fe8da8dab7",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "86915879-6be7-42df-8c94-db9e9be3e16a"
        },
        "item": {
          "id": "46012c00-6644-4d7a-ba03-776bb5485f52",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0dd04adb-0c29-4cf5-823e-6bf2761b6be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cf2a1c-c329-4b2c-8e0c-f6639c62c8ab",
        "cursor": {
          "ref": "b798c603-1995-4c6b-9950-eb494abeb499",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f22a6237-9697-4352-90d9-c244e3eb4059"
        },
        "item": {
          "id": "b0cf2a1c-c329-4b2c-8e0c-f6639c62c8ab",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d2e5c117-47d2-46b3-a220-9c61d8825ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c6044d-1207-4fa4-8728-c3108a55c1f8",
        "cursor": {
          "ref": "0f49796c-070a-4226-b4e8-5d0774aed189",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "82b67718-4b6e-455b-bfc5-f7af0b43f9b5"
        },
        "item": {
          "id": "b6c6044d-1207-4fa4-8728-c3108a55c1f8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "61e9fbed-d53e-4572-b80a-951581a25ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fafe879-fca5-4d24-85fb-df9a01facb13",
        "cursor": {
          "ref": "3490b66a-da60-451a-9e63-b488e8d61d0d",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ba9d4693-ee67-4544-92d8-5cbaed39fd11"
        },
        "item": {
          "id": "3fafe879-fca5-4d24-85fb-df9a01facb13",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "06113134-d5ab-4ac7-8cf2-7ea2cf2583f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef82bea8-489a-4343-a363-400bd010ec25",
        "cursor": {
          "ref": "e682dc43-1156-4899-a758-1c841d9bac01",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b4d73eca-6178-44ed-bbf9-ea8303b7112e"
        },
        "item": {
          "id": "ef82bea8-489a-4343-a363-400bd010ec25",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c6e53059-fdd2-4917-97fb-d35aebf28b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a31830-27ca-4c35-8885-76be9519a249",
        "cursor": {
          "ref": "aeb97c33-7c30-42c1-b12c-92f274dd5968",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e8c78eea-4ea7-4760-8c7a-574fb749fc32"
        },
        "item": {
          "id": "65a31830-27ca-4c35-8885-76be9519a249",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6c6faf01-107a-490c-b27f-67cac6383fcd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8fd1ce-af0b-437f-9075-c77c2a974255",
        "cursor": {
          "ref": "9a2dd373-71a2-4205-8970-c28bc83cb68e",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f8e4891d-d09f-4fd3-bab8-eab2b4e2572b"
        },
        "item": {
          "id": "8f8fd1ce-af0b-437f-9075-c77c2a974255",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b18947d4-ab2b-40bf-a03f-368b6158fd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5475e961-b891-401c-b3f5-5787b7c1f80a",
        "cursor": {
          "ref": "593da5da-323d-4113-9d09-2538beddc2c5",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c5cae92c-f721-4430-baf5-5ed94b5946d4"
        },
        "item": {
          "id": "5475e961-b891-401c-b3f5-5787b7c1f80a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c935c938-3bea-4582-9199-154d0f1e1a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462fdc4f-ad88-41a3-864b-7a61128b3c9f",
        "cursor": {
          "ref": "cc1b2c71-a093-4168-93dd-fbdf97a4729a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5732d6d9-704c-48de-a482-ff380249beee"
        },
        "item": {
          "id": "462fdc4f-ad88-41a3-864b-7a61128b3c9f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ad746d5a-711f-4606-9912-b6a4e694b180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258e6f5b-5bf1-4662-bf40-0fe34954151d",
        "cursor": {
          "ref": "2aac18c0-d866-47f7-b291-12f7fe22552a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c27c8317-6ba4-4f56-aa9e-873162071b5a"
        },
        "item": {
          "id": "258e6f5b-5bf1-4662-bf40-0fe34954151d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6d28efa8-bac1-4390-8295-bf01a7e43172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dcd480-9040-4dd4-82dc-b48dfaca68b7",
        "cursor": {
          "ref": "b437e9a1-818c-40bb-86fa-47899cc795fa",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2a3d8e76-cd06-4964-905c-9d5347252c48"
        },
        "item": {
          "id": "b0dcd480-9040-4dd4-82dc-b48dfaca68b7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a49dbc41-f84b-46d5-bf85-910a1cce20ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f5ceda-e478-4eca-a1a7-addcb28f2466",
        "cursor": {
          "ref": "944fe3ce-b683-4e59-bc31-2a219ed97593",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0b867701-2577-47fe-b87c-9c368970eb22"
        },
        "item": {
          "id": "10f5ceda-e478-4eca-a1a7-addcb28f2466",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0369a8b8-60c2-4dc4-963c-8756c6ce65e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6f854b-b74b-4cec-97a7-b265fbc9ae35",
        "cursor": {
          "ref": "884b15f8-99c9-4dc1-b345-de7a91f4db0a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "52eb6f44-c2ab-4861-90f7-dccf97ceace5"
        },
        "item": {
          "id": "2b6f854b-b74b-4cec-97a7-b265fbc9ae35",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "697c6021-687e-4b1d-8b9e-1ca25b176291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4ad123-fe7a-40ce-9dbf-0debb66171c0",
        "cursor": {
          "ref": "9513cbd8-aa43-4dfd-9db7-5d7c6a1e4904",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "27f16a18-a965-4ece-a352-ccdbe0bcfa5d"
        },
        "item": {
          "id": "af4ad123-fe7a-40ce-9dbf-0debb66171c0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b595c7ad-8ebf-4989-84da-45d12e80dd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbcd42b-8027-47c0-9609-17b210c5acc3",
        "cursor": {
          "ref": "9d4393e6-672f-4487-8b3b-e770a8fa2914",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "356e4aab-46dc-4074-b081-5dc2e91e1bea"
        },
        "item": {
          "id": "cfbcd42b-8027-47c0-9609-17b210c5acc3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6d5a5ff2-2478-4a04-9532-363af644190d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e3b596-cac1-4d1e-9944-09ab41fd9a1c",
        "cursor": {
          "ref": "87870840-5d00-4d34-87f4-4153964aa3c4",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2d953e58-f0b9-4f63-be7d-262a2a1efcaf"
        },
        "item": {
          "id": "77e3b596-cac1-4d1e-9944-09ab41fd9a1c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3b25eafc-e1b6-487c-b9c8-1ebc1ca14a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89662df-a357-4d6a-a463-fa120ab27770",
        "cursor": {
          "ref": "459f756c-b512-4cfa-822e-061d1c28f4db",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d67b1f6f-34c0-4244-b688-41891c9c943f"
        },
        "item": {
          "id": "d89662df-a357-4d6a-a463-fa120ab27770",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9d54f832-8a0c-41ed-9670-f37169b87625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924248a6-5650-4573-a24b-c1692e085150",
        "cursor": {
          "ref": "ca265aed-66e4-40eb-af9b-824d61c8e081",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "823f8d32-dc5b-4dde-ad23-97a4028572c8"
        },
        "item": {
          "id": "924248a6-5650-4573-a24b-c1692e085150",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5b2d8ce4-76f7-4c35-890b-dbbeb727077f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e77899-a5b3-4943-98c9-2b21074dc38f",
        "cursor": {
          "ref": "727e1657-1fcd-442e-b289-ecfe27753d3e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "db389f61-0f80-4b41-bfa2-4b264eb963ab"
        },
        "item": {
          "id": "89e77899-a5b3-4943-98c9-2b21074dc38f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "53ace686-a395-4069-81ff-1cf7d9becc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14353d23-0cc6-4068-b115-e70d097acb66",
        "cursor": {
          "ref": "85378095-13dc-4b3b-9d40-9432a755745c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "252a173a-2eda-44c5-9d3a-4c691aa8ffaf"
        },
        "item": {
          "id": "14353d23-0cc6-4068-b115-e70d097acb66",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7dd167dc-527b-4002-a182-c79288ac0e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1fcb85-b9d1-43f7-a04e-44127424cec7",
        "cursor": {
          "ref": "fc7a37a0-42d5-4e85-a477-0f0a67867144",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f28d6a51-898b-4356-a4dc-01353c501c94"
        },
        "item": {
          "id": "2e1fcb85-b9d1-43f7-a04e-44127424cec7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "88a4ca5d-a9d0-4411-b100-fb643aa6c7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe1fa11-5f66-41a7-bac1-0638169ec84a",
        "cursor": {
          "ref": "f217a06b-1f25-455d-998d-e2958e4dcc40",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d0935482-2c6e-48e3-9da5-a4eae9ebaf02"
        },
        "item": {
          "id": "3fe1fa11-5f66-41a7-bac1-0638169ec84a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4ad5bd62-1968-4944-b5fe-8f49269f55b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b19d66-1d8e-4d8e-8880-be01e3237d2d",
        "cursor": {
          "ref": "e8fdfb4f-bdab-4835-9704-681a08e211df",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "548cda70-f90b-4046-9108-b68707ed69cd"
        },
        "item": {
          "id": "d1b19d66-1d8e-4d8e-8880-be01e3237d2d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f285cf25-92b1-4f99-a835-645597d0c2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59825aa1-5615-45de-b7ce-252028df8388",
        "cursor": {
          "ref": "de2fb787-32e8-48f9-ba63-1d74c6b351a4",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "32208f58-4f36-449c-8ef3-e3157eb8cfb6"
        },
        "item": {
          "id": "59825aa1-5615-45de-b7ce-252028df8388",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d3803212-8cf1-46e1-99bf-e087f638a9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbc3b45-089a-4082-886d-6e7968255d39",
        "cursor": {
          "ref": "4f7ac515-8d93-4e07-b7c2-877ec78baf05",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2afbbe67-60f9-4820-aa3b-71dfd7c01fbd"
        },
        "item": {
          "id": "cdbc3b45-089a-4082-886d-6e7968255d39",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "33d3b4ed-58b5-40c2-8b87-bf095d4c4e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae2b056-8888-415e-a516-1fc5eed7b598",
        "cursor": {
          "ref": "22be2520-7d34-442d-bcbd-6d34c9bde287",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "59034a79-9933-4525-9e63-ebb352e11fbe"
        },
        "item": {
          "id": "aae2b056-8888-415e-a516-1fc5eed7b598",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4ce65125-fb9c-4b96-8c65-6b9bd1bc3276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e556c7b-90fc-4f33-9bc6-8bbcbdb68d5d",
        "cursor": {
          "ref": "a13969ab-a931-4c6a-9951-63f1a236df5f",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2873c9bd-bfcf-4fc4-8df7-4d11fb839bd2"
        },
        "item": {
          "id": "3e556c7b-90fc-4f33-9bc6-8bbcbdb68d5d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8c813095-47ee-47fb-9bb6-9615fa5a56c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cda833-c44f-4c02-8bce-31c42b854745",
        "cursor": {
          "ref": "afb8ade1-da82-48cb-acd1-f30446902260",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "640078e7-1290-4676-9f4a-9be80ad67278"
        },
        "item": {
          "id": "49cda833-c44f-4c02-8bce-31c42b854745",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d85141ec-aff9-4b2a-878b-b3d800a57927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bcfe51-f540-46d0-beb4-381ac4f1d495",
        "cursor": {
          "ref": "c77e0285-929e-4cc6-8eb6-403cb52bf764",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f92f55bc-d89f-4d7c-b89a-d74f035fbd58"
        },
        "item": {
          "id": "29bcfe51-f540-46d0-beb4-381ac4f1d495",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8145d258-f8e4-4f91-9a49-602401c41095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c5dddd-3bed-4f5c-970f-9252c2f863d8",
        "cursor": {
          "ref": "106750e1-f77b-4630-9aa3-0e12bc30f20c",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d8a794f3-a4fe-4712-b080-1f1168c229ad"
        },
        "item": {
          "id": "44c5dddd-3bed-4f5c-970f-9252c2f863d8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d2e8dab7-85ce-42a6-9dae-f756134d0a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a92b266-52c5-4e9e-8424-d91c4526d6b4",
        "cursor": {
          "ref": "f43dad96-5286-44b9-9c39-2a9c363e3197",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5bc448aa-a766-4952-bbb5-011fd94544c9"
        },
        "item": {
          "id": "5a92b266-52c5-4e9e-8424-d91c4526d6b4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1f110b5c-7498-44f5-b0fa-004ba28f8d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa0817f-cdfe-43d4-86c1-2436687eb842",
        "cursor": {
          "ref": "01aa839f-4f80-45ef-a178-6161acf53f06",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f9eb1bf9-be45-4f46-b9ad-b31cef0fca90"
        },
        "item": {
          "id": "efa0817f-cdfe-43d4-86c1-2436687eb842",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3a9ac8eb-2ccc-446f-8015-c0bce2021b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1083e3aa-ebfe-4d4f-9235-4664bbb866de",
        "cursor": {
          "ref": "233f795b-6dab-45df-bd26-f45c27d4c995",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "49723465-120f-42c2-a953-b2ca02979f42"
        },
        "item": {
          "id": "1083e3aa-ebfe-4d4f-9235-4664bbb866de",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e3b37357-b529-4028-b7a6-e4093d932156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da488eb-73a4-434c-ab93-8703c877aeac",
        "cursor": {
          "ref": "9d2c28f0-70a3-434a-b99b-77bcd834b8e1",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9e10940b-1cef-407a-beff-7208f70a3202"
        },
        "item": {
          "id": "3da488eb-73a4-434c-ab93-8703c877aeac",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b4b65938-53f8-46cd-b720-cc3f01d72432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe74e13e-3341-4799-b938-7080f084ac21",
        "cursor": {
          "ref": "a17b4627-75ac-41f0-a2cc-92c57c4f588b",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1147b1b2-184d-401a-b0e6-e0599148b641"
        },
        "item": {
          "id": "fe74e13e-3341-4799-b938-7080f084ac21",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "518d7449-ec90-4e1e-9393-28b2a2f19741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637c9a97-e989-4166-a3a5-6e5ea02bff1e",
        "cursor": {
          "ref": "a93c00d7-93cf-4102-b223-19fac3f2041a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bccd2edf-b043-410b-8e72-c6ff4939e248"
        },
        "item": {
          "id": "637c9a97-e989-4166-a3a5-6e5ea02bff1e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2e3e2517-1e5d-480e-b63c-ec6d1e2adfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97e7db6-3dd0-4f26-aae2-a053b5035975",
        "cursor": {
          "ref": "cc8eace4-77fd-4a08-b95d-d7a12b553b19",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "32baed3b-a8de-4b76-a1ec-03f26643729c"
        },
        "item": {
          "id": "a97e7db6-3dd0-4f26-aae2-a053b5035975",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ca8fe217-a356-44c2-8e5b-962c90841a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b657b162-d162-44ee-b84a-b5d316b041d5",
        "cursor": {
          "ref": "3cb69221-65ca-4d16-b572-738c324c4a7d",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e4894610-53c9-43a5-ae9a-c343ebc08d9c"
        },
        "item": {
          "id": "b657b162-d162-44ee-b84a-b5d316b041d5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "52048561-a5cd-4287-93e5-5fe1145f28a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80772b26-9890-4fce-a4a7-a944921ac30c",
        "cursor": {
          "ref": "6a6f3abb-f4d9-49bd-8801-b86e50a06753",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "07aa2a89-1732-441f-a8c2-c01a5b793bb4"
        },
        "item": {
          "id": "80772b26-9890-4fce-a4a7-a944921ac30c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c34cd725-4201-41b3-af1c-5f9aa2277080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d313e13-add1-4b37-998c-0d7bb4c2d072",
        "cursor": {
          "ref": "546a7a87-f52e-4cef-92eb-424e1b616d9b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c700a36a-14a4-40a7-8fd9-fd429aafa3e2"
        },
        "item": {
          "id": "3d313e13-add1-4b37-998c-0d7bb4c2d072",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "03710be4-4817-42e4-aa49-dddadb33322d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d427455-40d6-41ae-8819-6db5dee2aafc",
        "cursor": {
          "ref": "0f244d8d-bb7e-4b9c-88b3-b65da9d5770d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0063ad8f-6c09-4c09-bc76-704a7eefe470"
        },
        "item": {
          "id": "8d427455-40d6-41ae-8819-6db5dee2aafc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "da236e5a-9ad0-4d10-9799-c5479ea141bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d453df-740d-4894-ad2f-100a36380f30",
        "cursor": {
          "ref": "78cd3048-65ab-456f-add3-8f52db3df216",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "67b59b14-b86e-47ea-abc8-026381e8e07f"
        },
        "item": {
          "id": "21d453df-740d-4894-ad2f-100a36380f30",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "75a49bcf-26ae-4c94-9374-3f9556db8bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101ab7eb-d41f-41f7-b47a-07dc87e5c3f6",
        "cursor": {
          "ref": "fdce4878-2c69-4ac1-9333-40372e5fafaa",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b5e9bf8b-e240-491f-a58b-d6026a57ec64"
        },
        "item": {
          "id": "101ab7eb-d41f-41f7-b47a-07dc87e5c3f6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e7762f51-717f-4d09-be8a-2b05e89e2580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844340a2-a887-4248-95a1-57078c6fbe10",
        "cursor": {
          "ref": "df02d403-d213-4991-938d-a4883fdc686a",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "45745d88-21c5-4849-b7bd-1ea1a2685c24"
        },
        "item": {
          "id": "844340a2-a887-4248-95a1-57078c6fbe10",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a3703a74-519d-4d3a-ab5a-2df964c984dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e867bc3c-bbb8-420d-a0bc-e2fa291e251e",
        "cursor": {
          "ref": "237b4410-7289-4f27-aa71-4989977e1f7d",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "77e7c4fc-a36e-4add-8d99-ea090482175a"
        },
        "item": {
          "id": "e867bc3c-bbb8-420d-a0bc-e2fa291e251e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5232a0e2-f320-45cb-95e1-b1d12e438d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787689fa-cd1d-436d-8cbd-8bba4c18b1ca",
        "cursor": {
          "ref": "68e279ce-b31e-40ee-9ecc-c2b790028cfd",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c2d71685-e142-49d7-aa84-3559e413165c"
        },
        "item": {
          "id": "787689fa-cd1d-436d-8cbd-8bba4c18b1ca",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "55fc2238-0a12-412e-ae22-77232f92d63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd01bc6-020c-4a05-8ee2-7eacea421d4a",
        "cursor": {
          "ref": "1a90b11c-a705-4efb-9cbf-905958fe176f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "15bbc1a3-f67b-4047-80dd-608536e2487f"
        },
        "item": {
          "id": "5dd01bc6-020c-4a05-8ee2-7eacea421d4a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "68eae7e7-755b-4d6e-b41a-89fd3b11f79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831376c7-d3b3-45d6-a316-c0074bf9eda7",
        "cursor": {
          "ref": "1abc34dc-d479-4c41-b5e2-49607b7bcad9",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b7a71118-f585-40bd-ae43-276bb651a0b0"
        },
        "item": {
          "id": "831376c7-d3b3-45d6-a316-c0074bf9eda7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6e371b3d-369f-4682-aeb8-9c08c991791f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1375977c-ffad-4f2a-8680-6a865abf34c9",
        "cursor": {
          "ref": "0adc00ae-752f-4261-8b9a-ff2334d978cc",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9097f7de-6c52-4e85-9470-753fbb2b9743"
        },
        "item": {
          "id": "1375977c-ffad-4f2a-8680-6a865abf34c9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6071a3ff-481a-4ec8-804f-a44008933f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccccc2f7-aa22-434d-abe3-cf97ca6217dc",
        "cursor": {
          "ref": "a432092c-1f9a-491c-ac03-d30e86b1b7b7",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2879193e-f7e1-4c71-8849-502ba4f11a4f"
        },
        "item": {
          "id": "ccccc2f7-aa22-434d-abe3-cf97ca6217dc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2dc13af7-fba8-4c52-94d7-423616d606c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a32ff28-2c4c-4a21-b773-674e1f13b6e1",
        "cursor": {
          "ref": "2119c1a9-fdfd-40d4-9e7a-edb9b64fe45e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f7854d99-c218-4e66-807a-879194484032"
        },
        "item": {
          "id": "6a32ff28-2c4c-4a21-b773-674e1f13b6e1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1135668b-4db4-40e0-a0e1-70961258c50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027b076b-2b56-4203-af14-41154e0fc738",
        "cursor": {
          "ref": "278cfe3b-4255-421a-843e-8693b11a102b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cd44ee0e-9b34-4645-bdfa-c3312f219233"
        },
        "item": {
          "id": "027b076b-2b56-4203-af14-41154e0fc738",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6e0fa92c-dc07-4499-8da6-615b12d304e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74bd4ec-c347-4abf-9bdd-331ca3baea1c",
        "cursor": {
          "ref": "c5fcd780-b38b-42e7-ad58-d822758cd364",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9d95bb19-44e3-4e5d-91e0-7663ef7e77c7"
        },
        "item": {
          "id": "b74bd4ec-c347-4abf-9bdd-331ca3baea1c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3cef2b41-7c95-44ad-b434-6aaec33f3f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305255f9-d9b7-47ae-bb4e-cc089df07039",
        "cursor": {
          "ref": "f9425f71-66bf-4b84-9893-7ebfee305d01",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f571b7a8-b2a9-4ad9-9f79-17de523a6225"
        },
        "item": {
          "id": "305255f9-d9b7-47ae-bb4e-cc089df07039",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7c6056ea-63ea-43c7-b804-194b7a256339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a2a3b2-a52d-4141-a524-5d9d9cfb3de4",
        "cursor": {
          "ref": "772e514f-da74-468e-b918-b180bd6f0523",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0f68ca4f-eb0d-4e6c-929d-9b0e381b695f"
        },
        "item": {
          "id": "a8a2a3b2-a52d-4141-a524-5d9d9cfb3de4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7e85243b-f577-442e-9bf5-20f1b5ac03e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50395936-241a-4747-b398-2822c293bb54",
        "cursor": {
          "ref": "0cba23cb-9914-4ccf-8a60-0e37770c9d59",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bfd0fe40-75e7-4f2b-9a2c-7576b83281bb"
        },
        "item": {
          "id": "50395936-241a-4747-b398-2822c293bb54",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "25dba968-44b5-4a34-9d60-2d0c99918a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5945c4da-50cc-4f74-92c3-099fda8025aa",
        "cursor": {
          "ref": "f1c88964-4599-4403-8019-6f41e3c2fb61",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "95c430d6-e679-4ec2-ac6a-0e097b0dcadc"
        },
        "item": {
          "id": "5945c4da-50cc-4f74-92c3-099fda8025aa",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1be94d3c-ceba-4b02-875c-8d50d066c5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c87845-a82b-44b3-aab9-9329f87a13ad",
        "cursor": {
          "ref": "60d4edc9-ae3d-4034-97f0-c1a2ace37978",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dda49416-27b7-4703-b2f4-545919fc10ef"
        },
        "item": {
          "id": "01c87845-a82b-44b3-aab9-9329f87a13ad",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d291d407-8490-45ab-98b9-029343c09029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d9d3fb-59e5-496b-9b87-6370063b27b3",
        "cursor": {
          "ref": "2d52d9dd-2d08-48d7-8e5f-22c8118c39cd",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3986e577-70e6-4ca3-bd4d-50916c93b9c2"
        },
        "item": {
          "id": "e0d9d3fb-59e5-496b-9b87-6370063b27b3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "258429ea-7246-4c95-b485-e6c733b8ad04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c9e501-8d5d-4fd4-8a7b-fa6021574706",
        "cursor": {
          "ref": "1030319b-59aa-4220-9bfe-c02ff04480e4",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5140f1d0-9483-4078-975b-882becbd070f"
        },
        "item": {
          "id": "75c9e501-8d5d-4fd4-8a7b-fa6021574706",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8d56e6ac-3e86-46a8-89d7-c6946bee1aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf79da1-4295-4da4-9adf-b959a0264d09",
        "cursor": {
          "ref": "52c0e416-2c25-4fc1-9191-82417136e46b",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ffbb97ad-afb1-4aa9-8b47-6d800be5c20b"
        },
        "item": {
          "id": "9cf79da1-4295-4da4-9adf-b959a0264d09",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "677d0e1a-576b-4d06-b187-f5d78a4f921c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b7801b-1618-429e-bfe8-9ea634b2d101",
        "cursor": {
          "ref": "5fa71276-3960-46ae-a8cb-41c515300e43",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6d8319a6-7ad5-40f3-871d-f6bcce5c4b35"
        },
        "item": {
          "id": "89b7801b-1618-429e-bfe8-9ea634b2d101",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "11de5877-8e8c-4a91-a81b-650baefd268e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f00af91-2dd2-4b9b-a64f-620c1492196a",
        "cursor": {
          "ref": "dec58179-ef8d-4799-862d-dd8f554dab95",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "40324427-f7e5-4621-9e79-827fab368433"
        },
        "item": {
          "id": "1f00af91-2dd2-4b9b-a64f-620c1492196a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0c2e20e1-7817-4f6b-98cc-6bf101d30b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfabe516-e697-4106-8e5d-739290b2cd70",
        "cursor": {
          "ref": "60277972-9f0b-4255-a318-112868c0a92c",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "dbf72374-7110-4ec6-b318-0fd4c1051657"
        },
        "item": {
          "id": "bfabe516-e697-4106-8e5d-739290b2cd70",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "13b40d6a-f800-4ca0-bac3-646b302f6a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279e26f9-8d0d-4380-895e-1307a21444c5",
        "cursor": {
          "ref": "ee9143d9-94ec-45a5-8057-e16ef9135d75",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7bc30cd1-fa46-4e00-9147-69655258fc29"
        },
        "item": {
          "id": "279e26f9-8d0d-4380-895e-1307a21444c5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2c8c1a81-76f4-45af-a6d6-f4f91f8efc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ffab9a-af55-441f-aa22-9453064c18c7",
        "cursor": {
          "ref": "37a3a71b-62a6-4b5a-89b3-23fd4a4a6860",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c63fa1a8-e904-4f8f-b403-9d4843861458"
        },
        "item": {
          "id": "32ffab9a-af55-441f-aa22-9453064c18c7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "376d892a-3dcc-4e26-a47a-01eea2537f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb86c6d0-1ccf-4066-a71e-08304b56ee4c",
        "cursor": {
          "ref": "e0c614f9-6822-4fd9-9848-7ab5e7fb2126",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a05a9e66-2099-4770-9bf7-285e5ab5ef31"
        },
        "item": {
          "id": "bb86c6d0-1ccf-4066-a71e-08304b56ee4c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "82712cb8-53ad-41ae-b052-52ae55f29a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e96f30-d0af-4f20-8090-b735f6263cd4",
        "cursor": {
          "ref": "c8bccce8-e537-44ff-a803-0f60cd2a4337",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "23743aa8-cfee-41c6-8c57-80a641727510"
        },
        "item": {
          "id": "d8e96f30-d0af-4f20-8090-b735f6263cd4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5ed47bb6-e0cc-40b5-84d0-7c959200039b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff227479-e0dd-4ec3-a324-2d21ecb2d253",
        "cursor": {
          "ref": "fbc22793-0ef0-4893-8450-c654c0afba23",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "28509aba-3784-4a12-bf09-875fcfad756b"
        },
        "item": {
          "id": "ff227479-e0dd-4ec3-a324-2d21ecb2d253",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0761f8c3-2c77-462d-91c8-02d605fe9081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdadaf7b-17d5-4319-96b3-e355f2c209c5",
        "cursor": {
          "ref": "a3b40034-30a0-4fd9-8c3b-7cd4fc2808bf",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "824a9c19-f958-4e05-93b2-3355d57fdb5b"
        },
        "item": {
          "id": "bdadaf7b-17d5-4319-96b3-e355f2c209c5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a0ed4f4c-a885-4de4-89cf-9ad7bb09c104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311f78c2-4ff7-423c-828d-467f0477c486",
        "cursor": {
          "ref": "85bf29b0-7a19-4cf4-a1b5-88189168111e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f7d3beeb-2161-4fa4-9d40-108b69100700"
        },
        "item": {
          "id": "311f78c2-4ff7-423c-828d-467f0477c486",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b7017a96-efa8-4aa8-baca-f793cceb2add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad391f2f-e6eb-4ba5-9244-2839a3b01c0a",
        "cursor": {
          "ref": "1b9902d9-62b6-4931-b4e7-d1a45371056e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "57905658-3c8c-44b4-a196-e1ce869dcf0f"
        },
        "item": {
          "id": "ad391f2f-e6eb-4ba5-9244-2839a3b01c0a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2d9c2359-0ee3-4c09-a84d-676ba226468b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4c4cfc-c6f1-4783-a6e3-e0d1add10b54",
        "cursor": {
          "ref": "a0a65e5a-443f-4bdc-ae78-0ef6feded7f6",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1e2f3135-38db-4798-ad23-02e20443e9f8"
        },
        "item": {
          "id": "ff4c4cfc-c6f1-4783-a6e3-e0d1add10b54",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d134177c-0f8c-4289-91eb-3f50a436d8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789d031e-c1b5-4698-a448-f998f08f3450",
        "cursor": {
          "ref": "7c77819a-1676-4613-b80c-9629160c7add",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "11f2cd67-2827-48f6-8467-9f951c0726a0"
        },
        "item": {
          "id": "789d031e-c1b5-4698-a448-f998f08f3450",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5b9e4b09-1952-47a7-bc06-0355da34a141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe262f20-16f6-48f3-9e59-e939f9c3c051",
        "cursor": {
          "ref": "0975c732-5bcb-4352-b2b9-50fe5573e2da",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ab6ac636-15a3-4e9a-b956-76214d1371c0"
        },
        "item": {
          "id": "fe262f20-16f6-48f3-9e59-e939f9c3c051",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "190fcccf-3bc6-41bf-b56c-b6dc4ef71fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63f0fc8-a821-4be8-a423-5dc9582575d8",
        "cursor": {
          "ref": "52224953-fa85-45dc-8a9e-7748eaaee657",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c50e05e5-b369-4a58-86f4-6874de801465"
        },
        "item": {
          "id": "d63f0fc8-a821-4be8-a423-5dc9582575d8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e75791fd-2f87-4624-9925-7f025576020a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea99bb53-b026-4e9e-a025-21822a5b45ff",
        "cursor": {
          "ref": "945e0e3b-f044-40d6-a80b-91619c429773",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "618b1590-68b5-45de-894e-1612a8fbcb53"
        },
        "item": {
          "id": "ea99bb53-b026-4e9e-a025-21822a5b45ff",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dfcacb98-62d0-4170-97a1-5060b606f314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e78ff9e-764b-4f94-83fd-90991327d582",
        "cursor": {
          "ref": "9fbe254d-1cf1-4cc5-9448-49b103df0846",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b9fd382d-195c-43a7-84ef-39121c646029"
        },
        "item": {
          "id": "1e78ff9e-764b-4f94-83fd-90991327d582",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1a1d4cdb-43d0-4629-8240-4e532965a11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f52165c-6690-4468-942e-c7c06ed20e97",
        "cursor": {
          "ref": "34ae3d29-8395-4929-835f-c5396ebe585d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d379acca-0304-4d16-90a5-e51b2540b78f"
        },
        "item": {
          "id": "1f52165c-6690-4468-942e-c7c06ed20e97",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7bdeb481-500a-4e04-a4ec-192d0b3d2ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875bd316-83eb-4aa6-928d-40c7a7de6678",
        "cursor": {
          "ref": "19a0d43b-06f0-47c9-9620-55df05e36b53",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "00e71799-0222-4acd-b7b9-999174df7306"
        },
        "item": {
          "id": "875bd316-83eb-4aa6-928d-40c7a7de6678",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3556eb5e-09b8-4ca7-b2fc-17fbe5cd1446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fe3868-9ca6-473d-9d94-519cf9fc4519",
        "cursor": {
          "ref": "6769d75f-7cdc-4a2d-b8fe-5c9250d84491",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1b96974e-651d-4753-bf24-e9ed4a0c5470"
        },
        "item": {
          "id": "56fe3868-9ca6-473d-9d94-519cf9fc4519",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "124fe25d-fcb0-4ccf-8f09-61817f55a955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5a4ec8-4465-4955-81e6-182633e4e68a",
        "cursor": {
          "ref": "3b60c045-afa4-44c1-a740-3a4a8f9bb116",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e02f71a3-7d2c-4f7c-9a9e-921a160f04a3"
        },
        "item": {
          "id": "1a5a4ec8-4465-4955-81e6-182633e4e68a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0ea7449e-a931-4dca-936e-ae9389af48e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f727d1-86ac-4f79-b2f0-d43b8257f4c7",
        "cursor": {
          "ref": "221858ab-ea39-4a7f-9e04-e312266e3b6f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "01f8f60f-c6db-4074-a55d-a8b1cc191529"
        },
        "item": {
          "id": "54f727d1-86ac-4f79-b2f0-d43b8257f4c7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "53342932-8a9f-4f86-b7d8-d11cee9379c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c0009c-496a-4f5d-82ee-44bce7a840f9",
        "cursor": {
          "ref": "ecf180df-f059-465f-a7e9-c765b9d9c256",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d5c8380a-ff14-4c13-8af5-9c75a9c9b45a"
        },
        "item": {
          "id": "97c0009c-496a-4f5d-82ee-44bce7a840f9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c6781395-b6c2-4a1e-8858-33d5297a8ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab91c70-904f-4833-adc3-a6a7d0bc05d9",
        "cursor": {
          "ref": "20b53600-3226-4b38-be5d-ebd828d656c3",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1cf1c861-7378-41eb-9bfc-2996c53983e9"
        },
        "item": {
          "id": "6ab91c70-904f-4833-adc3-a6a7d0bc05d9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0e1cfb14-ea32-483e-83a2-48ab6fca0fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f54e39-b01c-47ac-bb93-c2ea2467f993",
        "cursor": {
          "ref": "84a20764-cec6-4760-87d9-fb4c064d5d2c",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6f17ff63-ac17-4aaa-b571-75f5b534de51"
        },
        "item": {
          "id": "44f54e39-b01c-47ac-bb93-c2ea2467f993",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0f723d59-61a0-409a-a2ae-0f7dc8a0a175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b212d00-8594-4e10-a1cd-0c2842154d92",
        "cursor": {
          "ref": "4f36035f-d4ec-4a0f-9c70-825b474f254b",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2f5a5b45-5c69-4b3b-9fe5-a35ba9b227d3"
        },
        "item": {
          "id": "1b212d00-8594-4e10-a1cd-0c2842154d92",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fb2d5bb9-74c7-4c8b-a0db-51da1e48e657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2693bb0-b336-4dae-99c3-0d86ddd00d10",
        "cursor": {
          "ref": "8ee07ae7-48e7-43f5-aab5-db4d8cf96ed9",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "69f6de31-db29-40aa-a189-92d48e9294bc"
        },
        "item": {
          "id": "d2693bb0-b336-4dae-99c3-0d86ddd00d10",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ce7d5270-26f5-471f-bc7a-62d84161d2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd8fe79-6eef-4399-8dbe-6db0b0c37ab5",
        "cursor": {
          "ref": "d3a25012-cf2e-4f4a-bd26-4157800eb9c9",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a8964499-9ce6-43e1-b81d-bfb768f6789e"
        },
        "item": {
          "id": "0bd8fe79-6eef-4399-8dbe-6db0b0c37ab5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3dc336a1-61af-44db-ba0f-915ff73c94c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bbc4af-f2ff-4f1b-8fa3-6890a99e17db",
        "cursor": {
          "ref": "64d91b98-5ab8-48ee-ba5c-53394169cb80",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9049ce42-7e92-4395-b287-d5eb8d533a60"
        },
        "item": {
          "id": "53bbc4af-f2ff-4f1b-8fa3-6890a99e17db",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "420cf473-9679-4a93-9ba1-fce0769501c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1a1200-772d-469c-8472-450a137905c6",
        "cursor": {
          "ref": "416160f5-5d54-49e2-a611-ab9c5d80f31e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6042af25-f80a-4130-ad54-c6fdb2285dfe"
        },
        "item": {
          "id": "da1a1200-772d-469c-8472-450a137905c6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ffdfb68e-8589-433d-bfd9-323b6d5397d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12a870a-8580-48a6-ad4a-df717e960815",
        "cursor": {
          "ref": "01fb2710-5aa7-464c-b259-f3d4c9b33d7f",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "89cc5698-a1f0-4891-a2b4-e21e91d95292"
        },
        "item": {
          "id": "f12a870a-8580-48a6-ad4a-df717e960815",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "05ca3249-e0a1-480e-a8b1-8cd89cb9f24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da48a8f7-7474-4786-b0f9-b8c678ca077f",
        "cursor": {
          "ref": "044ee7ee-f2ea-4d32-b445-9547f0acde49",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2b77dec5-7dd8-4e0e-86a1-a252b820f050"
        },
        "item": {
          "id": "da48a8f7-7474-4786-b0f9-b8c678ca077f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9b343904-9c94-4a81-a64d-e28240da965a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e18680-b4f3-4673-adfa-538434c35fab",
        "cursor": {
          "ref": "e656abd5-6473-42be-a6a6-b2553e8fa247",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5d81a920-a0c3-44fd-aed8-5e1c937436a3"
        },
        "item": {
          "id": "21e18680-b4f3-4673-adfa-538434c35fab",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4594bc41-bad8-4b6f-886b-e79f700f3330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd73748-5609-4b69-b8df-caaa294e90a7",
        "cursor": {
          "ref": "b40aa9ca-3b88-4a86-9abf-26ecf43146ce",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "86b2b1e2-869d-48af-8732-7224b71f9eea"
        },
        "item": {
          "id": "5cd73748-5609-4b69-b8df-caaa294e90a7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7c32bc45-06c8-4832-b1b7-556bc6eeca87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdb843f-ed54-4a5f-ad0c-d437d253b23f",
        "cursor": {
          "ref": "1778e40e-e4f0-48ca-8095-4f076a0b4de7",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0ffe77eb-5e9b-4e41-b679-ff8ff894e474"
        },
        "item": {
          "id": "2fdb843f-ed54-4a5f-ad0c-d437d253b23f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3aa52eb5-b894-48d9-af06-4f3f25a7f9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08080acb-9380-4a9a-a5c5-983e56ad1888",
        "cursor": {
          "ref": "aa2bebe6-872c-4bce-a1cf-cc87faec80ad",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "08b044b6-9341-4dcc-aa13-e8db43d7f955"
        },
        "item": {
          "id": "08080acb-9380-4a9a-a5c5-983e56ad1888",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c3c5ffa3-9b50-4f55-93e0-d54063315065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ddcd66-80e8-4798-a83b-4056fb91b46a",
        "cursor": {
          "ref": "7422263c-1cc0-4a50-9b6f-be4e650011ff",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a311958c-c7c7-4ae3-b7ce-62b70b135d6b"
        },
        "item": {
          "id": "23ddcd66-80e8-4798-a83b-4056fb91b46a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "adcdbb0f-0ffd-488e-9025-dacce56e531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035f3547-ecda-4a00-9550-f3782b8c6751",
        "cursor": {
          "ref": "17fc799c-3d8b-4dba-8a2f-3edd4eaf26c8",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f590808c-abbe-418d-82ec-be85110ecee2"
        },
        "item": {
          "id": "035f3547-ecda-4a00-9550-f3782b8c6751",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6ebd8a36-c6ac-4586-b5fd-657b5b0a7ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6cf67f-76fc-4fb4-9e58-9cc47cf7a0f4",
        "cursor": {
          "ref": "3fe1051f-0d0b-4cd2-8696-4f1e95051a78",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "32168aeb-140b-4851-8280-26d5baee8bd9"
        },
        "item": {
          "id": "4b6cf67f-76fc-4fb4-9e58-9cc47cf7a0f4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e1e405ef-a424-4c99-80ba-fb316c77a82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05928c10-35da-4ad8-a8d0-4bfdeac8371d",
        "cursor": {
          "ref": "d70e693c-445e-4ca3-a9aa-1f99c46ade2d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bbca87ac-579b-4f08-9957-e2eaa95ec324"
        },
        "item": {
          "id": "05928c10-35da-4ad8-a8d0-4bfdeac8371d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2eb449a3-dfb0-4e16-b69b-8149acc08c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d0a97c-70e2-4a01-8ca4-ede37167400b",
        "cursor": {
          "ref": "60c25090-cabb-43ba-ba0e-50ff6a9f0d62",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7b877ecf-9307-4f98-a3e0-ebdcf42d732a"
        },
        "item": {
          "id": "20d0a97c-70e2-4a01-8ca4-ede37167400b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b1e8fb36-8aa4-4c38-b9d8-7045bf17c6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82301065-96de-4bf5-a43d-c149cbdf3d7d",
        "cursor": {
          "ref": "900053d7-977d-4f97-9c12-775727990279",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7ab7f294-b2c1-4c8b-ae03-a4a94635f79e"
        },
        "item": {
          "id": "82301065-96de-4bf5-a43d-c149cbdf3d7d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1968e810-e7a2-4409-8829-c6e20e803f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec94dea7-7e27-494e-b8a1-5633df06a892",
        "cursor": {
          "ref": "2bca113a-16a0-4ac3-ac8c-73be775a24b3",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9b9aa0a7-41ff-408d-8bfb-9d5d5d86a473"
        },
        "item": {
          "id": "ec94dea7-7e27-494e-b8a1-5633df06a892",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ebb89a60-0069-4f2d-9f1b-06f93a3b2c17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b2331e-13a7-4ddb-a999-d48c7153447f",
        "cursor": {
          "ref": "e47cb0b4-f6ea-48f7-bb1f-8844b443781f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "bbf454c7-91ee-43b7-9227-a793d2baf164"
        },
        "item": {
          "id": "39b2331e-13a7-4ddb-a999-d48c7153447f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6feacd41-f378-4015-85d8-63ee6788861d",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea0cc52-4846-42b0-93c3-a01c415841a7",
        "cursor": {
          "ref": "ec9546ae-fa9e-48e8-ac9c-9e01a2a9c26e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4a32f18f-25ba-4ed8-b5b2-ad58e015c4f0"
        },
        "item": {
          "id": "0ea0cc52-4846-42b0-93c3-a01c415841a7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2d0aaeb4-4142-4f7b-886e-12313cc70bd3",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6a670b-ad5a-47fe-ab37-57a923db3c20",
        "cursor": {
          "ref": "f83c76b7-1af3-49e6-b455-ab602c4b3b4b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "15fd48e3-94c1-487c-9b46-c3d1b6d68f35"
        },
        "item": {
          "id": "7b6a670b-ad5a-47fe-ab37-57a923db3c20",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b21ab331-8687-478d-b6a9-e7c06e00c0b1",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f4fa4d-0ade-41e7-8695-e3753d56185d",
        "cursor": {
          "ref": "1ef0ece2-1fb5-4494-8065-d8eabaae433d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e1108e46-8c7f-4eef-a2c5-4b37779d8813"
        },
        "item": {
          "id": "30f4fa4d-0ade-41e7-8695-e3753d56185d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "07543250-d1ca-4b99-8fdc-17f46fab1332",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f4fa4d-0ade-41e7-8695-e3753d56185d",
        "cursor": {
          "ref": "1ef0ece2-1fb5-4494-8065-d8eabaae433d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e1108e46-8c7f-4eef-a2c5-4b37779d8813"
        },
        "item": {
          "id": "30f4fa4d-0ade-41e7-8695-e3753d56185d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "07543250-d1ca-4b99-8fdc-17f46fab1332",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a3ea80-1b3c-4838-80e7-e8bddc173577",
        "cursor": {
          "ref": "b580661f-df30-4d30-a037-762d50584db0",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ae2156c6-d1ab-451e-9426-6b2ba93bb834"
        },
        "item": {
          "id": "84a3ea80-1b3c-4838-80e7-e8bddc173577",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a6b1f5b4-5784-49ca-9ac6-b44fff3b5e19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88290e04-dad1-4f86-8b60-0a6e2653e72e",
        "cursor": {
          "ref": "cc0bfd6f-adbe-4e85-8bf7-7112f37b3f69",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3f3532d8-ff81-4851-8206-f66c71535e85"
        },
        "item": {
          "id": "88290e04-dad1-4f86-8b60-0a6e2653e72e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c6795095-2de3-447e-b4cf-8495935d2488",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}