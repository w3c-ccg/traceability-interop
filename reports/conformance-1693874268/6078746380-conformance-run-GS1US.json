{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8c49bc0c-4027-41bb-b35e-c8ac19916f6b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "128eeb05-7b0f-4724-903f-ed55c48f298e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bdfac642-e32e-4040-8138-c11d7a78b388",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7a0c3901-87ef-46e3-912b-6ea04f2da4f2"
                }
              }
            ]
          },
          {
            "id": "016fbc53-61fe-4070-8aa7-17a44500d5c3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b99707d3-0f2a-4608-9bff-5aa0840428dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8ecae6dd-92d9-41a0-a019-57c6e7eb160a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0e9d956e-8a5c-4d6a-9310-18fed83cbea5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "431a33fe-6ebd-4f8f-9949-a2c0e578af96",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a25c378-1654-4f49-ae59-e3510d3bc884",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b8878f2-b127-4282-99ad-42d41359bb54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23d86305-9b4c-497f-a806-4fe3f7259cf1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7df5da37-a201-4356-b2b3-a4057a7c2c10",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f83aa6b-543a-4d60-8d3c-2400f576c4d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "20c9faf2-0789-4989-8de2-be2c01af910e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "868d80f5-3e0e-4149-807b-f21c6520fb60"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cdc316e-8d1e-40cd-9e28-435c99c038ca",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0497346d-95cc-470f-8c60-1209b4a2c894"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0682d95a-d573-4b8b-b01c-aae81576b02b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e470960-dd78-400e-a6ee-02ea27e1e27d"
            }
          }
        ]
      },
      {
        "id": "3d99cdc2-dd7f-4022-b447-1aa0edce5c5e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6ef1ece9-fb88-4bfb-a9c5-2ae306a5bcb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b7a75fa-4801-4b3c-8d0e-f3ceffae73bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9f3aaeef-5fa5-457e-9835-2c84e12ee992",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea33a24-c1ba-4044-9c77-3383fd682c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7957c8c-640b-429b-8381-00c04b1e599e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f51420-a1d7-4bdf-aad2-55e4f5f24d81",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3426f9e6-5021-4b50-8de7-ec5620b1bc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0cc56f7-7cdc-499f-81cb-45250bf7f2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d856306d-a188-4677-b595-5483d9e00156",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e551418-7dba-4618-a25e-c0b3d760d790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8465375b-bf7a-476b-8629-04e7d2dc0661"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "34918cc1-a359-497f-8708-3f1c477888d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e769f67c-7b8a-4df9-b253-9889d67960dc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d302edfe-6fde-42f5-be4e-20c7cc2439ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b05e4ba-9e23-4478-b4dd-60a5cea45474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e91ab0a-294c-44b4-8cb1-80a912c78b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee696e14-b0a2-4ffa-8629-b2cefb4d06b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2cd247db-f9bf-4608-b06f-76d2e57f325e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28dc1f0a-d1b0-492f-b29e-8b9392da3cff",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea482c02-20fa-4f98-b5a9-76ed3364c6e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e3148884-96e7-43e3-9b4d-30649ae15c5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1a35587-7bd1-4313-acc4-b2e86e2b523a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8b6b086d-4066-4b8c-85c9-424cb4bc69aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "213aa624-0ebd-4a73-ae61-3ec93a60fb1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1a5c8fa-3552-4a12-9fdd-408c6660cbbd"
            }
          }
        ]
      },
      {
        "id": "657bb7ac-0393-4ed4-9c5d-15d3321cb944",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "98f8cb54-e205-4a94-8007-f0d793f54705",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c58af6d2-2f64-40a2-9430-e09936ea924a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b811bcb6-cab1-4cc1-83f8-e14dfce5f47d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e260b7d-9ab8-478d-b59f-c13e3f25cdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524518e5-d8b4-4c97-b3e2-be664f835947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fde9ea-15b9-4fdc-adcd-5623185627b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41e7a0c9-b362-4357-a7ab-a5ce3e130ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b108af4e-87ae-4abf-a4c9-c6a0f5752d00",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a717714f-8b6c-4725-bad9-518bc8bab46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8814a252-91de-4cbf-a03f-3a6c1deb7394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccc1685-96d1-40d2-8b7a-b4d5d1e34d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cb8cdc4-4fc3-4564-bc44-1fb895122978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bd05c2-7539-45dd-b955-ef570de3af87",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cf4424-6fb6-47f4-abd9-03d4e79b6a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ccbb52-fa00-4cc6-8fda-6bc8b3e8ee45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efb769e-765e-40ca-8ea9-e353a72de3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7313e1ba-8b69-4b97-b6b4-888930575d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af177e9c-22ad-407b-9cad-307e86c35d3f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b67c659-7d9d-4606-ab03-6adc5b30a0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4487af-02a2-4ce7-adad-eb8533df5223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7415cb30-76e3-4eef-9d32-e5acd4ac73fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9924d897-2935-47b7-86f8-ec752c54f346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3ca290-c657-4ea5-822e-662962dcf50a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8dba83-feb1-4836-8dba-e9b5544f7611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cf847d-4cd8-4149-822b-0f279487a23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239c8d0d-5632-418a-a64f-17e29f0774ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64cdb9b2-e741-4efd-ae19-636b74776121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cfa4e3-afce-4994-b1c5-4a4b2da6377d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d3e90e-b2f7-429d-a8a1-1037afe17d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b1e1cb-d270-423e-896a-198067df58c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f39e2a6-9d40-4cb5-ab8d-88356967ef6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5925564b-e5d2-4e6c-8820-1131d9a375c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf80410-d599-4b4f-b38f-88c78a7350b1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e26cbd-8cf1-4400-a9c0-e2ab428403a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a587ba12-30cc-49cc-a9fc-151ecd83abfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb76fa08-d8b5-4b79-8e54-9159723e351f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17d02fee-bffb-4a15-925f-e6eea40c08a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31122c9-a7bb-4d06-ac73-51d324aa5c1d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21857169-bf31-449e-96cb-d349b8b92441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc28d14-86dc-4eae-9dd7-2ec39d58896f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab87a8c4-56a3-48f2-8712-58364d777417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6db7edb5-ee67-41ac-8211-ffbfe48e2abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcbfc46-1c51-4b2d-af70-a5c8cf3fbfac",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c74762-f009-462d-a5f9-83246aec365d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86d4977-b8e0-4e00-abf5-c85594eb035c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5544a07c-d1ce-4452-ab6e-de50c6921abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed4a2c3c-3f63-4390-a531-5691c843656d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3aa3af-00f2-4151-b5a8-37a009f4bfe6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62fbefd-8813-4bbd-9baf-bdc4101b5383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a345c6ab-f02d-4c2e-af0d-1c7c1a00794c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601dc6a6-02b9-4af5-b992-5c92edabb3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a908ca8-e39d-4e59-97da-732b07bc5df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92756b1-6f04-471d-87da-1c2612d81b49",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f9317c-ecb3-443c-8adc-3d9d34c58ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bd1642-e897-49ea-8041-ca9f822bc15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0907cae8-86d1-40df-9b0c-5b65a4338c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6dcf7c5-b6a7-40e2-b606-3925118f2f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3a1ab4-a476-4602-9124-e4b5142ed047",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8241f9a0-6766-45d9-a4a7-14f7b75b5974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59aa8094-40ec-4402-b539-0bdccee3b368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123323a7-cf4a-4b92-92d8-31c72e4695fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6c23204-ccca-4c4a-9212-e9bac32aadd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0198e6c3-3601-4281-a819-61e5ac522c26",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c195f7b8-f610-4e8b-a836-be95c1690fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e842f80-c447-4394-a7a1-70a7fd96e6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b92505-b6c0-491e-96ce-573de3bfeb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcb58458-1111-484b-85c6-f420add65734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47e2dcc-991b-421e-8629-f4029dc83699",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3fc3e7-9e33-4667-a4d2-1ad7996aeb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a465af-f902-4735-9d4e-a36f5d077947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ed40b5-9ac8-4818-beb7-d692d2c00e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36b4dc9d-8d5e-48db-9e80-093f5ad0f575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2491afbe-86c9-4ee5-b0c7-bf9b864518f7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b82da1d-8f6d-4e96-a5bf-1385b22dcda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a83a79b-a84f-4ad3-ba02-4798e85a5deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab9720c-8e20-424e-88dd-d078fcad930d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3c6d8d0-9974-44a7-9a00-1c256814d14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369fab57-173a-4b68-a33b-caf8c854f180",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef638693-9758-4e13-be55-404bac83de3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482846d0-2619-4821-8f3d-11f6ccd2f6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe497d6-eeab-4619-8b8e-dfce5d21b901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14d4bb33-3408-4516-b7f8-7fa1b6ef9c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f735d7-a83e-4140-b5ef-c40e51c73749",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9548ac93-2bc9-4a97-ab5b-0caddd957acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921221fa-1df9-4738-b497-3560d80f724a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27aa7238-3954-46d3-8099-40f4d6238ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30e323e9-c5dc-4ecb-9213-3eab3e0bcc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbbba63-5fec-45e2-951c-025482e4070f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b58ceb-b599-4235-91b9-19acd5965b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa7813d-90ba-4ee2-9d66-720170e4c14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d1116c-8384-4fea-8bc5-2db57da7c479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "393d2797-5d40-4a3f-81c6-9a89171e86c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aed155a-db62-48df-9dd5-207e5cf18d41",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c56eba6-e745-471a-ba5e-8c0611677bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c4b3bc-42fa-402b-8de9-7df5b813dc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ea596c-1923-4362-ad32-a3578bd65775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4576801-45e4-4038-87c7-2907f0333cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e9cb39-70b9-4d98-af6a-7de8984c6484",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac7d5bb-7ae4-4222-afba-18ab71589fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d2b4dd-781e-4f43-b574-8fe29d0c32a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3e0784-3bd6-41ec-b248-241f2e51cab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68a793ec-14c3-4598-b153-0d22ba15466c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17b2646-8122-4d13-8044-a473cbf6d49a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6dcf9a-ed68-43b6-9589-0413c8a6ba9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe260daf-9dec-4aa6-84b4-a0cc10aaaca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30349fe2-1844-4f67-9977-0ddddae4071c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1542f63-601b-496c-b693-dc8a4ca97346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc404300-5c91-4ca9-8c61-7e26162710d1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8195f64-1d5f-4a56-bd08-6604626fca8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18015eac-f86a-418c-8ab7-e117ccca67f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56519f84-6fb1-4d97-b634-0af71c06083e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e87bdf-93cc-448b-9cbf-5b250b356c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e1109e-56f0-42d5-9419-9b8b8f1aaaa7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e982807-ccff-4706-b8d8-1ccbee3e7a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869453bd-d92c-4a05-b4c6-55ec0828af20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e3c3c6-6f6a-453d-a403-0f48a7bd06fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fb749a-186b-453f-ae5e-4b375faebf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea400f6-3083-441c-a1cc-35785415ef9d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0dd02a-af63-4351-a976-d72eb592de4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a353366e-b26e-4ebe-931e-aae8270f726f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0fee9c-52bf-4a39-9afe-eface6d29e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9918e352-af2a-4de0-a8ab-b5172c41cb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dec23a-303c-4495-b9dd-7134e6a4a24f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38867b0e-6337-4261-8f1c-49b9cd8b2b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe9d584-d0f6-4e09-80b3-3fac50215509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f792c541-c656-4efa-a0dc-e10c7653e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c0d396-f9f3-4c09-b555-c2a1921c81bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc2c5f6-b839-4fd3-b81b-ff049b53bfab",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ff23e4-e8ae-4bc0-8663-28acf9980b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c93570-845f-4a77-83fc-ec64474b41d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c249d1-fc67-4bf9-8e51-65a856eed4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "983ed398-2f70-4356-9fc7-4a45290fbb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441ceb26-62db-4de9-9f4e-294ebd114216",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae283db-684a-43e5-8d22-3035862b183c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7115a81e-87db-4f19-b1a8-59afb1605da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39064cbb-dd17-433f-9555-5a2491fe2489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80b323b7-b314-426c-a2a9-332479782b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd5b596-090e-4957-811a-a5d59ef5ad34",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc829374-7a9b-4b74-87a6-551cc46ab20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1940dd46-2eaf-4fa7-b89a-704db27acfcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe48246f-acdf-4f4e-89c3-10c9529799ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2b2993-3faf-4824-a0a8-ac9247df4fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b034cd37-7fe7-48ff-8b3a-dc21a82276f0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d7bf65-3844-464b-bad6-abb859c3c16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c862d361-e121-49ea-a413-586ad207da9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebfcc79-ad11-4d1b-8163-f77cae97256e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6413193-b06e-45dc-b07b-cfe2ccf15d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfde58c-aceb-4834-abd1-3992c325aca0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce995e3-804a-42bc-b0d3-00275222b95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700db618-a7ef-4fee-b5cf-c47e6279cc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc93cd75-e7ba-4c45-9005-fcbb6f314e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "02a99a95-15eb-4d30-bd02-4ffeb7087d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d53775-bb63-4eec-b281-ee394f09bea9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f91ccf-5077-4875-916e-5c1d35849593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233f86f0-0203-4425-a414-c6037490ff86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fcccf9-91de-4878-803a-d09edc2d8cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2817a6-06e4-429a-a173-9238c68ec219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a97e3e-60b3-4ca7-b876-c156d8be19c0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195021d1-9563-4bf7-b92e-e9877b983a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bee04ca-d2e4-41ca-99f0-9d904f16a34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794a6c89-1c66-4588-bb53-ad26916f0f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f40f415f-519d-4545-aadf-a88b454e5084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5757fe20-8620-4f91-81b0-32507e364283",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba52732-539e-49da-a6a2-919934cfe514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97828be3-c40a-4362-a2d1-d473e51bccb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8476bf41-74e6-4323-bc30-a850187c184b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee75f53-5ee9-4cc8-8a82-4e38aa0aac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5913bc01-0167-4f97-8a2d-c1f35a6e89a2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43ecb7b-2203-4b14-9786-fff0f82aefaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2489ad-5f35-4c87-a41e-f4dbe4ed7e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc893f6-ed96-4248-be7f-5ad2d14aefad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "628ece53-ba86-4ebd-8103-539823ea4bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf533717-675b-4b5d-910e-300beb5e64e7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c457b2-f57b-47c4-bb57-4788e4aae384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17397d0c-d73d-41ab-aadd-1694bad20438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71269276-bbd2-484f-85cc-64c38fd6e005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6db5d774-3f05-438d-86c2-0f04b31cb9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9323295-5323-4473-90d2-958bb84cdb0c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb9cd24-de98-4443-9d44-db182978ac1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e884949f-227f-492b-8ad6-34fc89e69ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34d6ce1-816a-48c3-ac7f-0d250ebe4251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7889a22f-b8f5-4b69-880d-d0d99d363068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75049bce-be36-4782-83ca-f10f96f6eb92",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedbcc68-432e-4eb8-bd11-c2840ea6af4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4757fcf5-9b7b-4eaa-992d-36dc2301a1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2085d0-08d7-4c35-ab4f-ac114de7a59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0dfaa3-2c90-4211-b910-0de39d0b3cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c729b072-cec3-4ef9-b597-2cf453fe4c6f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17881792-36ad-4565-bde1-ed38d3afc33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b7a6c5-be49-4894-b537-0be2045e5e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273ff688-6905-4cf6-936c-9a293db13e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6497eeec-65cc-47a9-b63e-15dda24412f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54d901d-d4ca-410f-891a-376888764de2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735e3ad7-8c9d-4230-8d92-90bcba72d5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b666c725-e6d2-4201-992d-8f1f0cb793d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52939389-0c56-44be-9477-2168ba33acce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f38e3e7-fd4a-435a-a14b-5189458a25aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72aec87f-b23a-465d-affa-1d34e5ec4c80",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312fe98c-6bee-48f3-8016-af44197b7836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1e2526-b1b9-4d65-ba59-7270f8a83e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be1fe5c-72a2-43fd-90a5-cc690bad2abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e46fa13-c87e-4a38-9275-d6ee3598ecf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea0818e-00e3-4536-9299-a9942ca0bf98",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3384dd52-6713-4daa-b40a-ad27301cdadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31580662-b0fd-4e34-b222-921884c3e01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9f0a77-c5be-483e-a62e-4ea4c65352dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de958576-e6b4-4d0f-bb7c-4a124d54d6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f744a4-a5a9-4310-b033-3427a5eb4443",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf5178b-bd80-4bf8-9955-1ddc869d9b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a354a1f-a0f7-4fd3-b6ee-77b9763b1590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6ee441-84e9-4309-9084-1593d032361a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a99dcc-230f-44bc-bb7c-241ad44a67ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66c014c-06ce-439f-84ac-0dca967616ae",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37ddac6-7458-40eb-a623-732990b03b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2507db-77cc-443b-a7b9-6c889a3f0117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bc86ff-20ab-4007-a7ff-5e82d6a17f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac2e300-7d4a-4b96-99d4-8f71aad5c514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f21858-ad27-4655-b35e-056ae1cd35bc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf345a3e-e29c-4b78-acfe-7208cbdfcd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109aa74f-0d76-4a1e-9dad-752a646cf023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5603ac-e32e-45ec-b629-9c213ae026e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "66e2fe6a-e327-4bce-b648-cbdb7814ad5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d93e6f-7372-48bc-87e9-2731e68621d8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f9b30b-9d17-474b-947e-a7a4c27064d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c17a1e3-9beb-45c7-8e4d-586ebd5d14fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c1f55c-d736-4b7e-acf3-eeb4d87ce222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf1736c-1f2a-478c-b959-4ed56c05232b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efc650e-162b-498d-a819-2523f14579b5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7493f1d-8a2d-4634-9fa4-34bd17fe58ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113c0814-a70a-4b05-a6f5-fc3dd071fa00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042775d1-b9b3-4f50-850e-8a0b4d975850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3db4d23c-1801-4885-ae64-1c54f0dd2d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eafeefe-d631-4d20-9b1b-40de5942226c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde213a6-33a9-4e17-aa44-ab738861248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c8477a-0fed-46f1-a449-6903b5743933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea33885e-4531-47ca-bb90-fee4b9a9adaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9df792df-6829-489f-95ad-179c3062877e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121b8715-4e3c-4375-95cd-7328e9ca0da0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2887c6f-3116-4a6b-b673-71d43b2ca1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d540d68-b26b-4f25-a85b-592a930ac541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb86e85-b6d9-4750-9574-c825e5fdc15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6921c3-bbeb-496b-90e0-292124128c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0ab272-0a19-403e-985b-781afb13824b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db81ece-d696-4983-a057-631e720934e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6831ea4-92f4-4bcd-9488-37678feb5c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c807233-f1e8-41ad-90f1-4e93b55193c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d26abc3-441e-43ea-ba0d-c139c89333a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4142d5a9-cef4-45ca-ba1e-3575e8c92a94",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0be34d-5acb-4b38-927c-a6d0a154aaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c67204-96b6-4ad1-94c0-b1542c72558b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e59a6d6-ceaa-490f-9128-f2773999cbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc4fdc2-2216-44ed-b33d-2bfbee1a6299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1ab768-f1f6-4276-a9b3-32dab4a1be10",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe800bb1-8407-406f-9182-0f13de94fbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9aa5dbe-4634-429a-9896-dd19cb683b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5e4620-adc8-4b4c-8fbb-555218b7624f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "278843b5-0d36-44cb-83f9-ca2d054d5704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a770437c-c1e0-4513-b4bb-519f5c1b1d85",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c795827-5c31-4518-ab32-ab2fdbce2735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c55352f-0e56-4e7e-ab49-126056cf3a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4a7944-dec4-4610-92c2-7f8349ec442e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70d098ac-7e38-4161-b68e-2f811a598b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aed738f-9978-4659-b357-a0d75647efc8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9699f650-8925-4680-a894-318a40f16ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1af34b6-129e-4add-9c7b-4ac93aad11dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47209206-2e33-4f98-b05b-442bffc58c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "935aa1ff-8d91-46ba-b471-81fe1e5cba1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1098c19-e986-4f13-a032-152ad55f79fd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aae0061-6c1a-4053-a50f-db1aa55211e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c2d707-453e-4771-ae0b-ac9cbf030ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c5a21d-6330-4e43-b1d4-deb529b8b2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c3ef4a-5522-40b8-94a0-37692b66730c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1ccde8-6128-4dc8-b3ff-1013274367ea",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e3a366-b7c8-4406-a8bc-2a8d27a4d2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b162c4e-77fa-45d8-9fea-1c2be10bc7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99d09aa-9b46-4f14-9992-0105ddf8f888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdc4e09-ce8e-4393-8ff2-22d8c9af7bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0be0172-c1ff-4da2-8b6f-80d952433795",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5153e68-dfb5-4121-8ed9-c7a81231ab21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c284c998-86e3-4608-ba4d-3fd2dc5b4490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08875c55-664a-4671-a975-970b9b135151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cc80e3-fba6-4a62-9554-f0b8df949bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cef838-a48a-4498-a5c6-352a6f46a74d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac2cbe5-44ab-470c-8b80-a30449a69fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a732809d-b53d-45da-9b7e-80b573f52aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4d2f0d-3b34-46ef-82ed-5d3f6aa3832e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1de79f90-be24-4991-a15e-5116f8a41ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08716f0b-854a-4375-8273-1de589d1305f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cbab9f-34d7-47e9-9437-bb07f45dd8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529664d0-ad6d-4837-9bd2-3fd8e92d63ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f8e3ed-5de7-4757-b5e5-25602cf64b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b80da2-5412-4f43-a51a-6100ee3ff4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93bb781-a889-4802-b66b-b78d3ee14ed7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208b3cd1-2564-48d8-9d3e-a116028e0c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988d0d2f-a63a-4674-99c7-ada61e33130f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bb14df-84e9-4f6b-a13a-bd43a61fe9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01525047-d92b-4455-b8bf-c7c29dbcb6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77600e3a-29e8-4c5a-9dc0-be966bd62026",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6007d2d4-9604-4112-802e-23b5b1382716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8def7df5-6b3c-4908-bcaa-2ecc7e68307b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9bb9cb-2f6c-4833-81b4-2ccfc8c30d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "674a72ee-a7c8-4ade-acc4-1be2272bfe52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad03b219-0c41-4cc6-b0b8-fa15595635e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3e4fb4-38a0-4528-8c84-c1bfe85df806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb9279d-796d-4395-8b34-c25c4a38996c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29b1e1a-c288-4ffa-9def-232475064b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "20eb8c70-982f-4349-b213-51d619efd454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17cb0ab-5345-498f-902f-3dbc19f25a14",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f791bcf2-7b61-49c8-a5df-5e66b2bd658f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0637f0-3624-48e6-9bd6-f9b0da91ecc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040cdcd1-ca05-4113-a926-5d2135459260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9491fce-5657-42c3-be8f-cf34ca0b1a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9c55b5-17ff-403e-b644-e7a60c0fb4b8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01642891-a4ef-4de9-98f7-ed0d26d20a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8a51f5-9095-47ca-9c4c-6c6b77c7f99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de34246f-5686-4068-8bd7-9cc7250217e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c60a1ae3-c6c8-4d09-b27c-30d014e669ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3b35ea-bba2-4ca6-9a21-5867c17f3dfd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a95f05-24f6-4b58-9b8e-447a18b35293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f72c747-87b0-4570-81e9-94fbd7599785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153f536e-c2f8-4f1f-85bd-869329d7d4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b767afe2-6141-4993-90b2-7157127a0648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49d97ce-e8ac-4447-9c79-94ff315001b7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1d15a0-a4d3-4a6c-9d08-bd5746744adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd58e41-f127-4b3b-aa05-a87bcb5576dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baf663a-1d5b-4d37-a9a3-ea8a14036639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3df240e5-0b01-423a-a075-27342e555406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcda0b5-e4de-43eb-ba66-5d872192c578",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c948cd13-bc82-4eb1-a19c-22261efa8a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ef8899-0474-48e7-ada2-8e2d3f13ec5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de08de3-8536-4d42-a3b7-0418e6b8ade6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d08435b-944e-46e3-87e5-19e553057453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25db95f6-fdd5-4e3c-ab6d-15e08111e4e6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315db659-25a1-4527-9780-1e1507bac399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67bbd2f-0ded-45e5-99ea-a365c74ed266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd29d1a-3535-4947-994a-fc5823bbdf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a532eee8-4e84-4669-9437-e34d774375f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ea612a-a316-478a-b3f7-29481dda7b0b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6f0e13-fc8b-4ad8-a98f-e71c411f9cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f457c008-b606-408e-bd77-0b26f528d6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51578831-6baa-46e0-b6d3-d15ed110cf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe057dd-06f3-4f34-b876-99b9e2d4d118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc38136-0a24-4fbe-8677-d37ab1652293",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7ae312-7e41-4d04-bb0e-f49d047dbb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1dd53ae-7e99-4110-8285-af6627df1942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1c5f35-e4b6-4d35-8fbf-161f2cf7f6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99434177-9777-44b1-9837-d6fe4925c1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25de9485-7344-4764-83a6-0bf7efeeb0fe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596f9744-3b8a-4bcb-acaf-e808cb17bed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e7b11f-f7c0-4865-8bc3-874d3b4e4fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8330638b-b0f0-4ae7-a970-f3b2950b2cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2841d147-b887-49cc-a0d4-cd92a8eb9b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c802e5af-3607-4ed5-8cd2-0d39092be57b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28725900-b0e6-4193-9729-84d4dc22e51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2090bf9-22b1-43ba-8aae-0080446a8de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7730d735-af47-4ab9-8f76-0c05b5fdc1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9fff9c9-7502-4b9f-a547-9654bf25d1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe97eb21-c38f-400b-865a-c05c0a881705",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5366c216-67f0-4506-beab-4f7a6445e752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedf5430-dfeb-467f-a28f-b736a7cf3639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fa8315-6339-411a-ae76-ae25363fcda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6094f8c9-82b1-4167-beb9-2ab1c92e201a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f409ff5-60d6-43fe-a0e4-daecd52bf8fe",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a76d32b-2102-494c-b56d-ee5531632aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4682a635-b10b-481b-8fe8-070e013ad4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53605f6d-4d61-4ae2-a9b7-f50e1d1a15b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d379eea1-7859-4a95-ac0c-706ca78dd5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9692d126-9525-4901-9d5c-ab7f073eeacf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd2cf02-748b-47f2-b0fc-cc8927270fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a011565-e675-4efc-bc54-4bd29e66d3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcbc133-c35d-4136-8329-3734434fc0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b03e4c76-6542-4c9b-a5d1-1bbefe3a13b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c78e04-7c05-48b8-ab7f-81a04dca7461",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a56ad2-000f-472e-8e96-babfd456f757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7f88d4-aca9-403c-8fae-8570d5be5146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eb8577-88df-41cc-a2c3-a3569920b296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a858892-2dec-4e95-8ee9-aaa13be8d077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7dc24c-8ba8-4ba8-9383-67482677a338",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fed4cf4-ccc9-4567-9555-a96235e36178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4644a69-90b2-42aa-80b8-ace2416aac69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee27beef-206a-4190-9b57-1d7b1caacd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa04fe3-7cc6-40d4-9be6-cc2109878318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41597b5b-07d9-4963-8b86-779e3510646c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe84041-899c-4a08-9ad9-fd136f0a7587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e2c368-3186-41f4-80f0-c200482ecf10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cabcce-886a-4bbc-9a26-6f69b8dca815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8169afd3-4555-4bda-acc6-7a55b1dee6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d2286f-dc07-4172-9588-c931ab8c735f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6bca93-b687-4d2f-a497-d3f136512428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13413ae5-413e-4f04-8dc3-2b1dfe3c99a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c29ed5-f62b-4d38-bd2b-f1b58a463a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c40727f-2979-48b5-a9e1-451c586acd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06b6f97-6ea1-4e8a-94ee-47049e3bf236",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a35759-8448-4e35-a3c2-1b751c67d421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798d7f8a-d294-4396-a8fe-454463a39c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91536030-99cd-4deb-bb37-f4439bfed28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31471615-8280-4dbc-a55d-87bf13a29873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58aab336-c9cc-4fce-8ae6-42cc58a2b77a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66bebe8-f4ff-4394-99d7-7e48a0506a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec459788-489a-4013-8b70-ebbe68b7b2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45eeb72b-4273-43e9-9cd2-9c638511a75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1deec6-5f01-480f-9145-615bbc310b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ede94d-ed08-4e6e-82f2-0778fcd9a41c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62d1a9f-eabd-476f-b9b8-edcbd9a9fe51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026168ee-ed29-480b-b6d6-e603863fc9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fe736e-319a-4480-b9f3-570998cabcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f43833ec-f879-4e03-befc-60a31326a95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfda5595-1220-4b89-bd4f-a37af737354a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85cb5d2-535a-4257-969a-c5baa73d4918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef006f8c-7f12-416e-807f-d29b101b4956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f61aad-c887-4574-92c2-899375e0b299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1320171-2eb5-4de8-8d3f-a4f15640ab99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56263a6e-e997-4f36-ad44-fe6e1ac599f3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d177b128-3014-44a0-8d33-14caaa712d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91d3b72-7367-48df-b478-a21aa1414357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e1a9a9-f463-4bfc-8fe9-ea2f98d984d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3aed1b6-99ae-46bb-bfb6-61aa2feed2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9bb763-b8ad-4c38-bfbf-627362865149",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a06bcd-3672-4296-a3a0-e67bc5788bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80979ffc-48ed-4823-a2d2-15ff011f8215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97ff06c-6f77-42d0-8c4f-b9f591b91783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81631b5d-abb5-42a4-9021-3abe5d6e24e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b640870-061f-4558-94b3-c653b43eb156",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafaee95-d8f9-4c1c-80db-155bd4f8c18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b3a31b-fe11-4f40-9c24-4c26ec895e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82866d8a-6250-4a74-a6ef-65ac708212b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e429d11-78be-4feb-9ac0-d5eb653162da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a576e57-9ddb-4b80-9170-4d701ef16b23",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca6ba77-3ff7-4dd5-8f51-24f9ef593174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d50a88-c29d-4057-b28a-0c79dbf2e3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86d0b82-0a17-4552-aff1-cdf86cf1294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0373d571-4f0c-4522-a712-006ef48a7c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f081adc-9dc0-462c-897a-1d7aa7a2a245",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a942ed-3894-4301-9046-232f77ebae66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e48823d-d98c-47ed-966f-0fb1c9bfcbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40cd421-184a-479e-a055-3174f32cf4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "305d2c5e-cd0a-4dbf-a38c-320024f23509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba11a94-6993-4a59-8873-5d8fdfa51f99",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1705a416-5d07-4800-ad54-94147d21bf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c486ff78-c393-458b-ac68-d5871321cc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1021cabf-4e6b-4a1f-83f5-3a58df366ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67a649af-07eb-47c9-b56e-219627f91ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2606f5-4017-4587-8d2e-f40fee8da5eb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c592f22d-3bc1-4ab1-8977-f04982e9e1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8309628-a164-4e5e-8a59-d31ce5066f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b3d1d3-0fde-46dc-b528-fcd2ecae8686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b49bdbac-432a-40c2-86a4-ef8956dfbeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aa82d9-b653-4b7d-b18b-3a5e992e684e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b568bdf7-71d3-4da2-9a88-6e552a060165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ffe2e0-97e0-4be8-8401-8750d4143eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b4382b-c069-49e7-bdd3-c34c1fef6aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae42e86-d229-4bfe-a580-76c6cd41712b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3458865-e124-4199-bc10-b4adbead1f43",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000014b4-d778-4881-bb5b-fce8d9577548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e39ac3d-0928-4bda-b819-3e29517922bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf37114-ab19-4204-a9cb-337314787342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb82d336-8f1d-4b3a-9c67-adc63dcfc4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec54011-5051-44e0-9c94-a3d351cef8a8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e11203-6153-4ea7-8479-d7a66812beda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bb0e40d8-0419-4fc8-a319-ccd1d01bc6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3ae2fc-b58a-4f09-9ddc-be7beb14c21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "003fdd26-986e-4f3a-87e7-18e2b6cd0202"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ba0d8ce-c449-442e-a853-c8d9f248a604",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4815f751-8ac4-41d5-b660-5e3a4d7989e4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b593e4-0a06-4f70-9a9d-bd0fc3b82f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4261c2e-41cb-4dcd-97cf-64975dc6cc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf289fd-52e2-4e14-8875-e995d179307e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1031480-3215-4adb-9521-8df254ecee1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28562ead-3ff0-4300-bac3-bef1704dfd44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3f22042-b11c-4d16-a95d-31cbf4de1a6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52daef86-bb7b-43eb-b6c4-4beda756b4a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3a70300-bfa9-4016-8dd9-9d680419441a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30de898b-55d8-4bd2-a98d-567ce6296c47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad00546a-15c6-45a5-80fe-82bfc6e06945"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd34fbe3-fd02-4f46-8fd1-ed58c6e10656",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b66108ec-0d3a-4bee-a06a-960f65d51b09"
                }
              }
            ]
          },
          {
            "id": "12463824-1f49-427c-9e82-e8bf0441c86c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "939d3890-d655-4244-9921-ea9a7dc24d92",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c99adb87-6412-4894-815d-1ca1c9714e1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc4eab2c-cad6-4179-a1bb-f9465864cad2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b29a8395-3d38-4cbe-a82d-7000e3f0e274",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04254c19-e872-4680-9a2c-962c01cc285b"
                    }
                  }
                ]
              },
              {
                "id": "a3fad9a4-57c3-4af1-b5d7-4fdc899272cd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d57979fb-0146-4395-8996-71f5d4026574",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae7d56d5-6304-456a-972f-538954df1bfc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5af47a73-ba66-4666-85ca-232230439faf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ece4a8d3-e1e1-4b65-a1a2-9f2114088aff"
                    }
                  }
                ]
              },
              {
                "id": "a6297fa0-fda2-472f-b18e-548475bbedc6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8ff5566-e2fb-47f2-97bd-a6ae37618440",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80e8daeb-30bc-42a9-9ddf-7fcecb1633a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84e90b43-b41b-4ca4-86b7-94e37834e21d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ef5dcc43-59b7-406e-9c3d-021e82d6f236"
                    }
                  }
                ]
              },
              {
                "id": "12d7b11b-1bfd-4b74-a84e-cb604267ccae",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28b9d446-11be-4cb5-93cb-98549b4126ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a4360f5-cf7e-450e-b5e5-21ff4bca915f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54ddda81-6fb7-4961-a1fe-bf5588624031",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "979a9c0d-71e3-47ee-bf50-331bad4921c7"
                    }
                  }
                ]
              },
              {
                "id": "48e3f89d-772e-4202-aa08-dc5b40da3eb7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0e810df-5156-46ee-a294-c88afb5e4e34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbee8573-a403-4d0b-9232-ae5f384b452b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27dda945-4b84-474f-9ef2-77e6dbef71bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "044e8f5a-2e3d-41db-afe5-ca2a1e5dfa34"
                    }
                  }
                ]
              },
              {
                "id": "3c80d474-8f81-4411-9b56-8131a727d81b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edca3a27-32de-4e8a-8dd7-9cc41b3fd84b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "375eefc7-d60b-47b9-8a7f-ffe421a34298"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a070098a-c01b-422b-b992-6c92ff5e68fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d76f4ee6-c201-436f-87cd-a18dcb5244f0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9eb5048e-65a3-4a67-be98-5b42b3bbdf2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3627902a-442c-4c07-9608-6a046a057ac6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b8c958f-c3ed-45a7-840b-8c92f4dd40ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5daad010-0351-4a74-8130-397247c8f1ba"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5cd5b45-b1eb-458b-9c71-749618bab730",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8acacfe3-86af-4231-a415-0329a19d94f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fb50f82-d833-437a-afeb-1235d6d44c1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "578b6c93-d9cb-4749-ae38-5ef9bc1d6060"
            }
          }
        ]
      },
      {
        "id": "d893c081-89ce-4f76-9e0d-62c23b09e49d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cace7732-deb7-4063-ada2-be77cd22cea8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4adeffcb-9f75-4113-85cb-c7a0a7c09597",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b1651f4-f40a-439c-9894-62552645558f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aaaea7-2bbe-4e60-af7f-70e09eab6eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28ef4a5-79de-4693-90d0-324850686810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23262b1c-00c3-497f-afdd-d16144447fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3ecfa2-ddf3-4dd5-b1e0-c4dd4ecbaa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de9b053-52cc-4160-8158-9e5bda63c6b3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a8196d-edf2-488b-b0c7-de57249401d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5267446f-38b5-4750-b7a5-7c6a883c1175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1c815e-df8c-40d4-8ced-f3fdc6cebba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a06b5fa-3d68-4329-bc0b-6bb2725fe0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62341c64-bd07-4b07-b727-6dc536837d9d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ee9a27-fdb5-4940-afe6-8a61cac8d751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fb7e44-2f15-4cd4-bf8b-709080a1b44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ecad1f-5f6d-4bc3-a178-2755c040ab24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61fd41af-5ddd-4d82-9ef3-f25f2ee810f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75d77dc-a060-43fb-92d6-f189ba825006",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3b1ea6-f9ed-4671-8751-476e1952861a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5badef8e-3bc3-4a8c-9730-fcfb15197d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5be8d9-a40d-4503-9dc0-ca187f74c7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf17434-9376-41b9-866e-f7f48bd8e9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab80c561-ed8a-4c9b-8677-d9e98a18419f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d85cfff-e876-43a2-a607-55d12449af7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc26cacc-85d6-4f93-9743-9d76773282de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e796d6c6-527c-4b34-bfc5-bbbef396e834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8b46b6-17ef-40e8-8593-d9c1a2e83c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f9a07b-c6ee-4c98-b07f-3bdf558acdca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065b3da1-8282-43ed-a576-f2b202c77e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210731a5-f0e3-46bd-8e7c-6ca0f5672438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37da8b10-eaef-4503-8766-1aab4acc4940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4011086-b3a1-48fe-9578-c469410d9b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d73aab-9536-42f3-8b48-144b40f8416c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68219ca-d5f4-4039-81a5-f550066327e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a408e2b5-8080-4079-9667-a369a868a307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb15838b-87ba-41c0-ad04-7897499668a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5818c03-f317-4e04-a88b-86255df60f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e77a68-1f80-4e8f-aae3-8c3596490388",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81a2dce-14c9-4907-8e42-40d465684429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bba25c-d67d-463e-ab23-2e5f6726a4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749fbe44-97a9-4f60-9f08-a2235f8e6d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0663c160-c705-43f8-879a-67e73aa3572f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971ec2fc-93b6-4ef9-950c-b5949084f872",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d332196e-796a-4c4c-8e04-e04d74f8c6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae92dc1a-16ce-4749-9534-4c0f1673a1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5532f0-66a6-4ee2-b39f-5dfbade9b345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e011666-b220-44d8-ad22-72269b1bf7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab1f930-7fd9-4503-8cbb-d924bdf04801",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9323b9-39ec-4b9c-ade8-1b28cf324089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02558b9-5877-4662-b195-5a6a3b7323a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d132fa0-0d9f-46ea-a8c2-e72fe29a11c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bed28e-a1b4-451f-9f00-5f2579fa4607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b714831-cda1-421e-b86a-45b2d86e07dd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a562842f-dd8f-4157-93eb-874cfef72147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d530a32d-b464-4efb-8327-8aebd93fc035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb66b82f-c34a-4ff4-8df1-58b876ed6dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "11d6fced-7975-4f06-97af-7159ba800436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b88e565-516d-469d-aeb0-6c72ad217964",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852e1fd6-abce-4948-85b4-e3936c77890a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bfe833-6968-4fca-a3a3-b7168876b51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d076227-937d-4888-a7e3-295c6482b5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac81bf5d-adf4-4220-8404-c203be380c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef1b90f-4ebb-4a2d-a5b7-258d64e89f3f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74498cb5-4891-4d8d-bc97-634dc6de9639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c88cd7b-44f4-41ea-9086-36f0d2b3155c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1314d67-333f-41b1-a479-876401161096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e242d2-07aa-4ecf-9e92-76808a122904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baed8a44-f835-418e-9a22-de5f10e64768",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22df83c1-3821-4b70-bbd0-ec56e8e4194b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a9c47a-d3d7-4e8b-abd0-52ad106d3026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14041120-b64e-496e-9fc7-12a989972378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c28e5ca-d838-48f2-a034-55af1e09e192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0a51fc-c89b-4a82-8f68-fac357c3979c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006301d9-3a73-4868-9a79-c09565201b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b8de77-538d-441b-9c42-726332cfad8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a605e74-d167-4a4c-8326-9480b9ff6d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd7b488-748a-40ec-acf1-3cde7f1ce41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601e9a37-1407-4899-84be-7f8092b67b1c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48cb4bc-8887-452d-912d-5381252eb20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537f1982-7bf9-444b-b2ab-ee0d3e78ebcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72feb3bf-c756-472d-ac9e-6485c50bf98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a405ed65-3f46-4e87-bf9a-99d008ed6f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789d042d-6705-48d3-8296-94bae2569d59",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3fb427-0728-4dc5-b967-43a14326b6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83972f5-4075-43d9-a85f-3b9fdf00496d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c54859-f07e-4992-8cd4-d1293f29da27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a17cbc8-3139-4542-924d-e5f52b4e1a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d790528-a387-439f-b087-5042541fb49b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988abc7b-c88f-46d9-a9a9-ac42e52c1638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb223f7c-de96-4b1c-93e5-62a7bca62084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cafef6-50c2-4c27-8c60-70c9d8a5733a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "12a50b6c-70df-45e4-ad0a-69dcb6b19a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b37e8d-05a0-4bfb-9b37-88757399de35",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9dc8e3-b7b9-49fc-a664-87c7969cbe93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d67f20-246c-4aa7-94ac-00ba210ed9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60759c52-5e2d-4164-b75e-173a92169b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9af192f-d62c-460c-8508-8c19fbb2b769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45879880-d237-43e4-8513-3eba5da434a7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f9acdf-51d8-421c-92f0-7094cadd6496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e036b56e-3bc2-4f99-b996-ccd95da37583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d970cc-64f6-4d97-8ccb-0ef65bce228b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3726b08f-9306-4cec-9930-d7157400179c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e72bcc-aae5-4b97-bef9-4f6812f333bd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3e2432-02c7-4419-9d1c-8c9f416d075a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9415fdab-657a-46a3-954b-19cfeab02db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6480bbdd-edd4-4940-ab46-111fe74cb2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d0d9a3-bba2-4fae-b23a-1899a0c376f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffeac9de-339f-438e-b546-9b1c5d1bf1f4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99936b7-f167-4472-ae62-5269bdf3fb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ea8ed5-d642-472c-9b68-d141e8f3cd37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5401f2f-27a3-4e76-afe3-5daad5d2e04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d748644a-2b09-486b-a72e-9db86e8902fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd70a547-09f5-4aec-a268-534e93c0c3fa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec96328-d304-480d-86c5-94efc8561541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e0a895-e990-4f60-bb89-b3ce5d49c6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa6f48b-5a5a-4a9e-aea6-3cdc3d60e1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de21a03f-6692-4acf-9c5d-6ee51f5835e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6e400b-ba1b-4c73-874c-95159ba7f150",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808071dd-bb32-4153-a384-4c0374123dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8508f03b-8022-4f14-9edc-1ccc201acb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd97fce-3f41-44e1-8ad5-20d42deb5804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b7b38d-5dc8-48da-ab5a-403207f7e4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a32aa5-8709-44c3-abdb-5903638598c1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ee2f67-b013-474c-bcda-795502159aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d09b8a-1772-4eb7-960f-0ea3cbc7d021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8973446-226d-41ec-bf09-d3ee96803353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35244dc3-a8ad-4773-bde7-aa60722ceabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce02e9f-9638-47eb-8008-4f84eb51115d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd934b86-76ac-4e68-93eb-e33323c3f29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b8e36d-9152-4dec-9842-b5ba52d176aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03131eb-62fc-4bad-af7a-3aee18b6eb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "255a6131-7fd4-4865-9af3-705a6656bd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8880fa-ce8f-4ee0-b822-33c53f9d87e7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45674f93-0ab7-4caf-b306-5ab759a25594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda72f8f-2908-47d1-a4d9-a54522c6fc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cf9295-eab5-4c3d-bb51-9ee285cfe5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47f1f41-b170-4d6c-8a20-3d717dcaee35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1007480e-2424-4407-a959-3c6b090513f1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a49274f-e6ec-4a8e-85f3-70cb5540dd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8df107f-f31b-4df3-8d94-53f0c6090b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231c5394-5c65-4a58-8f9b-cc3cd31650f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcda2ad2-d9b2-4e55-a1d2-d963b43831d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34c011a-98ec-43be-8ba5-c5d8c038766a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44b5d7a-b646-428b-a3bf-1717a4d5e124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cab8c0-44fa-4b80-8229-9ae7d3919c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadcd07e-b7e3-45c2-a409-2f7ac0bdb454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de5527c7-da6b-443c-beab-be08cb4d6bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b088188-9842-4f01-9ea7-31e11d54c38e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e1b80f-78e4-4a5b-808d-f8c7b01deab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f20695-24f6-424c-a7dd-f9b245904578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19c5497-9694-48f2-aa70-4e1bc75fc4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8773059f-a87b-4016-846d-90ceec5d1b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8298a532-eb1b-47fb-b45c-838cfa3ca0b3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8037636-7eda-415b-aa06-690cc6bf7631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74606a30-a21c-4ca0-b7a3-6dd0cbba1999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c8379f-92b0-4a68-9182-d5c62fffd4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25bfe49f-8dc8-4525-a88a-05613f307663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d48ba03-1900-4eb1-8930-be2194db41cc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b978aa-d1f9-45a9-b518-71ed265d6b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5be0d9a-4526-4451-a7fd-c50ce6bb5424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19b1873-9820-4994-b947-d32909b70b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d73f335-9c03-465e-9e81-d5cdcea255f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4cff0065-06a3-4311-882c-1bbb27740be8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8749a588-198a-4493-80c4-8ac01b9cd6ed",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1adc384-c52b-438b-9363-84199ccb6123",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f15ee2c3-4647-4835-bceb-2a8ad6a4261f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9f60d4-11b5-4cd2-8edf-80edd07b0018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e320318-2e5d-48d3-95a2-76b553babe0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de991a42-dd1d-43fd-9a91-196f349f740a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbc9eb60-7261-4ca3-aafe-aa9dee9938c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2ba81e4-cb2a-4895-b0ce-f69e0bec7173",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40f1fe3d-276d-49fc-b904-a0da3b8c026b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92fc8566-e5c5-428d-b248-06b3198b33b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94742fff-eb85-4573-ae05-fbaf9726a0d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6325e0bd-d5a5-4ae9-93b6-d4ab17b5877c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8d8c7a0-ad50-4006-b140-c3837123a1e8"
            }
          }
        ]
      },
      {
        "id": "3897d2d3-6e12-45fe-9679-31b2f6801733",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "67f76f04-098c-44d9-b9a6-4b5f5d731abb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b0c3a28-d928-42b3-83b2-bc3f8c39f279",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ff2be9e-f68d-444d-92c3-fd9e8791b11f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baaaafc9-0261-4efb-9070-565ca440c11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436ea957-81cd-4dfc-8c5b-c5fbf4205c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c67adbe-6c72-49fe-8037-124d1aba57c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ecfaa0-e542-45fc-b0a6-471b8a6789aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608b0b10-d429-483d-b331-b49867e5a660",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ec94ae-7ede-4de5-a700-fe9e760a32b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa7636e-ae12-4d17-9ec7-235ba06dc7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e53336f-2ec3-481a-bf20-d82ef1c04f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4812f199-bbef-4760-b58a-58ac5c2ea79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cff596-eddc-4628-bc2e-ef008bd6cf6d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd438b2a-014d-44f7-8ac2-6279249987f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6891c5e2-56e7-4a71-9274-6b71f717e916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a7d3a8-394f-419e-bca8-550eb22ed605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d09110ae-4cd3-4a95-9b17-982bd95cf710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111a8fd3-9b41-4e61-ac09-3d4e2579fa72",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbcbf42-c94d-4abb-8eac-a79e15bddb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e98111-570c-4f03-8794-37aca206ddd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb99cf97-00fe-4e48-9b36-2c4a1c8872c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cef8691e-147b-4f26-8e51-642920578ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd0d899-78cf-432d-9230-4bd7ce23bf5d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01104dc0-edc2-4a33-b513-3d763c136c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ae6c9c-d33f-4aca-bd70-559a4e1a2be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785cc0d0-b4ab-46d7-9f67-0c2057acc4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60978436-9809-4a63-bca6-d46d91bf6928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa3a533-f66f-4b36-9352-8bfc29d74072",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2dd9fe-c3a0-45d5-8598-8b2c48f38463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336b3a1a-082b-4762-8fe8-1b5256163b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb828788-93ba-49e2-b8da-5ff1dedb9fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96b59042-c90f-45c7-872d-d63d34ddba7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fd4092-4391-4bb2-9484-e9f030bf3945",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be33e25a-f348-4e09-86ff-23d4c3054178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ac9bc2-6d58-4707-98f7-34d22cc87e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1693895-b846-49a2-bdc6-c0e516ff12d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a584cb8-973e-4a4e-97a5-543363ff6ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2bfe45-d27b-4c01-829a-6b9936d2d788",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6946b0d6-89e9-40c8-a508-96e08153be14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa857c44-1cbd-496b-80f2-e7f4235f07a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ba2669-068e-4c52-8feb-aef60689bb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e56fda-9aeb-41dc-8a42-23418ea0a553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523fe0fb-630b-4346-8c39-10b61bbdc976",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873edba5-5004-4605-a5b7-dc13a3719b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbe5975-706f-4425-8a81-fbd5149c32f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ba1d0c-b840-4b44-9580-a802063c0a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9794f1f-562a-499d-8360-810fd33aa169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b9a398-2c79-4750-9363-3faf2b8e6595",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4616ce-a9b6-4e54-97cc-3e6a0099ab38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2b66c4-fb3b-4b8d-8abf-ca485fcf8942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27aeab9-3078-4812-bcb9-a0e39d0985b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d01e268-69a8-4553-96c7-bd45d61cb0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f566295-8ceb-4cc0-be63-424f1bd0c1aa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ab79e5-d4fd-4442-98ca-6b9e8316b6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6970a42f-bd13-4fa0-b959-30a6e214ebaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a127d1-0f05-48ac-9996-00127822b03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "45006217-e165-4272-b773-d9f810c4ad8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba159760-4287-4531-b3b9-795129e755f0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276e6009-41e3-48c1-922a-78f82748f4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa5ad32-f0f1-4c92-bf4a-010e75d8a35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61d7350-54fe-47b0-ac11-daf6097d9715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b70cdb4-b7f3-49d0-96dd-d87c67d5fd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e762ea-1f6c-4bae-bd66-0b9bacce8943",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7560d43e-2ccd-42b0-8cee-23112441befb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518435e9-39ad-41b1-845e-b7f4014913d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ad4690-ffc8-42ae-bcb7-46df0a9267ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f58ec4a4-b6ce-4c05-8492-13b7bf323cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3eb00b-0f01-4077-a428-ecc9c470f7ff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63eb1134-b981-4971-856a-6d96276f3355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e970b912-ea64-4dd0-be3c-ea4b5e1d5daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b83e6e-84c7-4c32-83df-a9bbe69ea853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9245765-301e-4fc2-bed5-fc5ac7e4cc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4ee8ed-1990-435a-9ad3-aaaa7e949136",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c069af4-a571-4500-9326-e702e6c97bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ff9ff1-696e-4de8-9a40-22b316b39ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa05443-9b8a-4718-92d2-cd26252b6cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b28c8d3f-63f0-492c-8b73-7dc3f7800c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66347ae-7292-45a6-a815-3fc38f811483",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a239e3a7-b763-4ebd-a992-0cf461457111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7c8630-8956-4981-8e1f-fdf02b9891cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5522fd-a066-40c5-b9f1-6a2f1c0c389b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d94789-9138-419d-bd8d-ebd5d0a9591f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff4e76b-d060-43fd-a1ab-034c698cf9a3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944c6f07-96af-4034-abfa-757cbb7852ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ae9836-1c53-40c1-b2a3-5bbe3f863e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a76fab-23fa-45ac-8b07-fc8621129bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56a3ecb-006b-456b-ad48-d2cc328e4722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1265d279-5c9c-44c2-90cc-da1e46cdfa92",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14331966-b137-4d10-adff-c71cfe4d7a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6659a67a-f01a-4eb5-b517-fce4f755e9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4258b65c-bf6b-4dfb-b8ee-e23aacb79d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ae9e92-c87f-44d6-b465-22d9f29fca81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e66de3-d0bb-4057-a801-f47fd06439c7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f5add8-d359-4a61-9c42-1c3ff364a5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f219772c-bef2-48ac-be37-917652576896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef753f93-f48f-493e-84fe-b1989f1e5b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae8dea9-063d-4125-91a1-14ac6a21348d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef94c75-4574-4bf3-9e81-0bc68093bc33",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aa1e1b-820f-40fb-92a6-335a874de06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4164ad-a4ef-4c0a-a5fa-10e65aad5d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfecb51-d962-45c1-9a92-963108d42491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "798ce5c8-802c-47da-b024-f221983bd435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5b110c-987b-4d9e-90e6-bdda61e5bd84",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26772d1-77fc-4cbb-8372-77498c3f9069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c9b23b-656f-4bf0-afec-7053f541e0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5b0e6d-63a0-4bec-ab39-43099365c53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e212f19-c5a9-4bfa-aacc-d2cab480c94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc94f8d-0827-4745-8ec4-c27f9ff23dc1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f512c1-e724-4938-86d8-779386b77285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a576a7f6-45b7-4d15-b9cd-b5c34de3282b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75993d71-261c-4e96-926e-e76291023f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4635c7-2ec9-4475-9c21-133ed76d07a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb98c1c-9f0e-4e1e-9e9f-d4d2083b9986",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb8bf35-90df-40f9-b693-8c3ffceea985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9088a4-aacc-49a3-a1f6-83d1e718ba2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51f59db-a78e-4347-83f2-5f075173fd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d097515f-0a6f-4846-a8e9-e8bbf828a3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac74f53-006f-4580-bce1-404e4415964c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996adac0-c40c-4348-817d-ecde280430c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5eb2f7-ccaa-443c-899f-574fa1ca4886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13b0340-7ca9-4f63-b398-4d6e02f5f39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f947c60-40fb-4052-9991-fe7516fdcca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35efb086-6568-4f86-8fb9-a04715806165",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2060047e-e078-4d4b-a9c5-504de67c1962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa69301a-e7b1-40c3-932b-238e82af4ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a1981f-9f19-4c02-8aea-757730465dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75fd170d-b5d8-4dc2-b477-2b36e40a373d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72198666-d854-49a2-87a4-2b7572faf1be",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a4952a-75b7-4d0d-b566-b38583b4868b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e359c7-8cbd-4e45-a4de-7be6526d4a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dad461-0850-4707-8b7e-32b9dcf781fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "141567b9-f28b-474f-9ad0-133dd241b8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45425d1-a554-4808-9b6e-4355338b4ecf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5ef2a2-31c0-4da3-a57e-ec9498cdfe50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b50b46-ff38-434a-bc60-8f30eb831fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c10eea-3fc5-4966-ba17-1045d61c09c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6771d382-f95f-43c1-8c12-0d5095ff7467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e254eb8-5ff0-4dab-a3bb-4ac18af688a9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf02abf-4e6b-4508-8830-74f1d4a7b1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89087fa1-1525-43be-a497-7bb303d0d4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd26aee-3f4f-4f82-9880-31ef9ce4cb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b80dbe-5070-480d-a117-66066bde25ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2002d9b-669b-4d98-b4e0-d776557416e1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f40acd-c2ee-4286-86a4-164bbbf81043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601afeea-f530-43dd-98b8-b7f0931cc2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d1f681-0262-473a-b8c5-22718af8ff82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78827d4b-1c47-4354-a9d4-27e1fd8dea8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660f8f10-df9b-4d82-8f25-90c51a00e5c1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce23d6a0-1569-4aa5-ac6f-359cbf2f893f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b90d4c-fc20-4b97-8880-74301e831206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a6edd0-2270-4c2b-ab7f-fd7612202aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca33138d-8610-4506-b36e-bdd01b68b717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccfdb12-3ece-4dff-a4ab-9d6dff412c5b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13b5920-f8b1-4ba8-baa1-273e0dbe5c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d40e50-ea9f-42e1-9071-4595960154b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0537f6-8f47-41d1-ab3c-81d8447728f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6763feab-ce2a-4bf5-988a-aa375194c36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71405b0a-5595-44f7-b6ee-171c568ed0a7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6a56bf-6cdd-4299-b1ea-4f77f8fe227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efb7611-56ca-4a00-a9a7-ed50cbb2751e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a3af11-5550-478c-aff4-94e0267515f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89bd0610-fe7d-48d7-879a-0c1fb89c7d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775c7c31-5205-4b93-b6b7-ad913a67cf2a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9e168c-d68d-40b1-86b6-658848bac48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88547cd4-f94e-4abc-b884-243f159cfe78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fddc4f3-1ed3-4b09-b788-87a43bc2547b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d56349d4-8ce8-4cad-a2fa-ef6464366aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446dafbc-b71e-435a-94b2-1a383b03a159",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cf3c23-62ad-4180-9b7b-5b2803909f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b588014-51f9-4f76-a22c-f0d8342bfceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90517071-fd16-498e-adb6-f1d4a4b47858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfc41ef-7d68-4129-99a0-17c7a0cd5389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011d142b-232f-4d51-918b-933255d0277c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab29dfb8-186e-492a-96da-9c0a69cce5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf01b08-9aa9-4475-9b2a-3baf31594266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d290a528-3325-4613-af62-7d66498ab983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a157dbe-3503-4233-8ea4-09ae3518e059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2017d0ca-acc9-46dc-beae-c4d773afc5fe",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bfcf32-fea6-4bc7-8b61-a0b93d3c0917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7959ce-c9be-4d6d-ad39-1ee380cea648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389489cc-3200-4df7-a9a1-91245f6ab7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02bae6af-9cf7-4ae8-9cac-6e38b66d76ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf07ad0e-77a4-4c40-9922-4580c6f105cc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a583b662-e336-4956-a16b-404456731046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3df39d-44dd-45bb-a8c6-156a8e5ac7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337ecdc3-d982-48c8-acd3-d81a43b4ed50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38d0578f-d684-4e95-a060-a94c8032b01e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "734f1716-1435-43cc-8ff3-ec3bfd059ac7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4452e34-6d66-42e8-a2cc-ea961b7c2fde",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b678a2fc-c200-4479-ac51-0f9594e8b959",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e25ceb-2477-415c-b7b8-56e0c59c3819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75aadadb-a884-4001-8da8-0ddc5658fc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1385b1d8-2fde-4392-a3a4-465a792fbca1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12ae1c91-6078-4aea-a386-eb35ecbf58c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b298855-d13e-4ab9-abce-444f4e72acac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96d7822e-3535-481f-87ae-0abac1423839",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4ffa7f6-5b4d-4674-8394-39c6793d6cf7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "786b7f3a-9e95-4e65-bdb4-b3d5e4b8f0b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2ccbead1-9470-437b-8b69-c68d3ed59186"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b094124e-8e1d-4a0f-a5f9-b91adbaa441b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff0e967b-5452-4346-8988-a7bc1362e371"
            }
          }
        ]
      },
      {
        "id": "448cbff7-d1c4-4ed1-b5be-96156fd83781",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0593e7f9-7aef-4556-89bf-a66b45defcf9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "862916df-b6fb-4943-94fb-a2f322448de7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "40930f60-1584-4b7c-9720-65580865c85c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41193991-2d04-424b-bb69-37a17266cc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e73a67e-2198-420a-8b68-6e28e50a4414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e65a0e-fa89-4ed4-9b28-4a76dc070dc2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d690e9d3-8d17-4582-8eae-5431ecbbf7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf98ad8-7f43-4b8f-8f29-8ea134a99c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166e4549-0b91-4bef-bf25-05020e521312",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0fae0b-7df9-4bf7-bd07-e9731cce8ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a79125-d2da-4771-8e22-31920b6fff8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae87d6d1-d55f-4a3a-a475-10731f333c78",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237b2258-1f23-4ce6-8f95-4a3eac59bfbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8daedf6-e857-4db4-8c38-e56932f75b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f497d2-da36-4b39-9d20-4c6127389eaa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c836ab8-485b-47f4-90c8-4c16f22b8675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe71805-1ff8-417f-9cef-414c5052b5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520fe077-da50-4d3b-9c56-98c09e197f04",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425c2d98-abce-4b4f-aa32-bcbc6c65da16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db5d70d-c734-4fc4-b23e-6904239be6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c595e09-cac0-4ffa-b6f4-6ad13cf91865",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8364a9-5302-43f5-86bb-b4aa3a27c504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95955693-ad1a-41ae-983e-f1243d55adb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de5bc85-9fc0-42a4-8766-1e36a2849614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34b0b5f-9258-4e83-9fcd-346d20333a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5e7e2f-d6de-4098-b46c-1ab410f2aa83",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700e9516-962e-4f62-a109-0a8750473256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fec4814e-23c5-4ed5-9210-7dc65d5be7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b369751-a20d-4ecb-9071-8e7b228323f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad85dab-8424-470a-943d-7d2f0af36615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f0c246-a820-4d0f-b08e-956818a210c9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b754e65-2241-40e5-85ac-ebf5bfeaf0bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7dbd978-9a89-405a-997b-0d49691db200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f372b61b-afa8-4b9e-828e-993a939cbe48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966e9a9a-7e49-4be9-b2ad-9d6162429682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5570cc0e-3e9d-4dfb-984d-a4d90d4523d3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b021a883-a471-4b89-8f02-0415aa192d50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ebab74-21c8-4374-a81b-618c18e1ab22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc3ae44-4506-495d-9abb-fb571beb9bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1b99bc-ee65-4613-aa8b-630034410e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63a369e-448b-4355-b382-45fb92b6f45f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864c7c03-288f-4d57-a191-32a889bbddc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5106d63e-e48e-4cba-9e1c-596ce18e87ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612f8c74-b1a7-4aa7-90aa-5b557216d2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f1745a-6d98-4fbd-8198-37c085b7eed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0dde754-38c1-4715-b53a-964d62ecea96",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87952e01-35f4-4ce3-bd22-bd05f3de7440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b0d1fb-87cd-49fe-95b7-7a4a0132c581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569fc3e0-6447-496d-95ec-64f3c5f0ec5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aefc642-0f51-40e2-b9c5-78088c868b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfd3aa4-31bd-4ae0-b448-10cecf6ca8ca",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad8287d-1217-4280-9f10-f5a86730235c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43cd0d81-eca2-4bc1-85e5-9282aafdb555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cf5e8f-2ff4-4310-9fac-9e2e491649d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0ad92a-5e83-4547-b699-7cbadb79e2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46a2031-b543-49b1-8457-bbca7be4a5c4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96693662-d112-4ea0-b849-b0eb8e2ea925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e00a8af6-c597-457f-8696-257c93d11eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1334c8e0-a24c-4a74-80ff-828338745d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ef188a-b119-4869-a6c1-c357932d6ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f87658-d9bb-49bf-b89f-de75110dc093",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb88a61-e942-4d60-b7fc-53690d6a5e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf01ff41-e6cc-4c3c-ad70-371755f62bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57234451-c3d6-42e8-8572-409105b6e432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4889b3a-69f7-4f0f-945d-c1ba28de13bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8621b999-551e-473d-b5ec-71ccda2aa609",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e603d6fc-e784-4f48-8a14-46c477c9516d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e13f1e4b-d563-4308-9f33-93050e26bbe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42bb343-0e5e-474c-9920-8a083d96eafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8305500-f1d3-46bf-be9f-b9f2defc0e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f326b65-00d8-4af6-a027-b66d7c283e45",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91efa616-98a6-4147-8527-2d2d6d722b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045a5ff5-f551-4c7f-8086-5ee8593d5795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d771fe1e-dfd4-4b4b-9703-ba1d3f326cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1368cfed-a15d-4b88-b2ae-519f4f326d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6052a1cc-9c73-4083-bc2d-d9307ff3eac3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cc52ab-b7d6-4309-a1ed-065202e93915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae157a31-926f-4d43-a153-63079b2a4a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bc38b3-c682-4afb-bc96-7506c349934c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ddd382-89c0-4ff1-810e-c667ead34221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9499f1e7-2019-44fd-b170-1a844469b0f4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f76242-7a70-4ebd-b6dd-657b9b744695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6420825d-e9ed-4d80-bb5d-7e1a7428af34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d42c35c-5c1f-45cb-b1f4-8cb9730f98c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7a1aa4-0f4f-49c8-b0ad-39e1daba2118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17c7269-1a9b-4209-9070-1a16ac0a1e3b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bd0eab-f222-4868-bd99-551174a85b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee37e19c-fbee-47d2-8356-22308e480626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3a00a0-86c7-4094-a8e7-4fec50f2f1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34134cd-7206-414f-bc96-d8b53cbb64b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d792d13-2b1e-4b3d-a5d7-40e2e898a504",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbf2e36-9235-4957-8579-1458abaa18de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d217b2b9-bfed-47cf-9401-8811291bdc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9e964e-b4b3-4af2-a1b2-9d0f38451566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fc398d-d7bf-4e09-bd38-0cb656f36cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589b5be6-f9e8-4339-972b-4210a280d15a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785ece9e-2452-433c-8de8-50988f56ff67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcef2a8-0394-4b1a-87f0-9c46ef7af4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7b1509-6746-422f-a6c8-bfde5e948f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904a2385-c01d-41c0-a885-771eb3c3bc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88df9e8-e2bf-4df2-96ce-5cdec087543b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8789e64a-c7a6-4407-8c67-a3bf112a9231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26c9d38-1c3f-45a5-a2e3-c9d3b16a87bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1661971-96a9-4472-947b-5235428288cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de931ba1-8d92-4f7f-819a-af74d68b3cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56038110-b01d-43ff-8900-d966a5263994",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6bf491-7976-4d02-8bc0-6ffa1d03754a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a51dd495-4c7d-4f66-91fb-b56349e476d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1048eb1-f1f8-411c-b5b0-15e1a3a25a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bee30ac-2842-43c7-b123-1be897a8b1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40869cd-321a-45bb-8e23-6527b29c1538",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdf898b-dccd-446f-99e4-0978af08446f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51321f3a-ae13-4e68-8a3b-87fd469d0a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d6963a-5046-43c9-a01d-1cfd8605f887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede172bd-6504-43ea-bc00-1f3ae87a082e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4815c9ba-4889-4209-a17b-4e8d2ee9531d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fb3980-4f89-4acb-b888-2abf724a706b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37440126-576a-401e-a52c-3a543116d2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85397f7d-b467-40aa-8757-93da3e823733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125e11c2-5daa-4b7a-8f95-2203ed6fe659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e899f5d-8a22-408f-9e25-cd421fc12183",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c45f71-7e01-4557-866c-83f2b1a87d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f845812-63b6-4031-8b9c-35727d43920a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc574de-1ff9-4e98-94ef-357dfb6c8a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b315f0c9-2296-4063-8336-e8b5cc4016a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744ac3a7-2085-4b49-898a-0a89f32ce63d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dead4d20-63d3-4d34-9e72-410bae5f3966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86da6d3-3916-45ff-8f74-2d6f9a35bd7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6aee34b-1dca-4a54-b5b4-473f896088ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4b2614-c328-4473-bb42-bbacf054761b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d199dff-aee0-4107-9872-e6bfa00e98cf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9669be6a-0cb4-434f-80a9-75c27b004a9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91af52ac-34d4-43c8-9ee9-2a706b6eccf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca83fb1-bdd1-4fd5-91ba-f563e6689e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958a2ce9-a2fd-4be0-8a34-9077d77fa993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dec396-f8b0-4a87-b828-2e422f3be8d4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fe19d6-e19b-46ae-ab27-b6114d637720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74f3f092-c346-4156-bf67-d3235413002e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10723e7-64d6-4454-9886-0672ae0692ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be30bfe9-5042-49df-bd2b-0fda1add8f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd82caf1-2878-499e-aed2-3f291e0b0a4a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f705bb-c26a-4655-b4b1-5339f0e47416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "054eec90-7c8a-43e4-860e-30dfac9901f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d645de87-6aa7-48aa-96c7-8098a7f4b4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efe1c77-0642-461c-9541-46d5043a9907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1906b3a7-1c67-449b-81c0-19d818ebb5e7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e65b979-d7e7-4326-81db-52b36efa369b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed802eb9-3178-4cd7-b8b2-2796c52ff481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9513b52-3343-4a54-a73d-82454ec630b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7775da-5523-452f-9732-953ca7bc409c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559b1329-6cf1-4dcb-84cd-99a52bea54c7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34656cb9-2220-47b0-b15a-c63f425a1f6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e78bd21f-a698-477b-acc4-00967066751d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e9662a-dc39-4cee-9f59-e98e49272fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224c15be-7ec5-4bbe-aecd-dd80faf89677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0875dd4-afd9-466d-92f6-a684abdf3070",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab612868-732a-4332-a506-3ee6b59f1d6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00db8878-912e-4874-a974-8c302656f37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40aac8e-51ec-489b-9a53-4affeccfda70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ab2680-1aed-4e32-b4d6-78b3ec214ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c45a6e-8e9b-4b7f-ace1-bd90eb41c9b6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2714f4-2bea-423d-ae59-cba804431f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45835f7-b43d-4620-af53-9fd7cabae979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea91eb8-eea3-45b8-90b7-fd74efb99258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae83657-57f6-4cf9-a031-adbbdea1be90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01173a38-845a-40d6-a9dc-8a34829cd4e5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abfd7f2-c727-4f62-81c4-2821c02ab666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8415162b-c638-49e1-86d9-1616a8ecb980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd159fc1-1352-4122-b4a8-41f797a56315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824859b6-5a88-4584-b2e3-6442ca2a035d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70748151-499b-4eeb-96f5-a285f02c363a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd9f4bf-9bd5-440e-a7eb-4cc4d5d5bbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a71380-c308-48a1-ae0a-9e860d2fa6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cfc257-f62c-4bf6-b50d-c0fcd2cf26cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a49423e-c782-4891-b6d4-7ed0fdaadd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cb9336-aea6-4d64-a779-eecf0dad7f5d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ed0627-4ac5-411f-b61e-feea27b708dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cc2590-fe2a-4fa3-9d11-ee13424051b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404f7ed6-95ad-46be-992f-83f47b1a1732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66582cf-1258-4ce2-a763-a13f7557f11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8aaa3b-f466-49ab-8b2a-b09ce84970cf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a020b9-a84b-4b79-9c6a-53db7285a359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5c15f6-c3c5-4d22-9bca-5c4ce7c41cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d43735-8cf9-4762-b8ae-a7395613bdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc868a6-bf9e-4077-829d-672b22564a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90cda73-197a-4322-9928-6194bcb7a5b1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d56a30f-e680-49cf-841c-190bfe6b8432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7ba853-9a44-46e8-a5ca-51e94bcb53e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782747a5-2e00-4a29-9522-e8bb4de8ed87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e1d198-cf36-4f3b-875a-d98a1ae91831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a4780d-63d8-47e4-b9fb-4794e42d7b59",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8474ba-9554-498e-afe2-12dbf8fb1feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4468abb2-2cbd-4455-9f34-d47a28b0e768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a48bdc-929c-44b8-8309-b0a137111f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3370cdec-cd75-41a6-974c-1e6293877cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05a3db1-a0c1-4d27-a257-93909f2d71fc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99d2860-f6c0-4f3b-8733-afeb2fb8242f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66e9ff9-f881-4769-9bc1-b24ce93a6477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7011533b-a52a-47b0-952c-803d69cb4895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a7fcbc-e051-4fa5-8850-ab641214ca09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4feee2d1-811b-4c5e-9710-489960bee175",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f02fab6-7b94-4f68-8d28-2e7827c09137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28ed5cb-8c41-41b3-b307-d099ae65fc1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53376722-aa4e-46df-9f6e-980bc85b00ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14dfa336-b175-466c-aa44-0908218e355a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef28e522-8eca-438d-bfec-76594b805b90",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db53b63-42d4-4a03-beae-28c67563d04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fb89c0-8d98-45de-9494-8130885667c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa9d21c-9e43-4f3c-b43d-8545906634b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a130e344-e861-482e-b54c-282b77d0eddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b6e4c4-472a-4874-aabd-610a9d293c32",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b913b53-0f46-4441-83b4-61ba6ce6ccc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ce7260-ed15-4d35-bfbc-fb692da5a1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d3d98e-434e-47f6-b176-e1fac137c2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239b6209-b171-4d34-b17b-ec0d831c6c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579c0909-4cfd-4849-8cbb-ca6e6b49a126",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef30705-7ce6-4941-bf64-5d4ec697a3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e89e6f4-c766-44fb-8be6-b6fc88b40821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd53a5d-70d9-4ecf-aa80-eb07ea0deaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09f9967-372f-4155-8040-dd151611c84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb51520-6c61-45b0-9210-38903e6edb07",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036ad472-2847-4b76-b72b-7cad6a856cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f9b4fa-dff4-4d6d-9fdc-360ee4fe664d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1419619a-cf8b-4f33-959b-a8e0a130aced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f5bd43-904c-450e-ab2d-02671e141e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311bff99-8d41-456a-9e63-75769a089baa",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ca7fbd-6c05-41fb-8c40-f486169322e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2d7946-6eb5-4643-be0a-4f683afc45aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc81a97-037a-4048-b5f1-e9e2c36829c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d94ca0b-341a-4fe3-a929-813edb75fd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879fc851-d9e3-4718-8ecb-42f4558a4fd6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0681344-2647-4326-9a8c-949cbeb4073b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf262574-7e1c-44a0-a85b-2ac78c283c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e81045-afb6-4e68-8131-626c2c2b5732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a4e778-1579-411c-ae48-c2c54fc459a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e2c56c-5d6c-4710-b31e-1d0a504b58f0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f93f8e-3495-45fc-abd7-66d8836b5b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda0bc8d-0c08-454a-a42d-4711fd2c89d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70ef713-af07-43fc-a4db-ab8045ded344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f76366-5977-47f7-90c8-9f49af466938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa44e2a8-533c-4aaa-87b7-a123594e9bcf",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4281ba5f-1775-47bc-b38d-c5c1b963f93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6743f4-583d-49e4-a6d0-ab0f876c59e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19dc972-2740-4b5b-b4af-fad908a4eba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e96228-93cf-4584-ade1-9f5026dab13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9d2b30-ba72-42c8-aea0-407e6c965fef",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076fede2-c76f-46f3-916b-d335f26f5316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca26486-1511-44f4-899d-1a9e15a2b35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bc6583-c6d5-4b23-b00e-480cc946e706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe32f0eb-61b4-4684-9caf-312e0fd7534d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca0f341-1b48-495f-8041-ecdbf7169802",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2fcdcc-e70f-4395-bfa1-5b1d0a22cbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b1fcd7-740e-4575-94b2-0c8dde543c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2861c059-6080-4b59-8aee-ddee487c459b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30eb629-0701-45a2-a661-8b3027f55ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5473e571-6240-445d-be88-cad673e68ccc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e766cf9-c14b-45e6-92f2-fe2e26f12c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6b9004-a2c7-44f4-bf8f-992a89bf2c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7697a1-e108-4388-bd7a-abdee347ea10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb2b426-249b-41f4-ab69-aad4133a9059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d49818-ba5b-4db6-9e4e-9f2d48bdb83a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91cd4cf-7084-4db5-9617-6bfb149daa57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735a6703-f409-4d09-8ae5-544cbc8514f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cda376-5585-43b9-a133-4e3020b58f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3639b059-2e36-45f0-a243-caa6dd308a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a4e6e8-a326-4c0b-b9e7-6a1da4205631",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e7160a-401b-4086-962d-dec618e92498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf093bc2-f668-4ecb-8fbe-b8a5f3e79e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60a4a1e-49c1-4546-850c-52ffd29dbb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbdb398-8336-4f01-bbc9-5c1e2dea8e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81b300c-7b00-4b77-bc86-b1fa0a912be8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986605bc-1820-4219-a336-9d081eba6ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93a694c-b20f-49a1-ac19-8f4f4c9c8cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32048869-06a5-4501-beac-e582e79665d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90f4e0b-9a0c-447e-a40d-573e365e70d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeffd5e-f752-4089-bc99-6d7227ee459b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883aa663-98f8-452c-828a-a6bdd28f62e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061296d5-0b58-4f0a-a105-aeafa30b2d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a69014-4f42-4585-b8a2-b97462fecf03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37d5cd4-beb1-4cb1-91f5-859fe2b21c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9d5a88-0248-4cd3-a306-ef4eb60f0ab9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48258013-e65c-4471-a56c-526d3e13302d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb440f0a-c255-46f0-a046-f887e218ef94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85289a9-c638-499f-9064-98ebab0d1a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8454dab-9f09-451d-907d-9d48ffb902dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1756079c-63a3-44d6-99f1-4dbe26494442",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b404ee50-cfc0-4383-a1de-d3ed93a267de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9ac573-ec83-46a1-9bfd-18d823188f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f714089-c8d0-480d-8dc6-87305c77acf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b46248-93ee-4ce0-a5ac-3030e68f04ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9129f0fa-93b1-4999-bdc6-4d334a09601b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c649e42b-cd6b-4b42-afe5-bceba0cb1d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1caf1332-4306-40ff-ab2b-bed4f048cc6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6955ed56-935b-468a-9386-d21dd64ea883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5264a9e5-14ce-4a87-9fa8-cdaca1fa9010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4365e4-befa-4449-b77a-464d0c2182d3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05918540-77df-4dc3-95a4-f903c122ddc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3444d51f-196e-448a-9439-774b9c635501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eada52e8-eae4-4df3-bc5e-fd1bc7166599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15605abd-db7a-446d-b68d-d26eb8c9d4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9caec91d-3b02-44e3-8fd3-31d0a9e80230",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33efea73-4ef6-47f2-9bb1-e6f28edbe2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0d742a-2192-4d43-89ea-a50a4d65c267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1def1ac4-bc19-44be-a3cb-2bb9447896be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e62ced-666f-488c-8b24-858c0f2e5c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c32825f-a3e9-4245-a454-adc46844b0ad",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6f58ee-1d49-4dab-8a2f-251c1c041107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3572dcac-2f97-45fd-b890-f2972d432c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26daf603-51d2-4488-9ee4-a45c8b0f69d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aee124d-39ce-4fe6-8b48-0bb99a4ccf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b9bdbe-cc6e-4b4a-99c9-fba0ce33e75c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a684d77e-5d12-42c5-a499-7727390f87f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb4f1d7-8f77-4e0a-9142-669102d993d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eadbab0-d042-4be1-b32e-6b466d092d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc223fb-8029-4ed1-8d40-94f0aed83feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c0a268-d5a8-468b-95f1-5394b39767db",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8403f2-6628-480a-bdf0-bf5b63ca7c59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d126b1-e92d-4db5-9e36-17ad2bf8650d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7773d1-c5c2-447b-8d27-294dda9ccb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e53d5ed-7b4b-4706-a16d-4f9cc8c0c5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f468087-2707-4d65-a55d-e1d3eb620999",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586969fe-5bb2-48d3-b31d-a68bdb9238ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5fa5e2-9a7b-4eff-b3bf-6d5a6db02201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a481b820-9051-484b-b581-ae6292c66fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062f738e-5c97-4c26-8860-07071bcc47c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f924c6-e7d5-45b1-b415-80ed92949fcc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1187c8c-7695-4183-81e7-01904388d638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f067ccf5-5b67-43ce-a946-33ad39ca9dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71211d4a-866b-49e6-b586-8682cf35ea3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1231c25f-ae51-444a-83df-cac1d1c479e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165cec15-de6c-455e-a14f-d4cfb8572d2f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b9a08a-5522-4975-9281-219586abc017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79745543-2b79-4185-95cb-041c10f92b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe064127-55b9-4013-92df-0efd0b49e4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abd9851-8c22-4e57-a841-a63b11b4a02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8ab050-24f0-4f03-b317-1b89858c8e1f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea6ec99-32ad-414f-8051-004b2e053ff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51b76851-8742-429a-81d8-5b2f11c67dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b517a188-fb3b-4819-b2b1-7aea1ec6b478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a433c06-47bd-46ea-bc1c-f5cee2ad1afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb10499d-ae51-45b8-a09a-c4fadd3fc990",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b0ee43-4997-4099-8c9a-c7890671b56e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c17969c5-c049-4987-9029-bd2b587bcf60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0ae487-afca-4f8f-ae45-6dd3451cee01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514e398d-bd75-4540-b7ad-5c5ee3fb6fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa117153-b795-46c7-bf30-b5e22fc19da4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17334293-232c-4c22-9dce-b7247a4d7cb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6340cdbf-048c-4d53-a77d-61e8e765e511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d317f2-f64f-4377-8c02-d7139aeb87e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c93bd5-1c9f-4c84-aac8-1c2aef094246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821833c5-1a2a-4ca7-81b6-027001b7ac53",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d64243d-c52d-44ac-af77-245e163b137e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c33b84-d322-4345-98b5-ac3fe871c4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7072eaf-4133-4b1f-8413-5d5f200178ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ec9550-5362-44e9-b41b-8fbb514e128b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bae251-dd86-490e-862f-44972fb0f2da",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7499f5-0f07-4299-b6e2-10e2864317b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b41a716-2458-4948-9c06-977983ece051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fbc72d-236b-46c3-9709-7b9a7c1b7a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a38eef-f10c-4c20-a651-8eb3e7e56783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5051b5cb-b9f2-4bdc-99b4-10543312f9ae",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534af5ef-08b4-4cb5-a0b6-a800b4e3afa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb2e0978-34ed-474c-8840-8dc813f5bc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f005d4ff-389d-40fe-9b07-98d543f52bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f85f372-6acc-4662-9b2e-2e7ea9c0a3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8041a586-a81e-48ea-98ea-d3a217d2c8bd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e38c85-5a1e-458c-8c6d-4d6964b03614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59012fcb-c2ca-46b3-a84f-5f92a030fc4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf373fba-73b6-45bf-8489-c632f1949b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf1f30b-f220-4b1c-a7ce-86f9ba17d477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79eb9f9-571a-422d-9304-ea36594193a7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7189d484-94d2-4436-87f2-676db8d9f7d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd0d8b09-689b-462b-9d80-a9ef49b699ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007191ff-b3d4-455c-9960-2e43165546dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28dd493-f2ff-4526-a512-0ff288e1bfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a18400-0bcd-4f80-a121-60cc2c5d00ca",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cb47e0-b927-42cc-b57c-712331f3d7ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb97d8fe-45c0-4435-9604-4753180b522a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0792bd78-4382-4de8-bc55-46e431c1b400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143d24d2-82f1-45e9-9337-7b37be5aaaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47766f14-d456-4eae-88ff-12ea6f8350c3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4682aed7-1462-4e3e-95e7-907c068f2266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c8d383a-ed42-4fcc-9758-15698c19b9fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35a8960-0766-41d9-8bfc-fdc72c5040db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ea5bb7-0148-4775-8c23-c54f652a644a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19233eb7-2f82-4bd8-9be4-60beabd74977",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af69c5f8-414e-4a94-84bf-e562fa495950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0e20a88-9d7b-4d5f-8345-48e591fe0718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd628b0-d843-48fc-a131-0976963adf62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c7e768-8a4b-4409-b794-f7a63b190ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdbafbd-3a05-4b99-87ab-253ccdb1dddb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf38338-a55c-4c8f-beeb-182befb824d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c1da20e-949c-4a17-bab5-ca5d3d70ea8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50536c23-8f33-45c8-8145-d304a79a7da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748da2c9-f9a5-4765-a62d-f6a1f78acb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca8f5cc-934f-4290-bee1-07e78fa3dc9b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81e4861-f516-4b1a-816c-5ce02262ba85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54928f2f-2858-4537-91e4-1fc9f4046c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64f14ac-c259-4eba-8c03-5c8dadb92700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe6244c-6dcc-4a6d-9fe6-0fc46e21f19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc61cfd0-1737-41a9-8f40-4434a0bc17dd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff94480-39cf-4649-a22c-24e74d8412f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b919b45e-e558-4321-a3f0-1e9533a0af68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcb6f09-6760-4b4c-aa76-f45c1f995772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4946e42-25f4-4f17-a813-a7eadf115623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cdf53f-a912-43c0-bac1-c0853e0e21c4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560be553-6195-47be-8026-2ab913d39c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5e6b3e3-a2dd-4d5c-ad17-6a8147acc75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285ac6ef-a2c0-4113-9606-1d17324b0408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f209635-61b1-4775-9f24-57cc274fbb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4210d73e-e875-4425-bc09-4866215f7921",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc81a56-3206-4765-9a39-90d7800ad7e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ccb1f99-93b5-40cb-8245-9f26d57cd603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc70c5d-cd0f-44d1-bc80-21044216bd70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72997ef-09f2-40e1-8d36-424b3666e7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e48af2-eaa2-47fd-8a2a-0ed84bee6b8b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e536c1da-e854-4d94-8d52-0284c758651f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80a59ce0-b472-4c2b-9f9a-c81873b10644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430d1fc9-5c53-4f27-9e10-2862bbceaa95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281091f8-11ce-4929-9a70-b5facaea7fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf7eef2-d07c-4c4b-a099-31fa5b5bef93",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbe52fc-e443-49fa-a702-1b445f273ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9348878-84d9-4de1-a754-13a0262f28df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d02109-6972-42b0-a6a1-907011ca83a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d8d879-765d-42f9-83c3-06bb48d63d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bfbc49-6bee-4a84-964f-c8907268aafb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d7380c-7861-4d72-bac0-83c212248e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90fac287-e98f-46c1-96ec-68f85f91162e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef05aa7b-a4a1-409a-8006-b77108323c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b415d61d-8e91-444c-9c4a-c24f41c8373f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a377a0-2b23-4438-8cf2-ec72c02beff8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f825a69-8c9c-4b06-9eea-e7f666f0d06a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b112553d-cc21-463d-a486-6d5fc22b79e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9efb18d-3b29-4d5f-8450-a97fd44dbc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1153e9eb-d1d2-4f03-a4e3-bd7618019804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf3f4cb-ba62-4926-9542-4f5e068a30c7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bea24a-722f-41e1-a6ef-d635a991d0e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aedeaae6-81c9-4a94-9d6d-c6cb84343c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2554757-ac6b-4f24-abc4-4e7b2833921d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f9ed5f-cf8d-4887-b4ff-262a5fe5b876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21299bd0-94c0-43f7-ad6b-6979b6f590ef",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1675664c-1a81-4fa5-a7d2-70c3039a62d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d003f91-3589-4822-9e93-e92e842e63e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef9debb-6391-4c3f-b372-f70cbbfaf143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cebcd25-a1de-49a1-ae9d-6b606ec5df18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79caf2b-d148-49ce-8fc4-0491fa8064ac",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b6756d-8b23-4a7e-8f63-570d29385585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2c3b3a9-49e1-4bd8-8678-7a33e5aaa661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c92cbb8-19c5-4e57-bcf9-a057cf8a5634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c125f3-cc5e-4f25-994a-b3e3f46335ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77916b1b-e4c3-4f88-8b00-2cdf7ac22f43",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d998ef2-4abf-4561-bd59-74680138b9d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "737b9890-6f5c-4eb7-a0d6-469807e1c75e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3945a374-3563-4be4-9e8e-f9bb25c4f012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275a5fb4-6fdd-47ff-ac78-b02b4ce0592b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c708d76-033b-4cb2-9a37-bb5bcd90bc1b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588868a3-bf2e-4bf1-bc5f-d5e77c8703c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "960bc774-abfa-454c-8d4b-f1bd842b772b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b321ce-ceb8-4210-8c49-b5b24c182fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24229d2b-a807-49a1-b78b-1018053f8255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93729911-5c49-4427-baa5-973ec0c825b4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81842ee-aae0-4c7d-9b3b-d5bd21b99120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "300a025d-157c-4913-a1dc-6d97a84f8679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756bb2fd-469b-4f83-9ed6-a6cd739906f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50602b0b-6b62-4512-ae28-5c62b8c2142e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ef260b-49d4-4d6a-bc78-37c4f9138a31",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea33174-7d5d-43ca-bfbe-2d64be7a28e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3d06942-5cff-4bb6-8800-6c0630f64185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262419c0-88d9-43bf-a079-b8021d6d45cd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea88ea1-ca71-4edd-b506-3c2950d31944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc3a8b0-c1fd-4f11-933d-0ab440d61552",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c8f58a-a8ca-4d35-927f-e283b9ec3fdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c574603d-f8d7-446b-aeb7-8610632b2fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2874c0-7137-47fd-bc17-10ee19b85d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83f4a16-b47b-4c61-b2ac-668b4a55dd36"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "150829dd-32c6-44a9-9bd7-6b77c04a66a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab297482-2ef9-4502-935f-00f86738ffc8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f6b565f-c4d5-4732-bc8b-c0ab6a5386eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe8a8745-79c8-4c92-9a82-21e303ad7b00"
                    }
                  }
                ]
              },
              {
                "id": "12554f8e-7027-4061-9424-0ea6b0679fc5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21cde973-a614-43ce-a6c3-abf57b2280c1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4858fd09-fb54-4554-a14b-1c8848fedb22",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "be405ff7-1b41-4b70-8d92-44ddf04f15ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2126e2b8-1ac4-42df-9143-a615ff3f72af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59b16e28-5ad8-4637-a947-8ff6fafaabbd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6715853e-0e30-482d-921a-26901d7caed4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb74b2f2-f1b3-43ce-9f22-718adfc2d4ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42eae5fa-2f09-44c3-b1ec-c5487103645f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "562faafe-c3b6-4af3-be03-a36b2fd8f497"
                    }
                  }
                ]
              },
              {
                "id": "3aab83ab-ac37-4e37-8d6f-dcc3dcc11d87",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f3df99b4-b773-46ca-bc87-d1d1127d57d8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643d1e07-0ceb-4eb5-8167-ef5a14c63cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ed14eec7-c897-473c-a1f9-ac46e25f4636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a26b49-4aa5-455d-af71-871ac0709fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738e0df8-8077-4788-aba7-ff6bca642a95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1e37b2a2-882c-455a-8fbb-52600a66441a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5807b4a4-2ab7-4bc5-8194-3d74d722bd3c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b37006b6-c2ef-4c34-bad5-21ba37141472",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1865e55c-76f8-44e3-a511-64cae73f5185"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58342555-67dc-4530-9ce0-484145b54c9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a3de139-2cf6-4e3b-b887-9af86d64ee5b"
                    }
                  }
                ]
              },
              {
                "id": "9c70bafd-0b28-4ece-8c6e-72f1ae158dd8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c86eeeeb-a726-4355-9ca1-3a7d5ff1dd9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "683ab9cf-a69d-4055-848a-207b54783a7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21a0f1f5-54bc-443b-aec3-eeeac507460c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f0f0a92-f00b-4f1d-833b-cc0e8429bf30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b85bc015-8e80-4c54-bccc-daffb4f28f1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8a7320bd-fefc-4342-8825-6ca291ad560a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5ee973d-6d23-47e6-81df-6ee267df685f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1087b526-b370-4353-bbf4-8bf2c333f125"
            }
          }
        ]
      },
      {
        "id": "4470185b-2781-4bfc-a794-7de6ca6bd322",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "93f0fa0a-3d56-4370-9e19-d3aa8c0c8389",
            "name": "Negative Testing",
            "item": [
              {
                "id": "292b4c0a-56e0-4f73-878f-f909eb2f83e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ed04ef1-e343-4d13-99f1-f8927859736a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c7528a-06ac-4c12-8c92-9b1022d2c0c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e0640e1a-c5ab-4dab-9f29-58bf092a532d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36be3bde-76a9-480a-b57f-3cd0ad64057a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "245c75f0-00b2-4636-9333-649bc204f1a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42e962a7-6f91-4099-9c0a-cc0bf0ff3440",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05e04801-26c8-457b-afe8-b98bfe820a7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62411787-33d6-4233-9617-2b16b7a36e36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80dc9e37-8561-49af-8322-a35dbec80dd4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b57b72b1-c7be-4ec5-8f50-c9ae786616ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dadc97af-31d6-4372-85ab-ab7e4483d0e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35a082dd-b5d6-467f-bc28-b23a2b197032",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "822c1846-4675-4813-ab45-9479cc3648db"
            }
          }
        ]
      },
      {
        "id": "3404b1f7-9daa-4530-ae0d-a88ba81bbc15",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "84577e6a-46e1-44ba-bfbd-dfb332c9dc70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad73a14a-384c-4c1a-8dcc-16a9f4f4e9f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "afce56cf-e81e-4869-8bfc-8b3f6d93ad44",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570ee5f9-e314-4ee2-9ca5-a6e2d0df6631",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a413c4ec-6a5a-431f-9b00-a7312e57b1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35361428-d9ae-425b-854c-b64602a0b66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36a06b8e-c117-49a8-aeac-e8a20611cdef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92575f73-dea7-46ad-b4f3-be9a2373ea05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9633e485-9da0-4a9e-8c0f-f2b9c70f1d5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8111c3bf-de66-4d0c-a6e4-df27ef67a20e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0d6e479-0861-4ccf-a3e6-c0d60b55423c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83578266-49f0-4fb5-8475-aedf0a576d34",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2c2e277c-d4ad-4b70-b2a4-4ff17c646a55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2587ec2f-0a43-4e29-a412-61be87a4633a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2aa76d0-7744-4693-9e11-6f095bdc1c59"
            }
          }
        ]
      },
      {
        "id": "21622921-c46d-4e43-bc44-72c093d0b6cd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8cbef362-463e-4300-a309-033bdf39ffb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6982dab8-f363-4a39-a084-8a130b1052c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa778c81-bfdb-42f0-8358-6d045d5b347b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a993bb8-1939-4ef1-b2cf-c345ff62831a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9b64fde-0ade-47cb-8162-1fdd2e3ebe65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b45b725-c459-4c0e-a801-fd569f82f6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0378c98c-793e-4c53-bc2d-8bc98dd5a763"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68f114a3-dfcb-4630-abc0-b41c23435996",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3a94bf8-dd7b-440b-868e-e3bd5e061d44"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbc7162c-9f51-4248-af42-5d4414864a49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dc51188-100a-44b7-82e8-8be683b0f646"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6e2a0e1-ea99-4ffb-98c0-98a43e0ce104",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8da6aabd-0b36-466c-9a52-dbf958d2be56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a6e3dea-1ae1-43f6-8e87-1d4e3d76a690",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3c49c69-990b-4f35-8d3f-80c00e3fc19a"
            }
          }
        ]
      },
      {
        "id": "e9d80899-9112-4b40-b07f-6f6ec38f1acc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3248baf-4434-47f6-9369-595371b583b4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c265b04-e847-49f5-991b-bd232f9b1ba7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d7b2961f-6d27-43cb-b87c-561bc57e1f3a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73dffb71-2d25-4f91-aed3-d910b8b1b1a3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f248562-bb4a-422a-a711-d62e511b1575",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 112.57394366197182,
      "responseMin": 12,
      "responseMax": 11684,
      "responseSd": 741.8262330393112,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693873920818,
      "completed": 1693873964412
    },
    "executions": [
      {
        "id": "128eeb05-7b0f-4724-903f-ed55c48f298e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "71abb321-831d-4877-a58d-5b5fbab39b4e",
          "httpRequestId": "ed8b4c6f-0527-4973-9daa-e7c4adb64126"
        },
        "item": {
          "id": "128eeb05-7b0f-4724-903f-ed55c48f298e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c8ae1fb7-a21a-482e-bea0-a3e162d4943d",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "016fbc53-61fe-4070-8aa7-17a44500d5c3",
        "cursor": {
          "ref": "0e37abe2-b167-4e81-8b6f-889500b601c6",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9e1b9b08-37d1-4e86-b215-889b9cb33be1"
        },
        "item": {
          "id": "016fbc53-61fe-4070-8aa7-17a44500d5c3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "577f68e4-d448-4f24-a6e6-52fa98a713b1",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "4a25c378-1654-4f49-ae59-e3510d3bc884",
        "cursor": {
          "ref": "7de953a6-80e9-4d08-a349-be43ee5c6f4a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b9392372-4492-4bc9-b707-901a05dfe51b"
        },
        "item": {
          "id": "4a25c378-1654-4f49-ae59-e3510d3bc884",
          "name": "did_json"
        },
        "response": {
          "id": "76599286-3e8b-471b-b31a-8fcfd6b0666c",
          "status": "OK",
          "code": 200,
          "responseTime": 170,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3aaeef-5fa5-457e-9835-2c84e12ee992",
        "cursor": {
          "ref": "28e2a4f8-6cf4-4513-86f3-419c3f098db4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e0e8785a-eb00-430e-bd8c-7dce1887a2e3"
        },
        "item": {
          "id": "9f3aaeef-5fa5-457e-9835-2c84e12ee992",
          "name": "did:invalid"
        },
        "response": {
          "id": "27e59d1e-d75c-4a9a-978b-f1c774a68437",
          "status": "Not Found",
          "code": 404,
          "responseTime": 847,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3aaeef-5fa5-457e-9835-2c84e12ee992",
        "cursor": {
          "ref": "28e2a4f8-6cf4-4513-86f3-419c3f098db4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e0e8785a-eb00-430e-bd8c-7dce1887a2e3"
        },
        "item": {
          "id": "9f3aaeef-5fa5-457e-9835-2c84e12ee992",
          "name": "did:invalid"
        },
        "response": {
          "id": "27e59d1e-d75c-4a9a-978b-f1c774a68437",
          "status": "Not Found",
          "code": 404,
          "responseTime": 847,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f51420-a1d7-4bdf-aad2-55e4f5f24d81",
        "cursor": {
          "ref": "f38f2445-345b-4080-b600-5307624f8707",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8df0f574-0916-4613-b7d8-10afc8cad89b"
        },
        "item": {
          "id": "44f51420-a1d7-4bdf-aad2-55e4f5f24d81",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4b4cf1f8-1252-4134-a0fe-8b75edd8f5c5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d856306d-a188-4677-b595-5483d9e00156",
        "cursor": {
          "ref": "e89dbd1b-1b6a-42c8-9398-230c93281f21",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ee5eb66c-321e-4164-96d2-31d4ed151f77"
        },
        "item": {
          "id": "d856306d-a188-4677-b595-5483d9e00156",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9a8d2e06-4674-4a34-b7c5-e54fb1d5b5d1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e769f67c-7b8a-4df9-b253-9889d67960dc",
        "cursor": {
          "ref": "72fe8437-b2a0-4eb7-ba02-4b2b53308c8a",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2e3cdc58-ee28-4761-8fa4-dfd8371a1ee1"
        },
        "item": {
          "id": "e769f67c-7b8a-4df9-b253-9889d67960dc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3fb8af88-8f9e-498d-bbe1-391e3c0e45d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dc1f0a-d1b0-492f-b29e-8b9392da3cff",
        "cursor": {
          "ref": "cc33cd4d-c52d-48d3-bc6d-38a0967e00ad",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "853717f3-1640-4410-89a7-f998cc92f920"
        },
        "item": {
          "id": "28dc1f0a-d1b0-492f-b29e-8b9392da3cff",
          "name": "identifiers"
        },
        "response": {
          "id": "452fed82-534a-40c3-a966-42fee726bc57",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b811bcb6-cab1-4cc1-83f8-e14dfce5f47d",
        "cursor": {
          "ref": "8c033612-52f0-4bce-811f-229cd6ba24a2",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "283a531a-e9db-48cc-afa8-91efe93cf395"
        },
        "item": {
          "id": "b811bcb6-cab1-4cc1-83f8-e14dfce5f47d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cd84dc00-4e79-407f-aa7e-1bbe7240cc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b108af4e-87ae-4abf-a4c9-c6a0f5752d00",
        "cursor": {
          "ref": "16788589-ebe1-47fb-81ab-3dca0c8b7a91",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2ca3433f-a9e7-48fa-805a-e6f288e8143a"
        },
        "item": {
          "id": "b108af4e-87ae-4abf-a4c9-c6a0f5752d00",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "499318b7-85fe-4ee0-8763-e759bb636557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bd05c2-7539-45dd-b955-ef570de3af87",
        "cursor": {
          "ref": "6ad8b872-609c-4148-964a-5cf42b9a58f1",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "21ea2101-44f1-47c0-99a3-9213645f5aa0"
        },
        "item": {
          "id": "54bd05c2-7539-45dd-b955-ef570de3af87",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ebc1243b-f894-4924-992e-bc6dd0ad0760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af177e9c-22ad-407b-9cad-307e86c35d3f",
        "cursor": {
          "ref": "ea7f1480-2c79-4f8b-967e-479b22fd00c0",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ec7ae4af-50a6-4566-a924-0cdbc051ee71"
        },
        "item": {
          "id": "af177e9c-22ad-407b-9cad-307e86c35d3f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "924fedb7-750b-4f0d-9bc8-12c016ffe363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3ca290-c657-4ea5-822e-662962dcf50a",
        "cursor": {
          "ref": "a714f544-ea52-41ea-925d-277500cafd4e",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "60ba5cef-c364-478b-82cd-ef2d32709027"
        },
        "item": {
          "id": "eb3ca290-c657-4ea5-822e-662962dcf50a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c1ad916e-e981-490d-a2e4-d8493dcf5d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cfa4e3-afce-4994-b1c5-4a4b2da6377d",
        "cursor": {
          "ref": "cf90c239-a5ab-46fa-9fc9-a370a4326802",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c94cb71a-7451-4e03-9f6e-412fa17e82cc"
        },
        "item": {
          "id": "87cfa4e3-afce-4994-b1c5-4a4b2da6377d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "97c176e1-f718-49a2-85f3-aa23a1f90a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf80410-d599-4b4f-b38f-88c78a7350b1",
        "cursor": {
          "ref": "5b091884-80b9-46fd-af11-8153fefa81ba",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "92b3e0c9-36db-4cd5-a136-473f1430119e"
        },
        "item": {
          "id": "9cf80410-d599-4b4f-b38f-88c78a7350b1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "115f09df-f078-45bb-bf0d-e9821e913ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31122c9-a7bb-4d06-ac73-51d324aa5c1d",
        "cursor": {
          "ref": "0ea7c897-a55b-4f46-96b2-d6b2b56d61a5",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a224533e-3e7b-44c1-ac60-440b6301f341"
        },
        "item": {
          "id": "b31122c9-a7bb-4d06-ac73-51d324aa5c1d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "06110ca3-3728-40bd-a222-4d36edec6989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcbfc46-1c51-4b2d-af70-a5c8cf3fbfac",
        "cursor": {
          "ref": "61474fa7-2fbb-4a36-9365-a93ac2fc68b1",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5331179b-381a-47ad-8d13-5e4179d7f865"
        },
        "item": {
          "id": "afcbfc46-1c51-4b2d-af70-a5c8cf3fbfac",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ef1c0e85-f8f1-4c1a-9d76-ce07e014a9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3aa3af-00f2-4151-b5a8-37a009f4bfe6",
        "cursor": {
          "ref": "cf05318d-c545-46cb-9b6c-88cf9874b6b0",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8a6cd87d-5ff8-4b94-956c-8727b77891ca"
        },
        "item": {
          "id": "9d3aa3af-00f2-4151-b5a8-37a009f4bfe6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "780df4af-ad0f-4d23-aa7b-9e5c961abfcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92756b1-6f04-471d-87da-1c2612d81b49",
        "cursor": {
          "ref": "e2382fd7-d26b-4728-aa09-da5b4c96e52f",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bba9d10d-2fc8-42ce-8cb8-7419fc6e28cc"
        },
        "item": {
          "id": "d92756b1-6f04-471d-87da-1c2612d81b49",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1c4abf01-e994-44d9-96f0-e26d875b13ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3a1ab4-a476-4602-9124-e4b5142ed047",
        "cursor": {
          "ref": "a01e9d6f-4201-4f4d-a9a4-88e36fd18a36",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "354b5862-0389-41ce-8b6a-ebbc91a12d54"
        },
        "item": {
          "id": "5b3a1ab4-a476-4602-9124-e4b5142ed047",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "168e106a-cd3f-4ec0-b48a-7ea4d33630a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0198e6c3-3601-4281-a819-61e5ac522c26",
        "cursor": {
          "ref": "61a06b6e-ca15-4069-af2d-483719b3a709",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c13c8aba-ef8b-4e02-ba64-10f5f561b8e3"
        },
        "item": {
          "id": "0198e6c3-3601-4281-a819-61e5ac522c26",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b0076be4-08e5-4aed-9292-eaee5c9eeec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47e2dcc-991b-421e-8629-f4029dc83699",
        "cursor": {
          "ref": "03ef8d7d-1927-4fe3-b73a-b01dafc8e05c",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cb1a49f6-9d09-4984-a42e-248f7d4c633c"
        },
        "item": {
          "id": "e47e2dcc-991b-421e-8629-f4029dc83699",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "aa850a9a-fac3-4dd2-9f8b-01ae45ddc805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2491afbe-86c9-4ee5-b0c7-bf9b864518f7",
        "cursor": {
          "ref": "2d588fbf-c5d5-4a76-a216-8570f5e7a991",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b546c782-2959-414f-bbe4-cbe4bdbf4747"
        },
        "item": {
          "id": "2491afbe-86c9-4ee5-b0c7-bf9b864518f7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2578a9ae-9d0d-49b9-8850-8e130de4f16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369fab57-173a-4b68-a33b-caf8c854f180",
        "cursor": {
          "ref": "bdec54b9-bc67-4b3d-982d-7821b5663c84",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b5591fbc-620d-4f0b-b1cd-1026bda1674d"
        },
        "item": {
          "id": "369fab57-173a-4b68-a33b-caf8c854f180",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0c3aed3c-ae2c-47dc-b034-d9dd8d5e54ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f735d7-a83e-4140-b5ef-c40e51c73749",
        "cursor": {
          "ref": "a77f3abf-c258-4a7a-8354-b44a71e10dd5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ae84d7ec-6d22-4dc4-aafd-ba7620109136"
        },
        "item": {
          "id": "89f735d7-a83e-4140-b5ef-c40e51c73749",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "db569fed-2b7e-4185-a5c6-439fbdada840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbbba63-5fec-45e2-951c-025482e4070f",
        "cursor": {
          "ref": "e49c5811-278d-4f5e-a328-0d6e64d25671",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b7c81f09-8674-4cf3-8083-eae95514e480"
        },
        "item": {
          "id": "cfbbba63-5fec-45e2-951c-025482e4070f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f4469ecf-f624-467a-9354-1f26a7eb6b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aed155a-db62-48df-9dd5-207e5cf18d41",
        "cursor": {
          "ref": "fb2ef7a2-fde3-4432-b9dd-48da8ba17725",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7910eafc-1d05-414e-b4d3-dc5e7485e74f"
        },
        "item": {
          "id": "3aed155a-db62-48df-9dd5-207e5cf18d41",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ac25b3a6-ecdb-4bb6-a024-795dd7a8e738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e9cb39-70b9-4d98-af6a-7de8984c6484",
        "cursor": {
          "ref": "f59b03bb-49e3-4ebe-922f-b70b365fae18",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "11debd1c-8585-4bcb-9cc9-0765a6777847"
        },
        "item": {
          "id": "25e9cb39-70b9-4d98-af6a-7de8984c6484",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1acff41f-90f3-4464-8cc7-e524ac0be5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17b2646-8122-4d13-8044-a473cbf6d49a",
        "cursor": {
          "ref": "5c7bffab-c74a-4ce6-893c-720dc9625f8f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d4372aed-e764-48e6-94c2-013297e33829"
        },
        "item": {
          "id": "a17b2646-8122-4d13-8044-a473cbf6d49a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ad399a82-1a9b-42e5-92ca-9289327d3ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc404300-5c91-4ca9-8c61-7e26162710d1",
        "cursor": {
          "ref": "a59ec618-fbd2-4c67-95d4-89fcc81bd56f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4d78e713-dd93-4912-b227-fd04cc41c683"
        },
        "item": {
          "id": "dc404300-5c91-4ca9-8c61-7e26162710d1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c643fb00-5434-4a60-a884-67fcd52866e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e1109e-56f0-42d5-9419-9b8b8f1aaaa7",
        "cursor": {
          "ref": "99e5e81d-6acb-4b2d-b782-9f8b12bd3b1a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c88348bb-5a15-4966-b5d5-9285dc28b0a6"
        },
        "item": {
          "id": "97e1109e-56f0-42d5-9419-9b8b8f1aaaa7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6b756dff-e03b-42b6-b6c5-65c818a13a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea400f6-3083-441c-a1cc-35785415ef9d",
        "cursor": {
          "ref": "b6ad9783-a263-4180-bcef-956bd3150752",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "edf437c1-8d31-4b5a-8c21-5c80b6d8f3fa"
        },
        "item": {
          "id": "eea400f6-3083-441c-a1cc-35785415ef9d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e00b4390-3309-4c6a-b58c-43df19186438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dec23a-303c-4495-b9dd-7134e6a4a24f",
        "cursor": {
          "ref": "0acf1d9c-0050-4242-8c5a-0fc87ad6e3ce",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a382d3fd-3009-4b12-9903-a906fba275a8"
        },
        "item": {
          "id": "90dec23a-303c-4495-b9dd-7134e6a4a24f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "238a57b3-ac3a-4a0c-90a0-8fa761c2794a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc2c5f6-b839-4fd3-b81b-ff049b53bfab",
        "cursor": {
          "ref": "41fe155a-c304-42dc-98be-c5de18c1d3cf",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9d0d7908-bfec-4bc8-a068-85603614f70f"
        },
        "item": {
          "id": "7bc2c5f6-b839-4fd3-b81b-ff049b53bfab",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cd6b5e69-5e31-49a0-a8e7-363e6f0a2d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441ceb26-62db-4de9-9f4e-294ebd114216",
        "cursor": {
          "ref": "0485afa3-f5c2-416b-973c-5e1e13e75968",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b649a76a-02ed-4537-a1e5-d1b05fd57a1e"
        },
        "item": {
          "id": "441ceb26-62db-4de9-9f4e-294ebd114216",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0a2da8f7-73d5-4568-a6d8-b60f08bc8681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd5b596-090e-4957-811a-a5d59ef5ad34",
        "cursor": {
          "ref": "99a995ad-9953-4baf-b4ab-e7c5957dc14e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9f4cec4a-4a67-4c2a-baa5-01529948b7a6"
        },
        "item": {
          "id": "3bd5b596-090e-4957-811a-a5d59ef5ad34",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f7458be8-7c38-4cde-a30f-b77eb3cd899e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b034cd37-7fe7-48ff-8b3a-dc21a82276f0",
        "cursor": {
          "ref": "98ff6db1-8ee8-41a9-b252-86358d30789f",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "eec1e840-3886-4f1f-b8d9-f1e1b924be84"
        },
        "item": {
          "id": "b034cd37-7fe7-48ff-8b3a-dc21a82276f0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9a2a4f31-9565-4b97-9c25-64aad9e277b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfde58c-aceb-4834-abd1-3992c325aca0",
        "cursor": {
          "ref": "f96b983a-aa2a-4515-b948-94fa51fba76b",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2591869c-6294-47a7-b349-fc05269f8eb6"
        },
        "item": {
          "id": "fdfde58c-aceb-4834-abd1-3992c325aca0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "70c2ac36-63c9-4f8a-a47b-0bb9576284ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d53775-bb63-4eec-b281-ee394f09bea9",
        "cursor": {
          "ref": "6be78d9e-d354-4f73-91f3-7e1799823ac1",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "22f3c3f3-b5b7-45a1-a6ad-6d347ec79ffd"
        },
        "item": {
          "id": "d3d53775-bb63-4eec-b281-ee394f09bea9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6dab9fa5-7cc9-4d9f-b197-0b66b5709a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a97e3e-60b3-4ca7-b876-c156d8be19c0",
        "cursor": {
          "ref": "9f771e70-22f3-4b80-bcd9-dde147ea3ac3",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "702a226f-49ad-47ce-8908-f60ffe2ddb88"
        },
        "item": {
          "id": "93a97e3e-60b3-4ca7-b876-c156d8be19c0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c153277a-93c6-49e4-929d-a3ec585508b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5757fe20-8620-4f91-81b0-32507e364283",
        "cursor": {
          "ref": "dd4859d0-f28f-4a14-9429-66a2e4c5e93f",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "032c62ef-df06-4c37-a953-385961ade159"
        },
        "item": {
          "id": "5757fe20-8620-4f91-81b0-32507e364283",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b59634e7-adaa-4c0b-bcfa-515b0df95242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5913bc01-0167-4f97-8a2d-c1f35a6e89a2",
        "cursor": {
          "ref": "130a54b2-f9c3-4b9c-a72c-e35895501d45",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5180ff80-9888-4232-97e3-49d899ae31ea"
        },
        "item": {
          "id": "5913bc01-0167-4f97-8a2d-c1f35a6e89a2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a46309ee-b76d-4669-b7df-41ad27669592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf533717-675b-4b5d-910e-300beb5e64e7",
        "cursor": {
          "ref": "9b218918-30f1-4a7d-be37-86ef822c96a6",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3ccadcd4-48ad-47ce-98b6-ac536fe50e42"
        },
        "item": {
          "id": "bf533717-675b-4b5d-910e-300beb5e64e7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "35009f1f-988c-41b6-81ca-7cdd0abd6cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9323295-5323-4473-90d2-958bb84cdb0c",
        "cursor": {
          "ref": "a756accf-e32b-4ec8-b1a1-b24985928541",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "10bbe1c5-d3ea-4c21-8760-44e4e9dfba83"
        },
        "item": {
          "id": "a9323295-5323-4473-90d2-958bb84cdb0c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0879eb41-9918-4bd6-8d22-378674a23dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75049bce-be36-4782-83ca-f10f96f6eb92",
        "cursor": {
          "ref": "9901969e-31b8-4146-bf80-7a2be7524419",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bc43b9e0-d047-464c-ab82-ecb05edaba0d"
        },
        "item": {
          "id": "75049bce-be36-4782-83ca-f10f96f6eb92",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e1cbc123-ff86-4caa-a012-7a2766cc9749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c729b072-cec3-4ef9-b597-2cf453fe4c6f",
        "cursor": {
          "ref": "44af4166-2bcf-41f8-951b-6953e164752c",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "637370c1-0048-431b-a703-f284f8fa25cd"
        },
        "item": {
          "id": "c729b072-cec3-4ef9-b597-2cf453fe4c6f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c80419ae-4588-46c8-8914-dcb11ee0680a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54d901d-d4ca-410f-891a-376888764de2",
        "cursor": {
          "ref": "4d0df0ad-e9ee-4662-9995-d35c252c7273",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "77b0bd02-e858-4412-96a0-4217ce50c7bb"
        },
        "item": {
          "id": "e54d901d-d4ca-410f-891a-376888764de2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4ff2529c-7bbf-4558-ba2c-da6276397585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72aec87f-b23a-465d-affa-1d34e5ec4c80",
        "cursor": {
          "ref": "5f475dc0-bc56-4f7d-b510-a9d5831abe80",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e57f72ab-8c1a-48d5-b7d1-41ce5d111ba2"
        },
        "item": {
          "id": "72aec87f-b23a-465d-affa-1d34e5ec4c80",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "201d6e19-6c6a-4db7-befa-37da5e74426a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea0818e-00e3-4536-9299-a9942ca0bf98",
        "cursor": {
          "ref": "dfd3b56b-a0e1-4deb-ac75-af19053c385c",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "140ebd7c-2d29-462e-966f-f9a9edd7a32c"
        },
        "item": {
          "id": "bea0818e-00e3-4536-9299-a9942ca0bf98",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3825c06e-99ce-4817-9f63-5cb5af6eba97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f744a4-a5a9-4310-b033-3427a5eb4443",
        "cursor": {
          "ref": "cc5582c4-d605-4481-8274-e896bce80584",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e14b3ee2-0bb6-4ac2-a6bf-0d0db81fad4d"
        },
        "item": {
          "id": "f0f744a4-a5a9-4310-b033-3427a5eb4443",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "92ba45db-d9fa-4c82-b121-d2af6cd2b263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66c014c-06ce-439f-84ac-0dca967616ae",
        "cursor": {
          "ref": "4bc89367-731b-4948-a2ca-cf84c7e5495a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c9efe19b-6f38-41f3-951c-4086513fa491"
        },
        "item": {
          "id": "d66c014c-06ce-439f-84ac-0dca967616ae",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "49b27d8c-cf18-4c5e-a2a0-d2e334f6843a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f21858-ad27-4655-b35e-056ae1cd35bc",
        "cursor": {
          "ref": "3179c3d7-3335-4a06-a053-2fd4c8bb5a52",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4f674de3-783d-4f62-b740-910cc3131f7f"
        },
        "item": {
          "id": "48f21858-ad27-4655-b35e-056ae1cd35bc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6a3918ac-bda1-4831-8334-dbe59701f5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d93e6f-7372-48bc-87e9-2731e68621d8",
        "cursor": {
          "ref": "12c10981-b4f6-4c03-bf82-41df9864a7d7",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cfc6f427-a51c-4520-a854-5e93829ec41e"
        },
        "item": {
          "id": "72d93e6f-7372-48bc-87e9-2731e68621d8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "69400351-3e7a-4d77-ac96-088bb96a9823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efc650e-162b-498d-a819-2523f14579b5",
        "cursor": {
          "ref": "b193c9a5-2dcc-4433-a0b2-535a1c462cf5",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e7bdaca8-6a42-40b3-8f5f-13cf9db78c9e"
        },
        "item": {
          "id": "6efc650e-162b-498d-a819-2523f14579b5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "eab6ed6b-e450-43aa-b065-7c0302cf9a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eafeefe-d631-4d20-9b1b-40de5942226c",
        "cursor": {
          "ref": "9af4f7a8-b979-423e-b6f2-83528354e36b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8eda1ee4-5929-4c01-8433-490ef9cd789b"
        },
        "item": {
          "id": "9eafeefe-d631-4d20-9b1b-40de5942226c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9935c8b0-25a6-4f0c-9dd4-ffa126453c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121b8715-4e3c-4375-95cd-7328e9ca0da0",
        "cursor": {
          "ref": "7736adb8-73f7-4077-b0b6-d47c8b40f699",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c48d3d26-86c4-4fe3-b5e0-25f7a34b3e1a"
        },
        "item": {
          "id": "121b8715-4e3c-4375-95cd-7328e9ca0da0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6976f7ad-acb6-4c9f-ba97-b9f2bbdc7803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0ab272-0a19-403e-985b-781afb13824b",
        "cursor": {
          "ref": "be60591d-025c-4487-8b69-473b08e8eeed",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3427c19e-a57a-4e05-a445-977f7313f7a3"
        },
        "item": {
          "id": "0d0ab272-0a19-403e-985b-781afb13824b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "20a9c99c-53b9-4079-927a-da6aa0efb6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4142d5a9-cef4-45ca-ba1e-3575e8c92a94",
        "cursor": {
          "ref": "ee768b6d-c951-4841-9240-9e35fce55421",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c4a7a627-d5c4-4dc2-a9e1-e17b1b9ddd44"
        },
        "item": {
          "id": "4142d5a9-cef4-45ca-ba1e-3575e8c92a94",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "52c9c4fc-92ee-41c3-991a-46ebf9536b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1ab768-f1f6-4276-a9b3-32dab4a1be10",
        "cursor": {
          "ref": "eb7b016d-b1fb-4948-88aa-e2aae7859dac",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "178025e8-3fb7-413a-b065-b6a090d4631b"
        },
        "item": {
          "id": "6d1ab768-f1f6-4276-a9b3-32dab4a1be10",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "35774d90-9ff4-4b8b-a56c-67705437e1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a770437c-c1e0-4513-b4bb-519f5c1b1d85",
        "cursor": {
          "ref": "7231a72c-af49-4679-8764-e51f2922233f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "94d89613-b9ba-45b7-ac13-639eec314047"
        },
        "item": {
          "id": "a770437c-c1e0-4513-b4bb-519f5c1b1d85",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e732a589-1c3d-4e5c-8921-cb37c5cdc93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aed738f-9978-4659-b357-a0d75647efc8",
        "cursor": {
          "ref": "a0e81869-1c63-47cb-ba29-0575c8285426",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7477edb3-c3cb-4308-9f04-9068b88cc61c"
        },
        "item": {
          "id": "3aed738f-9978-4659-b357-a0d75647efc8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "945b939f-c71c-423b-9629-f31bfe0ea00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1098c19-e986-4f13-a032-152ad55f79fd",
        "cursor": {
          "ref": "e6480fdc-ebc2-4ef4-b25d-8ef95bae7b3a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4c078cbf-6bd4-4e50-9ad4-0ee777acc9f4"
        },
        "item": {
          "id": "a1098c19-e986-4f13-a032-152ad55f79fd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0fe377a6-1873-4ecc-bec5-42513e15c018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1ccde8-6128-4dc8-b3ff-1013274367ea",
        "cursor": {
          "ref": "9f38afc0-1e35-4380-b844-a6ec22ed45e5",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4792133f-cfd6-4978-9ed8-60b1a048a036"
        },
        "item": {
          "id": "8f1ccde8-6128-4dc8-b3ff-1013274367ea",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6b28817c-3753-4879-b1db-cd4ebc919dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0be0172-c1ff-4da2-8b6f-80d952433795",
        "cursor": {
          "ref": "dde7e709-2e40-4393-9cb5-99102bca3054",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c36f52c3-c8d8-4a2a-975b-b688b34d7e1b"
        },
        "item": {
          "id": "a0be0172-c1ff-4da2-8b6f-80d952433795",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a6caa611-fb88-4ec4-8842-cc3a83841e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cef838-a48a-4498-a5c6-352a6f46a74d",
        "cursor": {
          "ref": "98ae48b6-fcc3-4de5-a56b-7d4b5a3d5b93",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fbc4a64d-0208-41ed-b9f9-914c960bdf62"
        },
        "item": {
          "id": "46cef838-a48a-4498-a5c6-352a6f46a74d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4b934f4f-0cd8-4fd4-a5e6-2c4fb598e7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08716f0b-854a-4375-8273-1de589d1305f",
        "cursor": {
          "ref": "9c03c0c9-53dd-4efb-bea5-2233cfbd6288",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6ce3fb8c-e822-4bd7-8b3e-63ea9c310d6e"
        },
        "item": {
          "id": "08716f0b-854a-4375-8273-1de589d1305f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e845369b-4f89-4728-8577-ea99bf936165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93bb781-a889-4802-b66b-b78d3ee14ed7",
        "cursor": {
          "ref": "ee905ac7-ab10-4e4d-ad6c-f23185618113",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3b987b68-fc4c-4084-96f3-d715f795e241"
        },
        "item": {
          "id": "f93bb781-a889-4802-b66b-b78d3ee14ed7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c16544e1-c8fc-4137-86e2-64d21146d12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77600e3a-29e8-4c5a-9dc0-be966bd62026",
        "cursor": {
          "ref": "cd613689-19b0-42e2-883c-6d1ea3d34311",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "76c3d5e0-810f-4978-a552-c4a381aa8ad0"
        },
        "item": {
          "id": "77600e3a-29e8-4c5a-9dc0-be966bd62026",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "785d2f22-76ee-4486-bfcf-a3ec7d1fdfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad03b219-0c41-4cc6-b0b8-fa15595635e5",
        "cursor": {
          "ref": "e420a5f8-6d33-426c-b5a8-1b19242af35c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3f7c5047-4c34-417d-846a-b3693b5b9c37"
        },
        "item": {
          "id": "ad03b219-0c41-4cc6-b0b8-fa15595635e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d0310ad1-b1aa-44ac-ba24-6fe918a4a48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17cb0ab-5345-498f-902f-3dbc19f25a14",
        "cursor": {
          "ref": "06568bfa-748e-4917-94aa-71f55b27c7ae",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cc8d24bb-36bd-42ad-abf1-bfc3cf0f993e"
        },
        "item": {
          "id": "e17cb0ab-5345-498f-902f-3dbc19f25a14",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "22704d5c-7dee-4c33-af9c-e0073f08b254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9c55b5-17ff-403e-b644-e7a60c0fb4b8",
        "cursor": {
          "ref": "e0da21b2-58fe-4e01-ab54-63bb231e5c20",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3b72eb31-76b4-4190-b00b-24ef50bdc90e"
        },
        "item": {
          "id": "aa9c55b5-17ff-403e-b644-e7a60c0fb4b8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "081ddba9-b55a-47f8-95b2-c912850f3c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3b35ea-bba2-4ca6-9a21-5867c17f3dfd",
        "cursor": {
          "ref": "dffbcf8a-3944-4a04-8ef6-160353e9a3f6",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "46ea13d0-b356-4fac-8995-04401d0e2f30"
        },
        "item": {
          "id": "7a3b35ea-bba2-4ca6-9a21-5867c17f3dfd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3296623e-0d53-4efb-8adf-22db86dfc9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49d97ce-e8ac-4447-9c79-94ff315001b7",
        "cursor": {
          "ref": "7149c7c6-692f-425f-8d54-36644662b755",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e0db277e-f370-42f5-b1e1-470dc06ff600"
        },
        "item": {
          "id": "a49d97ce-e8ac-4447-9c79-94ff315001b7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8218574a-61ad-4bcd-9c1a-8f9c05cdba0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcda0b5-e4de-43eb-ba66-5d872192c578",
        "cursor": {
          "ref": "e5fa2ec2-b143-4b3a-955a-93925b57ed85",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a35f32c6-d053-4e5d-8c1b-4351e8a8a972"
        },
        "item": {
          "id": "ffcda0b5-e4de-43eb-ba66-5d872192c578",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d4e1ef1d-8549-4aec-a21f-1728fd7c0791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25db95f6-fdd5-4e3c-ab6d-15e08111e4e6",
        "cursor": {
          "ref": "ef9a2ba9-d01b-4588-9a17-68b9c5782bb9",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1e24f0ec-d7d2-409f-ac95-ebd129bf5244"
        },
        "item": {
          "id": "25db95f6-fdd5-4e3c-ab6d-15e08111e4e6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0279bd16-25d2-4620-b0f6-2bb3f2c19fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ea612a-a316-478a-b3f7-29481dda7b0b",
        "cursor": {
          "ref": "6ab5893f-61e7-40eb-9648-d903d6a2ffd5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3fe156b0-2b37-4ace-ac7c-a00eaee17987"
        },
        "item": {
          "id": "49ea612a-a316-478a-b3f7-29481dda7b0b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3991be13-b544-4ebb-8e87-daaf2adf891d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc38136-0a24-4fbe-8677-d37ab1652293",
        "cursor": {
          "ref": "8cd934bf-e39b-4122-8d55-67d575b7693b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "16afdb0d-812e-4652-94c0-307fdb9aba96"
        },
        "item": {
          "id": "bbc38136-0a24-4fbe-8677-d37ab1652293",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "54678cc4-80de-4046-b1be-00602859b914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25de9485-7344-4764-83a6-0bf7efeeb0fe",
        "cursor": {
          "ref": "4d0375dd-e81d-4dfa-9eda-6c2b45afc440",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7b43745f-b562-4f4b-8bcc-991527de062f"
        },
        "item": {
          "id": "25de9485-7344-4764-83a6-0bf7efeeb0fe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ad5cb1f3-f063-4bcd-a794-fd9570c82e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c802e5af-3607-4ed5-8cd2-0d39092be57b",
        "cursor": {
          "ref": "10750f4d-f2fc-485b-8538-134bc4c2ac7a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5ca2868a-afdc-48c3-a083-9714d9cdb55b"
        },
        "item": {
          "id": "c802e5af-3607-4ed5-8cd2-0d39092be57b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "38f71f79-36f0-4a41-9f75-b16e666eebb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe97eb21-c38f-400b-865a-c05c0a881705",
        "cursor": {
          "ref": "3d22f476-d73b-404f-b7d2-bcff5b009bbc",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bc9fca16-0cdf-4299-9aa6-ec8bb1b4b84f"
        },
        "item": {
          "id": "fe97eb21-c38f-400b-865a-c05c0a881705",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "df8066ba-f4fa-4d35-a6f8-559808a1a251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f409ff5-60d6-43fe-a0e4-daecd52bf8fe",
        "cursor": {
          "ref": "ec53370a-eadc-449c-a449-252a9dc22fb3",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "364e1171-8d8d-4227-896b-8c9fcc9e1d20"
        },
        "item": {
          "id": "1f409ff5-60d6-43fe-a0e4-daecd52bf8fe",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0ed72837-372d-489c-ab3c-3cd444925e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9692d126-9525-4901-9d5c-ab7f073eeacf",
        "cursor": {
          "ref": "95c9b187-39eb-4f51-aabc-068c1495d133",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "daa968f1-c498-4112-ad4d-62790ff0bf28"
        },
        "item": {
          "id": "9692d126-9525-4901-9d5c-ab7f073eeacf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "957c9832-dc4e-45ee-8f60-b44b0bd90d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c78e04-7c05-48b8-ab7f-81a04dca7461",
        "cursor": {
          "ref": "99b51f31-89e7-432d-9d36-5ff2db20d60b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4c6b3bcf-a596-43f9-b0ff-57cbc9828ff6"
        },
        "item": {
          "id": "43c78e04-7c05-48b8-ab7f-81a04dca7461",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9d226fca-d444-416b-ac1d-21c126c5c942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7dc24c-8ba8-4ba8-9383-67482677a338",
        "cursor": {
          "ref": "57166e9d-252e-4124-b39b-d136ee23708a",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b0bfd1a8-3459-4d01-8ea5-4d04053825f7"
        },
        "item": {
          "id": "5d7dc24c-8ba8-4ba8-9383-67482677a338",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1cb04b1d-8d01-4668-9975-a460acef0036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41597b5b-07d9-4963-8b86-779e3510646c",
        "cursor": {
          "ref": "690df2e3-3330-44db-9163-764551396a97",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8335ac8c-69e6-4972-a935-a0dd23a2bac7"
        },
        "item": {
          "id": "41597b5b-07d9-4963-8b86-779e3510646c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2dc28c80-d39c-4c73-9da0-45e5686a63a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d2286f-dc07-4172-9588-c931ab8c735f",
        "cursor": {
          "ref": "b4ebbed4-aee2-48d0-9c6d-b44b091c9d6e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "215c70ea-37f9-4278-a65d-95206b00613e"
        },
        "item": {
          "id": "e9d2286f-dc07-4172-9588-c931ab8c735f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f6cd6479-39dc-4a55-b4ae-e129b4a281ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06b6f97-6ea1-4e8a-94ee-47049e3bf236",
        "cursor": {
          "ref": "92fa82bd-f718-4fcd-a738-d4097a5b8f50",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6aa4857a-d7e4-42f8-953e-7825a7f40ff9"
        },
        "item": {
          "id": "e06b6f97-6ea1-4e8a-94ee-47049e3bf236",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1231380a-b7cb-4092-9cb3-c47d49e0cffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58aab336-c9cc-4fce-8ae6-42cc58a2b77a",
        "cursor": {
          "ref": "7a0867fa-4e37-45f9-9b55-1d2ed70ecbe6",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6eb50947-59d7-411e-9401-e853a09d5644"
        },
        "item": {
          "id": "58aab336-c9cc-4fce-8ae6-42cc58a2b77a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c0f938e2-59b5-4e5a-91e2-4223e5316817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ede94d-ed08-4e6e-82f2-0778fcd9a41c",
        "cursor": {
          "ref": "2a096927-7115-4ac3-b7aa-a96a34e63ab9",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c1842b76-b3b1-45a6-93f6-c09df749eb0d"
        },
        "item": {
          "id": "64ede94d-ed08-4e6e-82f2-0778fcd9a41c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c691c676-dc9b-4638-82d7-28f065fc9ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfda5595-1220-4b89-bd4f-a37af737354a",
        "cursor": {
          "ref": "895e7665-fe76-4511-8668-3cba2de49d82",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "21af679f-a32e-44e3-a13f-b38d10a42aaf"
        },
        "item": {
          "id": "cfda5595-1220-4b89-bd4f-a37af737354a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0b3e59a9-7865-414e-931c-d6e4728ee24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56263a6e-e997-4f36-ad44-fe6e1ac599f3",
        "cursor": {
          "ref": "ef3d93a4-b2db-4000-bfcc-c59c82e45814",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7149b9ff-f30e-4ced-b10c-1e99cf22ce25"
        },
        "item": {
          "id": "56263a6e-e997-4f36-ad44-fe6e1ac599f3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "af2bcb12-c462-4af4-9096-4a6e7c80caae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9bb763-b8ad-4c38-bfbf-627362865149",
        "cursor": {
          "ref": "ff0079f8-8982-4f0d-bd85-7d672510d0e2",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "17f1bc32-e448-41e3-9d3d-d76440be8f02"
        },
        "item": {
          "id": "0b9bb763-b8ad-4c38-bfbf-627362865149",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "005633c7-b47f-4dd1-b4dd-395a1af5b4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b640870-061f-4558-94b3-c653b43eb156",
        "cursor": {
          "ref": "fc1f539e-1357-4b5c-8cdd-0b44316b0e54",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5c294ab3-3180-4635-8d99-1bb919959e2c"
        },
        "item": {
          "id": "9b640870-061f-4558-94b3-c653b43eb156",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "82611d8b-c6b5-4304-88dd-28c33134181b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a576e57-9ddb-4b80-9170-4d701ef16b23",
        "cursor": {
          "ref": "86b8458a-ee9d-4063-a73f-7dbf7f12d64c",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "89f6a45e-cabb-4fd7-86b9-c041101a6aaf"
        },
        "item": {
          "id": "7a576e57-9ddb-4b80-9170-4d701ef16b23",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d8ea48f3-56d4-4431-a23c-6cc2161410f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f081adc-9dc0-462c-897a-1d7aa7a2a245",
        "cursor": {
          "ref": "68f4b273-bd07-40a8-b4c9-df9f06e90dbe",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b9c8b565-4314-44cc-87d8-0e31403e2e3f"
        },
        "item": {
          "id": "8f081adc-9dc0-462c-897a-1d7aa7a2a245",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4a9abdd9-6777-407e-85ed-08bf9d8e512d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba11a94-6993-4a59-8873-5d8fdfa51f99",
        "cursor": {
          "ref": "2ab82a93-b0f4-472b-bbe4-2de8a5388be5",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7bf877f2-118e-41d0-ae6c-e1643aabca12"
        },
        "item": {
          "id": "4ba11a94-6993-4a59-8873-5d8fdfa51f99",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "52e91c3c-5cd9-4352-83d5-c63940cfcb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2606f5-4017-4587-8d2e-f40fee8da5eb",
        "cursor": {
          "ref": "3eaabed7-e747-403e-8ac7-a6800a148aae",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e7712a85-b8c7-4b95-a77c-7ad3139f4d0c"
        },
        "item": {
          "id": "fb2606f5-4017-4587-8d2e-f40fee8da5eb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ce7bb44e-9cad-4491-8dda-f6dd3365e013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aa82d9-b653-4b7d-b18b-3a5e992e684e",
        "cursor": {
          "ref": "6eaa09fc-613e-4693-ae74-b0b9945ba772",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8ded9bb9-1304-4fd4-854b-d473d462d044"
        },
        "item": {
          "id": "d4aa82d9-b653-4b7d-b18b-3a5e992e684e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a9610403-56a9-4233-a913-3336865dd944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3458865-e124-4199-bc10-b4adbead1f43",
        "cursor": {
          "ref": "f079063c-82d0-466c-8bef-2a33ab2442b5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "01451ab0-e62d-418a-bf9d-42f4923ba077"
        },
        "item": {
          "id": "b3458865-e124-4199-bc10-b4adbead1f43",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e6c0f41e-ca7e-40a9-b659-020b0385766f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec54011-5051-44e0-9c94-a3d351cef8a8",
        "cursor": {
          "ref": "f75aea0d-5c81-4715-a1cd-5b14c7d2b35d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6b630145-e1a4-4f98-a370-414c7fe26d2a"
        },
        "item": {
          "id": "1ec54011-5051-44e0-9c94-a3d351cef8a8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "34c0bb1c-c58d-4bea-8c1f-3f41894e0b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4815f751-8ac4-41d5-b660-5e3a4d7989e4",
        "cursor": {
          "ref": "0149231c-7a27-4cba-95dc-2090b4e4af15",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fa98a52b-fb0e-4a63-8ecf-e54e38439d6e"
        },
        "item": {
          "id": "4815f751-8ac4-41d5-b660-5e3a4d7989e4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0af7510d-babb-4b5a-af6a-3675e7f613ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939d3890-d655-4244-9921-ea9a7dc24d92",
        "cursor": {
          "ref": "f9c29a72-89f2-449c-9cf7-758328ad3295",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "239ab42a-0e2d-495c-ae4d-b02c504ba173"
        },
        "item": {
          "id": "939d3890-d655-4244-9921-ea9a7dc24d92",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b4cbc9d1-7d0b-4fe5-ac12-93f6843d2beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "a3fad9a4-57c3-4af1-b5d7-4fdc899272cd",
        "cursor": {
          "ref": "f9a691b4-dc09-419e-8684-6a12458990a9",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e790d257-88c3-406c-ba1d-9776ad8e1ce3"
        },
        "item": {
          "id": "a3fad9a4-57c3-4af1-b5d7-4fdc899272cd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dff876dd-1bef-4cb6-87b2-735671954097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "a6297fa0-fda2-472f-b18e-548475bbedc6",
        "cursor": {
          "ref": "34b9f04a-4b95-405e-a5f1-54dbb7fa7712",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "033069db-d9eb-45e8-8e16-89220f798112"
        },
        "item": {
          "id": "a6297fa0-fda2-472f-b18e-548475bbedc6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c0bda269-5397-4ede-b5f0-fe49efea9ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "12d7b11b-1bfd-4b74-a84e-cb604267ccae",
        "cursor": {
          "ref": "78eefe48-33d0-43ee-b515-432035025336",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e726b442-5569-442c-8e0f-03747b8470a8"
        },
        "item": {
          "id": "12d7b11b-1bfd-4b74-a84e-cb604267ccae",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "adcb40c5-7be5-4928-bd3c-a9af2172aee0",
          "status": "Created",
          "code": 201,
          "responseTime": 11684,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e3f89d-772e-4202-aa08-dc5b40da3eb7",
        "cursor": {
          "ref": "6e35f448-46e5-4a11-a1f0-9fcc69c7b59c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9f1e7f7c-1b77-4c4a-81cb-e53b0c869f2e"
        },
        "item": {
          "id": "48e3f89d-772e-4202-aa08-dc5b40da3eb7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d30debee-df33-4c8f-bffa-08b7dc095797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3c80d474-8f81-4411-9b56-8131a727d81b",
        "cursor": {
          "ref": "0f7ca00a-6368-4cec-ae04-83b1b16de3c7",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "616e0e48-6684-47e4-8e92-a26ef4574a32"
        },
        "item": {
          "id": "3c80d474-8f81-4411-9b56-8131a727d81b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "791f1d6a-1c9b-447a-8ec8-976a7cded92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "9b1651f4-f40a-439c-9894-62552645558f",
        "cursor": {
          "ref": "9b0cdd79-3519-4138-89a3-c2fa0c361475",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f656f988-1556-431a-ab9f-d50248131761"
        },
        "item": {
          "id": "9b1651f4-f40a-439c-9894-62552645558f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f79a6969-157e-4398-b6ad-e07e70bcd28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de9b053-52cc-4160-8158-9e5bda63c6b3",
        "cursor": {
          "ref": "c1bb66b2-c23b-43f8-84ca-d01bf23de3de",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "19d44fe7-9029-4f30-8337-33b8ab5f563a"
        },
        "item": {
          "id": "6de9b053-52cc-4160-8158-9e5bda63c6b3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "adc26280-7f9c-45b1-bb80-96fdfb11df5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62341c64-bd07-4b07-b727-6dc536837d9d",
        "cursor": {
          "ref": "9c20a989-e713-4880-8299-c9e912d1d369",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e2d31983-25ef-4446-aa6c-57ba3f54a69d"
        },
        "item": {
          "id": "62341c64-bd07-4b07-b727-6dc536837d9d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5502edd6-76e6-4d4a-865e-145905ed3149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75d77dc-a060-43fb-92d6-f189ba825006",
        "cursor": {
          "ref": "b7b1c296-8f6d-4e7b-aff1-599b555a65e6",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "efd274e7-8cce-4c87-ae96-b37066822ea8"
        },
        "item": {
          "id": "d75d77dc-a060-43fb-92d6-f189ba825006",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "45730718-88d5-4245-9219-5e2363caa0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab80c561-ed8a-4c9b-8677-d9e98a18419f",
        "cursor": {
          "ref": "ec1eeaf7-4df9-43ae-8cbc-b207fac6c093",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8cb40886-0219-490b-ac6e-fac29255a6f4"
        },
        "item": {
          "id": "ab80c561-ed8a-4c9b-8677-d9e98a18419f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "07c3d3d7-0d60-43a1-b807-367d12753218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f9a07b-c6ee-4c98-b07f-3bdf558acdca",
        "cursor": {
          "ref": "c04b7700-fc85-4514-bcda-07f4c4c6e3f3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a82e50f4-85f9-4a3d-85c1-7ed1e0aca2c8"
        },
        "item": {
          "id": "71f9a07b-c6ee-4c98-b07f-3bdf558acdca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4baf2903-a31a-4f8e-ba1a-bf835a90c6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d73aab-9536-42f3-8b48-144b40f8416c",
        "cursor": {
          "ref": "c4907719-5752-4c28-b7c7-66311a8dd3c5",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dc4a7187-b7eb-4dac-9d56-95bb3d3f3545"
        },
        "item": {
          "id": "68d73aab-9536-42f3-8b48-144b40f8416c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cfcce6c8-11ec-4262-8c37-db2647d199d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e77a68-1f80-4e8f-aae3-8c3596490388",
        "cursor": {
          "ref": "d11fb203-41a0-42c2-9857-a57d882fd114",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2daabc9b-090a-47ea-9f56-63c22e80e1cb"
        },
        "item": {
          "id": "62e77a68-1f80-4e8f-aae3-8c3596490388",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8c4e6cc4-e8a6-4833-9a72-25de01f6d055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971ec2fc-93b6-4ef9-950c-b5949084f872",
        "cursor": {
          "ref": "7bd9d82b-3bc7-49be-ac4c-f63b5326bc5a",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6e234b53-89e3-4c19-94f0-c9574246ab19"
        },
        "item": {
          "id": "971ec2fc-93b6-4ef9-950c-b5949084f872",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "96ca0687-afc3-4fb3-acdd-1f71be489d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab1f930-7fd9-4503-8cbb-d924bdf04801",
        "cursor": {
          "ref": "aaadd48c-8a0c-4e80-b496-cb2835a3d9f7",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "564fddcb-55c0-4ecc-9e9d-56113b16600d"
        },
        "item": {
          "id": "eab1f930-7fd9-4503-8cbb-d924bdf04801",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c3791f93-72ba-4082-8e2c-8107c55bc988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b714831-cda1-421e-b86a-45b2d86e07dd",
        "cursor": {
          "ref": "589585fa-387f-424f-8f34-db5190078d0f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "32ccaa12-28c7-43a7-b9a1-6ec12f4e7746"
        },
        "item": {
          "id": "5b714831-cda1-421e-b86a-45b2d86e07dd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e4784819-1de6-4d18-ac01-a8bee1b1abdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b88e565-516d-469d-aeb0-6c72ad217964",
        "cursor": {
          "ref": "e00c049e-e26e-4ec1-8bed-b8ae21b8b2c0",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "123afb8d-d735-43a0-aa38-0619c8de43c8"
        },
        "item": {
          "id": "7b88e565-516d-469d-aeb0-6c72ad217964",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "50d0c87d-4215-439e-a879-c0afa93e0547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef1b90f-4ebb-4a2d-a5b7-258d64e89f3f",
        "cursor": {
          "ref": "11f844ce-e12c-4415-86a4-6e9fff56bf02",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "93b03570-4478-4beb-a9ae-243303fb67b9"
        },
        "item": {
          "id": "1ef1b90f-4ebb-4a2d-a5b7-258d64e89f3f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8b49c90d-9d56-464f-990f-f593b1219b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baed8a44-f835-418e-9a22-de5f10e64768",
        "cursor": {
          "ref": "a5b82acb-17e8-4041-aa68-9df63ca48ef6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fe95deb8-410a-4ea9-beb1-cd587f99775b"
        },
        "item": {
          "id": "baed8a44-f835-418e-9a22-de5f10e64768",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "815bfcf9-8f21-4c5d-b283-987b5d4c7211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0a51fc-c89b-4a82-8f68-fac357c3979c",
        "cursor": {
          "ref": "93760db6-f8eb-4868-a1c7-73eeac3050d0",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "be3bc7bc-156c-463b-a1c7-5c7b45fc5a27"
        },
        "item": {
          "id": "9a0a51fc-c89b-4a82-8f68-fac357c3979c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7ac56f52-5486-459d-964e-a0b7fcf2c519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601e9a37-1407-4899-84be-7f8092b67b1c",
        "cursor": {
          "ref": "3edf5f6d-b74e-4be6-ad79-bf711636155a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "05807cb2-0230-4235-bcd2-5ec5ac51e616"
        },
        "item": {
          "id": "601e9a37-1407-4899-84be-7f8092b67b1c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "80f72f4a-3b6d-41a9-b0f1-2b4e06e5ce20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789d042d-6705-48d3-8296-94bae2569d59",
        "cursor": {
          "ref": "aa4b7338-c5ee-42e3-a248-72a6f0543e7e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3d1aadd6-9e01-4750-8e9e-a4e251c1ba1a"
        },
        "item": {
          "id": "789d042d-6705-48d3-8296-94bae2569d59",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7de8429a-51f8-4a34-b3cc-eeb0ef513be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d790528-a387-439f-b087-5042541fb49b",
        "cursor": {
          "ref": "8218c546-816f-442e-9412-cff2a72d4452",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6a51b462-22ff-4730-83e5-972e654c5de0"
        },
        "item": {
          "id": "4d790528-a387-439f-b087-5042541fb49b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f71fd665-0a32-4cbd-8e4d-8dad9af5f3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b37e8d-05a0-4bfb-9b37-88757399de35",
        "cursor": {
          "ref": "fcb3a9aa-ceb6-4f04-892f-f4a4eccca5e0",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bebc845b-0fec-4cd6-b51a-f35926e78661"
        },
        "item": {
          "id": "d9b37e8d-05a0-4bfb-9b37-88757399de35",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c45ee312-05a6-4192-a95b-9a9feedb064b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45879880-d237-43e4-8513-3eba5da434a7",
        "cursor": {
          "ref": "06fe3f0e-49d1-4e79-b031-2ec5488f1c04",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "54430000-2581-4bbd-a5bd-2064abaac6c6"
        },
        "item": {
          "id": "45879880-d237-43e4-8513-3eba5da434a7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bb65997e-244f-43aa-9e01-d79322db3768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e72bcc-aae5-4b97-bef9-4f6812f333bd",
        "cursor": {
          "ref": "ceb410d2-119e-4cd8-b00f-19a8fb3cec96",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "303e51e2-4cd9-4653-9965-96917327740c"
        },
        "item": {
          "id": "88e72bcc-aae5-4b97-bef9-4f6812f333bd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "23f7b5da-8d66-4646-a3db-53e06f017ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffeac9de-339f-438e-b546-9b1c5d1bf1f4",
        "cursor": {
          "ref": "b5c89074-5d13-4869-9d91-dc184df03465",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "424839d0-e0fe-458c-a831-68d6731fa701"
        },
        "item": {
          "id": "ffeac9de-339f-438e-b546-9b1c5d1bf1f4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "435efa7e-4659-4e71-a532-4e72c101ae77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd70a547-09f5-4aec-a268-534e93c0c3fa",
        "cursor": {
          "ref": "bf9c49da-d5e8-4e3a-87d5-53145f89e11e",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6fb129b3-048d-4c81-a30a-b049af97133b"
        },
        "item": {
          "id": "dd70a547-09f5-4aec-a268-534e93c0c3fa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e49f084e-b639-4aeb-bce3-f9cc92e3ac18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6e400b-ba1b-4c73-874c-95159ba7f150",
        "cursor": {
          "ref": "abf835a7-5f86-46d5-a16c-ad024a7daef9",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "38a52455-8a93-4e1d-910c-ad060265ee40"
        },
        "item": {
          "id": "3f6e400b-ba1b-4c73-874c-95159ba7f150",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "02643e11-fa46-4214-aac6-dd0580a38eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a32aa5-8709-44c3-abdb-5903638598c1",
        "cursor": {
          "ref": "8d9818bb-17cb-4022-bc94-fe2e458c8b22",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "af42b6a1-e60d-4d81-af4c-bac8b1380732"
        },
        "item": {
          "id": "54a32aa5-8709-44c3-abdb-5903638598c1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0551f82b-b0fe-484c-a3c7-5f989b0fdadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce02e9f-9638-47eb-8008-4f84eb51115d",
        "cursor": {
          "ref": "3ffebad8-86d9-42f8-bfb0-63cd5df3397d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0e65766b-f5fe-4958-8691-7acd3a9bc20d"
        },
        "item": {
          "id": "9ce02e9f-9638-47eb-8008-4f84eb51115d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "55addc36-4670-4058-9955-6dd9d1327276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8880fa-ce8f-4ee0-b822-33c53f9d87e7",
        "cursor": {
          "ref": "b64b34f7-104c-4885-a11b-c274c82a33e2",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d7bd14c1-3146-4789-bf4b-2e580e168011"
        },
        "item": {
          "id": "2c8880fa-ce8f-4ee0-b822-33c53f9d87e7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6614500a-3262-4ece-b312-bbb5cb0ed13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1007480e-2424-4407-a959-3c6b090513f1",
        "cursor": {
          "ref": "c540d340-8729-4766-acd2-d37aa5defc0e",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d3143ec4-ba8b-4513-b5a3-0ee5311c665b"
        },
        "item": {
          "id": "1007480e-2424-4407-a959-3c6b090513f1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "16f50956-2688-433a-bec0-b79748f1ee80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34c011a-98ec-43be-8ba5-c5d8c038766a",
        "cursor": {
          "ref": "23681041-06ab-4704-a0f2-93f114a9cbc8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0d7297e1-cec3-4101-997b-e77860e1c542"
        },
        "item": {
          "id": "e34c011a-98ec-43be-8ba5-c5d8c038766a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aa69dbf1-9aa8-488c-b693-42a853f05993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b088188-9842-4f01-9ea7-31e11d54c38e",
        "cursor": {
          "ref": "62502dcd-2ff9-4ea0-8348-e894d166347e",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a62947ab-3728-4b28-bbd0-091ea1b441c9"
        },
        "item": {
          "id": "4b088188-9842-4f01-9ea7-31e11d54c38e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a3ff439-d4fd-415d-b693-0e447b78f74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8298a532-eb1b-47fb-b45c-838cfa3ca0b3",
        "cursor": {
          "ref": "fd3d38ee-3acd-4246-a0b4-422dd71cc865",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f7275db1-2703-4342-9c5b-b66cebc2564e"
        },
        "item": {
          "id": "8298a532-eb1b-47fb-b45c-838cfa3ca0b3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5f702f9b-ce22-4dc5-bc64-b3120572d4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d48ba03-1900-4eb1-8930-be2194db41cc",
        "cursor": {
          "ref": "e3f62c07-c70e-422c-9f18-b01cde256ca7",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "94147573-81f6-41ae-94cd-ad5a13c3fe29"
        },
        "item": {
          "id": "7d48ba03-1900-4eb1-8930-be2194db41cc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "02e8fd76-e985-4098-8fc7-2c6b618ee39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8749a588-198a-4493-80c4-8ac01b9cd6ed",
        "cursor": {
          "ref": "5d961c93-f4e0-4c3f-a5d4-c7206e15889b",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "317f2f8b-eb8e-44db-914f-23d7ac1457d2"
        },
        "item": {
          "id": "8749a588-198a-4493-80c4-8ac01b9cd6ed",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d3de1b0e-fd81-4db4-9fc0-f68ead3c3f8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff2be9e-f68d-444d-92c3-fd9e8791b11f",
        "cursor": {
          "ref": "f12bc58b-bf9a-429b-b586-e1d4403f42ed",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5623f785-b913-49e4-84d6-508cad651ad6"
        },
        "item": {
          "id": "1ff2be9e-f68d-444d-92c3-fd9e8791b11f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "08e219c3-30e4-44bd-915a-f4de97969dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608b0b10-d429-483d-b331-b49867e5a660",
        "cursor": {
          "ref": "286410c7-9219-4f1c-b9d0-d7d6fc3c5d81",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e270a118-8360-4666-80f6-22806a7b942f"
        },
        "item": {
          "id": "608b0b10-d429-483d-b331-b49867e5a660",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "193a87ef-2fb9-4428-a188-91e42b31e517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cff596-eddc-4628-bc2e-ef008bd6cf6d",
        "cursor": {
          "ref": "3f53f63c-3c9e-450b-8b16-2acd21c00336",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1e7f15f2-ddc7-40fd-8486-1365e7a2757b"
        },
        "item": {
          "id": "27cff596-eddc-4628-bc2e-ef008bd6cf6d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "30e45403-0e23-4482-9959-b63efa72840a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111a8fd3-9b41-4e61-ac09-3d4e2579fa72",
        "cursor": {
          "ref": "1b824764-db28-475b-8a52-730ed6a76107",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "989641ef-bb50-4495-948a-0ffb1ac82a09"
        },
        "item": {
          "id": "111a8fd3-9b41-4e61-ac09-3d4e2579fa72",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "34942f62-c1e5-4bf2-9880-3151431ed8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd0d899-78cf-432d-9230-4bd7ce23bf5d",
        "cursor": {
          "ref": "4a5cf78c-a5d8-498d-abe8-a6e6cee32dab",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7944acd2-ea44-4b3d-bf9e-cbecd2fbf9bd"
        },
        "item": {
          "id": "ccd0d899-78cf-432d-9230-4bd7ce23bf5d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dbb03c06-cdba-47fc-a590-6f86ac4b6097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa3a533-f66f-4b36-9352-8bfc29d74072",
        "cursor": {
          "ref": "2ee14236-f375-42c5-8b53-32a461c5f5e7",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6049a670-d085-4b26-bd84-dfc6f401f602"
        },
        "item": {
          "id": "7fa3a533-f66f-4b36-9352-8bfc29d74072",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8c970128-2f89-4e78-9c8e-336322dc958f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fd4092-4391-4bb2-9484-e9f030bf3945",
        "cursor": {
          "ref": "dd5f37ca-a50a-4eee-b09c-5175532b7b76",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4de03c62-84c5-431b-8c39-e08d5808b750"
        },
        "item": {
          "id": "07fd4092-4391-4bb2-9484-e9f030bf3945",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "44bc8cff-ea51-48ba-be68-1fcaa66bb4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2bfe45-d27b-4c01-829a-6b9936d2d788",
        "cursor": {
          "ref": "8dd73630-457a-489e-932e-305f8d1a776e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "046dfb8b-d3d4-4576-a00d-a5be8951cdcc"
        },
        "item": {
          "id": "df2bfe45-d27b-4c01-829a-6b9936d2d788",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d5ac7b5f-ecb5-4d54-aeaf-e9f762882096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523fe0fb-630b-4346-8c39-10b61bbdc976",
        "cursor": {
          "ref": "26823f36-58b6-4435-82b4-9577ade06484",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1a016470-bf94-4baf-af65-f761f2c73b1a"
        },
        "item": {
          "id": "523fe0fb-630b-4346-8c39-10b61bbdc976",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2b803937-9455-4a83-8732-d4e39e93521c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b9a398-2c79-4750-9363-3faf2b8e6595",
        "cursor": {
          "ref": "0755f9d4-f923-4bff-8ad0-fcc934570b2b",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "db4cf8e2-f53d-40e6-abd9-3b0d2d458fce"
        },
        "item": {
          "id": "f3b9a398-2c79-4750-9363-3faf2b8e6595",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e8ae6801-40c6-496b-aebb-b2b29362de31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f566295-8ceb-4cc0-be63-424f1bd0c1aa",
        "cursor": {
          "ref": "2d9af8d2-1472-41fa-ad12-61f80d32f621",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6dd63b26-eb27-464f-b1b9-53cc767dac86"
        },
        "item": {
          "id": "8f566295-8ceb-4cc0-be63-424f1bd0c1aa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4c21d5fd-6785-4a1c-8efd-b83a04fdeb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba159760-4287-4531-b3b9-795129e755f0",
        "cursor": {
          "ref": "faeae8af-7494-4146-98b9-4af2d9cf3916",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d378ec6a-3b1a-43c1-8f35-dfe35c760f5b"
        },
        "item": {
          "id": "ba159760-4287-4531-b3b9-795129e755f0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bd8ba6bd-b96b-4321-8c62-8f795d44296d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e762ea-1f6c-4bae-bd66-0b9bacce8943",
        "cursor": {
          "ref": "8a0a5c4a-dc71-4b90-895b-1e659d07f77d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ef51e38c-eee5-4f83-98fd-6e1c31ee26b8"
        },
        "item": {
          "id": "14e762ea-1f6c-4bae-bd66-0b9bacce8943",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a1d3bfae-3d94-450d-b9f0-f504e9ca8f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3eb00b-0f01-4077-a428-ecc9c470f7ff",
        "cursor": {
          "ref": "b9d34a5b-1575-44e3-9c2a-8fc4a11aee8d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b703e342-021e-406b-b729-803be2367b21"
        },
        "item": {
          "id": "6e3eb00b-0f01-4077-a428-ecc9c470f7ff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ca6d1933-f3fd-4717-ae7d-e1943e570f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4ee8ed-1990-435a-9ad3-aaaa7e949136",
        "cursor": {
          "ref": "7d7bfe46-48a3-45c5-8201-fdd58ccd65c2",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "75c068d4-6f1b-472a-a004-65ac39f06c2d"
        },
        "item": {
          "id": "db4ee8ed-1990-435a-9ad3-aaaa7e949136",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a616e02e-d4cd-41a7-ab9e-90bd94012f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66347ae-7292-45a6-a815-3fc38f811483",
        "cursor": {
          "ref": "455823a5-d9d5-47b3-8fc6-4e55cbe1a7a0",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "10058630-44b5-4a79-8219-d89984f13ee0"
        },
        "item": {
          "id": "d66347ae-7292-45a6-a815-3fc38f811483",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ab732fe7-7a9f-472d-915f-f6d9a7af25fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff4e76b-d060-43fd-a1ab-034c698cf9a3",
        "cursor": {
          "ref": "1eeea567-582d-4aad-a2eb-4d8baa0b520e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "89e2002c-b9ef-4b8f-a476-521662a6db46"
        },
        "item": {
          "id": "7ff4e76b-d060-43fd-a1ab-034c698cf9a3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6941f334-f967-4d3d-b886-2405941782c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1265d279-5c9c-44c2-90cc-da1e46cdfa92",
        "cursor": {
          "ref": "1fc4efa4-4992-4ef0-9e52-68273b8365cd",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8ba7011b-3d02-46a4-bd54-700511ec5df6"
        },
        "item": {
          "id": "1265d279-5c9c-44c2-90cc-da1e46cdfa92",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "70a926c4-38af-485a-8c8a-ccdcc9664ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e66de3-d0bb-4057-a801-f47fd06439c7",
        "cursor": {
          "ref": "6fbcaf4e-7df3-4955-afc9-555d78d7b09c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c3edfa60-d9f2-4950-8564-0548058efc3f"
        },
        "item": {
          "id": "f3e66de3-d0bb-4057-a801-f47fd06439c7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5db9eba2-5e79-463c-a4ea-08da68e12c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef94c75-4574-4bf3-9e81-0bc68093bc33",
        "cursor": {
          "ref": "f6cf558a-c3a0-4d41-9c55-07bb11be60c8",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "93c6d09b-ee37-4f78-973a-c734d333da03"
        },
        "item": {
          "id": "6ef94c75-4574-4bf3-9e81-0bc68093bc33",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "322122e9-10d7-402e-b3a3-ef618e233620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5b110c-987b-4d9e-90e6-bdda61e5bd84",
        "cursor": {
          "ref": "38296c75-263e-408c-ab61-f6260fe4a9ed",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "92e92a26-c059-458e-818f-6fb1ad4b3ddc"
        },
        "item": {
          "id": "af5b110c-987b-4d9e-90e6-bdda61e5bd84",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c85cf210-3e88-4cbc-ac62-d5e9c15d04cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc94f8d-0827-4745-8ec4-c27f9ff23dc1",
        "cursor": {
          "ref": "6b92e7b9-20f5-4bc1-a400-73211168ad9c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "65a4d676-4185-426b-88fa-052511bf7633"
        },
        "item": {
          "id": "3fc94f8d-0827-4745-8ec4-c27f9ff23dc1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "462c87eb-62af-4551-80d3-73d06c5f3115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb98c1c-9f0e-4e1e-9e9f-d4d2083b9986",
        "cursor": {
          "ref": "772b9014-048c-4ae7-8a12-80e93719daba",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fa67edbc-c9cb-4a0d-9fea-fc03ae0d6dd9"
        },
        "item": {
          "id": "cfb98c1c-9f0e-4e1e-9e9f-d4d2083b9986",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1b23edd2-8917-4ab7-ad38-838df7972e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac74f53-006f-4580-bce1-404e4415964c",
        "cursor": {
          "ref": "a64a4119-a909-4c6c-8160-1170dc46ac1e",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "67fa42cb-cac5-48c0-bfe9-bc08f867e823"
        },
        "item": {
          "id": "6ac74f53-006f-4580-bce1-404e4415964c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a9000be3-e930-48ad-b69d-2b4d211ea69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35efb086-6568-4f86-8fb9-a04715806165",
        "cursor": {
          "ref": "6821b4b0-75d9-4e77-83fb-9739052f6482",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d6f846fe-f8be-40bb-b688-723072e2b475"
        },
        "item": {
          "id": "35efb086-6568-4f86-8fb9-a04715806165",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7ea40d6f-4874-4149-b686-0fcfa8316efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72198666-d854-49a2-87a4-2b7572faf1be",
        "cursor": {
          "ref": "957f898a-3dbe-44f0-bb1f-5901d28ed5a2",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "02751d18-4c8e-4d18-87d5-1654345da7a0"
        },
        "item": {
          "id": "72198666-d854-49a2-87a4-2b7572faf1be",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "09637263-d203-40ba-8177-32dc4321f6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45425d1-a554-4808-9b6e-4355338b4ecf",
        "cursor": {
          "ref": "15228f4d-72ab-4d47-81c4-07574e0a8ccf",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "36691868-2db4-474e-80ce-124f1a5d947e"
        },
        "item": {
          "id": "e45425d1-a554-4808-9b6e-4355338b4ecf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bfbe0156-93a8-4d41-bfe1-3a476b8a1f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e254eb8-5ff0-4dab-a3bb-4ac18af688a9",
        "cursor": {
          "ref": "757187fc-56db-48c7-94f3-7e76fee5d377",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "214e78f8-915a-40c4-9d0b-e65b744a0864"
        },
        "item": {
          "id": "1e254eb8-5ff0-4dab-a3bb-4ac18af688a9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "78bdb721-b639-4a6e-9218-d902d8905e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2002d9b-669b-4d98-b4e0-d776557416e1",
        "cursor": {
          "ref": "a488914d-a44c-41bb-8d2c-5246549c8445",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c6a656b7-2b66-4d51-ad6e-e9332a831f4c"
        },
        "item": {
          "id": "f2002d9b-669b-4d98-b4e0-d776557416e1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "474691cc-a77a-460a-b7f4-0a1d4a570621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660f8f10-df9b-4d82-8f25-90c51a00e5c1",
        "cursor": {
          "ref": "04ed8c12-40e9-40b9-9025-a99a9ed1bdaa",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a8ebbccf-1bea-42a9-94db-49e45dc9549e"
        },
        "item": {
          "id": "660f8f10-df9b-4d82-8f25-90c51a00e5c1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8e30c383-4c2b-4614-af97-11bbd22dd185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccfdb12-3ece-4dff-a4ab-9d6dff412c5b",
        "cursor": {
          "ref": "97346adf-20ae-4860-8aba-c9ec73aad584",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d3165931-758e-451a-bedc-9f92bb0165fa"
        },
        "item": {
          "id": "8ccfdb12-3ece-4dff-a4ab-9d6dff412c5b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "751badb6-6ebb-4b25-a35c-943896638eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71405b0a-5595-44f7-b6ee-171c568ed0a7",
        "cursor": {
          "ref": "587164e2-ba13-4909-930d-86c899ea7b4c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2dd01349-63da-4aee-a75d-e77ec7205baf"
        },
        "item": {
          "id": "71405b0a-5595-44f7-b6ee-171c568ed0a7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "26165527-ed1f-4c78-80db-1735bbd504fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775c7c31-5205-4b93-b6b7-ad913a67cf2a",
        "cursor": {
          "ref": "31393412-55ac-4152-9d58-90cc02c146ec",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c6954af2-301a-421f-a756-0cdd3062174c"
        },
        "item": {
          "id": "775c7c31-5205-4b93-b6b7-ad913a67cf2a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "751ea415-8f41-40d8-9a2b-52193c2b820c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446dafbc-b71e-435a-94b2-1a383b03a159",
        "cursor": {
          "ref": "f8c4575f-ab13-4f5d-923c-f743812a675f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "49fcaafe-002b-4471-addd-5253bb32334c"
        },
        "item": {
          "id": "446dafbc-b71e-435a-94b2-1a383b03a159",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "21be094d-fce4-4920-b1e5-7ab9fc6ef364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011d142b-232f-4d51-918b-933255d0277c",
        "cursor": {
          "ref": "856e90aa-7c45-460d-9a39-852faf286685",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fe5d3948-b9a3-48a6-93ba-96890e105927"
        },
        "item": {
          "id": "011d142b-232f-4d51-918b-933255d0277c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d6c55bc1-13e8-4c1a-9459-6c535a53e24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2017d0ca-acc9-46dc-beae-c4d773afc5fe",
        "cursor": {
          "ref": "0feadd5b-6c4b-4556-9fc6-2ec23a08e7f4",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "88973244-a658-4b0b-9b13-cd8f876f85f3"
        },
        "item": {
          "id": "2017d0ca-acc9-46dc-beae-c4d773afc5fe",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "13f75a33-0307-42b4-91c0-fb57b4bc3efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf07ad0e-77a4-4c40-9922-4580c6f105cc",
        "cursor": {
          "ref": "9ae59831-5854-46ed-a4a8-e08054e54962",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "88c57478-c5cd-411b-9904-76fe83af1494"
        },
        "item": {
          "id": "cf07ad0e-77a4-4c40-9922-4580c6f105cc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c8b664cc-514c-4faa-b960-10e37e1ab433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4452e34-6d66-42e8-a2cc-ea961b7c2fde",
        "cursor": {
          "ref": "3a0c0523-d86f-4f3c-a885-0f91ca60732b",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "25460685-b6df-4508-8be9-eb3845bf5ac9"
        },
        "item": {
          "id": "b4452e34-6d66-42e8-a2cc-ea961b7c2fde",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a3a3263d-c7c2-43b7-871f-7d94ef14ffa2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40930f60-1584-4b7c-9720-65580865c85c",
        "cursor": {
          "ref": "fa18ad4f-61f8-4a4d-8e92-8d004b67c042",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5832e3e2-1187-46ec-9826-e76e7ef05d14"
        },
        "item": {
          "id": "40930f60-1584-4b7c-9720-65580865c85c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "70d0751c-eb6b-4052-8608-2d9ed344d1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e65a0e-fa89-4ed4-9b28-4a76dc070dc2",
        "cursor": {
          "ref": "eb6c3f41-3e27-4a45-86d5-a10cd6478d7d",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "38e810df-f7f9-44f9-8210-a2ba7a8f9439"
        },
        "item": {
          "id": "16e65a0e-fa89-4ed4-9b28-4a76dc070dc2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fb608522-bfcc-45b9-88ca-e1670595cb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166e4549-0b91-4bef-bf25-05020e521312",
        "cursor": {
          "ref": "654cd774-9c04-4100-8bc9-041151e37977",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "83b22bf8-5e6e-4f40-a14c-ad4db3404a7c"
        },
        "item": {
          "id": "166e4549-0b91-4bef-bf25-05020e521312",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "339f8058-1f5c-4b14-b044-cefc17b87d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae87d6d1-d55f-4a3a-a475-10731f333c78",
        "cursor": {
          "ref": "fbcd9a82-2396-4df8-8385-9137f5a4f28e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ef69fb87-bb97-4834-99c8-0a6e243c83b0"
        },
        "item": {
          "id": "ae87d6d1-d55f-4a3a-a475-10731f333c78",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a7e817c1-fa30-4220-957e-439ed1cc6918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f497d2-da36-4b39-9d20-4c6127389eaa",
        "cursor": {
          "ref": "146f0365-a04a-4572-bbf3-b9afcfdf2e79",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "65cb5a5b-f579-4035-bdc6-445d2edd1cdb"
        },
        "item": {
          "id": "08f497d2-da36-4b39-9d20-4c6127389eaa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a5eb43bd-302a-41ce-8397-17226a662829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520fe077-da50-4d3b-9c56-98c09e197f04",
        "cursor": {
          "ref": "5bd7677d-5271-4172-85ef-c5d4a32a6f70",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c7ce0cab-46da-4f6a-8c2c-b4abebe7b0be"
        },
        "item": {
          "id": "520fe077-da50-4d3b-9c56-98c09e197f04",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "791f9268-8ec1-4cb6-8fbd-0ab7299de1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c595e09-cac0-4ffa-b6f4-6ad13cf91865",
        "cursor": {
          "ref": "f48d0e7f-6530-4175-b624-75a017b522fd",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d41775b5-04a3-4d90-ad66-49d4314969d0"
        },
        "item": {
          "id": "2c595e09-cac0-4ffa-b6f4-6ad13cf91865",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "126b343e-e599-414d-ab8b-014d368acacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5e7e2f-d6de-4098-b46c-1ab410f2aa83",
        "cursor": {
          "ref": "8f07edf2-ad2e-4991-b892-7306e138e708",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ef7112bd-f90a-48ae-ac67-42f902852a71"
        },
        "item": {
          "id": "ed5e7e2f-d6de-4098-b46c-1ab410f2aa83",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "74932e6e-0f16-4bce-b0b5-5a7e7cdbdb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f0c246-a820-4d0f-b08e-956818a210c9",
        "cursor": {
          "ref": "c09525f6-e488-4e8c-8605-171b28736fca",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "18de2352-e109-43d6-9024-4a2a27a7100a"
        },
        "item": {
          "id": "48f0c246-a820-4d0f-b08e-956818a210c9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "75c1397a-70a8-419a-a230-174964491538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5570cc0e-3e9d-4dfb-984d-a4d90d4523d3",
        "cursor": {
          "ref": "fd3f8a00-fdf7-4051-bbde-77ee9b25660a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "433f0752-1241-49c4-b4b3-8d040706de9c"
        },
        "item": {
          "id": "5570cc0e-3e9d-4dfb-984d-a4d90d4523d3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0b97dbae-f634-486f-b541-207ec8a0a2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63a369e-448b-4355-b382-45fb92b6f45f",
        "cursor": {
          "ref": "698c45bb-7f3a-4a8a-a387-829329c4d03d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "073ba4a6-8dc2-4793-850e-a9dc86ffd25c"
        },
        "item": {
          "id": "c63a369e-448b-4355-b382-45fb92b6f45f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bf375795-d6af-431c-98e6-82300c4380ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0dde754-38c1-4715-b53a-964d62ecea96",
        "cursor": {
          "ref": "671d40d4-ad96-4021-913b-92a838ea7138",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "aaebebed-bb24-4475-9070-2cfbd8fa0894"
        },
        "item": {
          "id": "c0dde754-38c1-4715-b53a-964d62ecea96",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "634683d2-fdbc-4f17-bd6a-019f6f2480ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfd3aa4-31bd-4ae0-b448-10cecf6ca8ca",
        "cursor": {
          "ref": "eb7bde11-cce8-4b92-a466-a7ebc8d4ba7a",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8cd50d43-9723-493c-b375-ddebeb2e7d24"
        },
        "item": {
          "id": "bcfd3aa4-31bd-4ae0-b448-10cecf6ca8ca",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "65309e7d-bd05-4681-ab40-5a10230843f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46a2031-b543-49b1-8457-bbca7be4a5c4",
        "cursor": {
          "ref": "87cc428c-5047-439d-b7b9-ca25b1a2f242",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "08e66758-d163-48d6-911f-c1b4fded5f6c"
        },
        "item": {
          "id": "f46a2031-b543-49b1-8457-bbca7be4a5c4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e7c29611-2aaa-4ae5-9d3d-5c001ca2f2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f87658-d9bb-49bf-b89f-de75110dc093",
        "cursor": {
          "ref": "aeef62cf-aa94-4c7a-aa1e-3e80d600a844",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a24f8228-a9cb-4c4f-8edf-07dfffbc51bb"
        },
        "item": {
          "id": "e2f87658-d9bb-49bf-b89f-de75110dc093",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "32799a8b-66d0-4a42-8cb6-79a7db8a32e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8621b999-551e-473d-b5ec-71ccda2aa609",
        "cursor": {
          "ref": "05856fae-6b05-471c-979a-e81e72ab44e2",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "afadfdbc-80b5-43bf-a30a-a3cb524fda4e"
        },
        "item": {
          "id": "8621b999-551e-473d-b5ec-71ccda2aa609",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "432d151b-1984-4b1f-b507-0ac39d66ac4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f326b65-00d8-4af6-a027-b66d7c283e45",
        "cursor": {
          "ref": "afbfdb98-b505-4d21-b0a6-a3b4a7581adf",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3553062a-b7ce-4d84-9f41-1a2f0eefbd8e"
        },
        "item": {
          "id": "5f326b65-00d8-4af6-a027-b66d7c283e45",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0bb76fb7-0821-4b4c-a7c9-577ec8c913fb",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "6052a1cc-9c73-4083-bc2d-d9307ff3eac3",
        "cursor": {
          "ref": "f25d7763-bd50-4b8d-8c14-2711e0e36902",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5461f45f-bc65-4248-abcf-ff711003f1e0"
        },
        "item": {
          "id": "6052a1cc-9c73-4083-bc2d-d9307ff3eac3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fb8477ff-76bd-4472-8dbb-1e00442b1afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9499f1e7-2019-44fd-b170-1a844469b0f4",
        "cursor": {
          "ref": "744e56c4-47e6-4e4d-b778-98a5411abcab",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "84a49774-240d-450b-8d87-6af1da3724d4"
        },
        "item": {
          "id": "9499f1e7-2019-44fd-b170-1a844469b0f4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f192c9d0-ede2-445c-93b9-a7f809267ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17c7269-1a9b-4209-9070-1a16ac0a1e3b",
        "cursor": {
          "ref": "1e0ab0b4-768b-4cb1-9c4a-d08a42d42385",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bea8e1ef-ba42-4560-9b83-216117eab18c"
        },
        "item": {
          "id": "a17c7269-1a9b-4209-9070-1a16ac0a1e3b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "096be467-9e9e-444f-98cd-baaaa4fa9a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d792d13-2b1e-4b3d-a5d7-40e2e898a504",
        "cursor": {
          "ref": "44cf2487-5bf1-4127-bc22-bee992e41010",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0442b46b-cef2-42f9-a6b8-432fa85d7400"
        },
        "item": {
          "id": "1d792d13-2b1e-4b3d-a5d7-40e2e898a504",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c483e59d-8da3-4706-aa9d-e52a84a0bc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589b5be6-f9e8-4339-972b-4210a280d15a",
        "cursor": {
          "ref": "49c56e5e-8cd2-46a2-8aa8-a5c0005bd730",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f9fb0d6e-74bd-424e-be7f-69e85bdc981a"
        },
        "item": {
          "id": "589b5be6-f9e8-4339-972b-4210a280d15a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a543cd8a-4c88-49e3-807c-733804634280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88df9e8-e2bf-4df2-96ce-5cdec087543b",
        "cursor": {
          "ref": "776b3509-af81-40e0-9696-75194ec29b2a",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c659b3a4-d977-4866-874a-1c726ed3fb27"
        },
        "item": {
          "id": "f88df9e8-e2bf-4df2-96ce-5cdec087543b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e7267d48-7cf8-49a8-89fd-3fa31eb4fba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56038110-b01d-43ff-8900-d966a5263994",
        "cursor": {
          "ref": "c1f80472-ee89-46e9-b3a6-c9567d9714a0",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cca7c5dd-bb0f-4fdc-925a-cc0d1e169850"
        },
        "item": {
          "id": "56038110-b01d-43ff-8900-d966a5263994",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "14fd5b47-198b-4d87-8bce-d995482cfdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40869cd-321a-45bb-8e23-6527b29c1538",
        "cursor": {
          "ref": "580a0bca-e8a4-4868-9cf2-01a936dd2d58",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c3396ad9-eb9a-405c-8a9d-345b2cce3411"
        },
        "item": {
          "id": "b40869cd-321a-45bb-8e23-6527b29c1538",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f31cf72a-e326-48c4-b7bb-90bf6182f14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4815c9ba-4889-4209-a17b-4e8d2ee9531d",
        "cursor": {
          "ref": "9a0329fb-ae00-4bf6-8ace-e871c6819ed9",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "642d5360-4ba1-4f46-9009-aae281c53675"
        },
        "item": {
          "id": "4815c9ba-4889-4209-a17b-4e8d2ee9531d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a760372b-6ccd-49f6-8c7e-7e62f4ebe2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e899f5d-8a22-408f-9e25-cd421fc12183",
        "cursor": {
          "ref": "7572ce6d-bcc1-4226-aa56-f27907f63e1b",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bdf3ca36-c6a7-41c6-87e3-e945b5f3f856"
        },
        "item": {
          "id": "4e899f5d-8a22-408f-9e25-cd421fc12183",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f4d4a521-a328-4ace-a6a0-4c6604a29de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744ac3a7-2085-4b49-898a-0a89f32ce63d",
        "cursor": {
          "ref": "4f5f0d8d-187e-4f2a-9bd9-7e36ecdcc418",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5d5ddb37-f5a9-46d4-a058-6fae7fde91cc"
        },
        "item": {
          "id": "744ac3a7-2085-4b49-898a-0a89f32ce63d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2185768c-2f12-4a93-adf2-cacdd4267641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d199dff-aee0-4107-9872-e6bfa00e98cf",
        "cursor": {
          "ref": "970d35e0-1ddd-4a88-bbb1-9324b064c058",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "762cbb5d-b703-419e-9e58-552a3c3dcd45"
        },
        "item": {
          "id": "6d199dff-aee0-4107-9872-e6bfa00e98cf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "db23a381-1404-47ab-9af7-58e1912f5458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dec396-f8b0-4a87-b828-2e422f3be8d4",
        "cursor": {
          "ref": "3c5fe507-83f6-456a-b9cc-3e51516d017f",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1e22ad1e-aabc-4832-a40b-0a044a541dec"
        },
        "item": {
          "id": "96dec396-f8b0-4a87-b828-2e422f3be8d4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "22cbbd55-f925-4948-8bda-ef52966151cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd82caf1-2878-499e-aed2-3f291e0b0a4a",
        "cursor": {
          "ref": "f42eacf5-acd2-428c-92ba-6a4cc5055771",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ed7ef636-72d2-47bf-94a5-2dc26207e54b"
        },
        "item": {
          "id": "bd82caf1-2878-499e-aed2-3f291e0b0a4a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "32a7ea98-2794-48c9-b079-0e89c08ffdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1906b3a7-1c67-449b-81c0-19d818ebb5e7",
        "cursor": {
          "ref": "ecf650f7-6219-4523-b540-0c2f301951b3",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "162fe8f0-587a-4576-9e92-e80ae755429e"
        },
        "item": {
          "id": "1906b3a7-1c67-449b-81c0-19d818ebb5e7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "47a10647-dbc2-4aba-be8f-7282c5d9efbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559b1329-6cf1-4dcb-84cd-99a52bea54c7",
        "cursor": {
          "ref": "d6ff4e8f-1db9-4ac5-9965-6c56a6b4d960",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d5d18c04-3abe-4a9e-9736-a9b5b69e2768"
        },
        "item": {
          "id": "559b1329-6cf1-4dcb-84cd-99a52bea54c7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c3df0c81-3583-4a16-9ea0-b64d4be41c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0875dd4-afd9-466d-92f6-a684abdf3070",
        "cursor": {
          "ref": "b67f005f-97d7-473a-a7c0-a1ddbfbeeae9",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "81365dd0-76ca-4e21-adaf-c7ce9597399e"
        },
        "item": {
          "id": "b0875dd4-afd9-466d-92f6-a684abdf3070",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ed829744-4413-4bdc-95ca-f8eec6f8914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c45a6e-8e9b-4b7f-ace1-bd90eb41c9b6",
        "cursor": {
          "ref": "3be06f6f-09bf-4f09-9810-8a18856b5cba",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "255f0dfd-da5b-43fa-b612-820eae0719bf"
        },
        "item": {
          "id": "46c45a6e-8e9b-4b7f-ace1-bd90eb41c9b6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "56312174-3435-48dc-85ad-4b58f745c5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01173a38-845a-40d6-a9dc-8a34829cd4e5",
        "cursor": {
          "ref": "c7f4fc4f-82ff-4fd8-ba2d-30515e6c0da8",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0deb777c-3f2c-4719-890c-cf898fb6dcf8"
        },
        "item": {
          "id": "01173a38-845a-40d6-a9dc-8a34829cd4e5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6f6b22bd-6499-4ef0-a2de-0ec51e9885e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70748151-499b-4eeb-96f5-a285f02c363a",
        "cursor": {
          "ref": "632ac3c2-1216-418e-aa1f-b520c1aba45d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6a773281-1a4c-45ce-b39d-026bc81e01b2"
        },
        "item": {
          "id": "70748151-499b-4eeb-96f5-a285f02c363a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "487886c2-853c-4930-af81-0f3453284c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cb9336-aea6-4d64-a779-eecf0dad7f5d",
        "cursor": {
          "ref": "5b5387d3-90ad-4175-85b0-6f35fbc24a08",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "99d8addb-dcf6-42b4-808a-a3758e2dbe16"
        },
        "item": {
          "id": "48cb9336-aea6-4d64-a779-eecf0dad7f5d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "65a15cab-110b-4c12-b641-a126085248e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8aaa3b-f466-49ab-8b2a-b09ce84970cf",
        "cursor": {
          "ref": "042420c2-5b4d-4886-8c7d-3dd757227081",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b352a717-66ef-4a29-9fe7-b6adc9d8d55c"
        },
        "item": {
          "id": "2d8aaa3b-f466-49ab-8b2a-b09ce84970cf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7be496c1-2aa5-4acc-af8e-4edf6ff2d4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90cda73-197a-4322-9928-6194bcb7a5b1",
        "cursor": {
          "ref": "b05d1bff-6db2-477d-8c22-f81e53ea720f",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "01c518ea-9a18-4756-bbcd-22cf4e933062"
        },
        "item": {
          "id": "f90cda73-197a-4322-9928-6194bcb7a5b1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4192d235-4377-4d11-a957-c5df7f741310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a4780d-63d8-47e4-b9fb-4794e42d7b59",
        "cursor": {
          "ref": "f0f3b9d4-c797-4080-9611-04edd47c76de",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "16f2ba63-def9-40d5-83cf-36e189540439"
        },
        "item": {
          "id": "d6a4780d-63d8-47e4-b9fb-4794e42d7b59",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "13b426fd-73a4-4913-84da-88feeeb95f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05a3db1-a0c1-4d27-a257-93909f2d71fc",
        "cursor": {
          "ref": "0e10b20e-f388-432a-a532-258b0b7ba10e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3e3fc8f3-2ad7-4435-98f1-c7e8cae6aeaf"
        },
        "item": {
          "id": "b05a3db1-a0c1-4d27-a257-93909f2d71fc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6f81ed7b-cae6-4831-8ecd-4e5a78e6670b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4feee2d1-811b-4c5e-9710-489960bee175",
        "cursor": {
          "ref": "8c54c46f-72a7-4338-9bd1-567cd014d0d3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "78b2d814-928a-4454-954a-2a972cf9d0d9"
        },
        "item": {
          "id": "4feee2d1-811b-4c5e-9710-489960bee175",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "835479ac-59d3-41d0-adfd-098ae2bb8587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef28e522-8eca-438d-bfec-76594b805b90",
        "cursor": {
          "ref": "bdfdc79f-8a89-492a-8dac-0d6a69c21358",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "118ff988-4d80-4b3a-8995-f36a119e236a"
        },
        "item": {
          "id": "ef28e522-8eca-438d-bfec-76594b805b90",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4af342d1-174a-4291-9940-b3e04d72c511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b6e4c4-472a-4874-aabd-610a9d293c32",
        "cursor": {
          "ref": "1e3e055b-37e6-4d5f-8888-9ad26635a751",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "da30f8ad-8277-438f-8654-6ce6bf231985"
        },
        "item": {
          "id": "92b6e4c4-472a-4874-aabd-610a9d293c32",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c32589cc-3264-4c5c-bcf8-1a2fc8bf5743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579c0909-4cfd-4849-8cbb-ca6e6b49a126",
        "cursor": {
          "ref": "b3873fe0-899d-4fa4-be4a-942b267a7545",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6f679bf8-fd9f-454c-83ea-9ac58fd728b5"
        },
        "item": {
          "id": "579c0909-4cfd-4849-8cbb-ca6e6b49a126",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6be37a6b-8abc-4f35-a75f-e8efff992a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb51520-6c61-45b0-9210-38903e6edb07",
        "cursor": {
          "ref": "c0433846-b395-4a50-bb6b-6f1790f30098",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0a355871-2977-4412-8112-a18b9ac3a3fa"
        },
        "item": {
          "id": "fdb51520-6c61-45b0-9210-38903e6edb07",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a5564665-4f96-40ac-995f-22c167a36402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311bff99-8d41-456a-9e63-75769a089baa",
        "cursor": {
          "ref": "1af83382-9e42-4644-acf2-dab1c5291165",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "064b5c28-1b23-4ad7-99fd-99ea6bf635c1"
        },
        "item": {
          "id": "311bff99-8d41-456a-9e63-75769a089baa",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fe2fbce8-14ee-40d6-86c3-667fb71ee3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879fc851-d9e3-4718-8ecb-42f4558a4fd6",
        "cursor": {
          "ref": "123dca4e-3740-4f3c-b044-37ddf238af6b",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7e4398fb-d312-4530-a5c1-7150ec4cb10e"
        },
        "item": {
          "id": "879fc851-d9e3-4718-8ecb-42f4558a4fd6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "998eebff-d566-4b03-a867-ffba06a4e745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e2c56c-5d6c-4710-b31e-1d0a504b58f0",
        "cursor": {
          "ref": "bbb2f069-f989-4430-a5d6-654bf6e6b1b4",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fa637a1f-cec4-4e56-8973-b6bd360e63f2"
        },
        "item": {
          "id": "78e2c56c-5d6c-4710-b31e-1d0a504b58f0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "65b1be2d-d5a7-4fe1-a99b-26c286874e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa44e2a8-533c-4aaa-87b7-a123594e9bcf",
        "cursor": {
          "ref": "53e49dcd-4d7d-4f90-8318-081eb104bd0b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c4fc5002-0bbf-47e5-bc0c-50c155e21fcf"
        },
        "item": {
          "id": "aa44e2a8-533c-4aaa-87b7-a123594e9bcf",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6d1006bc-8031-49fc-8770-308606f05e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9d2b30-ba72-42c8-aea0-407e6c965fef",
        "cursor": {
          "ref": "407d0573-cf31-4ea0-8ece-f0df6e4b3103",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "770fbb73-9f37-4e86-989a-241c964e9fd6"
        },
        "item": {
          "id": "1f9d2b30-ba72-42c8-aea0-407e6c965fef",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4cf3e729-9771-4229-9c05-8d73c41576b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca0f341-1b48-495f-8041-ecdbf7169802",
        "cursor": {
          "ref": "71bd02f2-f2e3-481c-b728-d7a743cf5743",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b6b66e2c-7e58-4287-a6d0-e7c9c61afd3a"
        },
        "item": {
          "id": "fca0f341-1b48-495f-8041-ecdbf7169802",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f6820c7e-ba4e-443d-9d1e-ff5adfff37bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5473e571-6240-445d-be88-cad673e68ccc",
        "cursor": {
          "ref": "55538568-1e1f-4cf0-becc-660a40f2f3b1",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a674f12c-ad98-49d7-ba42-a01959a0114d"
        },
        "item": {
          "id": "5473e571-6240-445d-be88-cad673e68ccc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4ed8e197-0648-4468-b105-f1ecab4c6e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d49818-ba5b-4db6-9e4e-9f2d48bdb83a",
        "cursor": {
          "ref": "2efbe81a-94ba-4016-a49e-b0f9f96063d4",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "083205d7-f7c4-4207-b548-87520e07ec8a"
        },
        "item": {
          "id": "00d49818-ba5b-4db6-9e4e-9f2d48bdb83a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "68e6553d-80bc-47b6-8762-4570893ce533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a4e6e8-a326-4c0b-b9e7-6a1da4205631",
        "cursor": {
          "ref": "2e4b1879-45b2-44a0-acd5-854d68dcac64",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "acc14afd-232a-45db-8281-fd9ec12e1b16"
        },
        "item": {
          "id": "d8a4e6e8-a326-4c0b-b9e7-6a1da4205631",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "86486e9d-94c9-4c65-9077-5b50432cc146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81b300c-7b00-4b77-bc86-b1fa0a912be8",
        "cursor": {
          "ref": "ceec99f0-f964-41a2-ae2d-098fe6f02005",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7fc564ff-15a5-4197-a174-981d858949e0"
        },
        "item": {
          "id": "b81b300c-7b00-4b77-bc86-b1fa0a912be8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "458c38f1-619f-4ce0-b9ec-d079a6f33a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeffd5e-f752-4089-bc99-6d7227ee459b",
        "cursor": {
          "ref": "99f90288-5b86-4b4c-8a5a-6d440ac86e7b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "53c25636-8acf-4094-bc2d-16c7174f8c2a"
        },
        "item": {
          "id": "dfeffd5e-f752-4089-bc99-6d7227ee459b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6b03dd8a-15e7-45eb-b74e-4fb9ad39cbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9d5a88-0248-4cd3-a306-ef4eb60f0ab9",
        "cursor": {
          "ref": "4445cc5d-2619-41fd-b05a-f1ef0cede027",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8c49bba9-e1be-46a4-acf6-2c6766153b11"
        },
        "item": {
          "id": "0f9d5a88-0248-4cd3-a306-ef4eb60f0ab9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c8083abd-7005-4135-b1a0-ec576b343405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1756079c-63a3-44d6-99f1-4dbe26494442",
        "cursor": {
          "ref": "5fbcccf9-4dbc-4976-85b6-808dea088490",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d3cb49ee-a016-48fa-bab5-6cfc71a3678d"
        },
        "item": {
          "id": "1756079c-63a3-44d6-99f1-4dbe26494442",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "07923d6a-16cb-474a-a56d-551e1e9db735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9129f0fa-93b1-4999-bdc6-4d334a09601b",
        "cursor": {
          "ref": "55c8779f-d25c-4391-ad6c-dc1f62b5aafa",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cb36ec49-188f-47ae-8f0b-4c757068408d"
        },
        "item": {
          "id": "9129f0fa-93b1-4999-bdc6-4d334a09601b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0b72ba53-8690-4889-a6b2-75ccfb450b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4365e4-befa-4449-b77a-464d0c2182d3",
        "cursor": {
          "ref": "7df3c4fa-0b39-4404-b1a1-ff4f2a57d865",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dc22d32e-4088-4bcc-bede-3ff8c2b9d7de"
        },
        "item": {
          "id": "9d4365e4-befa-4449-b77a-464d0c2182d3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "426bdf81-274e-45b0-bdd1-added2a6503b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caec91d-3b02-44e3-8fd3-31d0a9e80230",
        "cursor": {
          "ref": "7b75ace9-3eed-4101-9b53-c90159fe8f92",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "00a06282-a2ab-49fc-af0e-020adbe90df5"
        },
        "item": {
          "id": "9caec91d-3b02-44e3-8fd3-31d0a9e80230",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1c6e4364-406d-4fcd-8c81-fc0dba62f867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c32825f-a3e9-4245-a454-adc46844b0ad",
        "cursor": {
          "ref": "2f306a19-cd0f-4744-bf08-daf47fd22499",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "814d39d4-689d-4827-bfba-f48a95b9202e"
        },
        "item": {
          "id": "4c32825f-a3e9-4245-a454-adc46844b0ad",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a45d2a8d-608e-4878-82d5-cea2284165db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b9bdbe-cc6e-4b4a-99c9-fba0ce33e75c",
        "cursor": {
          "ref": "4ea98aea-14ad-45d2-a63b-5c16898e189d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "39035a6d-39eb-4cca-9b74-3bf8b18ef8c8"
        },
        "item": {
          "id": "36b9bdbe-cc6e-4b4a-99c9-fba0ce33e75c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7f22bf56-771f-4fc8-bf98-36399de07c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c0a268-d5a8-468b-95f1-5394b39767db",
        "cursor": {
          "ref": "234e637f-ba78-4d08-bde2-f25ee4f16a87",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b71ac1e4-4364-4927-a2c8-daaa5206f479"
        },
        "item": {
          "id": "a6c0a268-d5a8-468b-95f1-5394b39767db",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "518d4041-26c8-4083-a9bb-f1bab8c403cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f468087-2707-4d65-a55d-e1d3eb620999",
        "cursor": {
          "ref": "fb77d781-fb07-4ffd-b0a0-b9dad9f3b3e0",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "452e2f26-d592-443e-bbb8-828c71a73f4d"
        },
        "item": {
          "id": "2f468087-2707-4d65-a55d-e1d3eb620999",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "af73a087-7b4a-423b-8a81-0e75dad742f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f924c6-e7d5-45b1-b415-80ed92949fcc",
        "cursor": {
          "ref": "951a5eec-041a-409b-9411-cf007999ad24",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "01e67c10-90c8-4c29-a27b-6865af8aa0a6"
        },
        "item": {
          "id": "f8f924c6-e7d5-45b1-b415-80ed92949fcc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a9d17767-495e-489d-bb33-741c52ae3d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165cec15-de6c-455e-a14f-d4cfb8572d2f",
        "cursor": {
          "ref": "e1c4c791-8ae8-4738-b330-b289477c67b1",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ebe0ae56-434b-4c6f-bbeb-9be406fafb22"
        },
        "item": {
          "id": "165cec15-de6c-455e-a14f-d4cfb8572d2f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "78d82299-b407-4469-801d-ad61ec23b110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8ab050-24f0-4f03-b317-1b89858c8e1f",
        "cursor": {
          "ref": "ddb1853c-07da-4680-8b4e-eb827d553e5f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "310ca40d-1c2a-49fe-a29b-819b36f74a63"
        },
        "item": {
          "id": "3a8ab050-24f0-4f03-b317-1b89858c8e1f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3f54ab9a-6419-4c86-9c8e-ec93c17ecd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb10499d-ae51-45b8-a09a-c4fadd3fc990",
        "cursor": {
          "ref": "9e69c429-e811-45c9-9db1-5b8960cf5d0d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "58dae835-c063-4a4f-8d7b-b09489b271c5"
        },
        "item": {
          "id": "cb10499d-ae51-45b8-a09a-c4fadd3fc990",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4521c814-6f05-4230-ab2a-31ede2e83ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa117153-b795-46c7-bf30-b5e22fc19da4",
        "cursor": {
          "ref": "fa8fc2a1-328b-43ad-9fe5-572feb16bc69",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7ca39df6-5113-4c61-812a-87f1df20039f"
        },
        "item": {
          "id": "fa117153-b795-46c7-bf30-b5e22fc19da4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4f9f1b7d-c278-41e8-9b30-8df722a80f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821833c5-1a2a-4ca7-81b6-027001b7ac53",
        "cursor": {
          "ref": "de717dcc-d365-4471-8c2b-89a768097599",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "34224340-94a5-4ebe-b8bf-5ff4e0ed1503"
        },
        "item": {
          "id": "821833c5-1a2a-4ca7-81b6-027001b7ac53",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3d66720c-8bbd-4165-8d21-c94e2f00ee37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bae251-dd86-490e-862f-44972fb0f2da",
        "cursor": {
          "ref": "77402955-3065-4b4d-9fc5-47ba24bc9fa8",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "12b95009-6881-4b2d-a5a1-ea464764cd5c"
        },
        "item": {
          "id": "42bae251-dd86-490e-862f-44972fb0f2da",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "df8468e1-5ac9-4da1-9a3e-d459c9426634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5051b5cb-b9f2-4bdc-99b4-10543312f9ae",
        "cursor": {
          "ref": "a59559fd-e7ee-45b9-848f-95a2c2bf09a6",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1689b934-895d-4cf5-817c-19498ca746c6"
        },
        "item": {
          "id": "5051b5cb-b9f2-4bdc-99b4-10543312f9ae",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b0d85db8-c453-4859-9452-eb2bb18460bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8041a586-a81e-48ea-98ea-d3a217d2c8bd",
        "cursor": {
          "ref": "f1af106f-3ce0-4791-a2de-48aa592276d6",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3b4c4f49-c263-4bbf-9d8e-de15394c6e7b"
        },
        "item": {
          "id": "8041a586-a81e-48ea-98ea-d3a217d2c8bd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "670147f6-70cf-4a9f-95f5-f297b49d7bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79eb9f9-571a-422d-9304-ea36594193a7",
        "cursor": {
          "ref": "1bbe5870-a700-4aa4-8b76-c1274db4dfab",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "748ee721-a117-40a3-9b06-26bb419c38e3"
        },
        "item": {
          "id": "c79eb9f9-571a-422d-9304-ea36594193a7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ba8c9a92-407d-4554-84a7-5dde1f18a53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a18400-0bcd-4f80-a121-60cc2c5d00ca",
        "cursor": {
          "ref": "e004a253-bfe4-4ef2-abec-97bf97427fa1",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9b1ae5f3-b72a-4aa0-8eac-799915ba2723"
        },
        "item": {
          "id": "53a18400-0bcd-4f80-a121-60cc2c5d00ca",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8b65f981-32b9-4081-9459-d92fae1d3247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47766f14-d456-4eae-88ff-12ea6f8350c3",
        "cursor": {
          "ref": "8ce02a93-aed0-4743-9d94-58cd477d9a37",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b696ce8f-c775-4a96-8c1f-73d8cf6f71ed"
        },
        "item": {
          "id": "47766f14-d456-4eae-88ff-12ea6f8350c3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1741682b-99d9-4b7e-8d46-c06b1a21c137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19233eb7-2f82-4bd8-9be4-60beabd74977",
        "cursor": {
          "ref": "941889c1-e39b-445e-8476-14ba7d0e4ce0",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ce842f1e-0ed5-404a-8742-27ff4a129c8b"
        },
        "item": {
          "id": "19233eb7-2f82-4bd8-9be4-60beabd74977",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c05169d7-0f43-44a9-98e0-4b1923c8cfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdbafbd-3a05-4b99-87ab-253ccdb1dddb",
        "cursor": {
          "ref": "d5df734b-6957-4577-92bc-7893989c6cd0",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f2c2aba3-a77b-4522-bf8f-d71c816c20c2"
        },
        "item": {
          "id": "7bdbafbd-3a05-4b99-87ab-253ccdb1dddb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "84e2b291-5f53-4ca7-8ffa-61ddd574c503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca8f5cc-934f-4290-bee1-07e78fa3dc9b",
        "cursor": {
          "ref": "dd8b6338-0894-49b0-9814-f10141553ea6",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c0903526-fce6-4f72-8dd3-69c6786cd754"
        },
        "item": {
          "id": "fca8f5cc-934f-4290-bee1-07e78fa3dc9b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4e691736-7fba-4290-9ab4-d854e54df304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc61cfd0-1737-41a9-8f40-4434a0bc17dd",
        "cursor": {
          "ref": "949414e9-afe9-4e5d-a35d-0c7041268d79",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "aa69cbea-dbe9-4ed9-ac5a-e327d1fa3659"
        },
        "item": {
          "id": "fc61cfd0-1737-41a9-8f40-4434a0bc17dd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "230098c6-81b1-4bb3-a28a-244ce39360f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cdf53f-a912-43c0-bac1-c0853e0e21c4",
        "cursor": {
          "ref": "3a7db603-7169-4d29-b5ef-845ddbfe285c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5505b3f2-7195-4530-89b5-e79c7a8d71ac"
        },
        "item": {
          "id": "83cdf53f-a912-43c0-bac1-c0853e0e21c4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0d964eef-a9e2-406a-9083-b706e30214f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4210d73e-e875-4425-bc09-4866215f7921",
        "cursor": {
          "ref": "2e09bfce-567c-4f8a-ab4b-6dd7bd0e6b76",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e70b57e7-836e-42db-aabb-71d135faba75"
        },
        "item": {
          "id": "4210d73e-e875-4425-bc09-4866215f7921",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "81313779-a427-41a5-b00b-69903eb157b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e48af2-eaa2-47fd-8a2a-0ed84bee6b8b",
        "cursor": {
          "ref": "55f0e5f9-f5b1-434c-9000-5bfa417779a9",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bfe3e3db-1fcd-476c-8121-9559ab92d26b"
        },
        "item": {
          "id": "13e48af2-eaa2-47fd-8a2a-0ed84bee6b8b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3ca81ed4-b5ab-49d9-9270-26adfeeec2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf7eef2-d07c-4c4b-a099-31fa5b5bef93",
        "cursor": {
          "ref": "f713f6d4-31ca-4f31-98fa-ff8568f8a2ee",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c58670b8-0db6-49b7-81b1-b0ec4059af0b"
        },
        "item": {
          "id": "0bf7eef2-d07c-4c4b-a099-31fa5b5bef93",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "41f4a8a1-bdc4-4d8d-a082-6043aca63fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bfbc49-6bee-4a84-964f-c8907268aafb",
        "cursor": {
          "ref": "14fb0d2d-d40b-45a2-b907-64efd4894356",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ee3fde4b-105f-440f-b439-9b34b36d066a"
        },
        "item": {
          "id": "a3bfbc49-6bee-4a84-964f-c8907268aafb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "54f31d7b-cb30-446e-b10e-3c323e3bba9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a377a0-2b23-4438-8cf2-ec72c02beff8",
        "cursor": {
          "ref": "4f37791e-14d0-4871-aab2-b06a602f001d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "115642ba-1768-428d-9163-d27d59a026c0"
        },
        "item": {
          "id": "94a377a0-2b23-4438-8cf2-ec72c02beff8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bb97db3e-4962-4e6c-9508-467a06eeb489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf3f4cb-ba62-4926-9542-4f5e068a30c7",
        "cursor": {
          "ref": "b8417a83-3333-4623-a877-e8d6315c189d",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "30cab5b4-0fe0-412d-b38b-a6697abc6244"
        },
        "item": {
          "id": "0cf3f4cb-ba62-4926-9542-4f5e068a30c7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "adfaa5b5-2b43-4a71-ba7d-c62443d9fd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21299bd0-94c0-43f7-ad6b-6979b6f590ef",
        "cursor": {
          "ref": "4b192b8c-db18-4dc1-9993-01f16c2675a3",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8607690d-c100-4601-b61c-1cfae49c53d9"
        },
        "item": {
          "id": "21299bd0-94c0-43f7-ad6b-6979b6f590ef",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e343aa7d-3c9d-4fa9-84df-f7793869a0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79caf2b-d148-49ce-8fc4-0491fa8064ac",
        "cursor": {
          "ref": "cedb51b7-9916-4774-aeb2-2ae2b197b1f6",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8eab822a-8dc8-4a62-a629-57b4e100ae65"
        },
        "item": {
          "id": "b79caf2b-d148-49ce-8fc4-0491fa8064ac",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8931d395-37c6-4fff-bb21-9c2b2e44bdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77916b1b-e4c3-4f88-8b00-2cdf7ac22f43",
        "cursor": {
          "ref": "d0ba7102-4be9-4c7a-babb-6ec9acce787f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "23017dc3-8a73-4d78-99a9-399cb264944a"
        },
        "item": {
          "id": "77916b1b-e4c3-4f88-8b00-2cdf7ac22f43",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "72337f45-dfe8-4f48-8acd-6df7a831d088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c708d76-033b-4cb2-9a37-bb5bcd90bc1b",
        "cursor": {
          "ref": "43f6b68b-44d4-45e9-816f-1c9eb1aa06ef",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3b1a93bf-455f-45e7-b8d0-643fc76ecf3b"
        },
        "item": {
          "id": "7c708d76-033b-4cb2-9a37-bb5bcd90bc1b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "39cc3c1f-451f-4cfa-bc0e-b16770a886aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93729911-5c49-4427-baa5-973ec0c825b4",
        "cursor": {
          "ref": "1a36e1e7-b4e5-41cf-b204-f0a6f30bcd81",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "90463dcd-845f-4ced-ab3d-112b27b3459d"
        },
        "item": {
          "id": "93729911-5c49-4427-baa5-973ec0c825b4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "020503e5-730b-49f1-8370-0a7932f5a568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ef260b-49d4-4d6a-bc78-37c4f9138a31",
        "cursor": {
          "ref": "2dfaccdf-8c8c-4e59-9342-4ff46d35f5b8",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0648372f-433a-4941-8bb4-d0ea23b93eeb"
        },
        "item": {
          "id": "31ef260b-49d4-4d6a-bc78-37c4f9138a31",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bd97c28d-95be-4746-bcaf-6b360dd603cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc3a8b0-c1fd-4f11-933d-0ab440d61552",
        "cursor": {
          "ref": "136efa82-ab8f-4811-88f5-683037dbd42b",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "177ae38d-8596-4d00-a7df-cd49d9172d1d"
        },
        "item": {
          "id": "0dc3a8b0-c1fd-4f11-933d-0ab440d61552",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "72e924d1-7c55-4cdb-bc26-3e1b89411103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cde973-a614-43ce-a6c3-abf57b2280c1",
        "cursor": {
          "ref": "e445f3b8-1979-421b-a66d-908bd887aac3",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8b9519a7-5a42-4c8a-acb3-c7c3e122ed9e"
        },
        "item": {
          "id": "21cde973-a614-43ce-a6c3-abf57b2280c1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ee424912-1792-439a-a64f-a2ec22589945",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3df99b4-b773-46ca-bc87-d1d1127d57d8",
        "cursor": {
          "ref": "96a1393d-a099-44b8-ae4d-df4486184ea3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c33d5019-d97d-44f8-8122-def4e194c351"
        },
        "item": {
          "id": "f3df99b4-b773-46ca-bc87-d1d1127d57d8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cb6bcc00-442d-43c3-a061-be11722a56bf",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5807b4a4-2ab7-4bc5-8194-3d74d722bd3c",
        "cursor": {
          "ref": "ec2b0a7e-d21b-4bbb-81fd-1ad3de2cdf2c",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1015c2e8-a4e9-4d59-9acf-c7e161ae2873"
        },
        "item": {
          "id": "5807b4a4-2ab7-4bc5-8194-3d74d722bd3c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c83b8afd-2f25-414a-9ada-4e9e7446824f",
          "status": "OK",
          "code": 200,
          "responseTime": 3396,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c70bafd-0b28-4ece-8c6e-72f1ae158dd8",
        "cursor": {
          "ref": "0820fbc6-a36c-49bc-b324-fdd5ad21569c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3cd8e205-2ee8-41ff-b53f-04e422095f77"
        },
        "item": {
          "id": "9c70bafd-0b28-4ece-8c6e-72f1ae158dd8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "be5561da-2e63-4d6b-9a0a-fb329158bc45",
          "status": "OK",
          "code": 200,
          "responseTime": 2673,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed04ef1-e343-4d13-99f1-f8927859736a",
        "cursor": {
          "ref": "039ce444-5018-4fac-bedd-68f6fcea05b5",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9bb822c9-9dd5-49bc-b0f8-bed2784ff89d"
        },
        "item": {
          "id": "0ed04ef1-e343-4d13-99f1-f8927859736a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2588c99b-f2fb-4fbe-a879-0ac92d5e0e44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed04ef1-e343-4d13-99f1-f8927859736a",
        "cursor": {
          "ref": "039ce444-5018-4fac-bedd-68f6fcea05b5",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9bb822c9-9dd5-49bc-b0f8-bed2784ff89d"
        },
        "item": {
          "id": "0ed04ef1-e343-4d13-99f1-f8927859736a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2588c99b-f2fb-4fbe-a879-0ac92d5e0e44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afce56cf-e81e-4869-8bfc-8b3f6d93ad44",
        "cursor": {
          "ref": "cf11e9a1-3576-45b4-8ee7-88292f790450",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8742b898-0825-4b48-8424-20af47442e95"
        },
        "item": {
          "id": "afce56cf-e81e-4869-8bfc-8b3f6d93ad44",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3ad0500b-854e-4219-a3ad-4bd0e2e5d2ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa778c81-bfdb-42f0-8358-6d045d5b347b",
        "cursor": {
          "ref": "fa0e44a0-bae0-41ac-8d90-c1aef32cda7f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "69cdc431-352b-4fc9-bcf5-6cf7d0c0b484"
        },
        "item": {
          "id": "fa778c81-bfdb-42f0-8358-6d045d5b347b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "76b99987-46a4-417e-96ba-c63a7db1adc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}