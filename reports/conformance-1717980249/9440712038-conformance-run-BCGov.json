{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bc341c74-f011-4a5c-92ee-94b7b957b371",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3d2a4479-e99f-4081-8add-322044ed9f0f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a843063-c32f-48ad-86b7-3f88307d225d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "279ffab7-2455-419e-a9fc-2b2cd835c813"
                }
              }
            ]
          },
          {
            "id": "85fa0373-d938-4147-af27-b449ad55cbb4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e76ed05-2b01-4325-b497-89120b244550",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "15a454c3-6fef-469b-b856-c59ab4b2f07c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ffe0d4c8-4349-4bca-8816-512ab9687e00",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5a8ab00f-9808-4842-8bdd-d7b0b76e3f61",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e50c0a7-a963-4182-ad98-daabe6448148",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "541f6150-cd92-4769-84bf-97a827106e61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f9df41d-3ce7-4d76-a4f0-44b94a0fb684"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d0c36c0-05cc-4aa6-af73-a0b410c069fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "205e0e20-229f-4be7-9cd5-679f8ae88f72"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "13206a8c-397f-424a-be37-d408ed527398",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d06d48f-f1b0-40b7-a0ac-29f476abcbe1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be0f4289-107c-4360-9709-60f9b66eaf67",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d9ed72a3-2505-4709-bad3-9ba5fd8df225"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0ca4d77-b368-42e9-8b7c-3876df014b99",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9728cd15-8a68-44c6-8b2e-49604f153f2b"
            }
          }
        ]
      },
      {
        "id": "454e7cc0-3f97-4d33-87e1-e7a16aad257e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6e1f1bea-34af-4fde-a996-8222848d70c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cd9793a-3b09-47bc-a2eb-b5426a336fb4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e5cf79d-1fe0-40d2-a6dd-0548a0544a90",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25eb0f2-2481-4fe9-a642-5f9f46bae911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2490c6dc-79cc-4e5d-87d0-1085fcf7c2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb45225c-4893-42de-af2f-34ea27eac3c1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba5f17e-5a7b-4cf9-83eb-78eb9d6c8118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcbaf39d-b05f-4e14-9c38-ae0a4402a3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b6630a-fd35-4cf5-8b32-6935b1a998ae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3bba34-9b39-4ec9-a32b-3f655f3a5916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbf15e89-b043-4cca-ae29-76c7c0a9eee4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15bc2996-1f8e-4705-b7ba-7ed927e81b87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cce11cad-fee1-4b04-829b-97e2dede95f7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c8280d-26f5-4507-9e5d-3959530ac47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "680c3ab6-93c5-4717-9f23-c98020b8e4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8d9abe-6670-4df5-b34b-55650ac275fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25d34ef-72de-49da-abb5-5f0d5b5efccb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9b816e60-2cbf-4040-9a23-4b94df46eaf2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46013281-624a-47eb-8a7e-3c515e4cfb00",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afaa20d3-b848-4fdb-8f36-9d7d79de7d28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ae68fdbc-db0b-4357-88e5-497bfb50bcea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a697a0f5-ebe4-44fb-98dc-d0670266345b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "194ad184-f71b-4762-b1e6-8ba5c8912a39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebd027ba-b449-4eef-ada1-9c9f7860fc54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48792571-6b64-454c-815c-9dab951184b8"
            }
          }
        ]
      },
      {
        "id": "bf68f131-3b0e-4c76-afba-f46f55c590d2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0978a08d-e128-4f52-93f4-db763528f04e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bcbfe30-0430-4546-aff2-e1118dc7acf1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "204057b5-fa1b-41a9-983e-fbabc1ccda85",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e54b73-4e00-40ce-9b50-4ced19ae6884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b300507d-2ba8-4969-831f-5fb5f09b91d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305237d2-deb8-43ad-b6d6-a6cac6c6b99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4444c7e-94e1-4205-8145-fe419bdc77f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f1fbc6-1fbe-488e-97a2-f4b9c835c966",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c8e6ef-b30f-4532-9be6-8b375bc9051a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a911e7-ec72-4396-a96b-68b5160c3a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67606651-7569-41dc-9145-d237f7bee2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "497fd48a-9569-47e2-a6cb-4eaac7e6629e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4c100e-23f2-4d43-9184-feb478b059a7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b29034-a0d2-4116-8d1c-a3f0983cadab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbbaec9-ca96-45ae-95c3-4a14a4d8f7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc527ed4-5ddf-4e5a-914a-296d2b1d201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7839984-104f-4587-9c53-283969cad6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3437dd7-4878-4aa6-b647-f5e64c362b2b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02950681-a6aa-459f-85cd-2ff4e3fa8049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7e5afa-4104-46a6-b76e-d1b15e64c27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2afdf2-26b3-4715-9bb3-3a5540632ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f6f62c0-c97b-4945-ba50-c0d75f563201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a9b662-1f00-428e-a5fa-2460f85e2231",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b8f3d5-9030-40af-9f12-6d99f3c9e12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a52715a-c895-4e98-b9e4-415e8c33eb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9ed0e8-425d-423f-8bd8-44fe2db08c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbca90a7-e150-42f3-af81-88374948ff3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4e1a1c-2aff-47f8-a025-66ce4fd8dd17",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87cd002-df42-4ba5-adaa-d6de03256c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84492ed-cba3-40dd-8b60-abfe191bd6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066e3543-e682-4337-b6b6-9dde7ba861fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "893f36a4-1e2a-4a0b-ab1a-c1b6aaa31ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb81e560-62aa-477e-bbd9-ed5ab5574c94",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3703ef-478c-4c51-8083-a9c3382d81c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7031ff46-6fcd-43df-a372-bd4c289ffb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b907bb-dc08-457f-94ba-1bb3126ae964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "652bc19a-1b40-4764-9bef-708485736f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e911dcf-7354-4a37-a837-e45c2faf0843",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc4dd74-d16b-4c8c-b806-c13307e7d064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a095da39-dc8f-45cc-a28a-0291a9f86e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1ac159-2b9a-4597-b07b-3d0e9c679611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faf60e1c-1488-4257-8bc5-22f592be9b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe4c5b5-6193-4647-ae2f-a4d5ee5be21a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45d15c3-1150-4d39-8dfd-6dc554434c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c91b034-9e01-4111-888c-f0e58b056c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cde8e4-6be5-4a70-b5da-9c0b40e7993e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2e93513-d059-487a-a626-0111bb62a244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f850c26-10f0-4bd2-8304-737d6258ffdf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67168c65-2fe4-41e0-8364-0b215518c482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9a5eb0-b87c-448e-a9c8-c67387a2c1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33643139-8740-45bb-ba94-ba52963af246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bfae2bd-02fa-4545-8e4d-ed726b60f33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25083d73-13fc-430d-a801-7f29b58625a9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1c7a6b-c853-4a72-8bc1-404d5d33611e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e87b38-3999-4bf3-b2c2-7fe78aea54e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbca97b-b4a6-435d-a302-aea5d816e4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9573434-9926-4698-8779-1cb43bc93663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d80d6a-583b-441b-bcb3-bee91e7d50a9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e534bc-bdd2-451d-91b0-4283be388e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19e3025-d245-431d-bf82-057e01fb312b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396c920d-d055-4dd9-b7f3-4a96ee6c7b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae3d7b47-8595-4f47-b2b5-1fbf61959828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb742a5-2d8e-4cf7-a57f-925df28cee95",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff06aa0-2963-4032-be3b-35d586f1dcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d64eff-05ff-4514-a3de-c287e1fb0304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96d5de4-f86e-47e9-ac4f-634b235d5f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09534918-a581-4b5f-9026-4ebc8ebc4a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29997f84-1548-42e5-afda-5b40d4fce460",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a36dbf2-c939-4c1c-8ba6-1741af7c186b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2484af4-0cbb-4b74-a06a-b25aaa0398f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e671f545-1fa6-45e4-93bb-726cfab536d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "039e3c27-c906-451a-803a-ed77afe15a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542db0a4-6d5e-4ba6-8267-b9cee826b90f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c8d4df-c5cb-4327-b102-5dde063c64eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c497855-4794-400d-812a-d4acd94b3ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fc9065-fbcb-4926-8dc5-8c96a6415611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb8260da-2498-47f0-ba0b-90d9cadfb096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a24a0e8-00e5-4de2-9c14-7243e7e452c0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad4a64d-33c9-49b2-9e37-e2298f4418bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2fd8d4-463d-46b3-8727-a41c070ac0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc963099-24d0-4a47-ba3b-76fb8a8f32e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30da570b-12a0-456d-9925-79b522295ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63341298-6d6f-4b4e-855d-131d12d38942",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197a4e1a-deac-40de-950c-3ef3ac75f115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae06d9d9-7e05-4740-b544-cfa605d064ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d722b670-fce2-471a-be94-2f4de2f6b6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a4ef0f3-eaf1-455a-8aaf-9b670889f6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728855f2-8bd9-4195-b0c6-71ee09f29b49",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034cab5c-db84-4ac3-a2e4-90a988be16b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2036281-308d-483d-888d-cc1c5dadca01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc81a62f-81c9-40af-bbfa-7fa1612cb4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4449b42d-8c1a-4233-b107-0283166ccd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046ec0da-b7eb-42c7-a58c-f01b4f62c3ad",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67697ec9-44df-4f5c-abd8-7199f1635049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a05132f-5820-4b52-83b7-ea29d78d8f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14a9f19-422e-42fa-855c-bd5bd6fff884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3934d223-2771-4861-b7c6-6e29bd33b6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809a803d-08d5-43a5-a515-31692c18cb06",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85e6bf2-4eba-43df-bfd2-a76b475bfeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449bcf36-7112-48ee-89dd-4bfa1d0e90b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c61514-b19e-4223-a671-e9c51ae284d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a48af283-345d-4260-b393-e21c96a94b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4895958b-b8e7-42af-9983-41c5c2f158b2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8617257d-9fce-48ce-99da-80f2a0c8846a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86d3b13-e08b-4a2a-99bf-97dd758bb9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8935b135-7ff3-420e-9907-525487ca0351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06f74b2a-8c5c-420a-881f-0ebded0b7047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78d1a82-3353-4d46-934f-087f94637e80",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767bdc60-5ca6-4653-9d87-ef508e822683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc821d8f-871c-4371-984d-349e7d76a485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efd17aa-bea6-446b-9467-98593a6a9e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46e2e1af-20e7-4f49-a650-1211603104ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795de0d8-8c50-4c89-9acb-c4bdec75b4f3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3495cdeb-82ca-470b-bbf7-813ebe87b9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5880b5bd-78c2-402f-a3d0-3ee32847c47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38a4183-cbd6-4473-8476-720225ee51d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f876f84-f231-4923-8777-69a008f8a419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d8ea58-5392-48b1-800c-b076a3c78405",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2961a831-e0b7-45dc-84d5-b3431f7d9c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3553dc-fb23-462d-b24b-9be33751900c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc9a20d-8461-4ea3-b8ee-fed10850be1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eed24ea-e83f-4d20-9c9c-85223db2a103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37e5cc3-9274-4cff-96ab-fc27ceb1c5ae",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f95bc5-210d-4f6c-a217-2182e86cb0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63ff28a-8dbc-4e85-85e0-e7ff3148c395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddf83af-e5f2-4486-aa57-e5f2550676eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e90047-58fc-4837-9855-3dc1b0d45f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1d15f1-483f-4e8e-aff1-5cdcfc8feddf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a75a18-d782-4a0a-ba01-a8b071b24734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbf9716-316c-4987-8ab5-eac5f7f03583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf97d27-9ad3-4a53-ae28-a24b9026404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19fdc29d-262b-4bd7-90f5-72b81fc8da22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1296890-d4c1-46ed-b6cf-99199ba84e1d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793d3fbb-3e79-42ed-b138-9215f73c16e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67504284-18af-407e-beaf-6adefb45704c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5aa318-1ef4-4869-adba-e37995378bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dd1d15-9c99-4ced-a098-4c7b133be4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3794477e-2527-40e6-8365-0f9f2d548eb0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdb534a-106e-4e08-81bf-614be36d0ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9c5322-2b59-42db-8da5-63bd5660f103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0cd74b-8706-4ee4-86f8-8de1f3d68758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc14e88e-d6dc-43af-8358-fbee5322a411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14119aa9-650e-4fc9-8738-f7147d0009a4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5915e87a-953f-464e-8cad-d8888ccae3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdfe8e0-de04-48de-8bb2-30da26c742f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9376abbe-3028-4bb7-9596-3e70b03b72cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b243de-414c-4f5b-9fdf-eb3f9b5bda76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8298f190-40b0-4b19-87ba-a29b33b248a2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57db38f7-533f-433f-bfc8-ea5f08d2804d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4cc56c-6067-4206-b3e3-ab65a58ca5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f444ee-5815-471f-b12d-e4b218197793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "340b4dd3-c00b-4a1f-bff6-e5b555ff2782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92177c78-0bf9-45a6-a488-320d7cfbe1ff",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37830cbe-fe5d-4371-8bc5-eb2b40b5d2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2192d304-ba20-4392-8393-c3a8c17c4f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a672f4-73f9-4993-b22b-3d5ca266127e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab87b13-209f-4e77-92f0-d844ec7fa2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea85f52-1513-4afc-9571-cc3c0b06fc12",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ac6303-17af-4476-b562-d6d730d4148a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61902d92-edfa-42f3-acc5-51ee1d0019f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc1c375-b9c6-4da9-82f4-2eee051a6528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e02bd74-c4d9-4512-b6ed-2863467be770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5798660e-412a-4b43-9c46-47b1a9386152",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d60e0f-b48d-4f30-b53a-e3655435eb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79766332-5d52-42d4-a3fb-6cb28e765362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ef8cfa-c620-4a74-8dd0-58ea0289a237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f77d29-0156-4baf-93c8-4f40b5e3b66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26ce8c3-209f-4491-8000-8d810170b404",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c878c9-b38f-4cef-96ac-cf56cc465ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764239a5-d67b-4df8-b232-0c2ace702b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52025727-6da2-4fb8-b4da-df7514f0db9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ffc85b-57c4-477a-9b61-c9d5cf7b1d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1777701f-b68a-41c3-b845-5efdbb24be47",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bb16d4-6788-4afd-a5eb-b0f83acf7efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d662025f-7739-4bc8-a49f-1b8a30b12aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a370d7-1688-4ec8-9644-7194c92cd865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "258ad630-0b61-4c60-a7a6-176be1168e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610f191c-525e-4890-8d36-315f0b967d66",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51021862-f86c-4bca-98be-9560b7aed77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "842a4c44-75fe-4372-abea-abb24024845e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6a3d44-7dc2-4ab5-8bf6-411f723e4ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e2a01c-ec60-497e-8063-2a2794ddd4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5163cce7-656c-404b-b392-b800b40f8e02",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec7cc56-3fa6-4f53-b9ac-a58b036d1681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcf0213-b1c0-4ce0-8900-760a82cf1bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54555bc-b3b8-4610-a426-a0c4b39c21ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17359b4c-f652-43ec-b4dc-9dfe65f4906d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25a4716-d9ef-42ab-bb43-d7e28a1fda5b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae32a825-c834-431b-a1e9-6f76203ced00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116d7731-ed8f-48ed-9ee8-2eff9ee0915f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feba5167-e228-40cc-be93-0f846f61c794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ecfdf5-d8db-4b10-815e-284b6baa3d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0255892-1cb9-45c2-9ff4-a5421b75c077",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2af6053-4aa2-48bf-ad4a-c7265de4277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f6482a-564a-4e17-8c0f-f71f2caeda02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d53a199-0309-4357-af01-055327b43bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6990e8dd-3f5f-4c34-a373-bbe6e804532f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a6cbb9-dae6-445a-9380-1646a60b40d4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d1c9b5-2c96-4953-b4ee-06d616726cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e6b651-017a-4b47-a115-3fe59d95b49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db79118-4eb0-41fa-b2dc-b2e273d8877f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "17b8b32a-079e-47f4-ac09-6186dd2b4fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd03594-e72c-455a-a1eb-6e810ca67b96",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24fb708-5f6e-4f6c-8a3b-02e3f24aabb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fee147-cba6-41b6-9172-4a82ab828184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7195082d-8fd2-4d9f-8162-2e5501dde6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aac976ba-70b3-4daf-badf-21cd70161934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ca1a49-7cb3-4767-8a71-fc29d078ce14",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0257f8-29bf-4f5e-ae14-9f263cd83a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00ae2c2-1771-4230-b244-6f9f2d378b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f354ffe-1ea1-4295-a065-18934efdbe2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "18a76182-cf89-4b62-85d2-5343583ea32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d44091-e7ce-4287-af42-28aa587e0a13",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3335c01d-6046-40a9-8f6d-026dd658e7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fed8ac-5de2-43ff-8d79-180db0740744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c6e416-247b-417d-824d-aae9046e0a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3126121-a662-4bef-a389-4b02e1ef1b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10325844-f993-4227-b79f-c3441968b937",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9d17c5-6788-490c-aa8f-4a10d35243f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810c3a9c-79ff-46ba-bb88-46a46cd57ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9e7f97-95d7-4f96-8bd5-8809ec7fe072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f48822bc-8f8a-47ca-8614-66e89a0ad953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1f0e47-5c75-431c-8c2c-2fdc9eecc8df",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767657ca-853f-495d-8796-6394b79f058e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e9b881-3a6c-4cb3-af1a-95bb7bdbeb8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3b9bb4-1b29-4032-b515-144fd22dd40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "318912ca-18a1-4e76-a6a6-02918575255e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ef15c4-36af-4d28-bfa4-f6cd956a90fe",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f07d38-af1c-4257-8bab-b7be2818f802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23908a4b-004f-49a8-af8c-926bef6b4a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b56394-6871-4d6b-b7ee-e93db33b5f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "726e8fd2-c0bb-4a46-b4c6-9552f0fcfe2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf80785-fdc6-47b4-b1c9-768c6cb4ed0d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e610480-ef37-47ff-9fbd-3e8955c886be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c07dd34-129f-479d-aedc-0712ec04b934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32942dc-d3aa-4b77-be48-cb2c3c4dbfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99b10003-4a8a-4039-8883-2847b1568501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88776c71-bcf1-4d25-9787-1030248e5353",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1794b83e-e958-481a-bd50-a77dda22def1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ade35d0-812e-4588-98f2-53228b388074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24417665-1a7c-489a-b33c-112564096afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcb2a58-5437-4cd4-8944-89bb86202359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a53aa5-142e-47c4-82a1-d70f35d71c80",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144aeb4e-4204-4d58-8858-716ff223fb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0bab84-9f81-46b3-8d4c-e8baaeba2873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da59b3f-92db-482b-9dba-0978f01a1b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51aa1a25-a7ee-4bfd-a5f3-d8f919c73761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e7e680-6bd7-4294-a07b-06967817a85c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629a6266-fbd4-4ff5-862d-cf62ba82ca1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839a506b-b1e6-41dc-a8fe-f634f9ce4f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49ca377-7754-401d-ade2-5903c4e0425e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e68bf478-0bee-40a3-a669-0c058f9f7649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c780d656-3330-40df-a2c4-890285014a21",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a4f767-bb90-45bc-a8bd-4d57bebc4cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460cd849-45e3-4b92-a38b-78c1c6cb151d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557d213f-0d11-4c8a-a208-5a9184a5fb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8f597f-e37e-4727-865d-f3a21d522962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663cbd82-00af-4934-a717-d7c447956b6b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a818bc9b-c9b0-4778-968a-6b7f51aa6192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c7b789-c655-4370-a3af-9478d6ea2479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d126c0-5bf2-4715-ade4-b38db490d9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff615959-f272-445e-b8b3-4ea955dcc755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e5b44d-9958-40d9-bb05-f5beb11e2bc3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350af268-6981-464a-b923-5689171bfd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9275a5b2-0fcb-454d-9000-0cc7d6bfd591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0baadf-5790-4718-8f12-6a03d7609f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5ad993-bd1e-4eef-8469-0a891691d836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afae6c3a-5a20-48ab-a0d4-5455afdb156a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34c762a-e4a7-4ee0-a6df-cd2b9132038a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1298748c-eca0-4037-bf5e-14e433d6f476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288609fe-bf30-46fb-9bd7-8f279a9bba0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b98852fa-332d-47c8-8e97-c616b41f4658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfd163a-3aa1-4ae1-883b-9264257de35c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0bf0ce-ee00-46f4-8374-8be9e251ef34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73fb9f8-9789-4d82-9648-64267d3d6a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd3bc9b-95d7-4e7d-be1a-28b7bcdb6d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4029f7-0628-4b57-8677-1ddf0486871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1581cb35-fb2a-44a5-b752-89dc42bcdd52",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7bb443-0330-4864-bebd-36e7c0073c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb440637-e15f-4ab1-a4f2-13944b75cbda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8707ff-6726-478a-bde7-3f37c355db79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "16fd6502-7ee5-4fef-a68d-c6db9c40c1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad27f40d-3c8c-480e-992c-ff00e0df9997",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86873d68-82ba-44ec-8146-62d7113b9421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79e5f2f-05a7-4207-a4ef-d78c6f08d194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c115d92-ca3b-4f39-8a0c-e8f0cbb1e463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8985e9d0-1f04-4700-87fe-88866b4a6b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf7c316-9bab-4de7-9d38-a21b7e2d1228",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afa7855-bd58-49a5-80df-94733bb5590b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5044b62-e55d-40b5-ac06-c2bd39537b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec19b20-a9cc-4dae-b5c9-433cd8e5ba11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2e5c29-cfdb-452f-b4f8-a9aead7bc239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59caccd-bf15-48bf-9f30-2df4c295ac1f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300e54ed-b40d-4273-8f48-86b5b79ea392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8a67ba-9a8a-400c-a42e-c08807ea5b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41d6fc5-cc1d-4ec1-b666-edadeadd5c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5fdb84-4c7a-401a-92fd-bc524968cef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a60c29f-2bb7-44fc-a817-9c1ecf941f24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e084636-cbde-4549-971c-31af45d72794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3b1ef1-e2e8-4eaf-9607-2f3205044fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4b0d18-9290-4703-92cc-4fa24d8228de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "38f2cb1d-cbe3-40c7-b9a0-362c337f43d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a18b3c-2fd0-4c50-858b-b66d96e7bddd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3789b824-3f73-4274-8eea-66e1f5b76cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf8e37f-e96d-470c-a9ed-6e03e567a0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee467f62-819b-46a6-b837-e5359a1b195b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dda79e0-43ce-4984-a0e8-6e32397a3050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce9f631-90f2-4af5-bb6d-36e85b0d3ec7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4daaa6-1fae-431b-a35f-c13bae50f5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83e4c22-e0e2-4e05-826c-dbb0021ad01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f914e9d-54ae-4921-b93f-04d4b87a1a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fb3c6b-1764-4546-b1af-d5f87cedc014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f89d847-7c36-4be6-b3ab-0a0373c94cc4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d9ce0a-2301-42ba-a784-3b6bb611b087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbdcc26-c90c-45d5-867e-e777776ae78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5088eeef-5be7-466c-9bf4-2ad34eacae26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "692bdbc4-dba6-4af3-b357-8cf77868aea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3fea7b-29b0-4bae-bcf9-c1923a313d66",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713ce7a8-642b-4753-9bce-208b8a99cf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83253a0-8ecf-47ba-af35-61ee11693802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4add6063-0d27-4ebd-bb2e-e2d3d455d642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd426904-ab34-4749-bc4f-5fe93ec59a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558d1cf7-f6ac-4499-856d-fc826fbcc811",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5a47a2-a218-4319-bded-f46976821d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea101bbf-55bf-4c3f-b63e-52d2def34083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2652eb3-cb65-4856-8503-6395e8d7b744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "640016fd-b1ea-4861-81af-1d943e701d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c232fd-6a88-44ef-92d3-e67b087ecd2a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdbfcb7-c92f-404c-b950-9cc27c50481d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c696bfd4-fac4-4310-a8e5-dfd3077e6d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486291cd-39d4-4d10-8289-e18f99b211fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68c83eee-f44a-4541-a757-fd152fdd792a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5de73d-ff88-416e-a046-4c021691bba6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbf66b6-ca29-4071-8f30-61d383d4b96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555f3e76-e706-47a8-b14d-7ed6262531cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1627c731-4556-4589-b69c-2d7488bc69b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a75be211-1561-4ddf-8d7a-16a865a0490f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b30e6b-5c69-40f4-8958-4dc87fbd18f1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68a53ca-b648-4a09-b8a9-05cff250c2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9b3383-7610-4de3-ae4e-067c21ad1a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402e2023-7881-47b7-b096-bfcab763f4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "282810d9-fa9e-4e12-a7aa-a060613c5da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df24c17-edb8-422c-8ca9-25440659d3d4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051d57ba-5ce9-42d7-9280-c890b3a66359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a6b287-d7c8-4e51-b08a-c9a505c2c64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41b5229-3a24-4dd6-8606-62f504764c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30be8514-ebbc-4bd6-aeef-7afac9230aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8592e5f5-f4c1-4b1a-8c72-277e44ebfcd5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d328f0-5898-4c18-909e-cbc52fad4381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6ab994-091f-436b-835e-947f6157ce67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed93d9d-3f42-4a7b-9c2d-21d9b1e362fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be398b8-7b13-45aa-bdab-cdfc6412c63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820c4304-28dc-410a-afd5-e37a378c08d6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af35fe0d-5248-4230-b774-913699a83690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d96e4ab-006b-4efc-84f4-1ca0d2862f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62071b4d-3b0c-4738-82d7-8147c4f9d2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8d040c-2b54-4c02-b35a-be43841a60dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a582fb-33fb-4331-8325-48cc3b9879af",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98a4a4f-03e1-48ff-bc74-f9d04a0f0937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a67f95f-0d13-44ef-864d-5e42d490d82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7782a825-a1df-442e-af39-348a668c125c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcaaebb0-6573-4320-9bbd-abe9ae7c77f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2899f7-9dc3-444e-a23a-2090e918f5e5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e700656b-c0fa-493d-b2dd-950482345d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81cf413-3395-4ab5-963a-c854687fc858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7288e3db-4cb4-47f7-b068-e5f4c61e765c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed3ed0e-fa6a-4409-8798-9b061baf2da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3581679-3fab-4d87-bebb-6d7ab1c340b9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9f3b18-5dd3-4726-ac41-7e77b768d6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f2f3cc-d276-4e74-98c4-6fa6cd569b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896680f1-41e9-47ad-9d53-f9168a8fa5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f58b68d8-467b-47da-9beb-a1593a51d961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cade0a61-9883-4bb8-9069-5ae1b8dbf7d7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a041dc-619f-4acd-8b52-449f5d7acf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850b15e7-3f95-4477-8a85-41217146c31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ac0bed-4ea6-430e-a7f8-67bd8ae8d80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d08430-58b5-42f5-a61f-0a0f23d25e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ceca30-ee6b-453c-970f-2f4524d06fbf",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eff52d-1947-4065-b83f-65341292296f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ed7de2-ac20-46ac-a8c1-6164f8825b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f179059c-9bab-4581-acdb-841fd4f64a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ceb4625-750a-4aac-96b1-99f439dc23fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c4a2bd-9ea1-418e-be7a-630b9e57103c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4560b912-31ef-4f63-b4f7-fe79269170f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebe0e63-7e29-4d88-84a8-7b6c6fef664e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2c4bc5-5218-4b32-90a9-b1f3a41c6e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81f1c492-b62f-4822-93b6-9fc6043334a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fc0905-b25b-4c52-8ac8-aa13cad8f4df",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6425efaf-2322-4dc4-8e12-3217543bfd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf649f06-e2e2-472b-ab40-6e9b2100416f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e94308-489c-4fa6-ab28-c730da1eb84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2203b7da-8a5e-4230-89ab-1ef0ec34e554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c5c76e-5d24-417b-be3e-e10289926a39",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9c3127-6636-4130-9b43-1a59db033c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492edc70-201c-4535-bd59-757728b7701d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07857a07-35e1-495e-b465-bbfb737419f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80f4cfda-60ec-41b8-8bc7-b8ce3d919e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731b82a0-1193-4587-803e-05bf9c350612",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246f162d-2fe5-445d-9e18-11b81ed17f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949d4e24-3196-423e-83c7-b19fc775b971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7939abc-2b2e-4a1c-ad56-4f438e9d6da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "260cf9c6-98a6-467b-a9c8-889a5ff69a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12aea36-8552-426a-913d-492441a42153",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dc5460-de18-432a-9d3f-901fd33fa888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cd8c9e-b749-4c57-bb1e-a496f97453a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788744a7-b94c-40f9-97a8-d4a1ca722486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd971e1-b995-438f-af5a-7bbcdf7bbde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363e3397-ae4a-40a0-9261-84761774e1bc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f514555-26ad-43a0-a108-578a77ebae7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749834e7-b649-41f6-9baf-f716a9c1d89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a05eb7-04aa-4227-9c77-1aa9c33b6c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7947b503-0242-45ee-9d6e-d445e9f2963a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dc66d6-422f-46fe-8743-a46d69b017a1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063ebd86-aa6f-4839-a9f8-cb34a2aa71f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e4a2b7-176d-4040-b341-2a1a4802a304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0ab902-571e-413b-b737-02b56ac8698a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a30a5a2-6fdf-48fe-a793-d220bbddf661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daf591c-dc1f-403e-bc79-e4a28cf1e1c2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7da78d-49e5-4532-ab16-0a506a9b7f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3c6574-56fb-42c9-8762-972b524b086e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c2f84f-d938-4223-ab94-f240debc4c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf7df9b-fc05-479c-be49-2cedbfbe345c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab434ab-e233-4833-a99a-4c00d7ad8fa4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bbe137-6c39-43a4-9408-885433b7f307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48840541-dd67-4cc9-97d1-032fca978858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bad3ba-4005-4e0e-874f-2b911dab7dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7458a75-bd8f-4867-a7a8-196f224fdd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65369f1d-8e66-4ef9-ae57-52ca58b6ea5c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65ff48e-6701-43a8-8465-fb6997f2a652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30f4d7b-efb9-41f1-bd4a-6470e7ebbf4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf72371-2161-4467-b95e-3ac35ecbbe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3678d38-46d5-476a-bbdc-dc8040695afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a565623-61b8-4129-9f8c-7c549d556d10",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576220e6-1da2-407d-950e-bd53603b99b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adad1f49-0213-412b-8e3d-03a7d4d961e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a3131d-9841-4b8e-adbf-e09e8b27752d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80dd5c1f-da90-4cce-8f1c-72e522bcad30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333ade6e-3587-4d82-9028-d668a1940600",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a7c99b-52c7-4759-bf1f-adbb54b67093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815dab7e-860e-424f-900b-fcefbddce16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8f3d96-82d3-4429-9950-660bfb239d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa292677-c816-459e-8a62-4f14182f7ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affe6c36-dbe1-4019-b26a-797655fcbdf9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f414e58-2952-48e1-a726-aa1c402ae9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d294fdbd-e6d1-406c-a20b-a680128b00d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f293f54e-1dcc-4817-a333-4c7ba02e109a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "90d89907-3c4b-4b81-befd-85a4f4a30ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4322bc-1e3f-4b0a-ac8a-22e9ffadae2c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5e6264-9c3a-48cb-a596-d3520b2e07c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7250697-d013-4204-8f1e-ece7ba16a683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c095748f-4cf5-4e81-bfa7-7fb5cd63a359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2f1835-73f7-464f-8c33-373b0e6f94ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9315d7a5-f4e5-405d-9785-f66e049c0f4b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94948f7d-4895-4214-b568-6a155527c91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2818e56-f7cf-449c-8645-4197a6223ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5da5aaf-6341-4882-b54c-e2d2f234ccaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0084b2-b92d-4025-9dec-081453b658d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c1c072-14cf-4a39-b2ae-649499a78661",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7429b05a-1110-4cb0-87fc-982acde5574a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a63ecc4-2fb9-448d-849e-950257a8e6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3622378a-bd1b-4275-b7b7-565925b51bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "087a3973-d4b6-44e2-85e6-ea1fdc7d9fe1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a69be6e1-87f0-4822-8eee-f41137d0da20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eceb3607-3d93-438b-ad47-a27992ddf986",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a337e64-d97c-4324-a288-3c8a51306a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6395d18-3001-4dd8-b531-c44e26652835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14a9f3f-92e3-47ba-99dc-452c3ce3dad8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a08134e2-f0d3-41a8-9bec-c1984147957b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b94f003-5697-4283-bce3-78e2e547b896",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "315a3f67-d092-433b-b36f-9422a8f87361"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d4c4f4e-f547-4bc0-b282-31841cf4abc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0871b82-f0ca-453f-9547-40d85b33d325"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0f3c1131-b17f-4340-a36b-7d8500114fa8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce22052d-b85e-4f71-9dd5-7c6d48bcb704"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "29085c4c-0960-4b87-a23c-bef93db6dcb0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "289e7f11-403c-4dbf-8099-5e1fda982632"
                }
              }
            ]
          },
          {
            "id": "34b473c3-bb36-4145-88d3-2dedfd7836f7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5972d81f-db24-4c87-9349-4254cd937309",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0fafb02e-d7fd-40bb-8d6f-1cc6f37e6fcd",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f1c13e-4af7-4d75-8b95-e1a3e495f0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6ff3cf01-58b4-452f-a59d-4c1daf85d255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29124dec-23eb-44e7-86c5-deed565e278d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "917e1333-0622-47c2-bf16-ec9330e4c6cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87b62922-0fff-42b4-8458-b89589f011f4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13d36b10-5a8a-4c5c-b4f9-6bd6e7fb8db6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "706db5d8-128a-415a-81d3-5862207578a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df1d0e8c-b1d9-4866-86df-31cccd6d60dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "842f5ac2-d959-49b6-8297-daca125d0603"
                    }
                  }
                ]
              },
              {
                "id": "46e3c53e-1c0f-4fca-80c0-2409fae10c4b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "191d049a-c828-4efe-8b1f-8c14cff28dd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aabc535f-4ad3-4d10-8680-d1181488d694"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6100cd3-9c2c-4c78-a722-60a42ccee031",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "916f805a-f8d2-43ba-84b6-8ad03ab33df1"
                    }
                  }
                ]
              },
              {
                "id": "5bfd9e87-8674-4c87-b75d-21766277c6ee",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52c77cf5-d818-452f-9315-3f57a78d7edb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4234bda-8180-4e0c-b042-78f53cf293a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7925507-b6a1-4074-bd97-71ad4617f71c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85c41f51-c85a-44e8-8ea8-ff55a15947f4"
                    }
                  }
                ]
              },
              {
                "id": "23ea5734-1ca9-43b2-94a4-b5a3f4173334",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df6d7389-e968-4a54-9aa2-6535078510e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "506a12d3-84ce-4cb2-82fa-86fefb290f18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "619571ab-3cff-4679-af61-d650663e94fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d2bbb252-63cb-4f00-8b88-0d4c2c18b70c"
                    }
                  }
                ]
              },
              {
                "id": "74661b70-3d68-4e0e-91b3-2a513e019b6c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18d3ed38-f35a-4a35-b119-f307ebcaca3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56ef40d9-507b-4c1f-9586-266c95930365"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92ad0870-5f7c-42d2-9a9f-c23e5c9d524d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b35b302c-23d1-4a7d-8a54-2a0880bd1ffd"
                    }
                  }
                ]
              },
              {
                "id": "17cc8372-b550-4ab7-adbf-36c4532c4003",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0afce74d-5cf9-4a4c-827e-8fb6225f1cb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7a210bd-9709-4af5-9ab3-41f3373d0dff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d413c8f-665d-4636-a4fc-e630b5150fbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d4bf09b-5b57-47a9-a541-c9558403c68f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47b3c8d9-3f63-406f-94c5-df1ab2bb651c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5385b932-d336-4ac9-a2d0-40bb38a40035"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8f6a1982-7190-405b-9def-d4e48e78568d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1717784c-be98-4d3d-8273-8a9c3b18c96f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c477af2-b5cd-4ec5-8b24-ef42642ef33f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b3706bc0-3701-4085-95dc-093df675161a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8e0b399-7653-4632-8fd0-0e0d4a8ed53c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c759006-2e63-4ebc-b10e-c0b32a731035"
            }
          }
        ]
      },
      {
        "id": "ecea1ef6-7f2b-4207-9aee-5a34546bcb82",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d0e26c9b-351c-4546-b103-ae3006e801dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a385389-ac48-470a-a294-61ce83c9137e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "427b2a51-2a41-4c5a-a0d5-34ae3e1c7702",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af286ecb-ac86-4bd6-b8e3-e3e5208e1120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103b101d-6d4f-4351-9336-f53b4a46e128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff04458-1c45-41e0-85ef-39680121b047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6412e986-d6d5-475a-8ec8-b47803dcd8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd134cf9-263a-4bfb-bb44-fdc8135bf191",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4699e1aa-57e0-43d0-9429-111b4b37748c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc6456b-cab0-43d3-98f9-e84ad1ac74be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4e45d7-599a-4039-8352-337e3adac4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58be5233-e577-4d19-b804-39d151cded10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dd47dc-9085-4689-a913-bcd14c3cc592",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1a1aed-83c2-4bd2-a7e9-5bb53e960a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3f1169-a987-43f6-980b-e88a09f16c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc65165-d7fa-45ec-93ff-5502ff473e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9fbab6-94c8-4a98-8e61-544d951278b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad3e816-a7cd-457f-996e-11aafe7968c1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7c7bb8-326e-4bb8-82ea-3ec2eaa8ea00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b47f8db-bc95-46f0-a8ec-90dd021188e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5be7283-a5ac-4d15-9d88-238b830e9214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "739aad37-7ac6-47b7-9dca-f76e225c60bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac575052-e26d-4061-9ccc-7e8290432664",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37738099-e1ce-426e-bdd2-6198e9894b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c936d2f-2c5d-45a6-9e08-9092f6d4a865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbdeea4-9ab0-4a42-99c3-df4014a0c0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03ad463c-14ee-41c7-8ff7-0cd93623a988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b97d00-f4e3-4fdc-9d06-f7fd1f72c514",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd76cd65-a071-4fae-a940-ebd806ed185f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be4cdf4-f2dc-4d13-800d-1464487191b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1591fdc-27f1-4e3a-b957-a1772df170ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e973f1d-da4d-4613-bbed-2f1f99875395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651cd895-8e81-44f7-b50d-af895fded25a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eba2574-f790-4386-981f-824a43f44505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d063c3c8-42f8-4ddc-99d8-47ca2d40d329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa52e13-2d3e-4bca-aa8a-189dda080a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ffdcf3-16d1-4a60-a59f-faac46782d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993343b2-da38-4090-bddd-e825a509a5ed",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9700a8a-dea2-49ff-9c20-f1cbb0031c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4205930c-d39d-48cd-adc4-083af0adf347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189f1d40-b131-4b18-84ae-c96230896bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06d46b00-81a2-4c1e-94c0-0d672a81681c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a6332d-c317-476f-a163-d61ea4345491",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7acb4a-3f69-4701-8484-b77ecf00e80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb430bf0-1b78-481b-9b94-7ea0a55a1467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1483154a-44e1-4d0d-899c-45925b939468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "404857b5-e134-46ff-9521-b822184f332b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dde65c3-e9c4-44e6-a3f3-d0b6c80b7a89",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4f0261-e281-49c4-9471-d70c96ea07a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ceab6d3-126e-43c2-a3a1-96581bc6ad9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daae59de-887f-4e72-a6c1-a74670b71865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4613f61b-d946-422c-a9af-2dfb0c0f9e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef11492d-1b83-4a54-8f15-61f119e078ba",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb50ec84-a480-46f9-aa69-443102c17b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b152a2fc-b3e7-4289-8095-ed6a5b31ff9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd5f1b7-a78f-4a74-bb9d-1a2de020a8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1f134138-704b-4002-99fe-3f63bc69635f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc005a6e-f959-4f38-83e7-1101277cdbf0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff949976-a6cb-40f2-b812-245324da0762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2ab683-607f-4bf5-b5d7-0bf44e90c6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee51eb51-dc3d-48be-8c81-1b1f4c07435e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c9064f-04f8-4f13-9566-535ef47c2df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69489842-41f3-49e0-ac29-68c20c3259e3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b40b07e-dd01-456e-8de1-604d55af43dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a472ee1d-94cf-4824-bf0a-b9d9204fbbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9043daa-a85b-4138-a512-99f79798abab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3f169f-51ad-4ede-939a-c6b0daed5c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6bcc9a-2115-4a46-b2cc-5544fe1be346",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4b38ed-bb99-419a-b045-a1247275c3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b4e5b6-7e01-473e-8ba5-8437dfb89927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9082993-75a6-4168-b74b-59b14363087f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "108b5833-6863-4e7c-8d3b-e9d83c59be12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4adc60-db32-4abf-8e8f-599aaca6ea7f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8159b287-1eb3-43be-9fe3-f78f1d092dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2714a753-dc7b-4be3-80c6-4179c9d64ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130f0129-6289-4840-88b2-70f04a20be43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f961f919-d26f-4c72-827a-d0912582ea34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0e6d33-23dc-44c5-b705-faf6aa5018b2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c868b414-e1c8-4d4b-90bd-0764af5d0e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b132da-7b53-420a-9a2a-14cbb532501c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a66144a-c09f-4cd2-8ae0-c7326d0988f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee8efa0-71d3-4f57-9f12-c21d3fc5d13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a871612-45a2-43ac-b90c-ad7605661350",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946afbd3-e099-464b-91d5-91d04af9ecd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bbddfa-0658-4ecb-8983-92ca112ed455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6fef95-aae9-4227-8695-b49d7e08f2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "32577d78-190a-4fc3-bf76-1667163d9ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f3727f-64f2-4284-a5f2-bcc6f620aefb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef26a81a-69ef-4d8a-88bd-7fe7e5429e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0dee8c-b921-4359-9830-99a7032018fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652f9eec-89f2-496a-9ce7-ff1cf202b301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7193605-dfbd-4567-af45-db4725ee20f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527e134b-f667-4b2f-959b-289ddef32b74",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c5fa07-4ebe-4b11-8748-44dbcefd0af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0063957-6571-4be4-8424-9902aab4fff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b262e5-d9f4-4d3a-862f-aa2147d2c189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc406c73-6e1f-45a6-ac4c-c004a311fa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2057ab-745f-4b94-8de0-4828cf794661",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8960932c-c933-4418-89b2-8b9a5994e314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afb5a47-7a33-4efa-9ca8-9e90c26d2b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90ed34f-186b-4229-9bfa-9d707fe08eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb86a84-a4d2-4cf1-9c34-4d47d739ba03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ca038e-ab2d-4d69-b476-3e44ff73d119",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46002884-8fd1-4597-9cc8-84790d873472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b67e796-7c7e-4a35-afbe-2f26df130a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41cdb0c-dfab-4808-8df7-6e18bfc3faa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e9e054-9eb0-4a9f-8fe3-eb6130ebec29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4c2b42-fc19-475d-90b8-7c894837cf31",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c454235-02c8-4d04-90b3-49ec3ece8061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae6df01-aa25-4308-9550-fe690024a05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4644e6b2-52d6-47f6-a0eb-9a871207511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "538b1c5c-91a4-477a-9f61-626bee7a7612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f2ea6e-9aa7-4fdc-a2f1-7ab1bd9c86d7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48127a8-1c4c-4a3d-b99a-06eadd129121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c875f1ab-0a97-498a-b932-02089c1fd2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb939804-9bee-47f1-92aa-de51a51f7e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "493c059e-7f8c-4b13-8134-79fb0de70123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c3b97c-7fcb-4c3c-91d5-86fd6f12470f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54b2985-73d1-438b-b7bd-3634f53591ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3867fc-a09a-4499-a89e-8a5c23bb0a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b553e5-1cb3-4e47-aba4-df8522a016d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a29d888-8480-41c7-8755-8d6d426072e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08af678-b838-4958-8a8e-5c21b23e2e98",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c23238d-ea98-42a5-9453-cd48c24c8991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c17823a-88d8-4553-8ab9-555e664e1cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df53eefe-b80f-4f31-9fbe-59596bb334eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8da6f4f3-eb8f-4cb7-97bd-3783196c9017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96c9589-21a6-4141-8d7b-ab20db88546f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec5077b-1297-42f9-aac5-aee6774ad8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b103b7-9402-405b-9475-1243a5007680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650b2394-04e1-4dbc-9b12-5fdec89206ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3d4275-eb57-4bf2-8c6b-d78c43f85403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e7ff5d-577e-46ed-9e7c-e80c383273b3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd45a41d-e90c-47aa-af00-1e2ef01f3a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0e21a1-70c3-46d4-8c1a-2f117750b917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30758a34-823b-4e42-9457-72d2eec813a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "759a7b90-d49f-471b-b97e-dca16527d4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaad3e66-f184-4944-9582-04d72755e8d8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16737b4e-bbad-43c3-a2ea-aa797679eae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b506b5-018f-4b8b-8f55-2990332b8547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8971d5c-b706-478e-b8c3-35503749ea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0f0afe-00e8-48c4-afaa-19e4a48019e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dae1a19-2b18-4982-8c4c-a87a748c38f3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267b8fb9-8d40-4dd5-b53b-fac6288cad26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7efc78c-0505-4445-9324-ca51fc1a3819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6b8eb8-0fc8-4f3a-8518-2f9e540db926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad6962e-90a0-4028-9e10-bd3832d25136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dafb81-dbdb-4752-945f-fdd46ae5577b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ed35af-740e-4fe2-bcdd-3ab9095d9001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73aa2870-8bf5-4927-80a9-303da1732b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a75c34-9f03-4ae1-8077-faa730739814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31fdd1bc-a4eb-4f8f-90d7-3344b3b4424c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da577ab2-30f3-4661-a021-5589b3c97988",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c476f10c-e5b1-4982-b578-9dd4e46477c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70050109-900c-4809-b67b-71ef00b2bbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ebf057-225a-422f-95a6-29113628ad2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07382948-a5d0-4e65-b3e6-ce11d2eb2098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8fc614-e42e-4b98-94d0-27335577c8e4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dad6842-4f5a-4f1d-8051-f341f8b3958f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b0cfed-0254-413e-b01f-76db39e569fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b81803-4f9e-4dbe-bd14-ad8c1a449540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e539bc37-5c49-4c28-b138-7ad622216d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e156a7-be27-4dd5-ac80-15fd0d3451c7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71513b70-a5d9-4f57-8cc6-4c91e2151bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ef6cb2-b3e8-4ef7-9683-9c25d89164da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2ffb96-7e46-49d5-8e23-f8db293c6cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec424029-73be-4b96-8cb0-aec0df75da63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66db5d03-7311-4156-a154-09f507d486b7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c306bd23-9b88-4803-947e-3db89de37b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593cf458-7fea-4c1d-9f9b-b3c633e0f3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17023439-894f-4e90-bd6a-1087b4348d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c13cca44-cb15-4b2a-8ecb-fa5998b3410b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e3f0fa-ef4a-4066-8631-a7e4aac8a855",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717d770f-1d0e-43c5-b4f7-b9c10ff9c068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a6e36d-7a10-4911-8a59-93097f0d3fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de40cc59-c747-496d-9e5e-9ba124696693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c51b49a-9b7c-497b-a4ae-dc3d776d5be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f56fc82-208d-42e9-9355-e92c938a0d6c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7885a9b3-3093-4b5c-bcec-f3790954d82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e8a3cf-438a-4fb8-a75e-4abff2deee61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0d20e5-0140-44a3-8526-4d10bbcce8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2e8b36-32ea-48d9-a0c2-09d679010439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a32dad-9468-487e-b890-1901bfc5b540",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d07c79-c1e5-418b-9885-de5407ea7272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bb4293-0598-4114-b567-6664cefeb02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa8b9be-0fcb-4934-a5b6-9a375e4b9828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f6cf17-f1f5-4484-a586-16719c80aa63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f9cbb371-b7e3-4e35-9ebf-f2fc24e6da8e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f085248-be28-4864-9126-3186c23ddce9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab3b503-03fd-449f-a083-6f59ced946aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9b769a67-e70b-412d-96ce-35f0a9bd7c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b914105-d967-40d4-af6a-8b963d5c7b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fb01e23-2e95-4f00-9738-50868f0d6f86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82ef3042-2eff-4370-b6dd-cd1f7d08a948",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fab856a-6f07-4676-b14b-f8df951dc312"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d6b07fe-6164-4f72-beff-fe807d6b8db9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3267db77-21b0-4788-8d4a-d89f7b5f2219"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11016b66-9ecb-4904-9855-e4a76d215401",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7d99e8fe-c81e-4194-8293-cf4694f58377"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc155d80-223b-4022-81cc-5f934b98d9c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab7136db-bf9f-42cf-b54f-f08cb16ccc3d"
            }
          }
        ]
      },
      {
        "id": "a9b078db-73d5-484c-970c-3573c24a22a0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a17a87fc-d37e-4142-af23-09ae1ec94c83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94a47584-069e-453a-994f-120fdcbd05a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "211337a4-e7fe-4831-98f8-9a4346ec51cd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd00358-e8ee-4d09-8ccf-0f9272d156c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3956a2f-eac6-4c26-b6c8-e72c43ffe305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d53f65-0743-401c-b1e0-d5084f06c704",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0ac2c4-0ee2-43b2-92d7-751415375048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c2be05-64ec-4ef7-88f0-e944757f2d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2b7a35-89c2-4ca9-ab68-89a1ac973af8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e417f5-657a-491c-8948-f7f79542acbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b101ac0-56a6-4a05-adc5-645aa3210ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a19357-2f9e-4a0a-b60a-38c22cc49362",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84755943-a1c5-4229-b5c0-7d61b71fad90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e960d669-ed42-4f43-959f-70c49b469cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7772b217-d5d5-4878-94e4-a76ee74757cb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e848257-69c3-4486-a7a3-01f0ab10286c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5511861b-a322-4932-95ce-c0c437881b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3b4fcc-5d92-4eb6-9c9c-be8f10d42499",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337266a9-c4e4-4c35-814c-0bf4b6d7a518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d13140-14de-40af-80cb-928f3023d7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663de69f-9585-45f8-b529-58d19fd8d5af",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d409d598-5e0d-4130-bf33-d7d7c44fadc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36009166-cabb-43eb-b6a8-60799ddb7cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd5d331-6093-43de-9b7b-b085a1c7b017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed0ef49-773b-4979-8738-0614837c15a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e505ce-95ff-4da9-aa02-3e6e99e3a941",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c56678-2874-435f-9539-2faa513907dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5deadf19-bc68-4dda-ac98-1a32b855ece5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9db383-05e5-49f1-b5f5-11d3b0be4010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11dd646e-7f94-4f09-b4f1-4ad218959005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b436ac7-e03c-4ed6-a17d-002a78e99f8f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38eca911-7f93-4775-9921-aa40e8292df1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f271c31d-51bc-4204-8dc9-0c6a66dfeba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350170f5-a339-46dd-ab24-bd6d6fc681d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff78ed39-8c1c-48a2-8ceb-bf308f4ceae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f407d719-80cd-4c33-b210-2e85555bee0e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcbfef9-93b9-4962-bece-511531314627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c50e7cbf-e225-4121-949f-56338387a63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b04e46-9f96-490a-ad23-79a0e3543935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05610094-cbf9-40b2-af72-8377b4e7e5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b727ae60-9678-4181-a5df-6add74bf11a2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e6827f-4ace-4c81-94a8-8568b76e0e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b52823-8095-47a7-bb35-9a9feefdcce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea3507d-6add-4c4c-a36a-e82661123d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf08713-c26c-4706-bcb5-197a553ed4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca70cd0-966e-466b-8c5a-cfaf82b21ff0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72346db-6c78-4699-b08c-20948c0aefca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52267933-5115-48cc-a83d-475fcba0e1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b853483b-b615-4eac-a78c-b23907c58df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f4638c-40f2-4750-b133-dc5309b53874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccbab93-f667-4f1e-b82c-d95a2865c473",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c7db4f-dc72-47e5-af41-bf6948cac057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da174c5f-1206-43e1-860e-a3bd283a7c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af99a563-706e-4554-8bbf-a541d2a3bd68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08ee55d-21a7-4d66-bc15-a63155fe39e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff205c6-6843-4098-bf1b-3e892a77d7ca",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2a2c53-8a03-42ba-8804-b7a5cd9ca574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a13054b-4bd8-461e-b5de-2256c99fa67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0dfbe80-2284-4df5-8056-219dab8ccd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd12b21-3bd8-40c3-a765-8b951f5a476f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8179f7d-255e-46ed-baf5-d8e25cd8a97b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8522c523-af4a-4540-b34b-c984c7686c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af6a5048-5dca-468d-8d75-34f83e83715f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5cb21b-23b8-43b3-aa22-f631e496bccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6820059-166f-460e-aa6c-a84fc43acaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f73c1d-d42a-4279-bd80-31e30d09fdf3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c15746-6264-4fa7-9e99-e6f3e7628e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a53438bd-c12c-424d-a061-cea9f7974386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49253e72-8847-4054-ae3f-5a0061529752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac382a80-cc28-4bae-94a7-0aee3fad35a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00482e8c-3264-47ca-a102-31850dfbcd17",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e864b195-4fc4-4da8-a22d-5343b6ccefa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f2ddc7-53c9-4f22-92df-bd9f2c683291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5206a909-987c-4260-a6b6-2a2c29590408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d040c7c-f19e-4560-8ee8-b0ffec7d2597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aacbaa8-713e-4da8-9858-11ed5306b769",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb80a40-b822-4ee5-b1dc-3e034b54ed72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b79e47a-916b-414b-8b11-3b78e40518e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843be142-3815-4c1c-a6e2-d137915eaaa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c801ed54-71b6-49a9-a205-1bfd37aee149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb1356b-f0dc-43c1-9d93-8f794d7479b1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e5587b-8a88-4b54-adf5-7d537d13cc6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5eef5a-0065-4d9d-92c3-4b585a3f0168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6909540-2d03-44c9-9c9c-4ab97c8ab60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696c14dd-3643-413e-a428-8eb2393a032a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64df478c-86b9-4d18-81d1-2d678092fece",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec2f704-99eb-4b5a-ad36-35dc6e4519c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2a92ee-940e-42eb-8a31-ae4793946d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe50dbae-602e-4457-8c30-e8eb89adf75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3df237-7343-4040-ba99-99b3c3b6f976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c1ff03-289f-4937-96f7-44cb3342bd99",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9610f3-b99b-4708-a7d9-cff8f2195233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7ab763-4561-42ae-ba7e-52b1cb27e6f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bdefc9-9128-4c0e-8d06-1b6aa005d4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7de8d24-503c-478e-8806-5e2065685d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99872f00-473f-49c2-a3d8-a1acbaab572f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8d4645-191a-4617-bb9e-29f2c1139f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75bba75-6f8c-439f-982b-26d56bb64e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dddf4f-e9a0-48b4-b144-11cb55f0a6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef8d250-1b66-4cbf-82ab-37b15dd84027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6741222f-8608-4a01-abd8-5049a13df081",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6303b840-c49e-4701-a0ae-2642b84633a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8948595b-9c71-4255-8889-0016f603c547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75846cf-f38c-43df-b724-37a3060592f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41ef539-1f6e-4894-95bf-71db852eb19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61db933e-0b81-45a9-9e4a-1264d43cb89d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8839a688-d175-4631-ace1-8666b86234f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66f5f325-3d0f-493f-8632-c433efca1597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31934c12-248a-417d-a29f-b649d4796413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71fcd5c7-5da0-41ce-b52d-a8e500703770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b8843d-060c-426b-9a78-87e3b034407c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3bc863-7124-4e77-8527-264ef136485c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c9c254-cbc2-4b4a-9c62-4c2c9e785660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52d7fd9-2e67-4b1c-aa9f-bf40789f8094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f513621-e06f-48b7-8e9b-9bc2c62db411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c43ae3f-697c-4a72-942e-4848d9d36397",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1119bef7-ff72-4179-8423-45e26f69ed5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97da37b9-c1b1-432d-8b1b-29f0aacc24c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a7fc22-a7f5-471b-b1b9-07177d84c06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5d18b9-def7-46a2-b0a7-88c26884b428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236e8577-4fbb-41a4-9e60-9af9ab059386",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cc16ad-07e3-4c98-ac03-9542d1140275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98c9ed3e-bdf9-4060-893b-acb04005ddd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62c8e92-52ee-4643-a908-4760094f03ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c354cf-c218-407a-8251-6df1c55f765e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fd359e-3159-4cca-a253-b635b673da02",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7b1dd4-5b89-492d-b1bc-83b9a71e964d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b68fe5c-f677-47b3-b6a0-a62141600560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade65ae5-531f-4103-b705-e39adb2bb600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0cf137-dda6-4725-ae03-b1bbb00bbf9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7a40a5-c393-4475-9543-c95205a7b65b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a8ba22-95cf-426a-b745-3d95f87292a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46d262eb-f955-42b4-9c75-915a1a61dadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc53e4f6-1823-4bb2-a0be-f2e7cd1ce31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d48638-931a-4bb2-a853-9c42144c83dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f5cfa8-ab33-4bcd-8ed2-b944e1796a95",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442df020-bb1a-425f-b86b-5e738673a7f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "716304aa-c118-4273-8cc6-9c1b42a552b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819d9e43-659d-4e8e-96d5-e016c890df68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95df6991-5c43-4550-9f36-20332d09b261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d159d72d-96b6-4dea-a71a-6555a304e9ac",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a295e8-4e1b-4dc2-a767-5bde557ac4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97f888d9-306d-481b-8a57-b7b63c46d495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25406ac6-cde4-4208-a21b-3fecf79f70ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7511f270-72b3-443f-a955-0f98d0a91c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e7586f-c063-447e-a8af-0f9e54b41b7d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f3e758-7874-4604-b8fb-8ed4b46cb405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "309d9ae9-f4bf-465e-9dc9-380f7c9abbc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327cb175-fd17-4e98-b61a-15d771597b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d72e98-6ecd-47b8-a7ea-5e57d875e9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32838e3c-105c-4690-a7ba-08703da04352",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c64d15-eb88-4f07-ad2d-b1b15914ebb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "504a6400-5a2d-4fed-b27a-07803b9d6e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a2774e-5cd2-4a41-9b29-75bed12b82f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed824fbb-0b77-4d49-a2a8-dfb2c47d01f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6e6f3f-3717-4cae-a9ac-16bbac25ecfe",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6506f38-7cd0-40a7-8925-ad902539702f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df1c9a3c-8064-49d9-b175-7f7cc33875d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b64e465-a129-4a5d-a54a-f83e92467a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4bcf074-268f-41ad-a166-26bd5301a130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106138ae-03bc-47fd-bfe1-cabb04b2d6d0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce0b446-50c9-465a-b91f-682d35bb696c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206a00c1-5f6c-4179-b116-6fdd5e32dd68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfae86b-d191-410e-ae21-f331fde44699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e991b14-2586-45a0-924a-eec9d7809074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521773d1-1471-4c04-8285-8e9b7681d066",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db65c8b-ff0e-4d90-940b-15e9cceb382c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb213093-433d-46ad-98f0-9297d6c334f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b81e21-1c17-49b3-9a33-a08d532c8118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cedddf-672d-4802-931d-9c4fac78be53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68a462d-b478-44de-a2a0-b5dc92355835",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c529c02-b24c-4af5-8c3a-f7a7d675f560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634dc938-d4cf-4378-8fab-9e870c91dbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cae533c-a460-44ed-a89f-59b65bec386f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0a6d73-0048-4a07-9803-8feb52c3d755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1048536a-da9e-406b-bf5d-27fb00f0deb1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af78fb5c-3a66-476d-84cd-2db7ccf2af1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b3a920-1321-4b33-863c-400b77b28b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf23c26-db30-47a0-894d-3e10b2f77efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30f58bc-9b73-4759-a003-f76877d85b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c06261-4904-4b8b-9533-bebb07d372f1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a596f98-a284-43c7-82f1-98feffd8c55a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b683587e-cee5-4f11-9e07-bb9425e451c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e327d423-7c35-4d99-9fe4-053af42cc6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d3c24d-8f73-4c2b-97c4-28a661be88c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c7a2db-a2f2-4aed-bc59-1f12a0f64b14",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683b20ab-7177-41a3-86fe-bd4085f4fe93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a464c55-5242-4cad-b22d-f0063f120e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e78540-bdc4-4c3c-a59e-e07492d1c4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc74444-7fbe-4fb0-8172-9df2c98091d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d582b9-6894-4812-b746-a35dadd4ff05",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba62cda2-0097-4d76-8b14-577f9865952e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e384c2d3-a77d-49f7-b09e-66ad5c78b744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2101b12-3ff0-4c98-8cc7-52d60c6f3df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e925426-447b-4f6c-bcd5-72e80c29c6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99aa382-caab-411a-96cf-3b1aa89c9648",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6397ae2b-c23e-47e3-8213-89f6a2eea1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1acd2c-d69b-4eb8-bbc2-e55baf7b2deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955d4c03-6547-47f7-b481-a38aaffbd386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9265743b-a9e6-4493-8c53-b04ad6cd4cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba65752-9a0f-4d2e-abd2-d031dbbee800",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ac7d09-62f5-4f47-b16d-9feb47f6c96d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7307f483-90ba-4cc1-a561-ec24aaa50bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da9342a-0196-4eba-89ef-3cb1c2d75f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d013d95-2ec7-4007-9a96-eae60bfb1e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b176cf7e-e696-4079-a94b-d4e177f09131",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31200099-8a3f-4469-88ed-8bea1e852fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ca9e01-ec6b-4d2e-a9db-a2a054eccea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0130f55f-695f-4c83-9426-3e51029dc7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b56fd86-8dc3-4a9c-bef2-08e73a7786a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8c855a-e51a-40ea-a19a-365d0b8d9bc6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4157b62f-c216-487e-8016-25b2d6cd3840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f43e65-bdab-4770-91d9-218842aeab8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9966bc18-66c1-4323-b3f4-0c2054ff4042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254154ab-efc6-4015-a1ef-c8e6b3f967f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11eb979f-7c53-4a5c-8f3a-a0c53c2de9cd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8b3dc4-c0cd-4bd2-86b8-9e9803070b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9b9b02-e659-48cd-8429-13e2f499950c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f260b1d-f548-44f5-824f-b9e7366a433f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d38f08-aa57-4976-a1c0-e87f39e13b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e23ba7-9b52-4d47-b9d9-662ad03b65d6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2cb033-2de2-4e21-9371-1fad1fe2e0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b366a20b-d2c3-4923-8383-1d3be065e6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470f43a8-1c8e-4c23-ab69-9fe240ad3551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed54d80-1d34-47e0-a8ca-6a726b53927c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c9a336-af8b-442e-9bd3-7675d28bade4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34b9031-61af-45c2-9764-f82d9842ed8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d17d4d-f832-4416-8693-5b7de5ce091c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7422e3ab-500c-4caf-95cf-216ebd3728c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a31cba9-7037-4889-94d4-c672c880c588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1658f39f-50c5-4a6a-99bb-747598523dc4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f632b341-11eb-422a-a40a-16355e780cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcef063-ee8f-4246-aa3c-2987c5f37f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54d4339-0e0a-4a15-88d5-bf0f08d49447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a577a7f-0915-448d-bd80-aa4c29ae3ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f76454f-722e-440b-b323-62d0be3d9518",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ec8975-dd30-468d-afef-e2ab9c28b4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98c9024-bc73-4cfd-a827-be76ca617945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f59921f-b22b-4eeb-8c51-5336507b8712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38373d0e-7a68-4e90-9ae5-f762936254d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44b11af-99ed-416c-9556-1273af5bd6ce",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a694b5a-ac70-4e91-a1a6-a77d07e4d728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc91c1a-cad0-455f-8719-0b1325e79358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844703c9-4f46-4091-af51-45b531a74fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9134c6-24d6-4cbd-b21a-ea4326e618e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07087b03-cac9-4d30-8647-104e7cf74116",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7f6a24-2d1f-4d58-8452-a36a3036cb5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcae697-83cb-40c1-91b7-f95115154a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62091723-dc83-47c4-aa46-9cf30536120c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af00b0f-f3da-4c29-8b7d-690fbe6aabaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ae75e2-d0fc-4427-ba68-92f277070528",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e05ad57-b7a9-44be-aedf-f532b5462f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f687125-a1fe-4c21-a5b9-2988045973ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fda2a0-975f-4f47-a942-64f27e0dbef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d79ff2-14dc-44e3-a99e-782ead91bf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9409fe69-7d7a-424b-8728-f3e76683d0f7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b372366-ba6d-4c2c-adfe-4ceadeda25cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813d2d30-d828-4209-9391-ec51f3cc5b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bd42e4-b1d6-4853-82ee-9d1f99852234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f41ecb-1e22-4ba4-944f-14cc4b355025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad35348-58bc-4e4b-bf3e-d586dcff66af",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982a1e38-859b-4ba1-bf6b-2964f69ae0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ddac24-8f30-4019-9122-ea2bbe4c3e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f29d0cd-3618-4e99-88e5-a0685fdd5b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9623f44-0726-449b-a2bd-0941e322d540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787030ce-3206-41f4-b242-0c4855aa678b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb76872f-f81e-4e32-ade4-47aae22bf8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cd0414-8a6c-4584-be1c-859198d0a97b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5daf3282-602a-4d19-8bfb-16b6f34b7657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77307da-1db7-4b2d-ba78-f68126fd152d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3a694d-fe21-49fb-ab4e-503407fce088",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b01743-4f7f-4ae3-8cb0-2bf1c22fe9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8b4ea4-5ac4-4b2b-bde2-1d7a2ebb023c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356991bd-e559-49b0-b37e-debe2a88fe71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d46d94-1b64-4d64-9673-a42432b1c3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4411ac-206a-4a71-905a-5f1862e300bf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587731cd-6d5b-4833-9eb2-18a5354b027a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f950fd20-1006-4d9a-a5dd-94d877a50134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba03ec16-4424-4774-8163-32643d3d1a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16cc4adc-756a-4fcd-b177-c3fd86e809d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921ad895-4898-49ab-8668-a905a5781e45",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b568373-1928-4228-9b81-2be4074e1648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2babc27c-7b8f-4c7e-bb56-5cc3a7e80174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6074f007-a9d7-4c15-b7fe-2845f36ad3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36636965-5cf0-4c6a-89ee-86ab6eaee26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae36780-2576-4a91-84d7-c32bdd07ae67",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58367a84-6115-4aba-906b-c742cc3f8f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d72d0a-c07d-4c1b-94f0-d43b8c025fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c526de5c-4f20-42a4-9708-1804ffcf44e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9329f7-bdd2-47e1-baaa-72e37ed2c86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56366545-1c92-41af-ad8c-050f8ba013f4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad93cd44-f3f4-4fea-aa38-37378867c314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f60e10-d3f7-4d36-85bc-845eeb04a13f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbec7c61-4b10-4187-9b44-5f6f415804e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c721eb2-00f5-4049-be4e-9bcd870fd0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675641ee-1a23-440c-afa0-b977a4283541",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217bf2ae-9a25-449f-817d-248c87d23309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc443db-8bd4-42c9-9a3d-cf6a060f5228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8613413-3944-4b0b-9dae-95cdff77c430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d4195d-ae7c-4046-9496-92eb8498d157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b90ad6e-a9ca-4890-9926-15f70b3b8691",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427853c6-d169-4be7-b34a-dace30c39235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a0bd1e-2c61-4e97-9911-3e7ccf785e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d43c168-5093-4e5d-b151-c44f70cec2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c65ba9-1968-42ae-be6a-804cc774d9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568bec37-46a0-4eba-a0d4-d92f8fea6e42",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89002844-a116-4706-bc0f-a84aad11448f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c85dee7-7f9d-4406-8572-529dfc36cbbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9dda4c-dbda-4d50-86ad-25ab652b17d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c960fcde-bf17-40ed-ba52-2623b4d3149f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06bf7d5-94ea-4ec4-abf6-f6ac859af9f4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b052876a-4a5a-4ad1-8a43-7a79f352b503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c997f34-439a-4722-92f2-625432dbb8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed9de3e-4390-402c-a620-5fd27415656f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffc262c-3342-4ebf-9200-39c69f23f152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5d6a62-b73f-413d-a61a-97a87217377e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e02f56-f4db-4aca-9d44-b8be31ae0377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0310323f-eea3-4a1c-be8a-b37be3b8e581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e9418b-a105-406c-bb97-45ffc698463b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5e1cc3-d924-4e9b-a6e2-efd9abaf6f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd83751-ebbc-46ee-a0b9-88344918f219",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffbc91a-d328-4e03-b4be-c562cd6d39fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2989ead4-d5d5-4907-8bab-62b32f740f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451d3060-2333-4c7b-8d93-ac8414c8d05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714640c7-8355-44d0-a3f2-3c1abf968920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cdb469-9ae4-44b8-b532-76ef6ef4ed64",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4d1d5b-d346-44c2-b102-6a0828bfbde2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a13c4f83-ecad-47b4-886e-136b06dd4d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea347da5-123d-4a03-9b64-e4134bc6f2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed87f9eb-2311-441f-abf5-fdb2eb126cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9402d5-9e2b-4ace-8edd-4fc3c5fa3960",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29cb317-2cf9-4e12-be88-a6c51ad1361e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e68851d5-b4e1-4edd-b4d5-bb99d8635a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49d6274-bfec-43b8-9889-9e49fa30a492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1059d839-3d75-46a0-9ecc-cb6ec1b76277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c677229b-fe91-45f6-86f0-8608b4c9d9ab",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383efb55-80ab-4750-8884-2bea060edb8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "962ee02c-21a1-4b8a-b840-22f8b0f3f6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a7bd8b-070c-4b5e-b85f-7da9836fc8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee055fb-a31a-4e0b-9726-e712d6c3476d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa09735f-41be-46a3-a59b-b1c58c7b2264",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f71438-4493-4fe4-bb73-c97fbcc82ff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee1de0ec-6c7c-4db0-adbf-04f054116b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4844b9a9-0c93-401a-880b-eb651daca004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b2833c-4ca3-45da-91df-4e21c0e46b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdae372-f148-4267-b67f-52b8d388e398",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1b0042-e68c-40ff-b2f9-45837113ac98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30f1f4f0-106e-40f4-bc35-6b853782dc44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b86a9e3-4f2e-4d44-a2be-127aff55b05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8c2c2d-021a-4069-85e8-5a9fb592c30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c9c82b-9d5d-4157-849c-2a09d0e481e3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d894f8-2c4b-4652-8321-67c57af8ea49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7d0017b-29b6-45c3-85a8-2d214972a840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e97c8d3-232d-4060-afd3-ae574501a9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d461bfa-d6ea-467a-b46b-0d52105d4024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b7b8da-dec6-4aff-9a4c-6a1c8b098a09",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87deda0-0ff9-4ea3-86d8-1086320c2909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "406efc4f-a1fc-42c5-b372-af69544a15bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042bf5b6-9cd8-4d2d-b098-9bb49168ba22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c31c542-0dcd-4e3b-82ac-53e129d75895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a58ca70-a6b3-4e73-bf70-2129edcf1264",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc47c64f-4d4e-436f-aaee-ce2de76a847d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af6c92eb-b5f0-43ec-8257-6a157772c4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0d4aad-8551-4d7d-8e62-70454acc3110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e66446-b465-4e7f-bc61-a8fca94b94f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76884802-79d1-4603-8a24-8e0077eace30",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cd5c7a-0b68-4ae4-8109-3cd4aaaea02b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8084f461-08fa-4a81-824b-0ba161574454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b39510-3f95-40f7-a220-260f17f41f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b845d29a-2df0-4c0f-aa34-d15a3499cfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8da9c2-4d8b-44c6-bf57-53c728a1c10a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41dfcfd-bf60-4ca4-b4fb-13c604ea788c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2207c822-3ca4-4c0d-b532-4eb9dc52db21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8770a4c7-b850-43fa-b16a-bd5e0536d534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f74ef9-7d70-4651-94b6-a16a9e1d94d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d794e933-c076-4e40-aca8-9d5298188a3a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d374627c-cf52-4a6f-b4be-5e897115209c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eec1ca47-a814-4c95-884d-3b447baac47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3a7c8a-06d8-4746-bced-965cc16846a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b80f797-a6ef-48bb-81e5-f18ef70271d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6239bc-631e-4c7d-9475-bdb80a434704",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06d24b6-391b-4ddf-9688-667f102b300d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e979530-f5c4-441f-993d-fdd41515a13f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7df2d9-6b06-4608-870e-4683ac8c90f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559dc09b-8169-41c3-9560-9ffda86a7053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6715621-cb44-44b0-8ab7-e0f7d110295e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015cc0aa-a6d3-4645-b22f-fa525e5a0ba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a03fcde0-75b7-4593-aaf2-bf058beb1fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100541d6-b54b-456b-948d-6ec63e154958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1857f575-8ff7-409d-9bf4-016109126602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f10072-8bde-4139-95af-7799724b7b0e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5e24ee-50d2-4055-a4eb-372cf594c4e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df147ff6-f753-4354-b89d-96548b1b4eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8913fff2-8948-4f75-b684-327b8ce44704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b38335-1ddf-4b21-b727-df8b9991d831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e170546-eb9e-4c49-8421-8eda85a78dab",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74160e21-0a55-4f0d-82c6-7a46956c670f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4215cf54-d222-4d9e-af70-11f9de321d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b0270a-0934-4719-b652-87bbc2399c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d448ea1d-8561-4c55-9769-e596a0887b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2868836-d8da-4f48-9d7d-011cd862971b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bd624f-b2ad-434b-bf4e-cd1ca5a828ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ab82d5c-df17-4be3-9fe3-89759db95229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84638c04-8160-43ec-b8d9-eee7e0b61fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724974e0-a6a3-4566-876f-7fd75095462f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dead3836-747b-4360-82d0-5c040ff2999f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f2aaee-6e8d-444f-b274-4087a70497a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfdf1b40-b0a2-4e80-bd9d-bdd744103362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fa61c1-f650-441e-bdc6-b24b13ea5c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3eb39a4-44f3-447d-9c5b-edbf73bec01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaad1382-b37f-44cf-818e-9f624868ab41",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be071ef3-4ea5-4f6c-9cd4-82e57038ab1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360b324c-fd11-42cf-a449-dd9cfdfadd9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815c99f4-5c2f-4800-bfff-cfbb4aa5e330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40bf8b34-fb79-4e27-8207-edaab96cdaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f0d6ec-cd31-4ed8-ba19-861a347ca0ce",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efd3115-1d09-40b9-be86-51f62496d08f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3840273-5360-41d2-9465-02fb7d0f1b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd3df42-74d2-49e7-a26e-8b1d0001cea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511c4293-b9cf-49e1-a47d-f0d68c1eff3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a183e1-df54-44a4-96df-b44f6eac1aa9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcc6fa1-37f0-4a32-92db-bd082ed6905d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "546471e4-f315-47c7-81d2-65017db6bda8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ee0173-10ff-4cc9-b26d-e62585ffe8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf57e8f-3134-43b6-90e2-26eead729b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc525c56-27a4-4f97-9d61-9867d26b7067",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9051f1b-b5b6-43dc-8a5d-4e294c21c6e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e76cf6ce-0634-44fa-bfa3-8e5ea2c05d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9429bbcb-5f82-434c-b8d8-e5b265b07677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0b6293-4d49-4e5f-9d69-e6b23bdccd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90222fb4-6e3d-457c-9e6d-47196198e31d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67270581-159e-4d11-9dc1-d92f48c2ae18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ce884d-14f3-4d51-8a1a-d24a10bf1b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad1b99b-70d6-48e6-b130-527f399c4b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42b254d-66a7-48fb-a2f6-c962edd625e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b995882-6c65-46fc-8ef2-c9defae897f6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d475b0-280e-44fc-a1e9-867c83a98035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55226d2e-2f97-4952-8bf6-1ff4e44c3772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ae7830-909a-4675-9cc9-2e9d5a3545a3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bdd9f7-e278-46ff-b3d6-6fce6662e9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85e212a-9a3f-4def-8d9d-bc63af8da9cb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdeec7a1-7470-4e4b-924f-841af5ea3f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca6f202-aab9-428e-80fb-220f19e03b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7dd5fe-1381-428d-8fbf-f6f0fc01c3f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e98934a-99f5-43ee-80aa-1c448b0c1d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bf4732-6bfa-4552-8dbc-38dbd721c0c3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf6b1ed-2371-4f52-84fb-fc7be59e14d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35175923-43fc-431a-ae1c-e7f639849bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b48389-7633-475b-948a-196b987decc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7344b60-0bce-4fc5-ba5f-d970ef168e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a876e815-d17b-48fb-8002-330579807b16",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9abcece-d6ab-4386-bf57-c0a086e3ad5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ecd248-2e44-4613-af4b-fe9507687d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51921918-554e-460f-8c61-8e3f89dfc07e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb457ee4-4935-423b-862f-7b87679fcbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9e962c-17f0-4419-b85c-f7ae2d03beb8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b07d99-afb8-4865-a9d8-a9774e02ab8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d990d78-85db-4daa-9f66-15e988bbda44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dba7d31-b4cc-4df3-bcd3-e2965aa43839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59781b1-38ad-43a5-b7f5-9bbb4714a5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d091ab4d-22e6-498a-9082-629af8015756",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af24e70f-3389-4585-a942-b19e5d10252b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea53c4ae-f6b4-4922-a30b-3b73a9d2fc8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e29e92-ec61-456b-8038-745d42fa00f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb08d65-2fa5-4e9a-90c6-11c96d8e2385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96142c36-0713-4a77-a000-2ffa03eee22f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d786d1ae-a0f1-4d6e-b64b-a10def137e01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70f58482-6e30-469a-b966-61906ca15b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b25286-0754-4153-bdf9-9374415d0960",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536dc80c-3710-4415-bac2-8ee474b77d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5595a053-3ae2-45b6-9ee5-4fa34760249e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8e22fe-dc99-42cd-a084-041c0f5cf6de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e47997-4d91-4496-8e5f-8487bc6a5784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93396079-beb6-4600-9f23-603e0f50d6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca7b8eb-5cf8-49e5-82df-8de897dd1870"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4ebd99c-8cdb-4f40-90db-d3cef53d336f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "696e42cb-7539-4925-bfe8-866b6cd08714"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc71085a-e1d6-4231-9e9d-0b1c5119b8ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de7823d5-3d1e-40c8-82ca-038e8d5ad0da"
                    }
                  }
                ]
              },
              {
                "id": "dc31f94c-a03c-44ee-8727-6fc06f48ae3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a9edafe-6208-4bdb-9a1b-352861625aa8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee3be49-5446-4bd2-835e-b0629cc2e871",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9a1e63cd-c3d3-475f-8d8c-2b04eec34f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4ad0a3-0eb7-4975-9e80-969bb2425ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9579e9c8-ae8e-42f6-8540-58c85eb3516e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50f31a17-9803-40d3-8013-2d6c6a2db409",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fad445ca-f75b-4936-a75c-2066c80578d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a90d350-0931-4dfe-ba30-f8e1f98e5a24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a736682-3978-4bb7-be1a-3ce640bc8d9c"
                    }
                  }
                ]
              },
              {
                "id": "ef5c985d-ba10-4410-8357-610918e3c509",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "98693cde-9864-4fb4-837b-3c23e65cf66e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0150bef-de82-47fc-aa3a-1a59a8c5a4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c6161ba9-5c51-4e93-99ba-cb60ac7a9de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ac342f-67da-499d-a157-c0b8e896938c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7db54f-1f49-43ca-a38f-61f84a8b25af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d751da0a-4a46-4427-bc21-e6d87dc974bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa951e6a-f73b-408e-bfe8-c259b319712c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e71506f-1396-48d8-b910-954d53f47a3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0acaa632-f264-4f40-808c-7a0c2ce90e86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3aebc77e-e95e-4d3b-a38d-a12e6dbdb569",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14856cfb-674d-4479-b153-ba7d155fbe0e"
                    }
                  }
                ]
              },
              {
                "id": "44040a81-ce8e-419c-8e11-310c0231586a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ceb8da8-1ba8-43c9-82c0-82e108f9a52f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ff3ef4e5-0a52-4bf2-8456-db3eade84954"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30566ec5-92d1-4b44-bf42-c980a282ffdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8a65721-c8d1-436a-93c4-91d3266c3788"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81c0fa57-9641-45a1-877f-59befac4485b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "321f7195-a24e-4f31-b432-87943253e1e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ca9f4fe-13b0-43fb-ac57-84d678f21e49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89382fc2-7268-49c4-bf18-811a60b8d410"
            }
          }
        ]
      },
      {
        "id": "5a05d1eb-72ec-440b-a5d9-e762e752e7b8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6d64f280-dafa-49eb-a30e-f58e9c4beb59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adbd8424-cabe-419e-8125-a51ec5a4cb49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c90b460b-722d-459a-acd4-efcedffe4d1e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08993b74-22fa-4609-9536-c9b3e571f180",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fc4c8bfb-821b-4f2a-bdef-a0456bd3c9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca38d3a-4236-43d8-8f3a-365f39a20481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bfb655c-ebab-431d-97e6-b2ef42afee5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41198e43-6257-47b1-b742-afd574e01e67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c564b3ef-0b57-4c97-b330-eec46452c4be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e47b94ba-7228-4d84-9e3a-64cd392f9d83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "184ef5dd-5284-458e-9b44-110a600b009e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "838af59a-e056-4928-bd92-472f28c662e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5b0f369f-a103-4c83-ac54-385221ab73f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49e41f88-4397-4d2e-8204-7d7c901f8c62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "955544c4-61cb-4725-af2b-dfa0f617178e"
            }
          }
        ]
      },
      {
        "id": "8eeacd5f-e1af-4292-9aab-e0a339ed8b25",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7e798229-5b44-4b1a-b533-e69a1510bc03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be36930d-272b-4b5e-abe2-bc082cc70fbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a37ea74-b612-4655-b9a5-fc31cc9600ad",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9932fd8-e81b-4621-9e53-5dfc37811305",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "827c0bf1-7ee9-4a0d-a1fc-93b6b0366012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8423b3e3-66a3-42ba-8e52-572dc33e10f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e0d94e0-cdb5-4dad-8219-1fe04ec1bd0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "537834d7-33bd-4ebc-b988-a7febdfd07e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50abcd87-738a-4017-b414-57d6fe45137e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1abf37a9-da0c-41d3-a82c-9d69347954f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17259a23-658e-4bfb-9ff5-d353a5a31f5e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17476b73-cb80-4cd4-838a-77528792be33",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "76d9098d-24b1-424d-a743-0d98c82dbea5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7864d3c-85ef-4fe4-afcb-d24d42a03279",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "930b9bcd-d5f0-4aa6-9aa7-c1ec15284b09"
            }
          }
        ]
      },
      {
        "id": "6bf2d1c4-57dc-43ad-b257-5546e6504a1f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "06a93fb2-0a28-4daf-a0bd-90bebc7a4499",
            "name": "Negative Testing",
            "item": [
              {
                "id": "499b1a8e-24da-4fce-ab37-d15cc251557b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c78f3466-16a3-46cf-b5a0-91ec2f4be079",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423833cc-1822-4860-9ff6-d39c798d5d50",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b756512d-4175-4850-8d08-8bcd45588af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eea779-bba9-495c-ac13-6174c21b9b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "714a08d1-6d32-4bda-ad37-3ed244fe3d6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17c85417-8f18-42f9-97e0-4c653a741ff7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e0001b5-d457-45b8-9eed-025cae14f4dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e6d3e35-7582-468f-a32a-3c04ccc749e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f136ad4-b12d-480e-9b98-522b62adbbf5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4cc3251-cc67-4f76-8bc7-f5160a312267",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9f0ff6fc-a07c-490d-bbe5-7a78d0ab3610"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b9d478b-7367-4e2f-a135-93a06c7f0b3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e0733a2-af14-4a5d-b847-2a49748e255f"
            }
          }
        ]
      },
      {
        "id": "c11850fa-213b-4df1-bab7-03b715cdaf05",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e699a402-799b-4e91-8d5c-1b498da0a37b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c078a4e-5d2a-4dfa-9a97-1f000696d83a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c38ddf6c-15d8-4ae4-9f31-723c6ed68626",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "370a3f5d-bfe6-4bfd-a354-c6d03400e148",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f916413b-9fe8-496b-a4ca-f30c09ddbcac",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 289.77777777777777,
      "responseMin": 21,
      "responseMax": 6768,
      "responseSd": 1007.2229453941151,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717979974143,
      "completed": 1717980055488
    },
    "executions": [
      {
        "id": "3d2a4479-e99f-4081-8add-322044ed9f0f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1b912d97-a685-4525-9698-d6c9b636f90d",
          "httpRequestId": "d8c32fae-eb56-4233-8cf3-15c7c76dd3f2"
        },
        "item": {
          "id": "3d2a4479-e99f-4081-8add-322044ed9f0f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bbccddd5-f5c9-45f4-88ee-47da83999318",
          "status": "OK",
          "code": 200,
          "responseTime": 131,
          "responseSize": 0
        }
      },
      {
        "id": "85fa0373-d938-4147-af27-b449ad55cbb4",
        "cursor": {
          "ref": "b3e2f587-3838-42d9-8b74-4274d3111f56",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "81aa9370-177a-4ea5-ab86-f1fed02e4b75"
        },
        "item": {
          "id": "85fa0373-d938-4147-af27-b449ad55cbb4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "746ef6ee-b4de-4d1e-b9e7-6df8193a5525",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "2e50c0a7-a963-4182-ad98-daabe6448148",
        "cursor": {
          "ref": "a86fe082-3968-413f-86e7-4580c867aa70",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8255db70-60ea-4ff0-b2f0-cc8e3361a92a"
        },
        "item": {
          "id": "2e50c0a7-a963-4182-ad98-daabe6448148",
          "name": "did_json"
        },
        "response": {
          "id": "25e0098f-1fa4-445b-afb1-ab11d61bee7d",
          "status": "OK",
          "code": 200,
          "responseTime": 461,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5cf79d-1fe0-40d2-a6dd-0548a0544a90",
        "cursor": {
          "ref": "2c44d64e-a964-4854-8a50-0a0aa186ad25",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "68163be9-6bc9-4733-9289-b31f5707db15"
        },
        "item": {
          "id": "6e5cf79d-1fe0-40d2-a6dd-0548a0544a90",
          "name": "did:invalid"
        },
        "response": {
          "id": "a04285c2-d512-4899-98c5-6e1cee8ecc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2270,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5cf79d-1fe0-40d2-a6dd-0548a0544a90",
        "cursor": {
          "ref": "2c44d64e-a964-4854-8a50-0a0aa186ad25",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "68163be9-6bc9-4733-9289-b31f5707db15"
        },
        "item": {
          "id": "6e5cf79d-1fe0-40d2-a6dd-0548a0544a90",
          "name": "did:invalid"
        },
        "response": {
          "id": "a04285c2-d512-4899-98c5-6e1cee8ecc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2270,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb45225c-4893-42de-af2f-34ea27eac3c1",
        "cursor": {
          "ref": "79ad61a1-fc13-43b9-9198-e8e1f40f21b5",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ee7e45d4-359d-4c7c-8f85-bbd65f4933d2"
        },
        "item": {
          "id": "eb45225c-4893-42de-af2f-34ea27eac3c1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eeec415c-9d3e-498a-a306-0240a9969193",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2479,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b6630a-fd35-4cf5-8b32-6935b1a998ae",
        "cursor": {
          "ref": "9c27591c-88bf-49a3-94f0-21b3d6bba079",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b9924e56-e5e6-4578-a4ec-9b4a408646a6"
        },
        "item": {
          "id": "25b6630a-fd35-4cf5-8b32-6935b1a998ae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "71b468b0-448a-40fb-b46f-ab0a23178c92",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1978,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce11cad-fee1-4b04-829b-97e2dede95f7",
        "cursor": {
          "ref": "55e13025-4c47-4200-b4cc-840ec1589768",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "411cea30-039b-4333-881f-04e95fac11a5"
        },
        "item": {
          "id": "cce11cad-fee1-4b04-829b-97e2dede95f7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6d0b0ace-2405-46c5-a7ea-10c2131e2634",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46013281-624a-47eb-8a7e-3c515e4cfb00",
        "cursor": {
          "ref": "cb20c704-7264-4c89-9e0f-f1d3ec943469",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "66c6e051-0827-452a-9f9f-bd52607fc244"
        },
        "item": {
          "id": "46013281-624a-47eb-8a7e-3c515e4cfb00",
          "name": "identifiers"
        },
        "response": {
          "id": "cb38611c-e8e8-4b59-b55c-9c3a1ed2cd62",
          "status": "OK",
          "code": 200,
          "responseTime": 2240,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204057b5-fa1b-41a9-983e-fbabc1ccda85",
        "cursor": {
          "ref": "7b8ce469-c35e-481a-944e-107eb342fc5a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f1208ff7-b927-481c-b133-15e553ad1927"
        },
        "item": {
          "id": "204057b5-fa1b-41a9-983e-fbabc1ccda85",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f6c263a0-0aad-412b-a865-a1a61aa83909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f1fbc6-1fbe-488e-97a2-f4b9c835c966",
        "cursor": {
          "ref": "adbe85c5-012f-4278-b3a8-87ffec7e9afc",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d5cf3e2f-7872-4d94-abf0-22d89f3f4a1d"
        },
        "item": {
          "id": "32f1fbc6-1fbe-488e-97a2-f4b9c835c966",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e649f206-30a9-4569-aad2-4b4df2622129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4c100e-23f2-4d43-9184-feb478b059a7",
        "cursor": {
          "ref": "c70600a0-3011-4cb0-a1bd-034d1ec97fea",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "91e3f5b0-e244-47e7-9651-9ea65715bcc7"
        },
        "item": {
          "id": "1a4c100e-23f2-4d43-9184-feb478b059a7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "80747774-50ff-4fb2-9977-7ced4d964a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3437dd7-4878-4aa6-b647-f5e64c362b2b",
        "cursor": {
          "ref": "8862f31f-3cbf-408f-a85b-c558886a1148",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0a8bf1d4-02f6-4741-8ea1-c9328daaf704"
        },
        "item": {
          "id": "b3437dd7-4878-4aa6-b647-f5e64c362b2b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e843619f-71f1-4cbc-892a-f67c9fa8fdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a9b662-1f00-428e-a5fa-2460f85e2231",
        "cursor": {
          "ref": "868df8fe-927f-480e-8887-114d462650d4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f6ab50b0-5aaf-40d3-abef-b150665c75b1"
        },
        "item": {
          "id": "82a9b662-1f00-428e-a5fa-2460f85e2231",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5dd9ec93-a012-407e-b7e5-ba7a2e4a5b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4e1a1c-2aff-47f8-a025-66ce4fd8dd17",
        "cursor": {
          "ref": "e32123f2-2bf3-41fb-b004-1991654624cd",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0a0ae738-2d98-432c-a65f-a8c38b509e69"
        },
        "item": {
          "id": "df4e1a1c-2aff-47f8-a025-66ce4fd8dd17",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2ce8f11f-aa1a-4682-8983-b14e8e085117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb81e560-62aa-477e-bbd9-ed5ab5574c94",
        "cursor": {
          "ref": "f1fd3d1c-eba9-4f53-8820-b39c9875577c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "94a0130a-4676-4fae-83cb-c69c6d79bbd9"
        },
        "item": {
          "id": "cb81e560-62aa-477e-bbd9-ed5ab5574c94",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "71f9648e-389b-4fdb-90b4-4bc56c5dd852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e911dcf-7354-4a37-a837-e45c2faf0843",
        "cursor": {
          "ref": "f9ca172f-ce63-4f7f-b3b4-eb67756e4943",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e73e3d9f-d8b9-4d94-86ce-6c65ff9c005c"
        },
        "item": {
          "id": "5e911dcf-7354-4a37-a837-e45c2faf0843",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "63395c08-22d7-4c40-82a5-2b9e7c0b3b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe4c5b5-6193-4647-ae2f-a4d5ee5be21a",
        "cursor": {
          "ref": "861c763b-5edf-4ffb-a3d3-de946d6b41b9",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "655c8529-e29f-46fb-aeea-2e972bd21c7f"
        },
        "item": {
          "id": "ffe4c5b5-6193-4647-ae2f-a4d5ee5be21a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3858b602-9ace-42c1-8cca-b1c34c580b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f850c26-10f0-4bd2-8304-737d6258ffdf",
        "cursor": {
          "ref": "0d0f04ff-bb35-4165-9f99-12a2b1ed8f91",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "70655be1-a29e-43a2-ba0c-88b7f432ec90"
        },
        "item": {
          "id": "8f850c26-10f0-4bd2-8304-737d6258ffdf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5867c28c-d49a-41e3-b570-58857a11a9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25083d73-13fc-430d-a801-7f29b58625a9",
        "cursor": {
          "ref": "cc49c811-89b0-4dac-8aa0-b3f9f5d8a18a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3d8ee9b3-a4c8-4d86-863b-10e848222ccd"
        },
        "item": {
          "id": "25083d73-13fc-430d-a801-7f29b58625a9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0e1aa8e8-6c03-47d2-8825-b09022fe9561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d80d6a-583b-441b-bcb3-bee91e7d50a9",
        "cursor": {
          "ref": "c46229ef-788a-423c-a7d1-b479ea7555bc",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "29c1daab-f16e-4590-84d1-576b7230f28f"
        },
        "item": {
          "id": "d5d80d6a-583b-441b-bcb3-bee91e7d50a9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8c69215f-9023-4a25-b692-0c1c2ad69ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb742a5-2d8e-4cf7-a57f-925df28cee95",
        "cursor": {
          "ref": "a89192b7-445a-41d7-991f-75d972bc71a0",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "513aa29a-ee8d-4feb-b5cf-651688f1d69d"
        },
        "item": {
          "id": "adb742a5-2d8e-4cf7-a57f-925df28cee95",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "31af10b2-aadd-4c83-8244-1ad52e04d637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29997f84-1548-42e5-afda-5b40d4fce460",
        "cursor": {
          "ref": "48259d7a-7fc2-4e36-b694-9d3698c86eb5",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ad7337a3-d99f-498e-9535-3f151714c422"
        },
        "item": {
          "id": "29997f84-1548-42e5-afda-5b40d4fce460",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a496e4bb-90cd-423b-962b-d223b823df8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542db0a4-6d5e-4ba6-8267-b9cee826b90f",
        "cursor": {
          "ref": "4912c3bb-78e7-4f52-8465-e25b54462fb1",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ecee2d5b-a330-47ec-b6b7-dac5d4864ea4"
        },
        "item": {
          "id": "542db0a4-6d5e-4ba6-8267-b9cee826b90f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "26c21a16-e898-488d-bde4-5a011fd75c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a24a0e8-00e5-4de2-9c14-7243e7e452c0",
        "cursor": {
          "ref": "7a544c8c-0c4c-4594-80ec-24627ceb4bdf",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "27c55ddb-7312-4bbd-87f8-98118fa145e6"
        },
        "item": {
          "id": "9a24a0e8-00e5-4de2-9c14-7243e7e452c0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1ceb55c3-1fc5-4e4a-bf52-2144a20d1186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63341298-6d6f-4b4e-855d-131d12d38942",
        "cursor": {
          "ref": "b9bb56e9-f4e9-4f32-bc6f-3ba8a420e74b",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f2e01535-184f-4fe6-aa1e-4849a13a15b3"
        },
        "item": {
          "id": "63341298-6d6f-4b4e-855d-131d12d38942",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e40bc056-c4d7-4e4b-8b9b-3ac45091bcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728855f2-8bd9-4195-b0c6-71ee09f29b49",
        "cursor": {
          "ref": "a9a7ed19-c6f1-4dce-ac64-c0049bd1f18b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b6245f6d-e926-45cf-8dd1-eb33270d453f"
        },
        "item": {
          "id": "728855f2-8bd9-4195-b0c6-71ee09f29b49",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0dae0873-9496-43d5-8264-ee6669253ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046ec0da-b7eb-42c7-a58c-f01b4f62c3ad",
        "cursor": {
          "ref": "4892b943-5003-47be-9c08-7e2bf9739168",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "04f74844-37b3-4313-86a7-e4c64ac544c3"
        },
        "item": {
          "id": "046ec0da-b7eb-42c7-a58c-f01b4f62c3ad",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "06c0de53-d00c-40a9-88fd-cd18d33709b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809a803d-08d5-43a5-a515-31692c18cb06",
        "cursor": {
          "ref": "1f171599-d1b0-4d15-a3bd-3167d9fc1cff",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fcaac96f-27b8-47a0-87e0-b28709653835"
        },
        "item": {
          "id": "809a803d-08d5-43a5-a515-31692c18cb06",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ce8be362-ffb1-4101-8211-17c38a151a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4895958b-b8e7-42af-9983-41c5c2f158b2",
        "cursor": {
          "ref": "2cdd7247-05f3-4a8b-89c8-e4ca18aae649",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "82022052-7343-4611-a14e-01377ee78785"
        },
        "item": {
          "id": "4895958b-b8e7-42af-9983-41c5c2f158b2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "79fea172-c220-4270-90bb-39ad85cd1b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78d1a82-3353-4d46-934f-087f94637e80",
        "cursor": {
          "ref": "8fd158d7-76b5-4a4d-bc1c-ba4e744ab277",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "42c25758-dc53-4554-a423-d90bfe8af222"
        },
        "item": {
          "id": "f78d1a82-3353-4d46-934f-087f94637e80",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "04c5348f-15a2-420a-96ef-3c4c8e321688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795de0d8-8c50-4c89-9acb-c4bdec75b4f3",
        "cursor": {
          "ref": "c4a927a1-e548-4eee-a61b-a48b7d5ae89a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "aa62d484-95f3-45ef-9fd9-ef9d0ec2ed81"
        },
        "item": {
          "id": "795de0d8-8c50-4c89-9acb-c4bdec75b4f3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "eee72728-aa5d-46b5-98b0-5530b1fe41e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d8ea58-5392-48b1-800c-b076a3c78405",
        "cursor": {
          "ref": "4e001c19-80c0-4bb1-a6e6-0fe14f948779",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a1a3cda7-52e3-48bd-9f5d-b41956e9a2d9"
        },
        "item": {
          "id": "67d8ea58-5392-48b1-800c-b076a3c78405",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d33f61f0-3d79-4338-a525-ef1e91210088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37e5cc3-9274-4cff-96ab-fc27ceb1c5ae",
        "cursor": {
          "ref": "92287354-158d-46de-bc43-4833fcdd0002",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "27bbc0f7-399a-4750-8e3d-4a993382c08c"
        },
        "item": {
          "id": "c37e5cc3-9274-4cff-96ab-fc27ceb1c5ae",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1b38be1e-a98b-400f-a81f-ff03b95371b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1d15f1-483f-4e8e-aff1-5cdcfc8feddf",
        "cursor": {
          "ref": "13d95f0d-bee3-4a91-8865-d9bf3ea51af2",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b2914c78-967d-4cba-9db2-04fe580292ca"
        },
        "item": {
          "id": "cb1d15f1-483f-4e8e-aff1-5cdcfc8feddf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "277fe8e3-6dee-40bc-a85f-8ecbc60eeb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1296890-d4c1-46ed-b6cf-99199ba84e1d",
        "cursor": {
          "ref": "03524254-bc00-49f0-8646-40104d5a1ed0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4cc1f319-a37a-4f0c-8a72-9ec642ab10d9"
        },
        "item": {
          "id": "d1296890-d4c1-46ed-b6cf-99199ba84e1d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7988e121-e328-41a5-a19b-429315746f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3794477e-2527-40e6-8365-0f9f2d548eb0",
        "cursor": {
          "ref": "f4fd0f5b-0870-4593-9205-18ed42a64eef",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4fb732f8-afd5-4c0f-aae2-1bbe4c1344ca"
        },
        "item": {
          "id": "3794477e-2527-40e6-8365-0f9f2d548eb0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5b63b1a8-6190-4ec1-bbac-c222a5e6ebb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14119aa9-650e-4fc9-8738-f7147d0009a4",
        "cursor": {
          "ref": "23c35be2-efb3-4bd5-ae2a-0f4528f583fa",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9ebab871-4c60-4896-8cfe-e0c0a45f2489"
        },
        "item": {
          "id": "14119aa9-650e-4fc9-8738-f7147d0009a4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "af384d7b-4755-4e8d-a6ca-5ad76cfb7edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8298f190-40b0-4b19-87ba-a29b33b248a2",
        "cursor": {
          "ref": "ecbbd0aa-588a-4491-a610-bbed35503077",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2fce674c-7a47-4ba4-ae96-8d543b05a4b1"
        },
        "item": {
          "id": "8298f190-40b0-4b19-87ba-a29b33b248a2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b207d357-a6f1-4396-9929-8a029fdcd1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92177c78-0bf9-45a6-a488-320d7cfbe1ff",
        "cursor": {
          "ref": "78c7ada1-8334-4905-9122-7a8821cad690",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e7e23bf2-9d2f-4870-8f5f-6db558238d7b"
        },
        "item": {
          "id": "92177c78-0bf9-45a6-a488-320d7cfbe1ff",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "82330e40-699b-4e97-86d5-01ca65ba65e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea85f52-1513-4afc-9571-cc3c0b06fc12",
        "cursor": {
          "ref": "3f19124c-fc0e-47ab-8258-f1f1243b6c9b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4175b17a-41d9-4965-be7f-f9e8ad6e3569"
        },
        "item": {
          "id": "0ea85f52-1513-4afc-9571-cc3c0b06fc12",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "013ead1e-a7c4-4e56-8722-aa5736e23a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5798660e-412a-4b43-9c46-47b1a9386152",
        "cursor": {
          "ref": "a4fa3451-d89d-4f33-a33b-9c5e00ae9e02",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5837510a-c284-48b0-8730-690a55dc1e26"
        },
        "item": {
          "id": "5798660e-412a-4b43-9c46-47b1a9386152",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ad51ac7f-de5f-4bb7-90c7-f0937b883dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26ce8c3-209f-4491-8000-8d810170b404",
        "cursor": {
          "ref": "2774cffd-ad1e-4ee5-af1d-e6fd21dc5f1a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "34f43fab-4e86-4843-ac36-1e427d0296dd"
        },
        "item": {
          "id": "e26ce8c3-209f-4491-8000-8d810170b404",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "040108b0-6c79-4d51-a0bc-e26857478f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1777701f-b68a-41c3-b845-5efdbb24be47",
        "cursor": {
          "ref": "5e127778-31c0-4dbd-8701-4992cb062b0c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7f05207b-78e4-43e3-b089-7ed1043c2e36"
        },
        "item": {
          "id": "1777701f-b68a-41c3-b845-5efdbb24be47",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b5661a75-5abf-44f9-9d76-8ed856c90f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610f191c-525e-4890-8d36-315f0b967d66",
        "cursor": {
          "ref": "16456568-d54f-4534-80b0-92a7175a4d54",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ea2c640c-85c8-4c4d-a060-ea5e9cbe6c30"
        },
        "item": {
          "id": "610f191c-525e-4890-8d36-315f0b967d66",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "010b7339-9912-4692-bb55-7836050dd882",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5163cce7-656c-404b-b392-b800b40f8e02",
        "cursor": {
          "ref": "c49e27da-46ca-4706-b99a-7f653a29c6a0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2a5a6f38-fb51-4fd4-be1e-9e8809b17685"
        },
        "item": {
          "id": "5163cce7-656c-404b-b392-b800b40f8e02",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b4f9c420-5fa1-4553-9337-836fdd959f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25a4716-d9ef-42ab-bb43-d7e28a1fda5b",
        "cursor": {
          "ref": "c4c6d193-c6ac-4db2-9bfc-bfc3627fc694",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d35651a7-d808-4937-9cc6-223c59037126"
        },
        "item": {
          "id": "f25a4716-d9ef-42ab-bb43-d7e28a1fda5b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d0cbe7bc-e2a6-48d7-80da-77ed56bbed91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0255892-1cb9-45c2-9ff4-a5421b75c077",
        "cursor": {
          "ref": "2c7deacf-004d-4ae6-bb5c-d8276d60260c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4960665d-79e3-4266-95bf-c0ea32c8e92d"
        },
        "item": {
          "id": "d0255892-1cb9-45c2-9ff4-a5421b75c077",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "028585d0-fa5b-4e71-b1e1-9d2e803178ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a6cbb9-dae6-445a-9380-1646a60b40d4",
        "cursor": {
          "ref": "106b81b9-f7cf-427a-845a-bd84a1da0345",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c8f5ba70-f1a7-477d-a052-5b21b5029f3f"
        },
        "item": {
          "id": "62a6cbb9-dae6-445a-9380-1646a60b40d4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e0f84398-d58f-4ee5-b340-0173d1c8e073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd03594-e72c-455a-a1eb-6e810ca67b96",
        "cursor": {
          "ref": "79dae175-0e97-4d4f-889f-17f42e5941a7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "781944d1-826b-4595-a9e1-0eb38f077737"
        },
        "item": {
          "id": "4dd03594-e72c-455a-a1eb-6e810ca67b96",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c09367be-3ffa-41f9-972e-0e3f09fa1127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ca1a49-7cb3-4767-8a71-fc29d078ce14",
        "cursor": {
          "ref": "acdbedc8-65f2-47a7-af8d-6313886af8a4",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "35df8cda-9a00-4d98-a322-6e8b1d2bc57f"
        },
        "item": {
          "id": "b3ca1a49-7cb3-4767-8a71-fc29d078ce14",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2200d571-aa9c-4b44-b8e2-281674543f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d44091-e7ce-4287-af42-28aa587e0a13",
        "cursor": {
          "ref": "9c3374d4-9fd8-4f21-8d11-8bf974e2d9fc",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "61788007-0610-4c10-8909-6f990e742577"
        },
        "item": {
          "id": "78d44091-e7ce-4287-af42-28aa587e0a13",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8e270a7c-edad-43d4-8f58-fd7d5b8a2e8c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10325844-f993-4227-b79f-c3441968b937",
        "cursor": {
          "ref": "d9be7e15-7890-40cd-96e2-d2fe0f9d2348",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "92a0ebec-bdab-4c25-a4a8-32eda1f5adf6"
        },
        "item": {
          "id": "10325844-f993-4227-b79f-c3441968b937",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b5292680-bc34-4285-8ec5-78038d4cfb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1f0e47-5c75-431c-8c2c-2fdc9eecc8df",
        "cursor": {
          "ref": "5c4ca6bc-a8fa-4fb9-869d-63bf99a305cc",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7fbc5eef-d6c0-4d2d-b88f-49c31f72985f"
        },
        "item": {
          "id": "3e1f0e47-5c75-431c-8c2c-2fdc9eecc8df",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ac78b013-8981-4101-91db-78b83de2fcd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ef15c4-36af-4d28-bfa4-f6cd956a90fe",
        "cursor": {
          "ref": "dd418b90-5ff3-4222-8bd0-9000b4c11998",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9336b365-3663-4a26-b594-1a4fcb0673a3"
        },
        "item": {
          "id": "b2ef15c4-36af-4d28-bfa4-f6cd956a90fe",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f5bc1e4d-68ef-4940-9124-ca1c4d08072c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf80785-fdc6-47b4-b1c9-768c6cb4ed0d",
        "cursor": {
          "ref": "a2f577ec-b28d-423c-85c1-8ffefa89dc8b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "11676e4a-d2d4-48ac-970a-059c5977c9ee"
        },
        "item": {
          "id": "3bf80785-fdc6-47b4-b1c9-768c6cb4ed0d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e441904d-b5a4-4ed6-94ea-c9065c1c59e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88776c71-bcf1-4d25-9787-1030248e5353",
        "cursor": {
          "ref": "ddc2f77f-5e04-4927-932d-15c2a52fa772",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b0ba55f3-c6c2-4828-9dae-8da6e2b4de06"
        },
        "item": {
          "id": "88776c71-bcf1-4d25-9787-1030248e5353",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2e72ad07-2d75-46ae-a963-ea83eee71b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a53aa5-142e-47c4-82a1-d70f35d71c80",
        "cursor": {
          "ref": "d78f7e46-4fa9-4504-8a8c-279ecf4aab36",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "41f843b0-93dd-42d7-8ee6-c82affeaedda"
        },
        "item": {
          "id": "61a53aa5-142e-47c4-82a1-d70f35d71c80",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f6e3ec42-9a54-4fe9-b928-e40622218035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e7e680-6bd7-4294-a07b-06967817a85c",
        "cursor": {
          "ref": "366ac7a8-763e-4a13-9e5c-c76d88ceb262",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e89c590b-9bec-4c66-9544-adadb32c3ded"
        },
        "item": {
          "id": "08e7e680-6bd7-4294-a07b-06967817a85c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4942d465-675e-4b34-814b-5010d06be1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c780d656-3330-40df-a2c4-890285014a21",
        "cursor": {
          "ref": "8f32b692-f96a-44e0-94ed-b3c0c92935f9",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b3b7d37b-ef11-4fe5-8117-cda17da13b46"
        },
        "item": {
          "id": "c780d656-3330-40df-a2c4-890285014a21",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "93e3b98f-d32e-4103-a4ff-509e3d8bffdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663cbd82-00af-4934-a717-d7c447956b6b",
        "cursor": {
          "ref": "9ecfa34e-ccb2-4b78-804b-06e9cff528d6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d99ce3cf-cd9e-4f42-a073-2869615e3e82"
        },
        "item": {
          "id": "663cbd82-00af-4934-a717-d7c447956b6b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "925371ca-ad56-4775-834f-675bafadce70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e5b44d-9958-40d9-bb05-f5beb11e2bc3",
        "cursor": {
          "ref": "f2c8c359-6c57-4dbf-8ff3-cf8f03eed857",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d3b4b27b-b134-4454-b2c2-133f2990431e"
        },
        "item": {
          "id": "a1e5b44d-9958-40d9-bb05-f5beb11e2bc3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "47cada93-300a-4ad5-8f96-3546dae148bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afae6c3a-5a20-48ab-a0d4-5455afdb156a",
        "cursor": {
          "ref": "32f35fa5-6faf-4796-af70-3f84b7a0c57d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f7955a14-4853-430b-9912-ba7d0caa9635"
        },
        "item": {
          "id": "afae6c3a-5a20-48ab-a0d4-5455afdb156a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b654670b-4689-47af-9950-40c3385a0cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfd163a-3aa1-4ae1-883b-9264257de35c",
        "cursor": {
          "ref": "5496e340-d720-4837-a3cf-06ed7b5b33a8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "da98766a-55dc-49a2-909b-84bd310d534f"
        },
        "item": {
          "id": "cbfd163a-3aa1-4ae1-883b-9264257de35c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d33eeccb-c489-46a0-a1d1-e6aec9a6ca7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1581cb35-fb2a-44a5-b752-89dc42bcdd52",
        "cursor": {
          "ref": "1cbb5f92-4525-4b28-899e-c013a64f1f69",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2aa590ee-9ae5-41b6-ab68-a4cfd29a7340"
        },
        "item": {
          "id": "1581cb35-fb2a-44a5-b752-89dc42bcdd52",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7da7d4a3-b685-4794-a87f-dfc07f3ce59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad27f40d-3c8c-480e-992c-ff00e0df9997",
        "cursor": {
          "ref": "ec20bea3-9ab3-4d97-83a5-e44d171ffb15",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2e25db1a-8ad5-4fd3-a9eb-55c3d67187a3"
        },
        "item": {
          "id": "ad27f40d-3c8c-480e-992c-ff00e0df9997",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "58538d43-e79d-4e9e-a6a9-fca337730836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf7c316-9bab-4de7-9d38-a21b7e2d1228",
        "cursor": {
          "ref": "31508511-10a5-4aa1-82ed-17858a0aba03",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7a8f6307-106f-47f6-976b-da8129233c34"
        },
        "item": {
          "id": "5cf7c316-9bab-4de7-9d38-a21b7e2d1228",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2a528ad3-054f-484a-a9f8-b6070ee902d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59caccd-bf15-48bf-9f30-2df4c295ac1f",
        "cursor": {
          "ref": "f55d365e-304e-4ece-a884-f06d905b839c",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9ba4f8b4-d7ce-4d83-8b32-8ed770aaa6b6"
        },
        "item": {
          "id": "e59caccd-bf15-48bf-9f30-2df4c295ac1f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b4d9ceb0-a0c9-4298-b9ce-43c2c7a4c472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a60c29f-2bb7-44fc-a817-9c1ecf941f24",
        "cursor": {
          "ref": "4338c7c7-ff30-4bc1-acaa-4ad9dce3aa51",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1fa3fdef-2fd4-43cd-b967-b47f42b7683e"
        },
        "item": {
          "id": "4a60c29f-2bb7-44fc-a817-9c1ecf941f24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2316dcf5-8c78-42b0-bbee-33673b57c4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a18b3c-2fd0-4c50-858b-b66d96e7bddd",
        "cursor": {
          "ref": "891bff1f-87e6-4d35-abb6-2c290863b92d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0fe9ee51-3514-4f33-b4fc-ba93658ed9db"
        },
        "item": {
          "id": "45a18b3c-2fd0-4c50-858b-b66d96e7bddd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ef71e354-1754-4b7e-b91e-5424cbae3ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce9f631-90f2-4af5-bb6d-36e85b0d3ec7",
        "cursor": {
          "ref": "164573ae-6f55-4915-b5d8-eebfa723ea98",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f04ea966-5b5e-4364-a997-ec0e07939d2d"
        },
        "item": {
          "id": "7ce9f631-90f2-4af5-bb6d-36e85b0d3ec7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "eab952fd-51f6-4355-960f-ad906ace1c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f89d847-7c36-4be6-b3ab-0a0373c94cc4",
        "cursor": {
          "ref": "e1de42b3-c881-4a3f-bb64-e8960a17d5ed",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b679fb2a-a400-42d3-bfa8-16bcc892221a"
        },
        "item": {
          "id": "3f89d847-7c36-4be6-b3ab-0a0373c94cc4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c6090f37-ba0c-4b5f-aaf4-be81869be1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3fea7b-29b0-4bae-bcf9-c1923a313d66",
        "cursor": {
          "ref": "2d09948c-e8e7-4406-929c-6e918de7007b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7977cc1d-de3c-4757-be69-b937736021b2"
        },
        "item": {
          "id": "ce3fea7b-29b0-4bae-bcf9-c1923a313d66",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "081dab27-efae-4207-8817-d3ba0ab730eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558d1cf7-f6ac-4499-856d-fc826fbcc811",
        "cursor": {
          "ref": "4488e928-e7ab-4c07-8f4e-9dce647faf35",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "19b951c7-4b03-4ef0-abca-762657984ba0"
        },
        "item": {
          "id": "558d1cf7-f6ac-4499-856d-fc826fbcc811",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "269390c5-173a-430a-b4b1-3d99a494ce25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c232fd-6a88-44ef-92d3-e67b087ecd2a",
        "cursor": {
          "ref": "9c11037e-c350-401b-971d-e6ca4f1c6006",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c7ab2455-0c33-4962-984a-52790bfd041e"
        },
        "item": {
          "id": "48c232fd-6a88-44ef-92d3-e67b087ecd2a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8a37b70a-882d-4e7f-b085-f0204b4c8ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5de73d-ff88-416e-a046-4c021691bba6",
        "cursor": {
          "ref": "ce8c3efb-ad7a-4f85-8cb7-0d6c9a88d94b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e8bc08eb-a6f2-4f3b-8c27-18523e3bf68e"
        },
        "item": {
          "id": "4b5de73d-ff88-416e-a046-4c021691bba6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3e09c252-b8be-4e29-91f7-9f244880de08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b30e6b-5c69-40f4-8958-4dc87fbd18f1",
        "cursor": {
          "ref": "affd31c8-4da5-476a-8388-2e55bda3a693",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6cb5f686-d6d5-4e15-921d-cd1ba2c36b11"
        },
        "item": {
          "id": "27b30e6b-5c69-40f4-8958-4dc87fbd18f1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d9477d1a-fa0b-4d74-bd01-1f9c384024b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df24c17-edb8-422c-8ca9-25440659d3d4",
        "cursor": {
          "ref": "2813820a-2a35-483c-bc33-3885fcd6cecc",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "95e4a0f3-7af0-4a39-a6e4-752082e4af0d"
        },
        "item": {
          "id": "6df24c17-edb8-422c-8ca9-25440659d3d4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "17662e70-fd94-4c8f-bacf-aba0ea3895e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8592e5f5-f4c1-4b1a-8c72-277e44ebfcd5",
        "cursor": {
          "ref": "d12482a8-5b8c-4ee1-b9ae-0fe55aa4f478",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a3ab5e3e-59ef-484c-8645-b13147eda0bb"
        },
        "item": {
          "id": "8592e5f5-f4c1-4b1a-8c72-277e44ebfcd5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "51fb5f40-356f-43ce-be66-41a16682a1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820c4304-28dc-410a-afd5-e37a378c08d6",
        "cursor": {
          "ref": "45d7a9c4-d59c-4f53-8f18-9c4200700f86",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "db995b76-97d1-4c16-9912-bce0685b149e"
        },
        "item": {
          "id": "820c4304-28dc-410a-afd5-e37a378c08d6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1ec0f692-a181-4993-a57b-1381211fbd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a582fb-33fb-4331-8325-48cc3b9879af",
        "cursor": {
          "ref": "6da3ff8a-5939-4405-8a36-5533c75ae32b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "621abd83-549a-4098-88c4-da660d6776a2"
        },
        "item": {
          "id": "c1a582fb-33fb-4331-8325-48cc3b9879af",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0ffd8325-a9f3-480b-9627-833d97c3176b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2899f7-9dc3-444e-a23a-2090e918f5e5",
        "cursor": {
          "ref": "57cca013-e3a5-4032-8ab0-b4a55de787ee",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ea2203ec-5392-47cc-ae32-29b62f7442b9"
        },
        "item": {
          "id": "0d2899f7-9dc3-444e-a23a-2090e918f5e5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "43ace8a9-1c28-494d-a3fb-1e37923f961e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3581679-3fab-4d87-bebb-6d7ab1c340b9",
        "cursor": {
          "ref": "f76a74cb-7b4f-4421-b010-edbbc4a005fa",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6d4c5d9e-0923-4f5e-b2a9-202c70a5fb4e"
        },
        "item": {
          "id": "a3581679-3fab-4d87-bebb-6d7ab1c340b9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d4639e3e-c962-413c-9d8d-d38bf089062f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cade0a61-9883-4bb8-9069-5ae1b8dbf7d7",
        "cursor": {
          "ref": "a71d7925-ba69-483c-8c42-4d58319869a4",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "938acd7a-f7e1-48aa-bd95-855320bab70d"
        },
        "item": {
          "id": "cade0a61-9883-4bb8-9069-5ae1b8dbf7d7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "32e26c52-7df5-4c42-b86a-a2f9632c33ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ceca30-ee6b-453c-970f-2f4524d06fbf",
        "cursor": {
          "ref": "9ccceb8f-e42d-47c5-9b14-c95740e42265",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e1740813-3140-400b-8e25-8acab63eb4e2"
        },
        "item": {
          "id": "06ceca30-ee6b-453c-970f-2f4524d06fbf",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "83d60c00-585c-4c1c-ba78-ee910ab3b369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c4a2bd-9ea1-418e-be7a-630b9e57103c",
        "cursor": {
          "ref": "0a70aaf9-5586-4a84-bc08-7aa5b9a0c8c1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "35b827cf-003d-49ff-8aaa-ab25f658be41"
        },
        "item": {
          "id": "49c4a2bd-9ea1-418e-be7a-630b9e57103c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "01e7e256-140a-4956-8a9c-69ae25446e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fc0905-b25b-4c52-8ac8-aa13cad8f4df",
        "cursor": {
          "ref": "22eb06e3-59e5-4c21-9a35-7e79a10553ba",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2540b851-fe06-4077-bd85-dcb5b2c46f50"
        },
        "item": {
          "id": "d1fc0905-b25b-4c52-8ac8-aa13cad8f4df",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "807fa97c-c042-4706-88a6-939d10157ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c5c76e-5d24-417b-be3e-e10289926a39",
        "cursor": {
          "ref": "adc0819c-6e48-44c8-878f-986dc7d22eb0",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "89d94680-88ac-471b-933a-ba820bdc308b"
        },
        "item": {
          "id": "06c5c76e-5d24-417b-be3e-e10289926a39",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d0f8de78-44c1-4b53-94e0-0d5c3655f702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731b82a0-1193-4587-803e-05bf9c350612",
        "cursor": {
          "ref": "db34ab0a-cdee-4810-91bd-f1079c74c2b1",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "42bec4b7-e0b0-47a7-ba76-f1ac2229e396"
        },
        "item": {
          "id": "731b82a0-1193-4587-803e-05bf9c350612",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dabee116-5179-47bf-bae3-de40c1f11556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12aea36-8552-426a-913d-492441a42153",
        "cursor": {
          "ref": "f39fced0-ed01-444e-85de-3411a8f264f0",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6d7f3869-20c1-4670-8688-3cc5f52bb89b"
        },
        "item": {
          "id": "c12aea36-8552-426a-913d-492441a42153",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "34e5a3bb-7ec7-4735-8bc4-b9da29b68d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363e3397-ae4a-40a0-9261-84761774e1bc",
        "cursor": {
          "ref": "896dd056-71a8-41f0-a173-6012cca0b719",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c6625b4a-fa72-4451-bffc-69bae703cd9b"
        },
        "item": {
          "id": "363e3397-ae4a-40a0-9261-84761774e1bc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6efe6daf-10f1-43b1-820e-d35efd13fa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dc66d6-422f-46fe-8743-a46d69b017a1",
        "cursor": {
          "ref": "1b36ce5d-117f-46ac-8d30-0469d1e9a717",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c5b150c5-d6c6-48e8-82a7-f3a3b8f91dc5"
        },
        "item": {
          "id": "90dc66d6-422f-46fe-8743-a46d69b017a1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bb236eba-1124-4112-a20b-292cc56fbd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daf591c-dc1f-403e-bc79-e4a28cf1e1c2",
        "cursor": {
          "ref": "0d04f9ae-7ff7-4514-a4c7-ae719e5b68bc",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7da095cc-95b2-406a-b15e-32c267062df1"
        },
        "item": {
          "id": "4daf591c-dc1f-403e-bc79-e4a28cf1e1c2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "99e208e6-5460-491b-9a76-427823d2f40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab434ab-e233-4833-a99a-4c00d7ad8fa4",
        "cursor": {
          "ref": "ce63439b-b0b9-404d-a0c5-65dc9a266ff7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b433de3c-b069-4dc8-9621-881c7aa90f32"
        },
        "item": {
          "id": "9ab434ab-e233-4833-a99a-4c00d7ad8fa4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "64ca338e-47eb-4db8-a6eb-6e324f3e2072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65369f1d-8e66-4ef9-ae57-52ca58b6ea5c",
        "cursor": {
          "ref": "966a5afb-63d2-4ddd-bc39-660d72c54717",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "856a6c77-25f1-4c52-aa88-9d0f346321ed"
        },
        "item": {
          "id": "65369f1d-8e66-4ef9-ae57-52ca58b6ea5c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "78d68603-acba-4cd4-9538-454b5ba52574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a565623-61b8-4129-9f8c-7c549d556d10",
        "cursor": {
          "ref": "a42f8eb2-00d3-4f3c-bb24-1c778ecc9e3e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "305a17c6-1f75-4a17-ad81-53c09c6fd9e0"
        },
        "item": {
          "id": "8a565623-61b8-4129-9f8c-7c549d556d10",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "57e2cbdb-ee88-4698-874a-340d76207e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333ade6e-3587-4d82-9028-d668a1940600",
        "cursor": {
          "ref": "4517275d-cd6e-436e-bb9e-1230b4b12e03",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f651673f-4d57-4aec-8f5a-4ae5ff8da06e"
        },
        "item": {
          "id": "333ade6e-3587-4d82-9028-d668a1940600",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "218f762a-4169-42ac-8346-cac3c4c4c5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affe6c36-dbe1-4019-b26a-797655fcbdf9",
        "cursor": {
          "ref": "d1f0528b-2c06-4e67-baf1-306f8e0ea6fb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d1de9c7f-98d0-4185-a13e-3d38df1f1f32"
        },
        "item": {
          "id": "affe6c36-dbe1-4019-b26a-797655fcbdf9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ee9902ff-d61e-4c4e-af71-3be8bbd1e324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4322bc-1e3f-4b0a-ac8a-22e9ffadae2c",
        "cursor": {
          "ref": "1cd75e3b-419d-44a8-ac91-b2a5119f3a98",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "20bde6a1-684d-4161-9338-a2679a519490"
        },
        "item": {
          "id": "ed4322bc-1e3f-4b0a-ac8a-22e9ffadae2c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0dba7bce-d44b-414b-a9d1-e06d83e2d55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9315d7a5-f4e5-405d-9785-f66e049c0f4b",
        "cursor": {
          "ref": "6cfb4cd6-b393-4c4e-b0b4-c781e35a89f2",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fe48f152-bf51-4163-bba1-df7369288dc9"
        },
        "item": {
          "id": "9315d7a5-f4e5-405d-9785-f66e049c0f4b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fb038673-f23c-4a02-80e0-102350c70fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c1c072-14cf-4a39-b2ae-649499a78661",
        "cursor": {
          "ref": "dc9d7111-b425-4523-8702-ec0098300c31",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e5ee1042-9fdd-40c2-9820-1877dbfa181d"
        },
        "item": {
          "id": "10c1c072-14cf-4a39-b2ae-649499a78661",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e8e5d81e-a6a2-4621-8cc9-169700bbc7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eceb3607-3d93-438b-ad47-a27992ddf986",
        "cursor": {
          "ref": "ae8a9432-9146-4236-b39f-a87d10749e86",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e6832329-72d1-47bc-bde6-65fce74f533e"
        },
        "item": {
          "id": "eceb3607-3d93-438b-ad47-a27992ddf986",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "93ad3d8d-02ac-43bf-b9e5-b8db1dabffe3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fafb02e-d7fd-40bb-8d6f-1cc6f37e6fcd",
        "cursor": {
          "ref": "f3ffa716-9286-4959-b6a8-0833669018cf",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4ca67c9a-b301-4267-b220-3f0b78b6a5e5"
        },
        "item": {
          "id": "0fafb02e-d7fd-40bb-8d6f-1cc6f37e6fcd",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8de7dfa0-f994-4b32-ba9e-8664489ad03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "87b62922-0fff-42b4-8458-b89589f011f4",
        "cursor": {
          "ref": "950b835e-ca11-4c50-b6a0-8ea12c837b43",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e53a18f2-fd3b-451b-9a56-14eeee1e1b88"
        },
        "item": {
          "id": "87b62922-0fff-42b4-8458-b89589f011f4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c7c7cd52-5c11-4077-8282-c0374b33daeb",
          "status": "Created",
          "code": 201,
          "responseTime": 6768,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e3c53e-1c0f-4fca-80c0-2409fae10c4b",
        "cursor": {
          "ref": "a6d12e50-27cf-4b25-a2b6-f59f4b2b8843",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "04924d3e-6a16-477b-aad0-bb4f1659b440"
        },
        "item": {
          "id": "46e3c53e-1c0f-4fca-80c0-2409fae10c4b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7922881d-53c9-4fbc-a9cc-b009fb6c0b85",
          "status": "Created",
          "code": 201,
          "responseTime": 5964,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfd9e87-8674-4c87-b75d-21766277c6ee",
        "cursor": {
          "ref": "cd232dfb-f259-4731-ba9b-c87cfd586a51",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "700088f9-cea3-41be-a00e-850aaafaac8b"
        },
        "item": {
          "id": "5bfd9e87-8674-4c87-b75d-21766277c6ee",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "971d94e5-f91a-4cd6-a129-8e64788f04dc",
          "status": "Created",
          "code": 201,
          "responseTime": 6365,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ea5734-1ca9-43b2-94a4-b5a3f4173334",
        "cursor": {
          "ref": "5f9ba801-bddc-4a80-9d04-db1faf90e0d1",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fd4555f9-a7b7-47a2-a591-f36d1ba9755d"
        },
        "item": {
          "id": "23ea5734-1ca9-43b2-94a4-b5a3f4173334",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "725b350a-f5ab-4631-bc5b-d6a14bee9db0",
          "status": "Created",
          "code": 201,
          "responseTime": 6142,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "74661b70-3d68-4e0e-91b3-2a513e019b6c",
        "cursor": {
          "ref": "98a7e7fc-bf9e-48f4-90bf-d78d6f3b9cef",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ec6dddf6-2106-4be3-a775-d2b61eb5b57d"
        },
        "item": {
          "id": "74661b70-3d68-4e0e-91b3-2a513e019b6c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0fff303b-2209-4e11-a16a-ce097071770c",
          "status": "Created",
          "code": 201,
          "responseTime": 6530,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-10T00:40:26Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-10T00:40:26Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "17cc8372-b550-4ab7-adbf-36c4532c4003",
        "cursor": {
          "ref": "2ceb19a7-9b2b-4eba-b48b-46b530533b8d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b9c2d2b1-d1db-481e-bcce-956f0743ab42"
        },
        "item": {
          "id": "17cc8372-b550-4ab7-adbf-36c4532c4003",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "169734e7-9b79-4d4e-bffa-a824bd4304e2",
          "status": "Created",
          "code": 201,
          "responseTime": 5730,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427b2a51-2a41-4c5a-a0d5-34ae3e1c7702",
        "cursor": {
          "ref": "5a59ac8b-64b8-4098-8dd0-1560c00bf6f0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2b79d395-aa22-4dec-afc3-b34f489ae76e"
        },
        "item": {
          "id": "427b2a51-2a41-4c5a-a0d5-34ae3e1c7702",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e00a39fe-3d7c-4c34-884f-86eaa0002d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd134cf9-263a-4bfb-bb44-fdc8135bf191",
        "cursor": {
          "ref": "a17d9bae-778f-462c-9fac-12a061172c3e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ac041cd9-2c0d-45c1-aa9f-73d7db8febc1"
        },
        "item": {
          "id": "bd134cf9-263a-4bfb-bb44-fdc8135bf191",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "04c2e6bc-6e46-48d5-955d-d8d013fc5e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dd47dc-9085-4689-a913-bcd14c3cc592",
        "cursor": {
          "ref": "fb2f9e5e-09dd-4d65-8b89-805477bb4f42",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c987f51b-ee1e-4d35-8c4a-7b3e1f567f1c"
        },
        "item": {
          "id": "62dd47dc-9085-4689-a913-bcd14c3cc592",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d4c308ab-ba8c-4093-81d3-2cd79066c658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad3e816-a7cd-457f-996e-11aafe7968c1",
        "cursor": {
          "ref": "b5646604-1fd8-42ee-8aa4-23f0a1d56f31",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b67fdf1e-55cf-4df0-9fd2-703415dcbd7f"
        },
        "item": {
          "id": "1ad3e816-a7cd-457f-996e-11aafe7968c1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "67f0aae3-c70f-4456-9421-cbd89b1f68d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac575052-e26d-4061-9ccc-7e8290432664",
        "cursor": {
          "ref": "894ba43e-c492-4527-824f-9513406b322a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b991f233-87fc-4a77-88df-639fc6a6dd5a"
        },
        "item": {
          "id": "ac575052-e26d-4061-9ccc-7e8290432664",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9e52cc0c-eeaa-45c3-b05d-d9b852c52e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b97d00-f4e3-4fdc-9d06-f7fd1f72c514",
        "cursor": {
          "ref": "7177eff1-6062-42d4-a0e8-53c17a1f4f1b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0c676b61-6125-4131-aacf-72b374e483b7"
        },
        "item": {
          "id": "c3b97d00-f4e3-4fdc-9d06-f7fd1f72c514",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fa63f816-140f-4b64-ace3-daed191c008e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651cd895-8e81-44f7-b50d-af895fded25a",
        "cursor": {
          "ref": "011a4316-ebe0-4540-a99e-cc42a03709af",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9b766013-0d06-4c85-9dc4-62c08b1cddba"
        },
        "item": {
          "id": "651cd895-8e81-44f7-b50d-af895fded25a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c163265c-f1af-4144-a0a1-da1010fe63b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993343b2-da38-4090-bddd-e825a509a5ed",
        "cursor": {
          "ref": "e8499cfc-5549-4230-98f4-e9b99512d20c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "345f40be-4aa6-4425-b666-99f793610af0"
        },
        "item": {
          "id": "993343b2-da38-4090-bddd-e825a509a5ed",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "951d5846-c5c8-4e24-8602-d3eadd79741c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a6332d-c317-476f-a163-d61ea4345491",
        "cursor": {
          "ref": "3e9eb8d4-ac59-45ed-b905-a726d20eeccf",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6e628a4f-246e-4007-a87d-4a1a92450b2a"
        },
        "item": {
          "id": "38a6332d-c317-476f-a163-d61ea4345491",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a897d1ad-f5d7-4bea-aff2-5778d948e047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dde65c3-e9c4-44e6-a3f3-d0b6c80b7a89",
        "cursor": {
          "ref": "95ba624a-6e6d-4589-b17a-d3f6c62dd89b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1c03ace2-31a2-4627-8213-6ee466ba6040"
        },
        "item": {
          "id": "4dde65c3-e9c4-44e6-a3f3-d0b6c80b7a89",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3c7642be-bb27-4dd5-b793-f297c72dee5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef11492d-1b83-4a54-8f15-61f119e078ba",
        "cursor": {
          "ref": "48d29e69-efd3-4f13-8f7d-8e6c129050a6",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "127cc121-625c-4ab0-82c1-3d81df016b72"
        },
        "item": {
          "id": "ef11492d-1b83-4a54-8f15-61f119e078ba",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e4ecc319-c2e7-4231-99b7-4a1a965ffe10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc005a6e-f959-4f38-83e7-1101277cdbf0",
        "cursor": {
          "ref": "4e63615c-2348-48e3-9f0f-e844a9cfc38b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0bb3c1d6-af83-488d-91ff-3636b6e157bc"
        },
        "item": {
          "id": "fc005a6e-f959-4f38-83e7-1101277cdbf0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eacc3b94-92e8-4935-ae0a-583e1e096ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69489842-41f3-49e0-ac29-68c20c3259e3",
        "cursor": {
          "ref": "dd4b5db1-114f-4825-9e76-a9355d445ef6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f935b984-ee4f-4c9c-9632-f874604e8207"
        },
        "item": {
          "id": "69489842-41f3-49e0-ac29-68c20c3259e3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0149f24c-e605-4b5a-8c81-267296f7930a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6bcc9a-2115-4a46-b2cc-5544fe1be346",
        "cursor": {
          "ref": "8b24321d-7693-44bc-b00e-cc0973f62e34",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a296adf8-300b-47ef-873b-47deb2da8a18"
        },
        "item": {
          "id": "5c6bcc9a-2115-4a46-b2cc-5544fe1be346",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "30541629-5e10-4c32-9343-be1dce0ebce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4adc60-db32-4abf-8e8f-599aaca6ea7f",
        "cursor": {
          "ref": "650e6913-a19c-4e89-bc48-ccfa1d4ddf8a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7dee9f18-38a2-48f6-b8f7-d34e42de4f56"
        },
        "item": {
          "id": "bd4adc60-db32-4abf-8e8f-599aaca6ea7f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "37d1a2f6-acd8-4e58-8fb2-247786ca7f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0e6d33-23dc-44c5-b705-faf6aa5018b2",
        "cursor": {
          "ref": "308701dd-d176-4104-a574-abf5b6b24245",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "350a7d58-cb72-4ace-b588-337abae25aaa"
        },
        "item": {
          "id": "bd0e6d33-23dc-44c5-b705-faf6aa5018b2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "49047af9-1c39-4b5b-9efa-3652629a4f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a871612-45a2-43ac-b90c-ad7605661350",
        "cursor": {
          "ref": "54d941b5-473b-4cc6-bcb5-95074ac26684",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "439d7a3e-b31b-4249-9586-42c1c13cb124"
        },
        "item": {
          "id": "1a871612-45a2-43ac-b90c-ad7605661350",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6de2f321-1815-4880-aa6f-7ec454615e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f3727f-64f2-4284-a5f2-bcc6f620aefb",
        "cursor": {
          "ref": "69a97737-a3c3-429e-9cbc-ad53f657edf8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e9275842-d97e-4d9b-8493-1254781cc45f"
        },
        "item": {
          "id": "69f3727f-64f2-4284-a5f2-bcc6f620aefb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "10101856-d0b8-49ed-9234-4003c01d6db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527e134b-f667-4b2f-959b-289ddef32b74",
        "cursor": {
          "ref": "a62d4acd-2822-45eb-96e1-fe39edea3612",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f6beebca-a292-4d63-846a-a245a362c761"
        },
        "item": {
          "id": "527e134b-f667-4b2f-959b-289ddef32b74",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "28d222a6-f512-4268-95cf-21087f17ed26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2057ab-745f-4b94-8de0-4828cf794661",
        "cursor": {
          "ref": "ba4d2ef3-1b9c-4109-979a-827a8d2ff9df",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "17ef5286-34c3-4e35-9077-2621dc3b884e"
        },
        "item": {
          "id": "7e2057ab-745f-4b94-8de0-4828cf794661",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cc849f9d-a929-4388-9ab8-a5fef3c90830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ca038e-ab2d-4d69-b476-3e44ff73d119",
        "cursor": {
          "ref": "92eb6160-25fa-4352-8680-2a85b65e404b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0a89f39f-afca-4812-892f-49dce975dd39"
        },
        "item": {
          "id": "22ca038e-ab2d-4d69-b476-3e44ff73d119",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c2ffd570-d322-4787-a9c0-946d2cc31b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4c2b42-fc19-475d-90b8-7c894837cf31",
        "cursor": {
          "ref": "0837bb16-9d8b-4106-acfa-263915b69b53",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0c5f16eb-2b5c-4d4c-bccf-dd71dc5f7ae6"
        },
        "item": {
          "id": "0b4c2b42-fc19-475d-90b8-7c894837cf31",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3ff512b9-1a85-4059-a626-0e7c15f16a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f2ea6e-9aa7-4fdc-a2f1-7ab1bd9c86d7",
        "cursor": {
          "ref": "cd96ecef-a23e-45fa-bbbf-bb85c9959ff4",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "16846168-ea20-4b7b-87f6-bcef51340bd9"
        },
        "item": {
          "id": "b1f2ea6e-9aa7-4fdc-a2f1-7ab1bd9c86d7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bee359bf-6a0c-4b88-91cd-0d88ef43b237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c3b97c-7fcb-4c3c-91d5-86fd6f12470f",
        "cursor": {
          "ref": "1caf7c03-30d6-42c6-859b-00b6ba78ecc5",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "897b2077-bf76-434e-b352-8063085f32af"
        },
        "item": {
          "id": "b0c3b97c-7fcb-4c3c-91d5-86fd6f12470f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4e973f19-19be-489d-a232-b8acdf6f25ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08af678-b838-4958-8a8e-5c21b23e2e98",
        "cursor": {
          "ref": "b90f237f-f98f-4d63-981f-dc2ba41b5e56",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dbdb23f2-4741-4591-aa78-774730583e66"
        },
        "item": {
          "id": "e08af678-b838-4958-8a8e-5c21b23e2e98",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "26d79965-f59d-4d47-919a-9f7da1137b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96c9589-21a6-4141-8d7b-ab20db88546f",
        "cursor": {
          "ref": "2a84a3f5-5342-4635-a79b-4df56e23053f",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "65b5bb4e-b3f6-4447-8dfe-7dd87361e1ba"
        },
        "item": {
          "id": "b96c9589-21a6-4141-8d7b-ab20db88546f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "61f6d4f8-2061-4144-ab28-08c2288b11bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e7ff5d-577e-46ed-9e7c-e80c383273b3",
        "cursor": {
          "ref": "f1104499-0f07-4776-b668-4a3eb4ccd488",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3d288925-273a-488a-b7d2-1c68f334b189"
        },
        "item": {
          "id": "20e7ff5d-577e-46ed-9e7c-e80c383273b3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8bbfbd5d-45fe-46d9-babb-4b3229d6ffac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaad3e66-f184-4944-9582-04d72755e8d8",
        "cursor": {
          "ref": "0cb62406-d91a-49b6-bc8f-37a433036d2c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5f3eccde-ad63-48c0-8741-8ba6188e3b6e"
        },
        "item": {
          "id": "eaad3e66-f184-4944-9582-04d72755e8d8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c023dd9e-df63-421d-88d1-1f42772a8340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dae1a19-2b18-4982-8c4c-a87a748c38f3",
        "cursor": {
          "ref": "6e05474f-adfa-45f4-8bdf-eed3191f4123",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dc03cd18-93f8-4bde-a533-c71f6e4bf870"
        },
        "item": {
          "id": "1dae1a19-2b18-4982-8c4c-a87a748c38f3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "71086cc2-df3e-4427-8f32-6f8b95f5e6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dafb81-dbdb-4752-945f-fdd46ae5577b",
        "cursor": {
          "ref": "a1d09b7a-25b9-4afc-a866-42416b0f3af1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "20a6c006-b568-4984-8fb7-14cf003e3942"
        },
        "item": {
          "id": "59dafb81-dbdb-4752-945f-fdd46ae5577b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8d9df1ae-02f7-4913-a071-3311a5a11282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da577ab2-30f3-4661-a021-5589b3c97988",
        "cursor": {
          "ref": "19074580-8179-4cb4-a811-ec5bf439e539",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9ffb06ab-75b6-458c-a5ba-81deff60f57e"
        },
        "item": {
          "id": "da577ab2-30f3-4661-a021-5589b3c97988",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c4e53508-b1c6-42fd-a70a-f9d0a7fc0dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8fc614-e42e-4b98-94d0-27335577c8e4",
        "cursor": {
          "ref": "7c5b7ce7-9688-4218-b6dc-ee8e6a87013a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "96599b8b-f801-4761-b216-f7f8dc40baa0"
        },
        "item": {
          "id": "9a8fc614-e42e-4b98-94d0-27335577c8e4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "42d72f7c-0191-478b-867b-45ebae753840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e156a7-be27-4dd5-ac80-15fd0d3451c7",
        "cursor": {
          "ref": "42b5e9df-92fe-4964-ba02-55af8d4a66a8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "523eedb4-66f6-4566-8ede-f783921a8b4e"
        },
        "item": {
          "id": "77e156a7-be27-4dd5-ac80-15fd0d3451c7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "349a22b8-4203-46e5-bfd9-7ae1ffa9c0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66db5d03-7311-4156-a154-09f507d486b7",
        "cursor": {
          "ref": "be2e2054-fe93-4048-a839-b1bd9fd1bc0c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d90067a6-c243-4a4a-b7fc-c80e83b60910"
        },
        "item": {
          "id": "66db5d03-7311-4156-a154-09f507d486b7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4a4d5958-92b8-4aae-bc4b-141b0914ffb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e3f0fa-ef4a-4066-8631-a7e4aac8a855",
        "cursor": {
          "ref": "87ae195c-58e0-4767-8c3b-e225a2b09b5a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4af89db6-9414-465e-b30c-b14fc58b0c35"
        },
        "item": {
          "id": "f8e3f0fa-ef4a-4066-8631-a7e4aac8a855",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7c898514-8a44-4684-8db5-1e0262d4c40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f56fc82-208d-42e9-9355-e92c938a0d6c",
        "cursor": {
          "ref": "4daf989c-9a7c-4b35-8639-d10b5f964fd2",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "23718f27-9045-4d38-a110-2b3f1f434acc"
        },
        "item": {
          "id": "1f56fc82-208d-42e9-9355-e92c938a0d6c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b11054d5-19ef-4c86-8919-37150253f4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a32dad-9468-487e-b890-1901bfc5b540",
        "cursor": {
          "ref": "a9ae2e7d-514b-4b08-a363-0f67edbdd42e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e67ad305-593e-495b-8fb5-161630e23e94"
        },
        "item": {
          "id": "c7a32dad-9468-487e-b890-1901bfc5b540",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "40e0ecc5-980b-45a3-b627-f9ed8b0e32c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f085248-be28-4864-9126-3186c23ddce9",
        "cursor": {
          "ref": "b5a9638f-d52a-4f0c-9efa-5f0ea3775f91",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f2b8a6a3-789e-4395-bbda-7d8be03d5988"
        },
        "item": {
          "id": "7f085248-be28-4864-9126-3186c23ddce9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "178456b1-b534-4ce9-9aea-d6be4ea25ab4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211337a4-e7fe-4831-98f8-9a4346ec51cd",
        "cursor": {
          "ref": "273034ef-5bf4-4c0d-ab44-90539ee93885",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4325db97-c10b-4ec0-809c-65162b18cff4"
        },
        "item": {
          "id": "211337a4-e7fe-4831-98f8-9a4346ec51cd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e06e9cc3-8727-4125-a455-0af1fa554c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d53f65-0743-401c-b1e0-d5084f06c704",
        "cursor": {
          "ref": "a641b9af-2170-4589-a9b3-c8128ebf98da",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "09173203-c444-4b3f-b97a-7ea8edd973cb"
        },
        "item": {
          "id": "68d53f65-0743-401c-b1e0-d5084f06c704",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "38d20a10-c48b-415a-913f-8e8be72438dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2b7a35-89c2-4ca9-ab68-89a1ac973af8",
        "cursor": {
          "ref": "8bc4141a-7670-4fbc-8367-7f6aded2afa7",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2d62a800-451f-4a51-83b3-0702ade9883b"
        },
        "item": {
          "id": "7c2b7a35-89c2-4ca9-ab68-89a1ac973af8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "582be985-e892-476b-99d4-de082e8c0fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a19357-2f9e-4a0a-b60a-38c22cc49362",
        "cursor": {
          "ref": "345dbe59-93b6-45f1-9048-36ad38f49ee7",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "07c789e1-079c-4699-a1f4-95d92f452806"
        },
        "item": {
          "id": "21a19357-2f9e-4a0a-b60a-38c22cc49362",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ca2d565b-9bd4-4aca-a72b-d5221a30445f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7772b217-d5d5-4878-94e4-a76ee74757cb",
        "cursor": {
          "ref": "7ce9eaec-7e7e-401e-bfb2-027ddf9ff36f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1d181f4a-92b9-431d-872d-1863dea913b7"
        },
        "item": {
          "id": "7772b217-d5d5-4878-94e4-a76ee74757cb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "64a4d961-6a6c-4d24-9cd9-a8460186490b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3b4fcc-5d92-4eb6-9c9c-be8f10d42499",
        "cursor": {
          "ref": "0deb89bb-a92e-457f-945c-126951817cc4",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "51ce6a22-71af-4855-b2e6-90313ab1f6e2"
        },
        "item": {
          "id": "7d3b4fcc-5d92-4eb6-9c9c-be8f10d42499",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2d9c6878-25cd-44ed-8d54-536e7808fea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663de69f-9585-45f8-b529-58d19fd8d5af",
        "cursor": {
          "ref": "886e1fc8-44c3-4b28-97ae-a965d9d04557",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e041d113-ee60-41a5-b935-c9feda36ac63"
        },
        "item": {
          "id": "663de69f-9585-45f8-b529-58d19fd8d5af",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ffe0bce8-c26e-4c2b-8fad-8e64bc06ce2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e505ce-95ff-4da9-aa02-3e6e99e3a941",
        "cursor": {
          "ref": "34d20e51-dd37-457a-94a8-e28f3d51986d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8251f8bd-f561-42d0-8f3e-ff4383bf8b22"
        },
        "item": {
          "id": "d7e505ce-95ff-4da9-aa02-3e6e99e3a941",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a13ab495-2ef6-4c44-808a-9e864bbe088b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b436ac7-e03c-4ed6-a17d-002a78e99f8f",
        "cursor": {
          "ref": "ad157222-4646-4c5d-8dc1-4bcf99247f16",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a464271b-f81c-4566-9ca1-7ac543b196f8"
        },
        "item": {
          "id": "5b436ac7-e03c-4ed6-a17d-002a78e99f8f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0920c138-323d-4531-96d9-0f920deaa0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f407d719-80cd-4c33-b210-2e85555bee0e",
        "cursor": {
          "ref": "8ceffce4-b97a-4b79-b05c-4a417521b58b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bd50f17a-8b30-4280-ba40-62e39d0f9a02"
        },
        "item": {
          "id": "f407d719-80cd-4c33-b210-2e85555bee0e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "12f6f400-0d58-45c5-a1cb-20edcecd2eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b727ae60-9678-4181-a5df-6add74bf11a2",
        "cursor": {
          "ref": "87951baf-ed94-4505-8429-87bc38efaf34",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3675293c-8fc3-4ffb-8824-513d14043974"
        },
        "item": {
          "id": "b727ae60-9678-4181-a5df-6add74bf11a2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8a91599a-dffb-48c8-92d2-ff9a831d6da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca70cd0-966e-466b-8c5a-cfaf82b21ff0",
        "cursor": {
          "ref": "75352e16-babd-47fc-b061-dc80d7cd94da",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "791b5e27-fd5d-4474-b42d-849ad0f92d8a"
        },
        "item": {
          "id": "5ca70cd0-966e-466b-8c5a-cfaf82b21ff0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cb99b296-8ec3-446d-ac75-69392d26752d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccbab93-f667-4f1e-b82c-d95a2865c473",
        "cursor": {
          "ref": "0775b102-d934-4949-be56-8f8ede43efc8",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9895429d-64cc-4c40-bf26-fa47a5d84684"
        },
        "item": {
          "id": "0ccbab93-f667-4f1e-b82c-d95a2865c473",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ad4b51cc-03dc-42d8-94c2-16edc552a5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff205c6-6843-4098-bf1b-3e892a77d7ca",
        "cursor": {
          "ref": "b390bbc4-913f-4f29-adf0-eca8e5b5dd2a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "65d9fd2b-b1bf-4d23-aeab-557122cef20a"
        },
        "item": {
          "id": "eff205c6-6843-4098-bf1b-3e892a77d7ca",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cc001cdf-7c26-4575-90b5-fe8ba7c1a43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8179f7d-255e-46ed-baf5-d8e25cd8a97b",
        "cursor": {
          "ref": "99083ccb-02b5-44c8-ae33-93ae196fd545",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "85612968-791a-4749-9f8d-9241d5d8b6cb"
        },
        "item": {
          "id": "c8179f7d-255e-46ed-baf5-d8e25cd8a97b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9717518a-9c78-4abc-8361-f814870eb10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f73c1d-d42a-4279-bd80-31e30d09fdf3",
        "cursor": {
          "ref": "c5829cf9-58d6-4347-830a-231bdcf270c4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "926165c7-4b2e-4678-831d-f004b0607e1a"
        },
        "item": {
          "id": "48f73c1d-d42a-4279-bd80-31e30d09fdf3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c6a404ef-962c-45a6-89e6-453d639020c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00482e8c-3264-47ca-a102-31850dfbcd17",
        "cursor": {
          "ref": "bcb82d44-56ea-4f29-8a55-e79858e87d26",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a1c3c56a-656f-46e5-8916-3ce3502f27f7"
        },
        "item": {
          "id": "00482e8c-3264-47ca-a102-31850dfbcd17",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d4d44e53-c5c8-415e-90ce-73760bb90165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aacbaa8-713e-4da8-9858-11ed5306b769",
        "cursor": {
          "ref": "f96ccac3-27ae-4f89-bdef-cfeb5559a807",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "839875ce-8465-4948-ad85-f59b5d705abd"
        },
        "item": {
          "id": "6aacbaa8-713e-4da8-9858-11ed5306b769",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b60d59e0-7c74-4cf9-b661-77080ee6185f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb1356b-f0dc-43c1-9d93-8f794d7479b1",
        "cursor": {
          "ref": "42cab569-0a4e-4696-965a-44761a0b2a25",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ec0d98bc-02d8-494f-b7a2-20a802920227"
        },
        "item": {
          "id": "1cb1356b-f0dc-43c1-9d93-8f794d7479b1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6d200809-4213-4b38-9a05-c26531260d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64df478c-86b9-4d18-81d1-2d678092fece",
        "cursor": {
          "ref": "c11716fa-42a1-4169-9322-713607069cc3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1ceec2f2-a30a-47e4-8e03-33e106c7921c"
        },
        "item": {
          "id": "64df478c-86b9-4d18-81d1-2d678092fece",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6838db10-76cd-42d7-aae7-688cfd712701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c1ff03-289f-4937-96f7-44cb3342bd99",
        "cursor": {
          "ref": "f77cb35c-185e-476e-99a6-bf229f8b0f4d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "beb8f7bd-122e-4ae6-b8fe-7cff360ca8ca"
        },
        "item": {
          "id": "f2c1ff03-289f-4937-96f7-44cb3342bd99",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7bf24bb4-47c6-4017-a1a7-e09cae53e47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99872f00-473f-49c2-a3d8-a1acbaab572f",
        "cursor": {
          "ref": "4a1c5a29-5037-4eb5-9a4c-eda343fc99ca",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7ff7b5aa-5632-4b57-9f2a-ad3b50dc9702"
        },
        "item": {
          "id": "99872f00-473f-49c2-a3d8-a1acbaab572f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7bc8bbc2-664e-4140-9378-32f0b70cfbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6741222f-8608-4a01-abd8-5049a13df081",
        "cursor": {
          "ref": "e43a38c3-7dd0-4beb-be92-6c97563996a8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bf68ad16-6465-4a1a-bdcd-d11d3a3319d3"
        },
        "item": {
          "id": "6741222f-8608-4a01-abd8-5049a13df081",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8112f8a5-32d0-4a84-95d8-95ceab859313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61db933e-0b81-45a9-9e4a-1264d43cb89d",
        "cursor": {
          "ref": "ed26c3b0-27f7-4a51-bf94-64ca4e95847d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dd797f24-2415-4451-9089-90f4f9ad3941"
        },
        "item": {
          "id": "61db933e-0b81-45a9-9e4a-1264d43cb89d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0284d561-f630-440a-a348-7876b66ab1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b8843d-060c-426b-9a78-87e3b034407c",
        "cursor": {
          "ref": "b831ab37-625c-4539-9c19-cb689f2013e8",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "af8cdb3a-426d-4ddc-8aa4-139bf3dd23d0"
        },
        "item": {
          "id": "59b8843d-060c-426b-9a78-87e3b034407c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a3e78773-cf7a-49d0-a303-e7a8d36791cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c43ae3f-697c-4a72-942e-4848d9d36397",
        "cursor": {
          "ref": "143c1ddb-c8bb-4b43-a554-40dd0f8639a6",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8681a047-1635-42af-93d0-d10bd8c0d7d5"
        },
        "item": {
          "id": "3c43ae3f-697c-4a72-942e-4848d9d36397",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4a06ba91-9870-4d13-96c3-66ee18678681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236e8577-4fbb-41a4-9e60-9af9ab059386",
        "cursor": {
          "ref": "528bda1c-cb1b-4498-8636-6223d3e9270f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6d84e7d3-171b-4e5c-a588-f21991b8c8f1"
        },
        "item": {
          "id": "236e8577-4fbb-41a4-9e60-9af9ab059386",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b68efd1e-43e4-46a2-bf04-bb4d420ae10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fd359e-3159-4cca-a253-b635b673da02",
        "cursor": {
          "ref": "4894165b-ce7b-44f0-b397-73e8908d9600",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "234ea219-25b8-4add-8006-311eb9aa6db6"
        },
        "item": {
          "id": "a7fd359e-3159-4cca-a253-b635b673da02",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f6cd6cf9-d2c1-4630-92e0-44bc6e679e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7a40a5-c393-4475-9543-c95205a7b65b",
        "cursor": {
          "ref": "5d247ef0-e484-432f-8929-d3bf6cbe51cc",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "09376b2e-dac3-4aba-8d14-963893e6e40b"
        },
        "item": {
          "id": "ae7a40a5-c393-4475-9543-c95205a7b65b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5a3a24b5-e32c-4b65-ba59-bf7592cf07f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f5cfa8-ab33-4bcd-8ed2-b944e1796a95",
        "cursor": {
          "ref": "850fc8ed-5844-4b30-90fc-87ebffeba90c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0c2b8385-022e-4113-a7f6-cc9c9f2434a1"
        },
        "item": {
          "id": "02f5cfa8-ab33-4bcd-8ed2-b944e1796a95",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "411829e6-ce47-4ef2-8c66-1e165c0524d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d159d72d-96b6-4dea-a71a-6555a304e9ac",
        "cursor": {
          "ref": "3d25feea-a7ad-4bda-8338-de1dc216ac68",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "75facdb6-0764-4ba7-b4e8-35c64442a5e3"
        },
        "item": {
          "id": "d159d72d-96b6-4dea-a71a-6555a304e9ac",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1950a334-a576-449b-9716-b1328dd0358b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e7586f-c063-447e-a8af-0f9e54b41b7d",
        "cursor": {
          "ref": "585eced5-6519-40b0-a9d6-5222e419a19f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "39408acb-3cfe-4083-8304-b0786e6447a9"
        },
        "item": {
          "id": "b9e7586f-c063-447e-a8af-0f9e54b41b7d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "349dc089-3d7c-4f8b-90d8-844e5de884e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32838e3c-105c-4690-a7ba-08703da04352",
        "cursor": {
          "ref": "672455e9-ad44-4789-8605-ea035a7dd50a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ff2f4f1c-4750-4ba8-8e30-3e9706432595"
        },
        "item": {
          "id": "32838e3c-105c-4690-a7ba-08703da04352",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "726827a8-b8c8-43e7-b2fd-d882852f363e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6e6f3f-3717-4cae-a9ac-16bbac25ecfe",
        "cursor": {
          "ref": "0d644c35-0bd2-4fe0-a2e8-7ed47ac2e5ee",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fa726678-6940-4b7a-add5-c660523c3ac8"
        },
        "item": {
          "id": "cb6e6f3f-3717-4cae-a9ac-16bbac25ecfe",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "59fab9c2-eb12-4358-adf6-a86677f77240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106138ae-03bc-47fd-bfe1-cabb04b2d6d0",
        "cursor": {
          "ref": "eae8ed20-4235-4849-9f85-b8fba2db9b30",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8075e921-8159-400a-b11c-e720569594b6"
        },
        "item": {
          "id": "106138ae-03bc-47fd-bfe1-cabb04b2d6d0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "595a5c26-6c2a-49c0-9aa2-e6ccd41b7934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521773d1-1471-4c04-8285-8e9b7681d066",
        "cursor": {
          "ref": "40a95dde-0808-484e-835d-3e054ab5b9b5",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4442155a-d747-43a5-9786-a4400c398174"
        },
        "item": {
          "id": "521773d1-1471-4c04-8285-8e9b7681d066",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ecd43f9b-d521-465d-bccd-e055cde04c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68a462d-b478-44de-a2a0-b5dc92355835",
        "cursor": {
          "ref": "0dfca397-7950-482a-8eeb-4513c6dfeac3",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8ff75959-97d1-4f5c-8a45-c16ac9b818e8"
        },
        "item": {
          "id": "c68a462d-b478-44de-a2a0-b5dc92355835",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5fe103ad-bb15-4ccf-9286-8c5ebb01d663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1048536a-da9e-406b-bf5d-27fb00f0deb1",
        "cursor": {
          "ref": "b8293549-fe88-4e2c-aed6-bfe0c64fe8fc",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1fe30e58-74cc-4396-af5b-49490c4b26a8"
        },
        "item": {
          "id": "1048536a-da9e-406b-bf5d-27fb00f0deb1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "653972df-7585-41f9-b9b3-236f995879aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c06261-4904-4b8b-9533-bebb07d372f1",
        "cursor": {
          "ref": "d04a5526-aac9-4f0a-8863-74e1d7dd2b79",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5a2779cc-95b4-43de-8474-f9c8ed23b5de"
        },
        "item": {
          "id": "b7c06261-4904-4b8b-9533-bebb07d372f1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c563a0e0-29ab-4c9f-9fe6-b47692b97d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c7a2db-a2f2-4aed-bc59-1f12a0f64b14",
        "cursor": {
          "ref": "e73d3086-4877-41ac-a473-416fc237f5b9",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6c9070e8-1482-455f-bd3d-dd1eeb6f709b"
        },
        "item": {
          "id": "f3c7a2db-a2f2-4aed-bc59-1f12a0f64b14",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3749dd84-eaaa-425b-a06e-be6c09751e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d582b9-6894-4812-b746-a35dadd4ff05",
        "cursor": {
          "ref": "58f8d5b2-ca12-4bf8-ab7d-6259a62eff21",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "56e4213d-d165-4e5b-acae-5b7375047467"
        },
        "item": {
          "id": "a8d582b9-6894-4812-b746-a35dadd4ff05",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b8c8f315-16ae-4dd2-9479-cd0b66b50d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99aa382-caab-411a-96cf-3b1aa89c9648",
        "cursor": {
          "ref": "3b3975db-3323-43f2-864f-237db8509d0c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bad28b02-1ebf-41b5-9bd4-8fa560d452ca"
        },
        "item": {
          "id": "a99aa382-caab-411a-96cf-3b1aa89c9648",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "407aced2-5975-4aec-a518-ef7cb4712fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba65752-9a0f-4d2e-abd2-d031dbbee800",
        "cursor": {
          "ref": "f80e4204-18f4-4bc9-8d56-751090d12d9d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "30030a1a-c0c4-4d09-9ffd-d3573051d7b2"
        },
        "item": {
          "id": "bba65752-9a0f-4d2e-abd2-d031dbbee800",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5c6fd24e-7a82-4430-b133-1fd1c15acec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b176cf7e-e696-4079-a94b-d4e177f09131",
        "cursor": {
          "ref": "8ef74a6f-9248-4edf-ad56-9a20382c98d5",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fe5f2340-7715-4673-8d96-7c2911357e80"
        },
        "item": {
          "id": "b176cf7e-e696-4079-a94b-d4e177f09131",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d09aad0c-17e4-49b6-bd28-6924b059711c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8c855a-e51a-40ea-a19a-365d0b8d9bc6",
        "cursor": {
          "ref": "e4ef4008-eab0-4431-92bc-cbe75e143857",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ee5467e9-decb-4a0f-80c5-93897ead1fdc"
        },
        "item": {
          "id": "9d8c855a-e51a-40ea-a19a-365d0b8d9bc6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1a000fba-e12c-4b15-bd99-c2d3bd66107c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11eb979f-7c53-4a5c-8f3a-a0c53c2de9cd",
        "cursor": {
          "ref": "04517d0f-8c23-4878-8398-df305c553966",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "02394efd-4164-4e5b-b3ea-16dd64101b42"
        },
        "item": {
          "id": "11eb979f-7c53-4a5c-8f3a-a0c53c2de9cd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6bc119fb-9968-45d3-bfa8-6477ab8ce5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e23ba7-9b52-4d47-b9d9-662ad03b65d6",
        "cursor": {
          "ref": "3b2ed1ea-9ef5-432d-a54b-dfe8601a5e50",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "966bee69-0122-4bc6-be3a-4ebdb3cae04d"
        },
        "item": {
          "id": "d8e23ba7-9b52-4d47-b9d9-662ad03b65d6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ef30005d-524e-457b-80ae-2270ea5cbd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c9a336-af8b-442e-9bd3-7675d28bade4",
        "cursor": {
          "ref": "2f28527a-6f10-48f2-8f0c-cf53883ad019",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "04879986-02f8-46ad-80a6-07dc362d917b"
        },
        "item": {
          "id": "64c9a336-af8b-442e-9bd3-7675d28bade4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b22d5fa7-0fb4-4ff7-bf8e-fe1f7a73aed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1658f39f-50c5-4a6a-99bb-747598523dc4",
        "cursor": {
          "ref": "077e715d-bff7-4737-8923-00a5e70c1cd8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "792def92-c09f-4c0d-ae98-5b670b92c986"
        },
        "item": {
          "id": "1658f39f-50c5-4a6a-99bb-747598523dc4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f58e7680-a37f-4fbd-9d21-0b07b0654303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f76454f-722e-440b-b323-62d0be3d9518",
        "cursor": {
          "ref": "d6f43f7e-9213-448b-b008-5219d25819c8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "59a9032d-dbb7-4ee4-a167-702309717c71"
        },
        "item": {
          "id": "5f76454f-722e-440b-b323-62d0be3d9518",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9466c300-e180-4f4d-8b17-bc49c258ad4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44b11af-99ed-416c-9556-1273af5bd6ce",
        "cursor": {
          "ref": "bc218d9b-edb4-422b-bc42-b86ad421638f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d062c605-da59-4be8-87ed-40b630eac2d5"
        },
        "item": {
          "id": "e44b11af-99ed-416c-9556-1273af5bd6ce",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "de8ddcd6-c14e-4a3f-8592-f2e7c2b02cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07087b03-cac9-4d30-8647-104e7cf74116",
        "cursor": {
          "ref": "6c7b2554-0f41-4830-a50a-ae767c01447f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "220436e2-e34a-4c08-a5fe-be4aa8a00dfe"
        },
        "item": {
          "id": "07087b03-cac9-4d30-8647-104e7cf74116",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5bd05c9e-616d-4cb1-89a0-fc123abc48c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ae75e2-d0fc-4427-ba68-92f277070528",
        "cursor": {
          "ref": "b92ea95a-f754-4f24-8bc8-37bd7a3f8b37",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "02b5562b-1da2-4cf0-a902-50de82ef35aa"
        },
        "item": {
          "id": "69ae75e2-d0fc-4427-ba68-92f277070528",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f3a5dc31-e7c0-4894-9080-25bf12ee3040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9409fe69-7d7a-424b-8728-f3e76683d0f7",
        "cursor": {
          "ref": "a649a52e-b36e-482c-a61e-e0db31780a15",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6664d693-b669-4311-ac4b-be85e212a73b"
        },
        "item": {
          "id": "9409fe69-7d7a-424b-8728-f3e76683d0f7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "134470dd-6a34-40d2-8903-7698d3f1e29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad35348-58bc-4e4b-bf3e-d586dcff66af",
        "cursor": {
          "ref": "910ded43-5c79-4a0a-a812-3c72dff65161",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "82cd66a9-0499-4e57-8d31-17dbafac8a56"
        },
        "item": {
          "id": "6ad35348-58bc-4e4b-bf3e-d586dcff66af",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "02ccd62d-9ea9-4322-b7d9-56ccc2653b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787030ce-3206-41f4-b242-0c4855aa678b",
        "cursor": {
          "ref": "d8eac646-73f6-4ba9-83ef-7118af90b4de",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "811a9d80-6327-4a43-b587-98e94142c2f3"
        },
        "item": {
          "id": "787030ce-3206-41f4-b242-0c4855aa678b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1b0bd64b-94c6-4713-a720-44191e5c937b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3a694d-fe21-49fb-ab4e-503407fce088",
        "cursor": {
          "ref": "9d3b5488-2505-4227-9fc8-7cdb81f7cbc0",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a25f5652-2ac5-49ca-8991-13e9ce63c006"
        },
        "item": {
          "id": "9f3a694d-fe21-49fb-ab4e-503407fce088",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d11e2cda-7c5b-45f8-afa5-9fbf73ab9b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4411ac-206a-4a71-905a-5f1862e300bf",
        "cursor": {
          "ref": "2188746b-ef3d-4921-8d0e-4c58fc9027cc",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "23af1d60-b4e9-4401-b52a-38ba6f51a96e"
        },
        "item": {
          "id": "5b4411ac-206a-4a71-905a-5f1862e300bf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ce771416-ca5d-4def-afb1-3f05093b5de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921ad895-4898-49ab-8668-a905a5781e45",
        "cursor": {
          "ref": "fbea59ca-4020-4dfd-b77d-1b42a4bf11b1",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "312718a7-867f-4614-987e-70cf85d3b807"
        },
        "item": {
          "id": "921ad895-4898-49ab-8668-a905a5781e45",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "914c0377-01c2-40b0-a092-97208373f9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae36780-2576-4a91-84d7-c32bdd07ae67",
        "cursor": {
          "ref": "015af1ef-c004-451f-a885-a438e164d714",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a022587b-9ccd-4dce-a64c-1e9f010b63d0"
        },
        "item": {
          "id": "6ae36780-2576-4a91-84d7-c32bdd07ae67",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "14d1641b-30b6-49f5-9456-371c08292e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56366545-1c92-41af-ad8c-050f8ba013f4",
        "cursor": {
          "ref": "ae1a9217-19d5-4529-8435-bb0c9aded229",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a4493970-b81a-41a3-a3f3-fb1e7135c29f"
        },
        "item": {
          "id": "56366545-1c92-41af-ad8c-050f8ba013f4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "12bc00bf-045d-4776-bd24-898287845d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675641ee-1a23-440c-afa0-b977a4283541",
        "cursor": {
          "ref": "21d04eb0-b02e-4f4a-986c-c8b99ebab457",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "99a68d38-81eb-4732-9013-580ca5e581ca"
        },
        "item": {
          "id": "675641ee-1a23-440c-afa0-b977a4283541",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "798d1e32-509f-445a-b423-878b5d6a6be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b90ad6e-a9ca-4890-9926-15f70b3b8691",
        "cursor": {
          "ref": "ef97cd74-11fa-436d-bd5f-5e58c27139e2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fc3fdc3a-55f6-4aa9-979c-83e088c12c65"
        },
        "item": {
          "id": "8b90ad6e-a9ca-4890-9926-15f70b3b8691",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5b985c4c-533f-452d-a015-fbe85a888eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568bec37-46a0-4eba-a0d4-d92f8fea6e42",
        "cursor": {
          "ref": "253f8b3a-203a-48f3-8d09-305d3b100cf3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fb3eadd0-432b-49df-83ba-7b31a79f4c39"
        },
        "item": {
          "id": "568bec37-46a0-4eba-a0d4-d92f8fea6e42",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7d289dfa-12b2-4d9a-b348-6d0ff0910cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06bf7d5-94ea-4ec4-abf6-f6ac859af9f4",
        "cursor": {
          "ref": "79c33742-527c-4965-aaa4-37b4cbc95de5",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ccc755d6-1602-4379-aa61-3a1e3b78e1f6"
        },
        "item": {
          "id": "e06bf7d5-94ea-4ec4-abf6-f6ac859af9f4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bd68b426-bd84-4469-9458-270525428449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5d6a62-b73f-413d-a61a-97a87217377e",
        "cursor": {
          "ref": "9391459f-df9a-4680-8ae3-bbf4ee88359d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ba86d6a6-5b06-4b92-8a20-5786a4ece154"
        },
        "item": {
          "id": "eb5d6a62-b73f-413d-a61a-97a87217377e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7ea1f9eb-eb11-4b96-9e4f-02e471484798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd83751-ebbc-46ee-a0b9-88344918f219",
        "cursor": {
          "ref": "f8625ca2-d999-4a5e-8bad-0f4b07b805a0",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "06b0e189-ef5a-486e-8f7d-f61161310608"
        },
        "item": {
          "id": "7cd83751-ebbc-46ee-a0b9-88344918f219",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2f49773e-ae2e-49f1-8e4b-a7719838a62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cdb469-9ae4-44b8-b532-76ef6ef4ed64",
        "cursor": {
          "ref": "eb2ec4e9-3fd4-489f-9d28-4fdbb31b0b08",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "78ae1c5a-aeb3-4c85-9e38-b2444d495efa"
        },
        "item": {
          "id": "29cdb469-9ae4-44b8-b532-76ef6ef4ed64",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6c57f93e-1012-4827-9235-dbd5d012ca35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9402d5-9e2b-4ace-8edd-4fc3c5fa3960",
        "cursor": {
          "ref": "ba86ddec-6f2d-4117-a13f-0265ed0ec825",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c9e34bbf-0090-4b2b-b2d5-7158e5a0a300"
        },
        "item": {
          "id": "7a9402d5-9e2b-4ace-8edd-4fc3c5fa3960",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "757cc3ca-f3c4-47fb-9a39-aaadf7c47b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c677229b-fe91-45f6-86f0-8608b4c9d9ab",
        "cursor": {
          "ref": "87c0e537-52e8-4a00-b443-851dd807be6f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6f26e9fa-f95a-4f94-adec-896074250191"
        },
        "item": {
          "id": "c677229b-fe91-45f6-86f0-8608b4c9d9ab",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bef21b9d-a3e6-4572-8d24-e6ac9b7eca2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa09735f-41be-46a3-a59b-b1c58c7b2264",
        "cursor": {
          "ref": "08ff6fde-8464-467b-a1a1-fe0cc028851a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "45ca7bf3-a4a4-437b-bc2f-87cc2dd88a10"
        },
        "item": {
          "id": "aa09735f-41be-46a3-a59b-b1c58c7b2264",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1063f2a5-9310-4cb5-a67a-e83952b2a782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdae372-f148-4267-b67f-52b8d388e398",
        "cursor": {
          "ref": "c875c0c4-2d52-4475-a5c0-e503b530e19b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "04435771-049d-4774-927d-607be00413e5"
        },
        "item": {
          "id": "0fdae372-f148-4267-b67f-52b8d388e398",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "102b3a0e-71cc-410e-ae77-9c8c43a54743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c9c82b-9d5d-4157-849c-2a09d0e481e3",
        "cursor": {
          "ref": "83f79d01-d5f8-46ee-9472-673464a6842f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "79579bde-bb30-43b0-8fdb-48b7ddc89168"
        },
        "item": {
          "id": "75c9c82b-9d5d-4157-849c-2a09d0e481e3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d0013beb-c351-4d67-81b2-39d8e810d3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b7b8da-dec6-4aff-9a4c-6a1c8b098a09",
        "cursor": {
          "ref": "dbb9f3c1-cd1c-4b07-b3e2-7c87050c1046",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2f2cfe2e-d608-428b-8243-0b8363a93c5a"
        },
        "item": {
          "id": "d5b7b8da-dec6-4aff-9a4c-6a1c8b098a09",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7da716c4-00a4-41ca-80e0-0b031134047e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a58ca70-a6b3-4e73-bf70-2129edcf1264",
        "cursor": {
          "ref": "e93d8e44-b669-4086-93be-f23f20158548",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5003a79d-6a93-4930-8284-514c401fb629"
        },
        "item": {
          "id": "2a58ca70-a6b3-4e73-bf70-2129edcf1264",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "05d1d7bb-94b3-4614-a506-80b51d99644f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76884802-79d1-4603-8a24-8e0077eace30",
        "cursor": {
          "ref": "d09832ad-2ba0-4938-b708-92bd1466f0e1",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "290e4b66-6488-44d2-878c-345dcabb0411"
        },
        "item": {
          "id": "76884802-79d1-4603-8a24-8e0077eace30",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6f9c154c-4b3c-4f37-9917-a8e832cc43d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8da9c2-4d8b-44c6-bf57-53c728a1c10a",
        "cursor": {
          "ref": "69f5f18d-32c2-48fb-bbde-12fa2ff7248f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6970b713-ebef-4c23-b594-3d5100b36205"
        },
        "item": {
          "id": "7f8da9c2-4d8b-44c6-bf57-53c728a1c10a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2a1f86be-33d2-4449-9296-aa8cc4fac0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d794e933-c076-4e40-aca8-9d5298188a3a",
        "cursor": {
          "ref": "18e70197-cfe2-4f16-9181-95ecd4d0a1ca",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "25dd0b4a-29fb-4e7d-969f-4d374c2b286c"
        },
        "item": {
          "id": "d794e933-c076-4e40-aca8-9d5298188a3a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fe180513-ef15-45c0-bb06-2d9646750643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6239bc-631e-4c7d-9475-bdb80a434704",
        "cursor": {
          "ref": "0f7ddf07-6983-4154-9b22-81ad37860928",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7d72bca1-e5bf-40a3-b811-28ed99a63423"
        },
        "item": {
          "id": "ed6239bc-631e-4c7d-9475-bdb80a434704",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9c9dca0f-587a-4f74-9d65-78303e0f795b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6715621-cb44-44b0-8ab7-e0f7d110295e",
        "cursor": {
          "ref": "d1fe78da-9990-4af2-b022-7c24cd3658b4",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4df80f1b-2f75-4190-baac-e30ab36db329"
        },
        "item": {
          "id": "a6715621-cb44-44b0-8ab7-e0f7d110295e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7b2c8e6f-43dd-4096-9180-81b5cb92c449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f10072-8bde-4139-95af-7799724b7b0e",
        "cursor": {
          "ref": "447b6ec1-05b0-4bb2-875a-99707f158ef9",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6c19ee3d-6c97-460d-b5f0-25b523e909b3"
        },
        "item": {
          "id": "97f10072-8bde-4139-95af-7799724b7b0e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cddf88fc-8f84-4ca3-bd3c-d1e9059e2f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e170546-eb9e-4c49-8421-8eda85a78dab",
        "cursor": {
          "ref": "6acf2717-391d-4085-9413-a52d806c19c0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "94bd60fb-3db2-4007-874b-2620981988c0"
        },
        "item": {
          "id": "7e170546-eb9e-4c49-8421-8eda85a78dab",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2e9aa5ed-2e15-48a9-8e1e-072fe9f02c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2868836-d8da-4f48-9d7d-011cd862971b",
        "cursor": {
          "ref": "03a921ec-5901-4b28-bfdb-80f6f357a450",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b04d1169-6085-44bb-b87c-60bfc23ecc83"
        },
        "item": {
          "id": "c2868836-d8da-4f48-9d7d-011cd862971b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dc5aece9-1560-4545-be3b-16624e4f7a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dead3836-747b-4360-82d0-5c040ff2999f",
        "cursor": {
          "ref": "de242fb2-53ef-4d43-8f87-f1d32ca07cf2",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "352e2e9e-1873-4c87-b524-74af06c279e5"
        },
        "item": {
          "id": "dead3836-747b-4360-82d0-5c040ff2999f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "dad0586b-0834-4f29-b3fd-4bd62b260984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaad1382-b37f-44cf-818e-9f624868ab41",
        "cursor": {
          "ref": "83d291cc-0858-48a5-8e1f-313eed442685",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fa7be041-f541-403f-86bb-49135a246942"
        },
        "item": {
          "id": "eaad1382-b37f-44cf-818e-9f624868ab41",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9b49830b-dd8d-4095-847a-83224caba1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f0d6ec-cd31-4ed8-ba19-861a347ca0ce",
        "cursor": {
          "ref": "a2a5155e-e396-40aa-987c-73f0e0447c02",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "56abbe92-4a44-40f9-851a-52b406230b18"
        },
        "item": {
          "id": "b4f0d6ec-cd31-4ed8-ba19-861a347ca0ce",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ef9a90ba-ae8e-460b-b1ed-563f013f9b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a183e1-df54-44a4-96df-b44f6eac1aa9",
        "cursor": {
          "ref": "c302e1bb-a9fa-4de0-a96e-f67fe1fa92d3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6317d6e4-5f64-4e68-ba5e-bd3a213027c9"
        },
        "item": {
          "id": "48a183e1-df54-44a4-96df-b44f6eac1aa9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5b0eebec-a760-4cb9-8580-8d80040e494a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc525c56-27a4-4f97-9d61-9867d26b7067",
        "cursor": {
          "ref": "552671d3-9637-4c0f-8e42-b52c9b45fa54",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8ec47e81-7607-4c1b-8891-8a86e694bfd4"
        },
        "item": {
          "id": "cc525c56-27a4-4f97-9d61-9867d26b7067",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "da904908-0fc2-4e5c-815e-4eab7d292b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90222fb4-6e3d-457c-9e6d-47196198e31d",
        "cursor": {
          "ref": "a931642d-12ac-4232-be5a-333a96645d48",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "44f7f971-1df9-4d84-9714-646803361550"
        },
        "item": {
          "id": "90222fb4-6e3d-457c-9e6d-47196198e31d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e532477e-fa3e-4a3d-acae-c8b792d3111e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b995882-6c65-46fc-8ef2-c9defae897f6",
        "cursor": {
          "ref": "a012c728-9210-4bbf-9905-0b203b9f9834",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6c332e03-6ac1-4953-9e13-771004bae7b3"
        },
        "item": {
          "id": "1b995882-6c65-46fc-8ef2-c9defae897f6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "db7ad21d-0254-44af-8397-3bc508da58a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85e212a-9a3f-4def-8d9d-bc63af8da9cb",
        "cursor": {
          "ref": "ae807584-72a8-4dde-9596-5434c60544f8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3ecee375-672e-4a18-8c70-08e1f7ea8a4f"
        },
        "item": {
          "id": "a85e212a-9a3f-4def-8d9d-bc63af8da9cb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7ebdb9e5-f88b-48fb-92fa-42ce79e15415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bf4732-6bfa-4552-8dbc-38dbd721c0c3",
        "cursor": {
          "ref": "c1d65eb0-58b1-4127-bc25-5f1f4fa0ddd1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "56704f74-4caa-4185-ac93-485037f7567f"
        },
        "item": {
          "id": "73bf4732-6bfa-4552-8dbc-38dbd721c0c3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e5f525e3-5e20-4c49-b7f5-92d29169583e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a876e815-d17b-48fb-8002-330579807b16",
        "cursor": {
          "ref": "dd7fb21d-625e-4621-bce1-1bb0be97cc5a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b8431c84-4aa7-4e38-b3d6-1089177556d0"
        },
        "item": {
          "id": "a876e815-d17b-48fb-8002-330579807b16",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "43a0e708-afba-4cde-9b26-9d2ff39f7aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9e962c-17f0-4419-b85c-f7ae2d03beb8",
        "cursor": {
          "ref": "50958da0-d887-4bf3-b8f4-df3bf093de36",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9a3342ad-c292-4dec-8a3a-425829b968b3"
        },
        "item": {
          "id": "3d9e962c-17f0-4419-b85c-f7ae2d03beb8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dc04d05f-6d95-4edc-830c-95253319a7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d091ab4d-22e6-498a-9082-629af8015756",
        "cursor": {
          "ref": "1e163ae4-7956-4efc-9144-54d664297c54",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a2029aaf-727c-4947-a5f6-a2b9f5a57deb"
        },
        "item": {
          "id": "d091ab4d-22e6-498a-9082-629af8015756",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4f8553d3-ea71-412d-b0ca-c817afc9e935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96142c36-0713-4a77-a000-2ffa03eee22f",
        "cursor": {
          "ref": "2c5e8d1e-4ba2-46ea-b928-1a388ef000ea",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f2ec3671-de24-4840-8823-ad409d0593a2"
        },
        "item": {
          "id": "96142c36-0713-4a77-a000-2ffa03eee22f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "93c6246b-bd5b-4198-9af5-3958c152fefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5595a053-3ae2-45b6-9ee5-4fa34760249e",
        "cursor": {
          "ref": "ae2f3c4b-bf72-4f4d-96aa-1569a33a354d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8b8d2c25-71bf-4daa-ab79-4cef99f855d0"
        },
        "item": {
          "id": "5595a053-3ae2-45b6-9ee5-4fa34760249e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5da893d9-f993-48c6-8d20-9aa51b67c365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9edafe-6208-4bdb-9a1b-352861625aa8",
        "cursor": {
          "ref": "b228686d-13a1-46f2-93e1-3d9730959ff8",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4437662d-4843-4a39-bc16-9540c2e7acd2"
        },
        "item": {
          "id": "6a9edafe-6208-4bdb-9a1b-352861625aa8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0dc40538-ad6b-42e4-a93b-98cb9cd03676",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98693cde-9864-4fb4-837b-3c23e65cf66e",
        "cursor": {
          "ref": "16b337de-3621-4726-9ac1-c4c9ddb9d9ba",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "354e8dd7-1f4a-4e60-baa3-e5ec944b1ab8"
        },
        "item": {
          "id": "98693cde-9864-4fb4-837b-3c23e65cf66e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f04709b8-5b82-4277-8f33-cd53d88a6519",
          "status": "OK",
          "code": 200,
          "responseTime": 2270,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa951e6a-f73b-408e-bfe8-c259b319712c",
        "cursor": {
          "ref": "63417fdb-79d5-4313-8638-704644f0b55b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "601a7a42-2b84-46f0-b4b0-93aa621ec5a2"
        },
        "item": {
          "id": "fa951e6a-f73b-408e-bfe8-c259b319712c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "91fed325-5f35-45d0-a383-3a9c8051cc74",
          "status": "OK",
          "code": 200,
          "responseTime": 2841,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "44040a81-ce8e-419c-8e11-310c0231586a",
        "cursor": {
          "ref": "49b51110-001a-4d99-abc1-36bcc50a4302",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3e327639-7252-4d1d-8562-759f1c02323b"
        },
        "item": {
          "id": "44040a81-ce8e-419c-8e11-310c0231586a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6684ee1f-0e6c-429c-89ec-3e3fe0d84838",
          "status": "OK",
          "code": 200,
          "responseTime": 2574,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90b460b-722d-459a-acd4-efcedffe4d1e",
        "cursor": {
          "ref": "e88b9a62-385d-40ae-8ec0-deeb1d824270",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "feb0d62a-6a64-4272-a254-619810d17b98"
        },
        "item": {
          "id": "c90b460b-722d-459a-acd4-efcedffe4d1e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "137d6917-d3e2-4c81-b50e-4ac82e858529",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90b460b-722d-459a-acd4-efcedffe4d1e",
        "cursor": {
          "ref": "e88b9a62-385d-40ae-8ec0-deeb1d824270",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "feb0d62a-6a64-4272-a254-619810d17b98"
        },
        "item": {
          "id": "c90b460b-722d-459a-acd4-efcedffe4d1e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "137d6917-d3e2-4c81-b50e-4ac82e858529",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a37ea74-b612-4655-b9a5-fc31cc9600ad",
        "cursor": {
          "ref": "f6a176ab-7903-4d9d-8973-63c847fc7de1",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3bb1d0b0-db76-46ef-a6e6-40841f7f8320"
        },
        "item": {
          "id": "6a37ea74-b612-4655-b9a5-fc31cc9600ad",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3940bac9-5e54-43a5-bda0-6013cb5f9779",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78f3466-16a3-46cf-b5a0-91ec2f4be079",
        "cursor": {
          "ref": "a324d8b3-5022-4383-b160-d1951b1446d2",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c8368900-d32e-436d-ac35-3d7fb64c69a1"
        },
        "item": {
          "id": "c78f3466-16a3-46cf-b5a0-91ec2f4be079",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f8a6e8c3-31d2-4778-972c-495b63b686ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}