{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6f1a9b4c-01cf-434d-8a91-e5bfb27603c8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7a4e1f38-d131-42f5-87db-99d955ad528a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8ad0581-4cd5-4a5c-9173-c0b830459e51",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "171d8c31-aa48-4b4f-9838-47bc20c32d99"
                }
              }
            ]
          },
          {
            "id": "92c05ad5-5a3a-42f5-8eb9-f81fc2eb1937",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd92005d-6e64-4718-8cd6-c2c762d3d3e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "328ea68c-0853-491b-a7b3-12445ae2d86d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "df42c6e7-24c3-4d3c-96c6-f498fcf4cfc6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "47744f57-2225-44b1-b504-b024158c3f6c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20fd7b6a-99ba-47ec-8f05-cb617736da35",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67b23412-4e87-41e6-a9b1-c9ab10b1859c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88d9ad29-0889-446a-8a4f-09ee2805281a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25d3b31b-6be4-4dd5-a4e9-97b45417d5e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95f3b033-20ad-4820-9242-ed359e229de0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "012f2bfb-c4df-4ece-ae0d-78568e6fe0e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76a07d4a-567f-41a0-b925-79826b03fff6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5879a43-c386-46c1-8917-a38f29412f24",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c6624c1d-a727-4d4c-b069-af65d2299331"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfaa1e5a-16d7-43ae-848c-631e710999ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0d7b7fa-5e69-4a0e-8d54-b0c5a13cf575"
            }
          }
        ]
      },
      {
        "id": "4bc2269e-d4b2-4cc4-a9bb-e9116afff172",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "adfb82f4-816b-4066-a51a-d5749a2e3f81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "666bafd6-2b7c-45ad-b60d-4702f8f8cbbb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "84ab8cba-a785-45e4-96cb-8a6a2e26116b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ae9199-744d-4484-92f1-b42483644748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f0ef259-5d99-4f3f-b9bb-b21a585302fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c345907d-d292-4d85-9fc6-c3843c5e5238",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8d0d0c-a294-4ed4-b83f-074f1defe294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "195e392f-7b8e-4b31-b652-61f5e9538780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de498100-3de2-4e4c-b55e-70d299643dba",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8859c233-a6c9-4d3f-980b-2b1adfa327de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94d40504-ffba-4d72-9c6d-3d8f0026bde9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb127011-a720-48b7-9f95-c37b6d18d4b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27568141-5f1a-41a3-b4ea-70a9c0fe3b94",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9695eeb1-20bb-4cd4-ae58-044325fa6f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa95c0de-351c-407d-b645-5916e9704e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c985d9-d1cb-4de1-8215-bace823e0371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098df0de-0eb6-473a-a1a9-a3949db347c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "84315ada-37cb-43e5-9418-fdc286904658",
            "name": "Positive Testing",
            "item": [
              {
                "id": "965ae724-a2b7-4cfa-a881-6fbc94f3b0fe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98e19d73-2892-48d6-971d-3b631b11f344",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fed2b17b-6c5d-4a34-a6fa-6086cfa38aad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c36b6355-ff7d-4aae-a529-6b278da6d9b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "105082a8-e409-4fb5-ae0d-85cc0b2ea247"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b135e40c-40db-4310-86a2-9add03915b43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed88f252-66cc-4360-a074-904be5408276"
            }
          }
        ]
      },
      {
        "id": "29357f40-5683-4faa-b2f3-1d9a3fbc15fc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "991c52e7-1400-4ec5-aa18-1dd60c7d1e2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fddf445-548b-4f9d-9732-6a058cd27ee3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c62a509f-c22a-4f69-abe2-172c9f68c4c9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ea14bb-a935-42d6-ad40-2183ac361567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18dcfa8e-a1c6-40bc-b0f5-420df73c2009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8de0cd-e175-42d2-930d-bc2fa80858c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2369f8e-f34c-4c79-b9f4-bae486f951d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4a3c87-61fa-471f-b0c0-fc688b941162",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190fbd30-20ca-4596-af17-6f043284e6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef26069-86a4-4dca-9e64-4b20cfcff89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9474ba82-8d93-42dd-a120-8f0c6a34eb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "760c1ac9-9044-4a8b-bd08-e4231eb79600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3deb75-3b5e-4aee-acfa-a7f466f559b2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd01fef-d69f-4a5d-9596-8dc0ec1cbe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ddfed8c-8f86-4853-b20e-c8a50ec6a945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4158b02e-904c-456e-a7ca-a0c2794056f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "087a1fab-4f7c-496f-98d2-aac84cbabc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac12557-ccfe-4060-8fc4-34b82c25ee1a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1e8070-d3a4-45aa-86d7-096cc382d06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ab0155-e0a6-4910-9fd7-ac1f39678925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5daa423e-22bb-4492-ad01-256bc57e069b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59c9e16d-3034-45df-8dfd-6213a9c93ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132253b5-0fb7-4e99-b480-db8b9d722811",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9def0d01-a38a-4cf6-94c2-cfc3c27aa4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18aa6e0c-465b-4554-8c68-2ca4efdafc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5df2128-2e13-4629-a8fc-6e10039201be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52236bdf-58e4-4dc9-b635-527fff3f5465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870681c1-8ec1-4652-8dd9-bf65ed2956c1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603a7ab6-c841-4db8-af0f-529bee09f671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc98b6a0-d7d1-47b4-942b-0ea59923abde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa4c30c-b943-4bb3-b2f4-8b951bd06d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e809b308-f291-4dd7-8374-d3717f0e1ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27142de-d8ff-4df4-96cf-f5b13d8542f0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ddc622-7840-4392-99c5-5accf1595ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0c1361-e3af-4e2e-bc26-a166b3d2d805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d82a53-b7ca-4080-80e3-4d29c8dab032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc0c0346-4bc4-405b-a6f7-681b79426a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3ee61e-79ee-4520-8a4f-edb40745d846",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12179258-75f5-4248-94a9-911a736d61a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df601e4-fb98-4d97-9dd8-3059b52d0f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44a4a62-097e-44b6-ac1b-2208aa00b561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55fe7f49-9cea-4065-9b75-a512a82059a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13c592a-6f48-4d8f-a3de-e97eec919345",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd9c6a0-773c-4e83-8b1c-e9aa0d7522cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daaa109c-6ba1-491d-96a3-9c143b26aeb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8691c360-6d2a-4adf-83ac-c22597b9ac92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd20bea8-8a37-487b-b224-3d5fbdb26323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c49b30-a27a-4869-8f56-ab8f82970aee",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5defc0fb-7313-42ce-8a9e-0abb9e87a163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ed99e6-64ba-4911-8850-b061d8e13ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759a2644-f615-47fa-aa5e-a8e3d982d61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a65590f8-9206-4ab1-b0b5-ac33aa2260a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66750536-aada-4169-9baf-e63d7fb7befb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079d3e2d-3b49-47b4-8309-e9118d80f556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1352ed05-97b9-4308-a6f2-116cd3edd859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14af588e-cc7e-474c-a06a-ecadd4b9c82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14b6ea86-3a0d-46fc-8a57-5c1e60e2191a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8d35e1-a3ad-400e-bc37-9db78346abc7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63941677-3996-4ce6-8734-a5e0cff14446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5800eca-97ec-4712-aa52-06fdcad0e6d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a112eb0-a5cc-4d9a-a514-caa6d351d2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f156e97-d392-4db4-ac57-e778f8eb002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0dc60f-3734-4bed-b980-0927ec9dca57",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0def89c-c800-4d0b-a12d-4bc4831b04c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86eec16c-d28c-474a-b771-472f65355aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fc7fac-52b6-4322-b574-5da36688f431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f02565e2-9188-434a-b000-2e30926821a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55a1d47-d720-43bd-bdb0-2194a0d39c62",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16143c65-36e9-4fe5-9921-184c739eb385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9af88f9-b338-46d9-a7f4-176d065f1e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93eeaded-314c-44e8-a560-d6a43e0b5976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12128696-2515-4052-8da3-fd874d02066e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643d85bf-1f71-4197-8911-5e69439ffd99",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80275f41-841d-4954-a661-648ca206cadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c4f1bd-5ca2-4a03-b855-2abb945e25e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d75c4f3-c6e9-4966-9132-08797b2c8cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfa0caf3-07c7-4c02-a2a4-c841388567d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01079ab3-a169-4305-bbcf-5e475603db8e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861f8e98-9415-4bef-bd0e-c5605b608957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896bc7d8-6c09-4f9b-8141-299094f75dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7500d614-9a0c-4729-9770-fdff54607241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf77e503-6454-4935-bbf1-bc5fa0780c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abde8889-46c0-4809-85ea-2c10c45019fe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66346819-d0b8-47f7-be29-328fb7af8ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d12ebd-b49c-46e0-89b8-67d38a596d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc90f411-31cc-490a-bb9a-32cea1f05526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e431f55-00aa-4a34-bce9-562a0c0fe545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb46f7a4-8ef5-4ed0-a4b6-774ff0e3f7df",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71d02d3-8c83-4a1a-9f29-7fedc3d9f61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a224fd8-540e-46b6-8d32-10eb580ecbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10220eef-327e-465f-89c8-8ac98dbf719e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cad44090-197b-4e62-9872-fac07a4c8a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f237bb-d0d5-4b96-9743-7f73ef674281",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d83b40-28fd-4d56-bdf2-36dc814a04e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177a8759-bf47-4874-adb8-1eeab24a78cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb34a203-671a-4758-b64f-1540a465274f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82fbe787-6078-4b9d-907d-e0780b998e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50977de3-3eea-403b-bda5-1c5f49bed7d1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661089ff-4b6e-41ae-804e-cc1804f0a7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e270b555-f1fc-4c18-925b-92aa4a924984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a9873f-53cc-4a1b-b664-fc06d0eef3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b28a4388-1998-4813-879e-07a15d5374ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd57ac4-ca05-4cf3-8f56-6cef9473f6e9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80864818-d472-4b00-9b0e-d87f056d49c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa42575a-6d89-421d-aec0-58dd7466011c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cf66e7-b337-412a-a9b9-e4070142a743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a9c2d9-0b5d-4dfe-9bdc-e492fc728cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbcfdc2-1a87-4665-8865-7eeae440e7c4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ca4ab8-36ee-4895-a09e-e73647b25576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721655b9-4e6e-4797-b9a4-5cd43db00f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303dcd8f-08a7-4a9c-b449-a3eea69fc143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e88709-9bb4-4885-af68-4a826bb13261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06617911-024d-426a-a127-b8a7a59a65fa",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348188ee-4a31-45cd-b0b1-90a9ddbc7dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004f37bc-3649-4927-9b3e-dd7342927f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c1a49a-57b4-473c-b785-ce317e675d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "332d958e-2b76-42d3-9d4a-80fc5526ad88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f131cc-1053-47df-872f-6793913aace7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb0d0a2-5714-487a-bbee-b1ee0846e2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da4da21-bcf8-4240-958a-33b30603b040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40f12c4-e390-4e0d-9ce2-3d3acd2b724d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d978428-8002-4456-a642-c5bb33eb8377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1862a269-7e87-4ef0-a9f4-3da207155769",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0419c0a3-f066-4028-a11b-ac073b5e9fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7ace07-d716-4383-be0a-481cf3c946aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e3e592-b6c0-493b-bcde-f9d9b316db0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da62781-7d63-4992-9aa7-ace1e1349e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b27810-cc86-4e90-be8e-6ce81c995661",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36663d8f-9207-4348-85e8-fafbbbdec681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0333f90-1477-4fb8-91b8-38929b543463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807f48a9-894d-4d0e-af0a-e9548db8b6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e927ac-8457-4417-bd39-308f1055506f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df765f3-760f-435f-b5ba-4f4de6e401ea",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91830e4a-580f-4047-bc41-dced2defe85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f67d5f-14eb-4a13-882e-6b5679afbc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639dcdb0-b49b-4316-a3bf-a2d01ee0eeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a758aba-cedc-4a20-8ded-d2b89c4027e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8479a7af-81ac-4038-bd37-74c7113faf67",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca4cd88-b98d-40e9-9e87-e6b63b4474a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dcf78ac-100b-4299-8297-52d73a05a819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a67e770-1d11-4898-b250-d37bd8e5536b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f08502ef-1421-4410-86f8-a1ed21571235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a3b30f-0851-417b-b50d-a0bfab9eba2c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789d6bcc-8589-4c4f-9872-7f5b8a492b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46af23b-7549-4494-a7ff-ebea5c6c2937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283f7480-f261-48a7-8095-93a5ce570a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1961bb73-fabf-42d9-b0b1-96c634880212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067d1490-883e-47c1-ba71-8be17adbbe7f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7457b91-ebcf-478b-8372-c2bdba2ce0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd04edb4-925e-4f82-a4ab-8d9e50a8e124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02d2f89-6990-467e-8123-be596a988198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "263d98bf-6a11-4c9d-8384-8671a319abcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0aa0cd2-4683-41f0-856c-3c8303a3f40b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5993e4f8-40fe-4312-ba39-c8306fac8870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e72e10-0fd6-4d36-8a5b-479e3f29d994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad229c9-bd57-4f9d-8249-f4614acfa64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c254d1-c504-48f5-8b12-f07503b3b4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2256607a-2436-4d65-bfa7-fcc58ed5b0da",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6cedaa-6599-43cf-83af-ad26f0515d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ba9754-9a58-4803-92dd-fda4b28d7661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61824ca2-45e2-4d2e-bd2f-140d5507550f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d429e76e-8fec-43a3-983d-a033bd1a37e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187a6107-f29b-495b-b2a1-e6324d81d859",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf7946f-c3cf-4421-8a47-87bd8a931912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab546825-4ff0-411a-8c8d-8fa1b498af87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6c2b3a-13a2-4d18-afd2-4b0f610b0f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25ce70a8-b4cb-4f64-a9cd-9df091869afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8afa03e-5b26-4b8d-8f9b-1bd1da0ed7ee",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf496efb-affd-4173-8c0a-6c84b10e2925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6a4a23-7d22-416f-8b6f-ce19dd6649dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631b5b0a-ad64-4657-909f-cf1c991aab5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "556d3fe3-2bae-45e4-a789-56838cb9086d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0bf99a-d202-49f6-8f74-2e00d9ba18ff",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5be3b7-c363-4ee7-9982-1d4761760b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7417248-e5cd-49f2-aacc-72a96ca56697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0bbfa3-6976-41b6-9753-1ca43a6b00b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6215f18d-a714-41d6-9468-d0b626e09bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d14632-68e3-4c3d-8c6b-6ddeba6d59db",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a53676c-7cc8-4106-b086-061a6eec38e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cf105bf-cd52-4786-8adf-240d1ae26133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc2882e-3d39-4b97-a06b-a2fd3e612d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10e8c3cb-5f26-4603-9a2d-cfe45c29759d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975110c4-7c9f-4312-8485-12849a2e8c95",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cbde37-135a-49fe-b852-95168205c555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d0ba5a-276b-4d43-bf08-ed4cf7ae44e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca979e1f-fd25-4dee-922b-428a36a2fc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbd5428-2937-4284-96e1-edff03ff9d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b409723d-7dc3-468a-aa3c-837227ad7901",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9687144a-3fc2-43b8-9be9-58ab68db5383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ae4d35-afe5-41e2-adc3-dbdf00bd364b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf6fef4-09f5-4c77-8c64-8ea32d02be6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2871a25e-c1f9-461e-9011-5bb0f858bd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b74c91-0676-40c1-b1e8-4ef49b4a83c2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a260536f-0c84-42d9-8998-02bcd9f9e70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fcda73c-159a-459b-9bfb-e3ccbaafeb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb81ae7-d9e7-420b-af07-a33b7f2fdbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6b3eaf-b786-47e4-a1ea-fe783b733113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d22dd7-da80-46b7-82e4-9390419503b4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afa1d9b-1844-4de3-9fae-ec718bee784d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a3d89e-3c76-43ce-a172-185d0311e79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dc7ad5-fa5a-44e7-b772-f7414225da4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5edbe5-4ef4-4ba5-88cd-6a758c795833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e84f27-f44f-477e-9f31-b24c2dd66837",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a4a5a6-4936-43a7-801e-9d1f91008741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b249f700-98ca-4279-97d3-9499fb6c8a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b20f34-9a4c-4c59-899f-e89eb6c2004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d50b6af-db0a-420a-a505-89db5b67df6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7946e15d-915d-45f0-8905-3a704021f0a3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f7db95-fcef-4b76-a3c5-2f639fe1f8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70c6284-7f9b-492c-a52d-4e130db4472d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593811b0-aaa1-46ae-92ae-0fb6340500d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "17e47669-b8a9-43bd-8e6f-fa79d9020b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f801a93d-6895-4189-90a3-89f6a5a0db44",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ebad62-2dd8-49f3-8f66-dde5949bac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf40063d-ec3c-44f0-9ce0-bf68e0014c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5572b08b-0342-4321-954a-d5e9475546d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4eb6666-5557-4773-bd69-dc8a52b0ddd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d60e89f-447f-4802-bf40-41ae483d21e7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f65ce9-22a4-4e70-95d9-dac23126ab8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb52a54-7f80-48d1-8328-f5c84990b2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e882d4e-5389-4321-b6da-4bd9a7536818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c87700ef-c355-4b83-b2b8-b754ef233f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643ee92b-ffd7-45ad-babb-921d9a196e3d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9091dcb6-1694-4c0a-8598-e83b2f0a5017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ba7c6f-f93c-48b0-8498-670246c2f33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d176ab-6730-49c9-bb12-b36f7759c56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9834f847-20e7-41a7-83a8-6127a04840c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba40058a-9d65-4c5c-9367-9017eb55dcd6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc88ecd2-daa1-4d78-8c9a-5d2a98b18106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7016c32b-ec84-4d73-9ecf-e503e8c353c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4190694-f3b2-4701-aada-ca3436e28105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7915e82-d14f-4a70-8889-1a54e46e4690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d84c2f-a064-409f-bee9-9b7715dccfb5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1705df39-3fd3-4724-abf7-99c7c5719145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fa661f-2455-4def-b8e9-f6691cb7c10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33c4fe4-9464-45d7-aa5f-08b343cc9db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc881bba-0310-4bda-89d2-4976bb498318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0563eb15-c398-47a7-bfaa-a6db549df89d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1fb67b-22ee-42b7-98bb-7d6ec74bb99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bb75bb-50f9-4d87-a4d0-efdec6b92b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49bd845-4ab8-48d1-84b5-4f85b49117a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0704316-ef44-45a4-98c6-f45df39998d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba69fe6-3a53-4d1c-8930-b7442ca6bf16",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fb9d79-28a6-4711-b854-2448a6ab9c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9da893-2564-4a7d-816c-ba0127d35cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c748e7d9-075b-47e1-828d-cdc9ece9117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e507670a-ffde-4ca5-85ad-9f385281beaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28a0e33-4886-4fbd-a70c-5288fa3a1f0f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290c7178-3b31-4790-af28-7f5e6313a5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6382dc47-ed0f-47fd-8228-7ebb469c85b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6739b9d9-3108-4ae7-bdb5-87e94c4b6836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb13dcd-9c45-4e37-98e3-f148aa216ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a3dacb-8c06-454b-b7f0-0b3a3add6c3a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b65b79a-25eb-43b1-ab69-e108cc883ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df80c23d-e04a-4dc4-bac0-247c39fd4021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1e4961-ebba-4788-9e77-8d799541838e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa68f8f-c5d2-4500-8111-b9833d86614f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3af4c1-de68-4235-8050-b118b0093eb7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e950e73c-9521-4f42-a574-1edfae8c400a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7709c6f6-8c2f-4dc6-82fa-811bbeb11825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e6f39a-4754-4fde-adcd-fc5b0f634fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca82a2c0-4fd7-4fdc-bc5d-3cee2bfabde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a365e4-84d9-480f-bf8c-0d4842f3868c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dd33d0-d4bd-41f4-8609-955d0a54c90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ce75f9-86bf-459f-ae28-f0735bd71edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ca00f6-b123-4f23-a8d1-9bcdb157d8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b70f72e7-bb72-4547-918e-46e9a70be139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5458bb-2375-431c-8b85-d1944fbde19b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21365a0-816c-47a7-8658-b55450841dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc5c583-17b7-4758-89ae-8693393ed01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2ed258-b7da-4239-9713-343324fc52df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da85154b-2b80-457a-9d41-ba9647fd07cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faca8a0d-83b6-4576-9e6f-91dede02d398",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83bf494-ab99-43ae-bc8b-af9b8da36f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1681df08-52fc-4c89-8596-211a8893cff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8783e227-41e1-4f83-a3a3-4ee8578ca333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "409f97d5-9169-4872-8675-f8a8264d7784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e17a28-5621-41a4-80da-7e729f8e10e2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edb1cfa-a22e-4d19-b51a-a7140528befa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc333780-313c-47cc-936b-826f39beffa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69234032-835d-4545-a3a2-f3afbac43ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "315095fa-d993-4928-86e6-a6c07d25f877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9065e0d-92d4-4b72-b342-2411464badfc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656fbdb4-8677-48fc-a0ff-233fb26a850d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b2d544-94e3-4a7f-94e8-f6a379300224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527e52b8-d4c5-4757-87ae-c70ddb215c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3acb83f-1a60-42bd-b303-c14001f92054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30916ac-312d-4f98-b3eb-109c968fdbc6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c29147-e102-409f-8f8e-82bbbca177b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962eea12-e3af-450b-a712-09c1d3676355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0e1db7-cd81-44e7-a4e1-5385630f500a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91cf9204-e5b9-4b21-81cd-8b58143084bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd68d93-43d9-4adb-a778-7122cdec27c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f357bb-efa7-448a-8d86-c03c79e296ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93f09b8-4a61-41fb-a9b1-16e8a4ab5db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5baf4d89-7e47-48a6-a335-2da0ec1d5f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aedca0d-7e78-4926-98d6-f5c24e3c6c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6311c9ca-b3f2-4079-bfd2-337a7bbfdc98",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf3b0b8-a304-4d14-8f17-9153dbf15334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7cd27b-ebed-40c4-a479-4e452832f88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530d3b7f-2598-4509-adf2-6bdbf4530055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0dfceef-09ce-4504-942f-c765e376b8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a077a37d-f63b-4abb-9b24-4ee55407b818",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04eb82b7-145f-4c14-a799-93ea3353adde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e904ed3-688a-47d9-8aa3-7545ac205913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f3a3b1-fba4-48a1-bce5-5cae29a9df25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "440eb796-3e10-455b-926a-2cc77a7d1952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6355409-bb9a-4093-ae82-37806f1f885f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306990c8-dcc8-4c68-a8e5-a4ef438b4260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61878b7-acc7-4bf5-a9ee-c6c93cb563b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db853e86-df2d-4b97-b40b-2d92c20b87e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce10ecb-e88f-4537-aa2a-8d51bedbcda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f31789-25b4-4eca-8824-97be9d5b01fe",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fca615e-8072-4b6c-b9da-ce3101428a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a31cb3a-3801-4dcd-b832-0a331902e8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294e9bf8-0f66-45cd-b8b0-6d1b8245d0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "290ad9d2-e43a-4351-9d8a-dcd02c492ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483a2af8-d52b-42fc-ab80-c28a5c4b99c4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73567214-7540-4a93-ad12-8322ad882be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b661b5-f898-48a9-9bcf-3093d458358e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dea937c-5f32-4eef-9b04-f3adb3a19338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "450fc943-a9dc-4871-bbe8-4f1890199829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d38c52-091c-4c53-8f37-4a70a80f8897",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22983f6f-11f4-497e-987b-37bc17f95f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfac550d-e220-4728-9107-392115f97fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce591fb-655c-4cfe-998c-51eeda209b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c34b64d-d401-44be-9781-9713dd462dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc52507-52dd-4157-8015-4747799fdf1f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b6a86a-5674-41fc-af73-9d8cbeb22b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adccedf7-7139-49fc-8306-6496dca4cea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821792cc-9dde-46a8-8117-126a1644d6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd69b25-d5dc-45fb-9c51-b0f782e0ca72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef15a3ed-eaac-4119-91c2-682084c12e23",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a46c3d0-4aed-4055-9892-dcb797b30685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f1c25f-c8b8-45da-a26d-f70e6a20e2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36328d6-ac97-4e66-8f0a-290b97e1bcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "198d285e-2c39-482d-9f94-218c3a6faa13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3f26b0-6d7e-42f3-9490-7b2ec0cfbfe7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10359fa5-f108-4157-b96f-61aabd17a4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8db4c0c-9f16-4fcd-8a4f-b41b3e4e8654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62455b16-7c81-4798-aed0-643c58e920c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a359b143-7d10-404d-b93f-9e3fdacf8a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac5998d-efba-4192-ad36-d4e51eeb6037",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c154383f-e3bc-4f69-8dfe-29152fd8d067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e201dd20-14c3-49e2-937a-0b7184116f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2c9d68-e055-4548-878a-95968a322937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "543e5b6f-39ee-4070-973e-530455af0c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da1f228-e227-4563-8233-f17d3008c920",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13987242-79d5-4079-9329-f7ef60df2a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82562602-7f6b-4b89-bca0-739e60a02e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104edf7f-0dc5-4da9-a58a-7873ce74a14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0f6f2d-c789-4cc3-8dc1-4722d4aec6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d034c9-5d49-4b50-b5a1-e1c568d27b36",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246b393c-bdd8-40c9-8d10-0b6c797a1829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25763cc-4a50-40e1-bd8e-92dd3ce6c98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beeefb6d-f444-486f-a4f9-d5803feb7dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaed702f-7be8-4adf-b843-aab6bffa4a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd16ac82-e566-4890-9e17-ba3edb9cdd83",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d30b30-15c7-4ba6-bb90-1e1b4f98ce29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8381e1f1-bf6a-4c5a-9513-63b639bc5100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a148cfcb-705c-4950-846c-315fb0dd2a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e21c6cab-b694-4a33-b512-c0395c0f641e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e11ffa-5597-4d59-9591-9300f832df3a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60b7dd5-1514-49a2-ba65-688d5d30ceea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fbaf15-3c50-4bfc-af7e-046e587feada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18c355c-bf8d-4d43-b52c-7d9431581659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4403aca9-0aaa-404f-bb91-2ecdea4b06a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1259f6e-a059-407b-8a6f-4b3aa23c4da0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d83b451-e2c0-4ca5-a5b3-59bc9aa7c85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2740c57-7844-4fe9-8b3d-2561013ffa2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72816cb-08cc-4b37-9c86-6d2083153ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec016a6-6b50-4f6e-b1a5-a201dda68938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2324c86-d1ca-4080-a69c-b34b5ea0d2b5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9465ee-7c99-474c-8357-d1d5ba266ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4de2b67-a5c5-4188-b0f5-20793266c94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1eaf85-85b8-4cf4-9540-f9273440cccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a09698-857c-4db7-9852-c4c24c2c2842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff17d18-a296-4e1d-a0fc-f35f93bc0712",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b012cb-2db0-4ec5-8926-75a28567c5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980a5294-4755-4f8f-8f79-62bd7a927faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859cb136-db3a-4440-9228-fc547b7878c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94f508f8-dcc0-49a7-8eff-8b348b00905c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017159c3-9575-4b47-9c76-ac94f85e04e5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17a6a0d-e890-4f21-b6db-7281ada70192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49060312-0684-4f29-8e87-f2ef06f14f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bbb3ff-7845-4f24-9be9-112c83c7d076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca24dbc6-2a3f-482b-a4f8-e455570dce00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58cfafb-51c3-42ba-a053-9cbb63957ad1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3db69c9-9c54-479b-8acf-befbb083e6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897d792d-aaa5-43b6-9760-bf692c62d2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1363f4b0-0ae6-423e-86cd-0eb05861f2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4665933a-39c9-4024-8883-b7950f2e7a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff28474-318c-4394-98a7-71de664074b4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10affe4-4295-4b02-84b4-2bcec1d02d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1b10e2-3055-4883-9346-476f207ee4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf63ff1-d479-48d8-b0a3-9bdb749c3258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d1401d-403c-4e4c-a7cb-b0edfb11296d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6989c41a-68fe-4d94-bf27-eeea3f465cd5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe99d1d-bbcf-4df1-9cc8-ae34ea04b14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e48c20-31df-4304-a9d0-d643d8e8fdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6d6784-51b5-43dc-a603-b781ce65be36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8141b3-a9b0-48aa-ad4b-c3a0eec75958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fb8011-0e10-44a2-a5bd-406f3cace2eb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8626b2a0-be27-4736-8ef8-f5d29942975d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8361d8d-8d66-43ac-8943-ad961f78b53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc886cbf-ceb3-490d-80bc-4f4e5a73e51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b35414-2965-4266-a6b3-eea8323f0879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbd0ae6-fa83-4f35-b9e0-b0af6cc68869",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ebccb3-0038-47a8-967d-3f0898a7c193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8e8830-bbd6-4b30-8fb3-35b41b0bf2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610f9961-5882-4e8a-b3d3-a251455f2b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aea83fa5-b328-491d-9a11-f11285da2c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341bdba8-231e-4be0-a6eb-922962379d9a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc2f40d-23bd-4ffb-9fff-7ef767b3664a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d92b67b-cf9b-4190-a981-d35560afe9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9214dd-1972-49d7-9655-5171e46dbd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb778dc0-1caf-4db8-aa9e-835131fcc732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bdf141-8b5a-45cf-8182-3cbd5f31b9ca",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618a54b1-0a27-4df7-b454-66b00a94f712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4171385e-3dab-4058-b556-4453d5802231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b22a83-bb62-4b06-8343-0626627ddde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f59679-d540-41c1-b2a8-71a58b18aac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d97c80-f339-431b-a1c5-d915ceaeb201",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02873ff-1766-4dc5-b52b-ba3645654412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e5ad19-84a6-49d3-876a-306563b3023d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8fc037-b4d1-415e-a3f9-0d5a51fff15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7d2d9a-58b8-490d-84d6-98d7dfe60ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f55173-6d79-4d44-986c-5f3a5e37a90a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2793dd-b6b0-4b9c-909a-2139c9547e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc544d34-99a7-4537-9952-197584b9d2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb13554-88fc-449a-b043-d5dc72e4ca88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3969ec33-794b-436a-83fd-84d5f196c581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66bc53c-509f-4c9a-9e33-74102a98fcc7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad6f7ec-d62e-4c65-84f7-5e7ff33d9630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463f0750-f0d3-4cd9-a364-64b95b153b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c923fc5-ad48-4b46-b047-6a079ad27706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d072063-104c-434f-969c-18565795c7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece89dd5-6779-4bb9-b85d-8dcee8617d56",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21c8486-2152-4981-ba2f-af9e3e8d225e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b816e72e-a119-4dff-a075-c00a07c9be15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d455951-097d-477f-bfb9-0f49a1d152df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "593ef6b1-f10b-4b5c-8706-a48523234ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871d674a-e065-491a-8032-b77501b65cac",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ac8b87-5096-4632-9583-862d42bd3582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45815ede-9e2d-43be-95fd-ead78ad763e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1559078e-815e-4020-813c-3ecef5acf4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5de69ac-9e74-449f-80c0-5096406ba363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6913501a-671d-4209-983a-7fbbf9a9ee4b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63e4545-78e6-4393-8c11-c2afc54dad21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf1ee48-eb8d-4501-a922-8cce3f41a00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275a8704-f226-4448-ae1c-14acd96a3416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7f74dc-8330-47ce-84fe-745cb94d8880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c825495-f10c-4572-800b-39f295fd7673",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a9a0ba-9136-48d6-a287-e0fe2eb7c79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5180bf-8335-4c05-83f0-115ba14d98e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63d7824-90e9-4d98-9d93-691fe174d5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "734c969b-184e-472b-9cd4-67d5ebfbe147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8543be0-261b-451e-b960-098498171749",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cadcfe-4520-422c-8b8c-f9dd23d84ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "50215754-b1cf-44fe-bcda-84a6510e1502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60767133-3f7a-4206-ad24-9302309a6e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb36d23-e648-4132-8606-9156f0c50463"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c41efbdf-a160-4d76-9727-362d15c79d5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9c11ede-55d9-4cb4-a013-26d8cd8a17e7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4f8771-64ee-4f2b-aa47-97caa9ef5fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6406cc2a-7d00-4194-a29c-d05bb99fdf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c82cb5-4bd6-4c9a-aa3b-b6e227c67674",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9070c238-b4ab-4177-ae20-8c937ab0730f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0295435f-591a-4799-aaf0-1f215d89f0dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea505997-9ff5-47b1-861e-d5572b0b6538"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dda63464-8f6f-47b0-9197-4ac6a5bacac1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "097c4875-a8e7-4542-8269-5c208f698d06"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f50366b0-c2c1-4bbe-b142-01263c8bc4f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c10feeb-a4e1-482e-b126-87dc9a8e32e8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3dbbb050-aec9-4a1c-91d2-e66d1ab8ee2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6731faf-4e57-4c9d-b727-6d67fe9b32ad"
                }
              }
            ]
          },
          {
            "id": "0e4d6d90-bd54-4da8-b8a1-a89f4fc4e364",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36ebdba6-4998-4872-9221-32a4ac02d5f5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0eb19d87-2021-4bef-9d61-e464abe94875",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd554a3c-868b-4986-b986-e355841e8615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "410039a7-83fd-4692-8267-87f6319d5433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc587b0f-37ec-4749-8478-d9d1d7bc5e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8571d2-9a01-4216-9a77-37db1bef4232"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f91427f1-c697-432c-ba3a-dccda68962cd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f02af024-7951-4989-a0b9-d92185b82e55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d33d83c0-ca3f-4d51-b35c-6acbbaaa99d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "773ced37-e345-4ddc-9666-5671bb8ec2e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea5a13c2-9416-4ef5-80aa-97cbd926ea59"
                    }
                  }
                ]
              },
              {
                "id": "7ba74c7e-176f-4c5d-8ab0-384e59817b8d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5faa8dc-fdbd-4dcb-aff2-5814f98d8367",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "067f6f58-c81b-40c2-905b-f67329b4ffe1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e558d698-0a64-44a0-8ef9-db9dae8c8396",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1dca569-4668-49d6-9eea-ccae90a092b4"
                    }
                  }
                ]
              },
              {
                "id": "a639637a-35ad-4743-ae49-d63023a730bb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e61a3ddb-9e06-4f7b-bedf-c610be9be03b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8538bc4-ff02-43fc-a28b-f35b6a551208"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5df5e66-2517-4425-ad02-3084bcaea197",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0bde5539-cf00-4caf-bc40-21577298155a"
                    }
                  }
                ]
              },
              {
                "id": "54e0f9f5-f1af-4361-9a28-91ef175f5db7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48297b52-f34b-48cd-bfad-e4ccfd37a411",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac6439de-9c66-486d-90c2-2be4a08ab649"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fc13f4a-8d05-41bc-8b80-cee2271a1829",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "89a0f2a2-96fa-4f2e-8acf-57796233a31c"
                    }
                  }
                ]
              },
              {
                "id": "ff9e6aaf-4542-41f1-9d92-5882beeabd68",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b421370e-cf47-4b6c-9217-65ff12a3c78d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f17a4172-64eb-4f5e-8cf4-cb97bc750259"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "062cc0cf-1e45-469a-9346-99928f9f7b12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5e943638-ffac-4f25-91c6-11ad03bdd59c"
                    }
                  }
                ]
              },
              {
                "id": "3d78fbfc-3edf-420b-9a69-3e13337bff25",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4afd6b9-458e-4b67-aabc-9c80b76b0836",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57c12674-b653-4b54-8b8a-f29f0388542f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac2fb83f-aec8-49a5-8054-9a59c3289da1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9244ac26-f0fd-43cd-aebd-28e8bd097264"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bcb4ec05-114a-49c1-8d3b-4c5f2bc338c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad503d01-283d-4980-ba0e-5ad1e5ff999d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9073037-b677-497f-b41f-2cf9bad79217",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6622223c-bc49-4811-86b1-14934e05ef6a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3fa5884-84ca-4f47-945b-4ddc08e2899b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "efa219b5-22ea-41be-8466-c7cb52e7b40d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8d13d17-1799-458e-a3ad-da98ee59db82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26bd6a62-2851-426b-881f-081a3b4da6b4"
            }
          }
        ]
      },
      {
        "id": "93f7714d-6c69-460a-a3ac-3f05f93e1c60",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1ee2d98c-0408-4ee0-8a23-689e71dde569",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37da4125-f48d-4202-aca6-0e8f218cabb4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2308f4a4-51be-4f97-86c1-e5251e947eb5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778e6f1d-1eef-4d40-9881-49c32ea65908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445e4a85-c594-4dcf-abaa-d54e6c08e413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afe91a2-78c8-44b0-b467-4dd42aa03521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3be6183-dbfa-4c63-b584-0fe797656663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58eaa021-126c-4259-959e-fb0ccabda28b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34557c46-a791-4579-96f1-c08246968ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3418ab08-e62c-426b-ac08-4fd6593c0e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92a8582-ba5c-4758-9df7-8c574925bb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd383e26-42a3-4433-b653-9d60ab036c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872e896e-32b9-4eed-a218-371914a6e810",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fa6c92-b9ca-4bee-8062-38a29ae2aefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6170f3-4a8d-41ab-beb0-62fea0e0344f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90c8f94-feb3-4374-9c3e-34e7c19ee3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33e7adc3-71b8-4ca9-b9dd-f85c10647dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505e939c-611f-4754-bbd6-409869faecfe",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6389ce77-71fb-4a54-858f-a09e16153b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2abd94b-e373-4e43-b905-4f7d36c807d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad38cd6f-3170-4147-a6d8-893ca1a23b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b69e536-ee8c-4a43-86bc-9c583f0b1419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3a673b-d29b-4e51-81ed-42fdb526715f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c31d17d-90bc-4702-96db-f502c58c44cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d9eecf-cfe3-458d-a7d0-6dc42910c88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52d360c-7862-47a0-ac1f-b41c6297c6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1526db2d-4b07-4fb1-b5a3-fdffa84d07ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051beec5-d4d1-4fae-ae03-86943a8b5d8b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75be190c-4f9a-4682-881b-81c88d7dff23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f526a0bb-a37b-49c2-a459-c4f888981185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a897c8f6-76e3-4b2a-a672-d362a616c106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60227f85-46d3-4db4-a1c9-7dfb745cc933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc667e03-9be0-4a59-a2d4-817684c2f166",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04ae13a-a05d-4c70-9c0e-54374ea52993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f6fde0-ab28-428e-93f9-fd06cb60c9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41006d19-4175-40c3-8bf3-b2ddc3cabab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8816d88d-a07e-4ecf-9d01-e0e8d0fff08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8493671c-66d4-4686-9d6a-908b4ce1c401",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca0fc68-ac20-4fe6-9031-ab0f3623534c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99ce953-e153-4e03-92fa-f8494913d7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e41dba-9766-44d3-bf72-2ac28897f6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d793251-9021-4c52-a656-563680ab8d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4f22be-43b5-44f8-ae48-c75ef840144e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b20158-0749-4ca3-ab17-988e8bce455d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603cf6d7-90ed-41f1-ac28-d2de68f27a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc7fd6c-b423-4737-a663-ad8d40782339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a8f862-a25b-4478-8031-68dd05774a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6ff3d6-23eb-4e41-bd8a-14856f69d3b7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93360d39-44e4-4ff5-ae66-c48cd858ad49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30d751f-468d-4dc1-9aa3-7dac9d9ff6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bc32e5-390b-4c2d-8be4-3026cda06bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28c3d42c-973d-4cfd-a308-d209fd05f77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989b9b51-8d7b-4560-942a-c3a0efd460f0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c601413-86be-4bf3-8055-2b6f8f996d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d459ad-879c-403c-bd09-4c93cd257018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89809d28-7179-4e18-9c2e-d2bc3d7f823c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4d5f9d-4ecd-4fe7-9e96-5fcb08a53352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82842db-aa12-4073-9e04-08e0b854c4f8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7712b663-eaa7-48dd-996c-bc0632475b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f00d78-53a9-4b96-a488-ab27a410b27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360be68a-f9ec-4c6e-be47-c2430b510656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba16a96-cd51-4a5f-855e-33036701eb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7aac3e-1104-4863-b116-47ed5fb3a2b8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173745a3-1798-4dbf-9855-5963c4eb9c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb30203-b8ac-4c3f-997d-5123205e291c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecfdeee-025a-4a6b-b7be-2d4c7d26f0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98bf5dae-9683-463d-bc5a-4133851ad3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83967226-f715-4927-9fed-10caf00d743d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacb245b-60a8-4227-9b3f-5e16a6ac57a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9fcaf9-e3fd-499a-96ac-bca0ad97841f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2469b723-a998-4677-9154-a056fa0a5da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb52c4af-0a78-45ba-9e78-fa48e2aade0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8f4f78-743e-4e7f-99a2-fe50373f8364",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d930955-8d13-4734-a892-1b8618b16f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b46b70-5256-47fc-a277-5769242e348c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6c7fac-32fe-47ca-9280-c3c630e2b158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f095b3-80d2-4774-a555-1aee62d72bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d88405e-6678-4b66-91d8-198fff3d1e15",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f98aaa-a128-4637-bd66-d3da2d0ee50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d18352b-7931-4386-8667-2fe4246d0c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862d2c82-5ed1-4854-9fa6-122a7cd2891d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "41a74d9b-8d3f-4fd1-9cb5-a6d2d09b3d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21b23d8-4618-435c-a647-e080c1848d88",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c40f54e-06d8-40ee-bfea-5080104e0a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bf4fae-3b1f-449c-ab9e-27f189a78e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85175489-145a-411c-9060-100e4dd03337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "af00bb60-f959-4bc8-b8b2-445ba57db298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ea8618-9878-4099-82f3-3eea11a937cf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6647375f-f7ae-432d-a6e6-4d8da6c4b9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf9dc74-6466-4baf-975b-038082f1f213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d8195d-90c2-4376-98ef-d65781d66042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfccfa55-f462-491d-bd21-46e50ec29f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579bff38-b9fe-4675-82ba-a5cc435c5bcf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df9a41e-56b4-4a7e-b5f1-a551c959b1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f52b5e-b5eb-479f-ac1a-b9594b81e2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e834cfc-e67d-46bf-affa-4ecfe694b9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "027ce373-353a-4a3a-b9de-b17bd52d36e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52410a90-5953-461f-b359-45d8b86c00f0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43f6cca-3953-4bac-98dc-3aabbd588bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb374c1-34c7-4820-b560-68d926427381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a1fa57-6028-48d3-84ea-cf3dc036ee51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6699ac9-24af-460a-97bd-5276526b516d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4076fb-8b12-48b1-98af-062e61c171ff",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052abcea-1cc4-42fe-9bed-96124d704530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ab6d83-103a-4f43-8c3e-e201f88da7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2229db5-83b5-4d17-8cd1-60ff368c8b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5760394c-c1bb-4a7e-9ac6-9841186e599d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8208aff-cb73-4ce8-a72e-7f7b46ccd04f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4d77da-fc19-4ec9-bf01-8462b3c25ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35e74af-f5ae-423f-9b1f-5a7dd0aead67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bea3964-2598-41be-bdd0-a18c1af60011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a67624f-bfd9-4199-acd6-a8394a2cc86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139b08c1-0f6c-4d55-9499-b9f0c55d5b8c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102cbcce-70ee-4fc8-96f5-d72fc8054150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d7e4ec-b0c3-4fd6-9255-d972539f7938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6922490f-d395-42a7-acc2-eeeca60d647f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa049b03-d3f0-4abc-8c02-aa91cdc99579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a376ba0-5efa-46c5-b7b7-352d0393a376",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2613fb79-173e-4a3b-a555-26bb8e5ac3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853c5fc4-231c-457c-af33-84c4393efebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89222d0-3ff5-4101-b514-4dcbf8828f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "850c17a4-bdcf-4888-b924-cb1d8d14c4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0f7a9a-5574-4889-a6a7-3f8b4f8777f1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f10393-2483-466e-9959-fac7c048c4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee140fb-ab56-422c-a41f-e60c96a06c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1494ebf-7afe-42be-9b68-06e4d3e5293a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3931d711-b181-4379-8dd8-5ce2dfd06d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a6a694-a110-49fd-b147-8921b1ae7c8e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910c0c78-7314-4fbc-82de-9e8527cff03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66314ab7-24ff-45ff-9748-a639761d1692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0525f4f7-502c-46ba-b491-bd43618e2aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b21620-1f95-4b13-a185-abeca5d08b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b560482-aa1e-4e78-b8d5-fc0261f41e19",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16a99b2-78e5-4a93-8c0a-b16fe4e8dfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3063d5-2f4f-4c14-ba13-897632bc4cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eee6a9-a532-4a29-9783-fc1fcbecc4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b4e0d8-304e-42be-97c9-d2ff4ca047d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e295a3-d4aa-4ef7-bb81-44bc0a9f438a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ddfa39-1300-427b-9650-d8967b553fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae2b655-aa8f-49fb-b89c-1908782fd1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5839135-d4a7-43db-b323-da87ca89cc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06d4b705-a044-42ad-8479-fd338e7474d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0cf56b-a079-4cff-b0bc-7339d25e1242",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a99f9e9-8fef-4260-bd9e-95a731b33e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78395872-b6f9-499b-8ea2-273515522ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa117ae-f39a-4169-b98a-78481c5f29f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb12255d-e10c-4cbb-842d-a9bfb9fed3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d86e801-9f17-4b8b-b313-3eea7855888d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2b634a-3644-4b3a-b884-77c4d749a65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dba7058-8aeb-4346-9cfc-5f52a07dfd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf748105-0b81-4677-b558-98fce81a19e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0108deb3-a661-4217-80df-a701931c0fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8d0907-d9fc-425c-8e2a-f063cf8b7390",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53b6f0b-a11a-4620-9b7a-019d1ebc7b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e77dbe-d425-4ff2-a245-43fbefa95a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122f2ed7-1d18-4740-877a-001d5e26620b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb03b2d4-e743-47eb-8ebd-2a3631de7f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c869f066-2d60-4ec8-9042-3de9fcf893e0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c580c4a-0937-4f04-8a4d-607b3a405ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f91d8c-4b11-4932-97eb-0f46f9654b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3df89a-5447-4112-add3-e0bb5a2b43ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b057dc53-a140-4a81-8ab7-f80279eb4a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d015cd1-bb6e-4035-8349-d3696c4429e7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9e3db4-fc0f-4039-97de-04e811fafd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165b9e4d-bd0d-4659-bd2e-d44841bc6c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dd3ee7-878d-45c3-8439-033c5d5212ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2ed64f-4fc5-4a58-94e7-6508b809f51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7be6ad1-3830-4cdc-824b-83efec07b74e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550bbf52-6cf4-47e9-9383-388cbf298870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2185e04f-004f-40d4-8caa-be2ce401a452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d77696d-038e-44dc-8c1a-d5a0ac97a20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9447a3e0-f5cb-4801-9197-d7183efe25a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72828cb2-062f-4658-8c92-65cde2c5cfd9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79e47d9-6d99-49c5-99b8-68039e3da2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c30901c-dc9b-4cdf-a964-d1909b2ddc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2819671-9b89-459b-af24-93989162fcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff02785e-e1ee-4443-ae8d-7e3a1554108a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c0c04a-b13c-4249-aa10-72c9a9d99f76",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c2a450-f25a-4632-9505-ef756996dda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07820f41-7e81-402f-b549-e73fdfe06a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44898c3-7ce0-4239-9127-ae10ee3184a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04b50776-bf33-4ee4-9bd6-17fc5c9216ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fd94ac-d033-48da-b349-f44386ac16cb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e43c1b-bb8d-4215-9225-4d859aab7962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75af47f7-bf7e-4ea8-a4a8-7772ce46d4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dda4670-958f-4200-bc05-6797b96889ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae50bf1e-b737-4459-8251-b565a3daabda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a194ed2-e8b5-4115-8820-41a2eaca7f2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "993c4c05-77b6-4f72-9d05-92b60e336ccd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191b8566-4b7c-492b-b777-7d6a188d0f8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "645a819e-e227-4d72-b3bc-b2a0bccf2e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2112c5c-64b4-46eb-8fe2-0f8b107b7488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ab5eda2-7b1a-4dc2-8c5f-cce342823cb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7f96d84-570f-491e-8b00-19229394ec64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "875cb4da-874d-454f-abde-500a26ad96c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5fc6991-0e97-4625-a8c4-8aa617d7ed18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "beb14dc8-b44b-4ce7-b4ff-ca6cf254fcd8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18973a20-6756-4c75-8b4a-9fac7b5e4edd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c36889cf-4d7b-487a-81cb-9ff95f9a9cf3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef7b2acf-3891-4c8d-840b-4bf8cd6087bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d923e464-7b47-45b2-b56f-63159b48ef62"
            }
          }
        ]
      },
      {
        "id": "6473ff53-f1db-48a4-bc58-cbc0246d82bd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8939d58d-b9db-4115-ae96-529da85bc790",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea8ab57b-edf6-4df7-814c-cb4e7c8f220b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17ce15ef-ec50-4520-9c00-179ac17d4539",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c990e260-311b-41d3-b71f-6319368f0326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2bb2b81-c7a4-4ee8-9e67-8d758af60f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd65cbbc-9218-4829-8465-567cb20dbc1e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74589b44-5896-461c-9f6b-5f14f51c8f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8072d15a-ee08-434a-81ca-3d523eb817e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dd242a-3063-4092-bc5d-cb058cb482ec",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320c4033-4038-48a3-bb47-8dfcc89888e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49163c1-5f86-4466-a702-985a3cf3544f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c79bc97-692a-4480-a1d0-13e2b8e4c8d4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4793aa2a-29b4-4ce0-ae1b-8dcaa48e59be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1f2c54-e03e-4681-8654-291c7bcff487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd70abcf-c20e-42db-83da-cb1666290058",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca54f1a-4dcb-4bc3-87ca-f14ceaeeb89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc954c54-08bc-4bae-a63c-dce818250892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee38518-5f74-4fae-bf2e-392380a3b9ae",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a51ba0b-9d27-4669-a3b4-391f7cc25663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9676adf-0f43-4ac8-8346-b2f728966fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaa803b-e9ce-4074-a79c-a9e3d6752cfe",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5429ef8d-7164-4e7b-b79b-5a81c5c2c23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03edec00-5568-4202-9300-c16a54ed6997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bff7a1a-f422-4290-b1a6-7e98d129c310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ab2c65-9999-4e0c-84c6-dd2c4deeba76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f619af6c-96db-4044-9e2f-f19fc8c166c8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105cbdd3-661c-4deb-b940-dae96467ae7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "993de078-e164-499e-b330-bd4f0391a32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca32153-9739-46c6-b166-bdd20f2097cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e78decb-0aed-4244-8321-627e593b795f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5450ccbe-17eb-4b76-840a-761d048fe45d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d728ef2-0e84-43bc-83ac-c391a68b5584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c04c34-d641-48dc-b737-68bb5e11dd61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c87c75-dd4c-4e8e-b485-a9e2c99201f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c9557d-5359-40a6-8a38-eccac85482dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da421a57-5aa5-4a71-bf78-4c7e093e4cc3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a0db59-d115-4d4b-bb00-6fa7620901da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "289578aa-167d-4672-9fde-eb7554e223e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27d357e-0a10-4f52-be38-176aec1e5c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7f8923-9016-4b63-b590-b2f2c42380b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce3e38b-05e2-4eda-a1b6-8f23bb021e01",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119ce8af-71d6-4000-b27c-9a77af484e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1abb99-d536-45ce-9893-66a0247e40cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e723ae0-3c07-4cbb-acc5-26e4d9262730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d912a81-310e-43da-b5fb-2602125d2dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1b3795-cdee-40f1-92f3-8a7a2f0cc80d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3abbfd-2413-40d2-b497-f0cf2ffb0ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e9497c-decb-4238-8e2c-f7dbb1e45841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078fb01d-d020-494a-a33c-c3aadb4400d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7cc28f-364c-4521-9167-a95dd73f4b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ad86a1-98ed-48c1-b1c6-b223f275fbbc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1157c950-2412-46df-ae64-903167da0d03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d588891c-8122-4c96-9884-a2b6756e6c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45953131-ee15-4a97-a926-b682d8bc4f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eeafa2f-6832-4ac4-b754-98761b2bb7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f75b12-606e-4805-9a8e-500b486baa79",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2cd7dc-d021-4f1d-8007-436f89910b6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d31e2181-fb8d-4082-8bd8-9d7ddc0ee580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da19efd1-5d9d-4e07-9e74-d60943e739b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c346ea-e541-49c7-b2e9-203121541e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57eca77a-f940-4a66-8016-691adeda922f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fc03f7-7b23-4912-a6d5-abdf7d2e9d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb76a279-5a3d-4f8c-9bd2-7844ac78c0d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc1d512-2b0f-46fd-9545-952d8b8c8707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20c5ac2-3aa5-4da4-836f-a0dff2b3320c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9ae8c3-3dcf-41c2-8945-b3bcff384647",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5ef5c6-f46e-4b78-900f-f999b7050f0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "712e0115-e036-446d-b5ce-080b9baea286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620ea4a5-07da-4b15-a077-03438f1d5818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4333fa-589d-4ffa-bbeb-6e049e765330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bfb1aa-3e2d-418b-95a6-03126a7cc5f4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f4eddc-6b11-418e-98c6-6158111cda04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194b228c-6d39-440b-b350-bdf6bd24e64f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88738ded-f3b7-40a4-9241-9eb2720c3a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e826160-e194-4c82-a2bd-caebf7b69311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3260b1cc-6cb8-4c9f-a176-25121540191f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad748ef-70d2-467e-a55e-969c0d259d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6da387-78ba-48fa-8b42-384ff2b66d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849677b5-ee26-4ad0-92fa-61ca8477f2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824ccb8e-7cae-4660-b1b7-adf1181fbfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261d1949-f2e3-4a5e-a949-3c4a2da1b9c8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba8d75f-fd27-4862-9f69-d805d267a1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048cba63-0b9b-44d1-b58a-a75035edc09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad11215-ccbe-461e-bdfe-ef3d543c51c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c218d863-9b6a-4c06-964d-80293ef2c0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d595dba7-3f34-4b86-ad3a-728a22d63ae4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151b0f72-54de-4427-af49-78c5102fb8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9133dd-0184-47d5-bd75-3e51d51e1d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8843089c-df1e-4481-a28c-5857b9c3958f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8183aff-0cf7-4d21-a780-076f84996e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81966850-d3a3-43ea-83fe-67115cad6c1a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835f9b71-599e-432f-a9da-6bcea4559d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4326941-06ee-4d92-a51a-5aaef3686c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a71960-53d4-4730-baf2-d6edefb7ae08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110514c2-f8f8-4b24-839c-eb43191c4f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea89251-ef66-450f-883d-c1db18e03168",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5616ea13-78ad-4f9d-b572-942debb49b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c136d6-1f2e-47de-ae1f-20803bafbe53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94a96e6-4aac-420d-b207-9dac58b8a973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e847e2c-9b3d-44fc-8b0e-afe82bb92976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cdf8ce-a293-45f4-88c0-2a85957c2a18",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ca942a-482d-4e7b-bcb1-b098b512c604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bae161f-0d0a-4825-8b6e-8c50dcec21f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd36802-e612-47bc-9a60-4159b8ee0cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5b0078-d067-456c-aefe-341a91597349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8d8b09-ac03-4df0-ad83-8610a45442e0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66eb7454-0490-472c-b7e2-3d33acaaac17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10421064-987a-4d54-a53d-0ad46976aa4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fdc083-f2ab-480c-9290-2b699343932d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d24761-8356-4f58-80a4-63b0b73c46ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4d2b05-9b53-4268-b31b-a746c6284ecc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfa276f-b6ab-49c1-8f8f-085f5fcca905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f45e5cd2-a26f-4ba9-a1c5-86cd20d2d118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de302011-af6a-4ce5-a63e-9b5fc5caf49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd774db2-b2a2-4539-bae8-1d111cd8777e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a933a1-3dc9-4ead-99ed-5b8321e0e5e6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04baafd7-9e88-4be8-8254-53e917d66235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba996ccc-0e22-40be-a174-378e5f76c170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0090fa5d-d7af-4f3d-9f04-95f9b5ea7c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d759f0-0043-4bfd-a652-04cd122f734c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4eb5462-9210-4ae0-b6e2-448321ffc07d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6312f106-87e0-483d-994b-a1194c4dd194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ab18dea-cc67-464c-bfe2-c28553022162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0e5e70-ae27-44dd-a5a5-169fed8261cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff684e9-af70-4b7b-827f-21817979b273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790d9612-0323-447f-a69e-f36db020fb55",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a177fe86-b591-486d-8e3c-a8f9b5b2ac41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be5588f-f3cb-401c-98a3-b51979dfdbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f786398e-10c6-424a-a261-e81259fe123d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b216352b-c93f-4bb0-a90c-0c342a239129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e46a180-da0e-41a3-a657-8eea578ec4cd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b218868-11e7-4094-9452-bc9abae5817d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4585320c-37bd-4e29-b978-823e102f7f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aded427-e718-43ae-b738-d0daff815718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11205610-b065-4a57-9d1e-913fb8f9c116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7750f090-5895-4a1a-a88f-fdbaed390cd9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57bc378-2d10-48a5-bcdf-33ebc831a490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b9782c6-2fe3-4011-90e5-91e68e3a7538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb59eb6-e563-432d-a4ce-0bbde267494e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca20d8c9-ee44-4234-a980-ddcb22b4ced5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deab06d2-4174-4ecb-9b59-efb6fa097366",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0e1d40-1324-47ae-a6e6-3c24830619ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c921639-87ac-412b-9db7-3aac7552580f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b61d719-657b-40e0-88bb-40f6643cb0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b571d463-b65e-4249-9f5e-81f16ab5e74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e701a53-3846-431a-8b58-4b0b6eec313d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ab1e63-0929-4623-b5c0-81e6c4884079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8fc813-9ef9-412d-90c6-02e21d6b1d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d28e75-b769-4e75-847c-0dc510c41abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8336726f-2a49-4f61-a149-fe7652c89dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b746a6b3-b963-4b6a-a00b-223e321cd7d0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06cca02-6a8a-4184-b9ee-fce3660c3462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8edb4133-e9ea-4c16-a81b-1f4d947035d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca5b486-c72e-4230-8032-a29a33c687f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd575c57-5753-4038-940a-ff7aa9b30fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ba84c0-b9fb-435e-ad4c-a7f7dede3343",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83ac5eb-a090-4924-8f23-4125dc7953ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28dc191b-2a11-4560-a119-299625e9fdc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0046f388-c633-4131-8ed0-6d29658f9741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0865e5-51fc-4d4a-b3b4-418130d03fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5958f81-c7a3-40c3-9b64-ebfd664b2b61",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7408eb75-6b26-433b-b76f-54a62c17272c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f5f6d5-ba5c-4e28-ad63-278b1b0bd7bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9896b3-61a5-412e-ba34-e3d8a9fc2ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8a2ddf-0d04-4a16-b27d-d9cdced3c652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e00cbc-95f6-452d-92e9-887f4d716a62",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b672dd79-ec7d-46f8-8594-80108995a6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f08e9a4-0b0c-4391-862a-46e9e1415e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254e4457-2b35-464a-8e12-399743502fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85961dd3-3ccd-4ed3-a19f-c0e0c30308c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74974fe-84e7-4515-9410-86b295b73f49",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf211abb-c17d-430c-9055-f71555cc8733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e68a99-3aa8-452c-8ab3-27795a036f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb8e12d-80bd-44fa-81c4-1d682933f4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e76dcb-b550-4707-95a6-2f1e8b6b33aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e79597-6488-4c43-a035-61d2f2e57e9b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dd1ece-fc6f-4ff3-9794-b8e6541be544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2937329d-7706-4fab-b286-6b7f822bce41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951ec2c8-8bec-40e7-b0aa-26c63be743af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef1ccfa-5343-4d24-b530-41edd63bc6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdf9eaa-2707-4e30-96f1-ad0e5b448a78",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6638129e-dc7f-4168-8569-d45a102ce4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e602e25d-d10c-495c-a1e0-5f2eeab99244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98000b91-684f-4db2-b1e9-00121adef07e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e783582-550c-4b58-9a9c-04c43b38645a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4103f46d-1196-4e55-9633-48dbfd3cff02",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3affc9a6-7087-4cbb-8525-e0f6a16a6fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a8c304-b03c-46f6-98b1-3eab215f0b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d8588d-acaf-4bcc-90ea-ae827f91f4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2187c6-4583-4581-a49e-c27a66bec5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0c2a9f-043c-4274-9081-69a86c171891",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1336ab-8f7a-4f6e-8f25-f3d43c1109e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51179327-a4ce-4bf8-a725-4905c932d7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cee60e-2949-4cc6-9b79-10663388efea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a9f602-7830-4ede-ba9a-2b82b24cbec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6510cbbf-efa9-4880-981a-07ef7cabe37f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cdbf5f-e491-4fee-81cc-799eaa4caca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11268654-3df8-4e4c-94d1-03344212ae5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4f86c1-6dee-4dbf-85cf-6c6c82d052b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575fffbd-e611-475d-87a4-0320d1c37264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d80f3cf-f36b-41fe-835b-ac5596f30ab0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da95df09-01d5-4c4c-81d5-63cd21f5493f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c0f5c8-f5e8-47ee-add4-fae34efb4427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908bfde3-e6c7-4615-ab1b-fdfb8d5ad85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d2cd03-faa4-4d67-80e5-9e9053e81184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e3bc9e-17f8-4823-89c3-275912274e1e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efb5879-8349-4699-b6f9-b214250196a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd2cad0-fc76-4af8-aad4-ac5703ac8a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbbf6d3-95f3-462e-b74b-a13059a6d3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1323be8-c66f-4cf3-b1ca-70c5a4349f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e35798e-bb00-44ca-ba44-b05351b606c3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b16eba-239d-4422-a0bf-d92aa7bb7639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19801168-0329-4b44-9a0c-0c0bb692f650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a88982-14bf-4765-936c-aa5035b11e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae68c7b1-17d3-4b32-aae0-e495e82e044e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1dde68-f511-4690-9311-7ce85ae8d0e5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7566ded1-71b3-4136-bc7c-b3a71d1675bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30bf3f6-fedd-4853-b4fe-c426f5f86495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805e81cb-f477-49f7-bc2d-b920b34a5a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6572d1c6-28b8-4518-b9c4-742c9d476c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb9385f-1532-4653-aa60-86cfcd6fc8af",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998aca9e-89f6-46ae-b06c-19488c94523e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12afce9d-4a7b-4812-b0d1-c252eb4e4414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff63af1-ed0f-49c7-aec2-9eb47374c231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f90dbf3-a09d-45a0-ae19-4e896affb487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc10501-9b65-46ac-ae94-c3bfafe3556d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae7a7ca-446d-4ae6-b3f2-fbb5fb9d9b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca39d40-44ae-4b7d-93c5-3cce9281030e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd4c9fb-b89a-4719-97a4-2761b59366fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204b46d0-65cd-4c7e-95b4-9ece5dc7ba7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d3671c-b598-406e-a058-018e9080f9a2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8981e0c5-55f8-42ee-adf7-1a9b72acca43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8866ca3f-d68d-4922-be8a-9309b430ce7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e76a2e-797f-4f12-a8ec-d47f2b0fd14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cacf50-c760-486d-89e3-ec649c64f6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6413cc3-2ba9-479b-9245-7c5877861325",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3079199e-4fb5-4918-b382-5a246e1e883a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f343ee77-9d07-462d-bea7-08855376693a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c85eb4-ff72-4ef6-88f4-285adab687a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94791389-203c-4bd4-886f-b81423e860b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798bf82e-f915-42f9-a445-205c1817afd9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb9be3d-0a1c-41cc-acd3-ecec58870a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dae6954-170f-4d26-92c5-0a22f1815cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3d340e-c412-4152-8e65-9bcc9cc5e9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4920f10e-7af2-48a0-8784-a91c6df3fc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0497243-8d97-46ce-a20e-3f9e0e671923",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31d366f-2607-4bc8-a933-d389f72a9748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21fb393-78d4-424b-b2dc-55287776d7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8970e0bb-e571-4a4a-9214-58242d7ba4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53da6599-8761-4cc1-ac72-2c25e15445e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1dd898-d5bf-4774-bf1f-7fec0e43efc5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7317db8b-9628-4e51-8404-dcac4ca714d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cea1380-b580-439d-8904-57d0b989d476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0bbce2-34a4-4a0b-ad50-c278f9a932eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552b15dd-508d-47f1-9abc-390ea5661080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c161d83d-5c17-4b3b-8aa0-a234bc07c188",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2b6d09-b043-49f9-9430-4c08d26a7e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef58009-4517-4d05-bd13-ea536ba933b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05679b1-05fd-41f3-b61f-ae489dbf1a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029ccc62-36de-4d20-b0be-5cdac2c7fbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29001ba4-f246-4fe6-9beb-9dd1d862c8b6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dcc9c4-f45a-4f9a-a887-94b184ec717d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a8be01-34d4-41d8-ba4f-de411e6b34d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea798afe-3662-4e06-ae12-5c86a92fda97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbe1527-a94c-49aa-a345-bd41f02a4944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710a89d9-6118-4d76-a07b-2ea22e84b1ef",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c6407d-5169-4a2a-ab81-2f918dabce91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de91673-9303-47d1-b514-c28cd4547e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba85cdf9-8374-443a-b034-94eaf98f58b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f898715-09a4-4484-8c52-77f4e33e70ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c3a4bf-f666-4477-aca3-4845d3133b4c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f5cf9c-2c43-481d-8447-838a15c7119f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098a947f-3153-45f2-b5c5-b394b04d42e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d84598-1a01-4146-b525-21590d106530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64e4107-3e8f-45c1-96fb-dac874567e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d69de8f-4609-4086-b580-46b1fd7cd860",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2087eea-1dcd-410b-90c4-f7a826ebef5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de7f1b8-c87d-40a4-815f-46dce42d40c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d487ba-294a-4069-8959-bff4198c3671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189a62a3-0132-4340-a583-e4d44ceef5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd2c455-a61b-4c5f-a2dc-fcbdc1b47e4c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0304e24-9ccb-4e0e-9e25-86ddc66d815c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab2a877-d1d1-4955-b03e-2c083d262d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644cbe4a-2d90-49b8-876c-812c7682bd3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef78588-0f0a-4fb4-9ab6-dae251e3242b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbfe8aa-5bfe-498b-a8a7-db116f631472",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f8601f-3af3-4834-ab33-7907c4245623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36989678-3b27-49c3-8a96-4c9c05dca703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3600c64e-9277-494c-abe5-2dde28184bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2623286e-9925-4d0b-a2f1-8f55770042a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc33d12-a137-4d99-8d31-5f44554114aa",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0268f937-435b-4efd-a2a6-a3939a33be34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c630f682-b808-4bc2-b4a8-0817699cb526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf6e823-bcf4-4146-9cd2-0ca3c00235f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164df6d3-7d1d-4b5d-8694-6ff3b2a402ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bc8037-1d91-42e1-a9e4-9524ece53d0e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c80ecb-714e-4d54-9865-d4039d201c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb56be1-dbc7-422e-98cc-4771d9887661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa54179-db30-4f1c-aa50-74c5702c83e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1fa6eb4-ac7d-4db0-b5af-d06de4541237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ae40f8-3f95-45e3-a05b-e0121c1a6562",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e320992b-85cd-4a90-9add-2c09e51aa169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f713d0c8-0dce-4267-b3e5-fb5f32eb0c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891cdadd-4ac9-4982-9e82-96189e06102d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03f59d0-2171-4cc6-a419-7eef967546b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab72860-0169-4727-965c-a3068aed3bf8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6502d0-8151-44de-a57d-b87acd4036e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c39f811a-877d-4714-b39e-23862392bfca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a928d077-1dd3-436c-922a-5d1cdd2f1e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5774027b-b8db-4344-81b1-c1884ec58b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7997fdeb-6fc2-4b19-a8dd-efaf58fe0ca1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a342f0-542b-4bdf-984f-946d2fe216de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a52b92-510f-41dd-a826-4853865ca889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9bb8b3-b4bf-4884-9e70-e82b8a5b2775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae34a69-608f-4096-b187-dd6ee5e3cc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f138b7d-b147-4e0d-a88b-7ddb97a80dfb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22dffa9-c125-4985-9f14-f6d4d64e3baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78d8b317-5ee8-438e-96cb-52e80efe1bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611b4135-6a4c-4c64-8017-c11d3fa9dd24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ec1a75-f6e1-4fd6-9625-5548cbebc2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2753eed1-c5cc-470c-a70d-7b75a4b86e0a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbf38a0-82be-4f0b-8eb6-e93021250460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f0be7a-7116-4627-bbcf-389c298ccc0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb924bb-1820-4bbc-9e5a-16ee49f20ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202799a3-8eca-49b8-b8e8-e69b99c30120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691c0b86-14d2-4078-a0f6-9129de9acf6e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035d49c5-6bb8-45de-94d4-a66fbd7340ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc1fbce-3ae1-4382-a3d4-7b70cc133721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc6ebc3-31b8-4e08-b270-9f4beff0b24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17aed006-de7e-4577-8e2f-f5b36e3d2491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12252ca-3864-478e-8886-df2307b2696d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f95882-07f6-4f21-9757-deb563e8dbe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc3cb928-fd84-4061-be08-14322454c75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe56edc-fffb-44c2-b73a-4f7381de6a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05442c2c-588f-4566-9f1b-4365ff303be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5631056-f1a6-459d-b4c7-ac9595536d71",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4214fc6-eccc-4ae1-b17d-0c7d5845eb7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c054b1-fb27-4d9d-bb8e-d371a6027dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fa3be3-b439-4444-9d47-100c61e22ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1667d009-4478-4b6e-9a67-f193569a7a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22fcb31-8903-4f87-b3f4-14a293373237",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012a4a67-bccd-4a0e-9749-bef9c84aff4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83e14f95-552c-48a6-92ab-7c33fb8a15b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0049068c-3e71-49a2-bafd-694222eb48e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c1fc49-df9c-45df-abe0-f96a8a151f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010fa63e-1743-471f-9335-77967f167385",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b4b3a5-ed4a-4b1d-89ff-edb081c829db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ba1803-715b-4058-aa97-21d2d23c4b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0ac716-65e9-460a-b023-7ec301fc995c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac567990-f099-49f8-8dd1-531540766528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9ba523-6c40-49de-b410-1e88c39c47d5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65dae8a-571f-41ad-9b2b-13074997f5a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f93e292f-55eb-483d-840d-4fe28b6aefdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151cf809-4148-425c-a999-3e761d93f711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc591bf-0470-4a41-b00e-a7eac0fcd616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d5cb74-fba9-4b4a-948b-4c5d3e2aa11c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e45a60-f5e1-4f4a-9b35-afc2ab227f1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f3934b-d4b5-44d4-b4e6-4809afed6133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25db8f90-863c-47ce-87d4-0b7654b623b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d21f7d-8c25-4a6a-bb98-629c32f769b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bc40d0-17ed-4070-92b3-0ce49580c9ca",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e67332c-ba97-42ba-9d8f-3159ef7a70ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f33432b3-02e9-4fea-b273-7577eef7b3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc09075-3683-483d-a939-bb314ba01950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef5d5e2-844a-453e-9ee3-d6dc463dcb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27467dd5-95f3-4467-8b7d-2d50e85f861c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947c137e-bc31-452a-9680-0c1b8698835d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fbcc160-03e4-4b76-b99f-eea5c249f5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f927777-96cd-4ce5-b024-91cf01d9f410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75aa47b8-5ae0-4750-942e-b6db7d29f8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14f4563-c20b-45da-99a8-1a4eb77ead63",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366df77e-0377-44c4-8931-61613026c8bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fef6132-51e8-491e-b106-ac31333cbeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f37a447-4782-4704-bc30-8790b0322cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2363138b-e9a0-41af-9bda-97c4e3406934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ddbb96-181e-4ed6-93fa-e72605718345",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec69716-d7a1-4419-a954-403a31c6e42b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1dcd266-b4df-4916-b44e-0389a5087f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763cffdd-4c50-425a-a7a7-4556cdfa1c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add16f78-3569-43dd-a63c-49f4a3c37029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334d45fd-fd0a-4480-817c-32b951cff2cd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b8e41e-5369-4ead-8102-48ed59713d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012ac9db-bfab-4635-8346-14f8ca3827e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0728fb-9f02-44d7-9f13-828ab14e60d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c35a02-3cc5-4f4f-a3e6-8aa3c96982a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de73d8d-b8f0-420e-b3ff-56d8c50f9e8d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d47939-5ce9-4267-8e36-890706f14b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d99bd1-c136-4c18-8a6c-394788018915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe70e2d5-e99a-45e1-b283-7d79608e41de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e62079-d29d-43fe-bf65-cf50f447ce06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eb56f7-6544-4e37-9ce2-627636139d6d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e23d1ef-7e1c-4be3-9c19-2cb1071ec7e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ddbd910-88a2-4dfb-af05-860cb3bb0a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9795ea98-c1b6-4f21-940d-789c3fff9162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81199bb-1365-4682-a19e-164adb95a98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f6dac3-b961-4ab5-b3d6-d18caa796f74",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a9d0a9-21cb-498b-8864-01e0cd210e54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b79af874-2eeb-4f93-b2d8-a9a6bcb3c46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88146a3-2e8d-43f4-be91-e6b2c42e5363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9943bb-3e7a-4756-9814-cc161d3ecb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc81f483-ce50-4fa5-94a2-1ca167dce303",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279331de-5f24-4c4a-b391-56c975bd83bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372deb0d-0c74-4b61-a13c-d8103503459b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4477b9fa-6dc3-48ba-9cc1-7e2f22c60220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc5efe5-8373-4cb0-958d-f5f41480f73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785dcfb9-c10d-4a4b-8491-a156938c8fec",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639a5d90-0382-4115-8df1-648c56d5524b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da375517-d864-48d7-9050-5c64c7b55774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b8d05c-9ccb-4d11-b319-5d38cc23c9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43538037-1031-4669-885d-5c3783607a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a104d1-8420-4458-ab22-2b38585bb814",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13ad72b-0d37-42fe-8be4-decdf8da1d76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67823200-9adc-46b3-9ae2-026e54ed05a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6300322-0bef-4ea6-89fa-3c63caae8e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acc3fbd-96d4-49fb-9f23-31b983b4f4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58c4cd2-9d2f-48f2-bee2-3ceb9f2a6239",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0207fb5-93f2-43ff-9d23-75a0578731d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c30835d-e4cb-4784-b784-ba3868df760e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c6c624-5cd3-4a47-9bbd-605c5339d5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de225426-91cc-4f14-985a-2cdc540f68a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba6849a-0f16-4f69-835f-401cdbd1fa3f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f939d8d1-19e9-4562-9ab8-92b512eb4a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "591ccc18-daf8-4719-9242-d6f7f4a0979a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3183aac3-c977-4800-8206-c532a855d0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403b62cb-1946-4974-9cba-933863217002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1594cf-7f86-455a-a344-bc6d8a53f5c5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e00bf40-fb6c-4f64-943e-c735f11e552f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecb6a0f6-07e3-4f14-8706-1bc5ccb3e4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85645ae-59c2-40d1-9ab4-68ec6fbf9b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94421db3-05cd-48af-8bb8-e34515928e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2fd367-6e86-40bb-b377-e35f43454682",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f296195e-1b7c-4d93-aee8-fe0cdc028738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f33b7e4-acab-4f56-a1b7-8ce97844b2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21758b62-ec41-4cc3-a7df-df78a304fd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eba963e-28e7-488a-8135-3e9407cb8739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f132e21-ee2d-4086-81e3-379765f52622",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbdc8d4-8d35-45c1-9fbc-27b5864d801f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48fe2113-3d42-456e-b158-233ccf3e8e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e11e81-e68f-478a-b2d5-16aa7745ec8a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd64c19-02fb-4de9-910c-19a871fe0c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5dc96f-9f07-4ca7-be2e-9cc430c48b2e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a204bf7a-228f-429a-a496-6ce0731c7466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "392be2b5-fe09-44c4-aedc-3559e5da4c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3e2f8c-9817-4910-8cab-04f2ff817b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90ad68a-508b-4d6c-8497-5428a72534df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b4b322-16ac-40ce-9649-f1776d2141ff",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0913eb-58fa-404b-9ce0-98b20f4b459a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb5f1db1-b508-4f32-b250-8e2cb61ed087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75994537-41fb-41e9-8ca3-c5aa7bc5fb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0745a575-4beb-4045-a223-c9c192e6b7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42831e16-fadf-4424-a57d-03191cf5e8d5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60bcdd1-e601-4bd3-8ff0-e3031eb9e9a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3b785a-a51b-4c28-9bfb-07fe9820c847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0c3808-06a3-4856-849d-4fe2ef96b0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2562908e-8db3-4720-bbcc-b44d27d30dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45830ae4-6eba-4c96-b32c-48a501d305dd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f050c353-c0be-4eda-b7ca-c24ed4a66ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df952208-dd28-4742-b45a-f8d5cbf30e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703c71db-515c-4d4c-a54b-dfca2da689f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4283e87e-eb7f-405c-ab8e-c86e85615be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f5ce2e-a1db-43b2-9f50-2ba1fe1d8a8e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744a3cf7-ce78-417f-92bb-41ed595bc48e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6df1892-2b1d-4444-b391-1f7372f564f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7299525d-1ab9-477d-8d34-3da8e197ae7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c10ab6-6e00-430c-a7c6-44aa5f8b545d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf4fa8b-816f-4276-bfcd-d76167777c89",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30663d74-20d7-4f87-9001-35ec193f2c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6fb043-c066-4332-9a0a-c5431e238356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1346a8a-3334-40d6-b6a8-7ff91eefdeda",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4484539a-ebfc-4b6f-b9e3-9c268cc50600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3125a60-e52f-4bc8-b17c-140240d7f47b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f41972-b50e-4cc4-b901-8e5053ef102a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214df90a-e804-4cdf-a152-980e3204581b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e3a600-12c1-4db6-9b76-8010c4e1a07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2863f8a-d66b-4bfb-9c0f-ddddb77d8d5e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "991e2936-8a73-49c0-83d8-2095e9c8a31c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf856da9-4f89-4529-bfcf-b843277dc94d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b255142-2c4c-4d76-9404-a59bb3abfc02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66630a40-e1e8-47f5-944e-2abc7aa3a2e3"
                    }
                  }
                ]
              },
              {
                "id": "bbcaf13f-7531-496d-a8aa-07837b67fd8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4dd9d2de-1bfe-448d-9f7f-42a2357b4b2e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb140820-2865-4755-889f-884514f2a37e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "14f6d5ef-5fa5-48ee-a930-76bed6dac4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9633efe-8f71-4c20-b710-4e659ba1a139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6789efaa-b81c-4077-b73c-ea3ecb044ae1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72401f76-d0bf-4c46-b359-bc049379a6fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1aa9146-ddda-4dce-aabe-62161d57a3fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d00618da-76ca-46c9-81ea-9dc55ece669e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cddb44cf-3188-4092-942d-4d61c32a9f3b"
                    }
                  }
                ]
              },
              {
                "id": "793ddc25-3daf-4572-9cd8-3c0c3838e306",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b4c7cee8-d812-4869-bc0a-e0f9e06e5df1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164b75c5-d533-4240-b128-05aacfe158c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f1874405-74e1-4f02-a9ce-816c557b5804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eddd14b-191e-4ad1-a220-8fcf6c8fdf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f929fd5-dcca-4f72-9369-08323066a2e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f71deba8-b09b-46b8-9d9c-6826e8d90208",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a2cce37a-bfe4-4577-a919-d7be1c6583dd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08bd20f4-ebf2-47e8-ab5a-e33be306cd11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6b607f5c-8358-4e2e-9507-49b80851dee5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3b98af1-73a5-4c48-96bc-006301da0d98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5beefad-cd34-423b-97d3-324c35189d78"
                    }
                  }
                ]
              },
              {
                "id": "3690bfab-8f73-49ea-b4e8-2fc8053b47b5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79e8db59-cfc0-4703-9149-257b6fa913a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "63d81ec4-1993-4379-9462-9f84a709e55a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e6ffca8-b7fa-49e9-b89f-951d85f89935",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28e5b8a0-3a44-4722-b529-a181996e4456"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d9158c8-ba8c-431a-8513-3a199f2fcfc4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e915ebf1-9208-4197-9ea0-0b935d07b772"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b23bf8b-204e-48e8-9e69-3709ffa69169",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56c28f80-254f-4ded-a92c-c5ef5ae54bb3"
            }
          }
        ]
      },
      {
        "id": "6b3790fe-a0ba-4343-a7b9-f9b21db7b02e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ccf121a1-e1cb-406e-9203-071a3fba94a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ac1830c-55ba-4950-8f64-5f1b87bcfadc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "340961f2-243c-4911-b239-83116fbed3ea",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ee9b0d-4130-439c-8153-1c975b43ce2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "acefb396-9d56-40f4-aa5c-9e16cbe310a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5984ac12-8580-42fa-a5ee-c69b7b500b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70493925-ae15-4381-83cb-eabcf88e81b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f818294-9569-407c-9532-38bc6c4d3865",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b188944-c779-4fcb-88de-145208a7cfb2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fba8ad2-da5c-493c-b02d-50694ab0ebf2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c4c270a-bdc7-41ee-84a5-418ba6a9ae75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02ad89ec-b984-40d8-930b-b8e958da76b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8fc68e92-a3f4-4308-a53f-538a5e51dace"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fd6ce2f-6b94-4354-974f-448835507da6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "009cc40f-fd1c-413e-83e2-a9ff03a3b2f1"
            }
          }
        ]
      },
      {
        "id": "d77d78db-641f-4eed-912a-292c170b7146",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2d5ced45-c813-4d24-8155-c024027cbeed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffccd720-2cd6-44f4-9208-39fac7026f8e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1268bb3d-f070-4e29-80a6-9988881e6630",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb030c0-9053-4c69-b5c0-db69da6b57d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ce1cc41-b0e0-49e9-9c61-a8920fc0b925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe5877d-71a4-4c08-a5d3-196f7efee0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39df4340-4fc2-448f-aeb2-9d540a96ebfd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d757ecd9-397d-44e7-96dd-5004cd9eae17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5923fac-2769-4b81-9556-4fe58738c75f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cb9ed0f-75a7-460c-875a-dc93811ec703",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb33a8ae-0261-4c29-a2eb-ded556d9741e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a65cf2f-c679-4013-86e5-a3def121df8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5162dc4-2e4b-485c-b4d2-2406452c13db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e187d5be-d5d7-44cd-9365-d8da3f365f75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "feba0ea4-3c15-44b3-b07f-d6f3c619b6c1"
            }
          }
        ]
      },
      {
        "id": "1fdb7451-75e7-47cd-aee9-75d899964e84",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c8d2dc51-5995-483d-bcd8-41d8ab232cd1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e65baf4-ceb1-446f-a92e-5fccbefc7b88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0599bbd3-b875-4cc8-a5e8-9f37f668c725",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a326f0-261f-4ee7-b8cc-67726de526b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "451a58f5-e54f-44f0-86da-9a295bfea781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b78508-4291-4249-9233-168b8a61e484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dd303f4-67c5-4313-802f-85c4e57d67d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5a47e49-0f62-4c56-a43f-b526e08692da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84a26377-2cfc-4078-8fe5-c93eee207d30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "508f41b9-a2bb-4598-98ed-55f409f4f450",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c89033c9-2477-46a7-b09c-96f533db0ca1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "196367e3-f595-43ef-98e0-60f550aaf972",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "69cb4e8c-6776-43e0-9fc2-6e18fa58f5c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc0348b8-6c09-4d24-a9b5-2a4db394bb25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a7ea031-56f8-47ee-8094-51fd077eb5f0"
            }
          }
        ]
      },
      {
        "id": "64a02335-1b1a-43b0-b92a-5bd82a100461",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb7093b0-060c-4a18-a35e-a01536cdc61b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcc97933-eb3d-4812-a322-d024dd0787a1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3403ca05-afa2-4575-bede-10d21e5d0b70",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a344497c-0600-4a75-892f-e792fe17054f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4b7682f-13d1-4f2d-93ac-44bf9c447b1c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 109.28968253968256,
      "responseMin": 10,
      "responseMax": 11067,
      "responseSd": 727.0959300400821,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717979974666,
      "completed": 1717980010690
    },
    "executions": [
      {
        "id": "7a4e1f38-d131-42f5-87db-99d955ad528a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c68b72d3-ff5a-4a26-88fe-2b25d0a4b8c4",
          "httpRequestId": "d8b51c7b-a6f4-466b-8056-1030732a35e9"
        },
        "item": {
          "id": "7a4e1f38-d131-42f5-87db-99d955ad528a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c0bbb283-7737-4e0a-a16e-7d2a53c1fb04",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "92c05ad5-5a3a-42f5-8eb9-f81fc2eb1937",
        "cursor": {
          "ref": "cb739665-0642-4201-ae1f-fb78961ffedf",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "204fd459-94e3-45c3-8069-9d5e192f5237"
        },
        "item": {
          "id": "92c05ad5-5a3a-42f5-8eb9-f81fc2eb1937",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "41f03004-4d89-40b0-8e81-132aebc3fc96",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "20fd7b6a-99ba-47ec-8f05-cb617736da35",
        "cursor": {
          "ref": "465df1e2-d875-4842-8bbb-22205c96e0de",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "af45d413-7f98-4d3a-8db5-7f7063d05e0e"
        },
        "item": {
          "id": "20fd7b6a-99ba-47ec-8f05-cb617736da35",
          "name": "did_json"
        },
        "response": {
          "id": "60732c6a-b142-4630-b2bc-d1b3c365637b",
          "status": "OK",
          "code": 200,
          "responseTime": 360,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ab8cba-a785-45e4-96cb-8a6a2e26116b",
        "cursor": {
          "ref": "7a00e292-2439-41e0-a3b4-eae013e44fdd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e64ee173-0fdd-4311-b2e9-f7a04df39cd8"
        },
        "item": {
          "id": "84ab8cba-a785-45e4-96cb-8a6a2e26116b",
          "name": "did:invalid"
        },
        "response": {
          "id": "699d75a2-8bb4-4d33-af5b-44c5a40823ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 217,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ab8cba-a785-45e4-96cb-8a6a2e26116b",
        "cursor": {
          "ref": "7a00e292-2439-41e0-a3b4-eae013e44fdd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e64ee173-0fdd-4311-b2e9-f7a04df39cd8"
        },
        "item": {
          "id": "84ab8cba-a785-45e4-96cb-8a6a2e26116b",
          "name": "did:invalid"
        },
        "response": {
          "id": "699d75a2-8bb4-4d33-af5b-44c5a40823ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 217,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c345907d-d292-4d85-9fc6-c3843c5e5238",
        "cursor": {
          "ref": "7bcc24fe-0963-45c0-9946-8d7d3f689877",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "90182f12-0581-4bc5-a44d-58113c48208d"
        },
        "item": {
          "id": "c345907d-d292-4d85-9fc6-c3843c5e5238",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6f55d303-499b-45ec-aabe-ed855ab3583f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de498100-3de2-4e4c-b55e-70d299643dba",
        "cursor": {
          "ref": "783758ed-5605-4319-80b8-b2ed510ad2ca",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5aca4605-dcbc-4f58-8862-b61abbc217a4"
        },
        "item": {
          "id": "de498100-3de2-4e4c-b55e-70d299643dba",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e3deaa1d-6e09-45fd-9242-4548065b32ac",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27568141-5f1a-41a3-b4ea-70a9c0fe3b94",
        "cursor": {
          "ref": "e5cd8189-3c14-40a1-b8be-cbf2233e53b6",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b5577745-d151-4167-9ab3-9851b9184a13"
        },
        "item": {
          "id": "27568141-5f1a-41a3-b4ea-70a9c0fe3b94",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f1c117c2-d0ca-4623-8ce2-07429f78c6ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965ae724-a2b7-4cfa-a881-6fbc94f3b0fe",
        "cursor": {
          "ref": "1a95e5dd-8bb4-4bf2-b4a3-440e8084e1b4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f4b5f15d-8aac-471f-848d-ce6b9a3a2d8d"
        },
        "item": {
          "id": "965ae724-a2b7-4cfa-a881-6fbc94f3b0fe",
          "name": "identifiers"
        },
        "response": {
          "id": "b79d48d4-ef6a-4605-8423-feec1bed0447",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62a509f-c22a-4f69-abe2-172c9f68c4c9",
        "cursor": {
          "ref": "165742ec-866d-4f07-978a-08cdfc399754",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8500c3ea-4582-4d36-9aa9-94948c49dbc1"
        },
        "item": {
          "id": "c62a509f-c22a-4f69-abe2-172c9f68c4c9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d9b82a1f-2418-47c9-bcb3-11b4859d06b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4a3c87-61fa-471f-b0c0-fc688b941162",
        "cursor": {
          "ref": "460357cc-7907-4e16-83d2-f96c4b24ab51",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cb6b6bfb-bf4e-4e0f-a4e4-0e006d773fc6"
        },
        "item": {
          "id": "db4a3c87-61fa-471f-b0c0-fc688b941162",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "031a4351-36a4-480c-a6ec-b0584e5a2427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3deb75-3b5e-4aee-acfa-a7f466f559b2",
        "cursor": {
          "ref": "e097b4b7-9e80-4844-ac0d-5b0bba3da8ca",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "febda29c-96e5-458f-8bf1-ee070fee6d81"
        },
        "item": {
          "id": "2e3deb75-3b5e-4aee-acfa-a7f466f559b2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1e202579-bba1-4d67-a047-5612c838e1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac12557-ccfe-4060-8fc4-34b82c25ee1a",
        "cursor": {
          "ref": "41dbced2-80ab-42f3-95e0-184f83c805dc",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "86934668-e0d2-4d87-980a-c38b4364e154"
        },
        "item": {
          "id": "aac12557-ccfe-4060-8fc4-34b82c25ee1a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ba145f2f-e69b-4604-9847-2ad0ab735913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132253b5-0fb7-4e99-b480-db8b9d722811",
        "cursor": {
          "ref": "7b37d2fd-9ada-48df-90bd-a60327628813",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3cf499df-e6aa-471e-be11-6073215b682b"
        },
        "item": {
          "id": "132253b5-0fb7-4e99-b480-db8b9d722811",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e0e38636-d33f-4010-bc03-dda238eb584b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870681c1-8ec1-4652-8dd9-bf65ed2956c1",
        "cursor": {
          "ref": "75fa6d76-bc09-450c-bfea-a76d8fb65dcd",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ec231ef8-4ab1-4917-99e3-f60eb24901aa"
        },
        "item": {
          "id": "870681c1-8ec1-4652-8dd9-bf65ed2956c1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c116ddb8-24c0-4c2e-a8d6-dc6ab5987ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27142de-d8ff-4df4-96cf-f5b13d8542f0",
        "cursor": {
          "ref": "3fe5abbf-df18-49ff-97d8-073d92997805",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9010cc63-2347-4cf9-b85f-7f1449b153be"
        },
        "item": {
          "id": "e27142de-d8ff-4df4-96cf-f5b13d8542f0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "38bb19d8-b633-4df4-92b9-018c2bc86628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3ee61e-79ee-4520-8a4f-edb40745d846",
        "cursor": {
          "ref": "14a90b81-cce6-4c94-be7b-052b2a697450",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "819db139-fb31-4c66-9c66-28fcc3f54e2e"
        },
        "item": {
          "id": "0e3ee61e-79ee-4520-8a4f-edb40745d846",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5e4ecc03-30f1-4a15-9d48-bde30a7071ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13c592a-6f48-4d8f-a3de-e97eec919345",
        "cursor": {
          "ref": "2608dfd7-c6c9-4151-9a9e-183b8aed5099",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "75580ef3-6e4f-4a8c-8847-9cda960acded"
        },
        "item": {
          "id": "d13c592a-6f48-4d8f-a3de-e97eec919345",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "58067b93-c8b8-4119-a100-6ebc93531184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c49b30-a27a-4869-8f56-ab8f82970aee",
        "cursor": {
          "ref": "e8908048-0603-4b2f-94e5-6295ab32a838",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8c26884d-33dc-4861-af2c-405bb0ebedc5"
        },
        "item": {
          "id": "03c49b30-a27a-4869-8f56-ab8f82970aee",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4d2e6f3d-b975-40c8-84ec-0917cf27c2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66750536-aada-4169-9baf-e63d7fb7befb",
        "cursor": {
          "ref": "5b9e229e-81d8-4d07-9c87-324c23aed64d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e7ec421e-4839-4afa-9ce0-f069110261db"
        },
        "item": {
          "id": "66750536-aada-4169-9baf-e63d7fb7befb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "33282e84-4756-4ff7-aaf7-8158852c13f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8d35e1-a3ad-400e-bc37-9db78346abc7",
        "cursor": {
          "ref": "86b5bc62-9483-4af4-89d3-081e82d202d9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "70216eb4-1df9-499e-856d-ac5523f065a6"
        },
        "item": {
          "id": "af8d35e1-a3ad-400e-bc37-9db78346abc7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c605c84e-9f06-42e8-b2dc-68b50e377616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0dc60f-3734-4bed-b980-0927ec9dca57",
        "cursor": {
          "ref": "7fb85c02-08f0-43df-9966-d5d78e559ff3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d1060992-5563-4e71-b70b-e13cf4ecf827"
        },
        "item": {
          "id": "3a0dc60f-3734-4bed-b980-0927ec9dca57",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6d9fffc7-b6cd-40c1-bd65-46f8a4814825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55a1d47-d720-43bd-bdb0-2194a0d39c62",
        "cursor": {
          "ref": "ad880eb4-b1ca-4b6f-bc61-515dd60d4cf0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0d5f57f5-9006-47f9-ab55-58048986b9e2"
        },
        "item": {
          "id": "c55a1d47-d720-43bd-bdb0-2194a0d39c62",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "acb3f454-3a00-42d1-9d1d-6f7725afb166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643d85bf-1f71-4197-8911-5e69439ffd99",
        "cursor": {
          "ref": "83deaa18-e52b-4477-9c7a-1ec44b6b8633",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e6b06ef1-ab8e-4abb-a65e-01ccc8672476"
        },
        "item": {
          "id": "643d85bf-1f71-4197-8911-5e69439ffd99",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1deb276b-d070-4531-98a0-7c3e9e465f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01079ab3-a169-4305-bbcf-5e475603db8e",
        "cursor": {
          "ref": "687ea1b9-6e55-420b-aad3-9cfb144f2ce3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7780552a-e095-477b-bc54-1a68b2157f97"
        },
        "item": {
          "id": "01079ab3-a169-4305-bbcf-5e475603db8e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "41e577d2-edb7-4136-93ca-1aed28082398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abde8889-46c0-4809-85ea-2c10c45019fe",
        "cursor": {
          "ref": "1152418a-906f-42c0-8f36-2cea52431474",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "63d63314-537a-4d73-b4de-95a7f198cb6b"
        },
        "item": {
          "id": "abde8889-46c0-4809-85ea-2c10c45019fe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "60079ccd-4532-4ade-8841-77fcd20ab7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb46f7a4-8ef5-4ed0-a4b6-774ff0e3f7df",
        "cursor": {
          "ref": "810265b9-c437-48ad-8c1d-6e042053de29",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7e501f5f-97cf-4155-b215-ec6b5a39f252"
        },
        "item": {
          "id": "eb46f7a4-8ef5-4ed0-a4b6-774ff0e3f7df",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "245dc1ea-1124-49cb-8f67-000298bd6c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f237bb-d0d5-4b96-9743-7f73ef674281",
        "cursor": {
          "ref": "1dc4c673-f71c-478d-ad21-4832ed05af4f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "97324e37-8763-4992-98c3-ed5cf0bde4f8"
        },
        "item": {
          "id": "20f237bb-d0d5-4b96-9743-7f73ef674281",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cfcff323-d1db-4280-9a52-8473382d30f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50977de3-3eea-403b-bda5-1c5f49bed7d1",
        "cursor": {
          "ref": "526f3d05-5a5f-4835-a6a8-bfbf07520976",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f63fc982-c8b8-4e60-be65-e43537352c39"
        },
        "item": {
          "id": "50977de3-3eea-403b-bda5-1c5f49bed7d1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b41aca78-28f4-436a-9609-264b987884ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd57ac4-ca05-4cf3-8f56-6cef9473f6e9",
        "cursor": {
          "ref": "d4fd650e-f667-46dc-bd62-03cb600c6737",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ec3f137d-064b-44a2-899e-850a9bdd0dae"
        },
        "item": {
          "id": "ffd57ac4-ca05-4cf3-8f56-6cef9473f6e9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "df7e953f-3922-448f-8376-c6b22bc30aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbcfdc2-1a87-4665-8865-7eeae440e7c4",
        "cursor": {
          "ref": "7faf55ff-c5fa-45b4-836a-8f7dcfac9e6a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "67964e1a-7b85-4cd7-a16b-9006f07bfd5a"
        },
        "item": {
          "id": "edbcfdc2-1a87-4665-8865-7eeae440e7c4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "74822c22-4e76-4755-ba20-c25e7cc6991d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06617911-024d-426a-a127-b8a7a59a65fa",
        "cursor": {
          "ref": "901436a5-ec3d-4534-9a61-118af7699330",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "58d14629-50b8-4590-bfb7-b21536f25c97"
        },
        "item": {
          "id": "06617911-024d-426a-a127-b8a7a59a65fa",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9734a0af-8670-4a12-a5ab-49b277fe5f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f131cc-1053-47df-872f-6793913aace7",
        "cursor": {
          "ref": "fc935ec0-db7f-44f7-9787-b157e17e3203",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a26fe9ca-9bed-44b8-800f-a98aab0b657d"
        },
        "item": {
          "id": "68f131cc-1053-47df-872f-6793913aace7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "02b8dfe7-3074-478d-ae89-9b6d254b2387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1862a269-7e87-4ef0-a9f4-3da207155769",
        "cursor": {
          "ref": "647e1aba-4de8-4d7b-9658-d57245d35dfa",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "69e31794-f1bf-4ad8-8d81-a99902de0840"
        },
        "item": {
          "id": "1862a269-7e87-4ef0-a9f4-3da207155769",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "47c72216-c6e7-429d-9f1c-244f8a8df26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b27810-cc86-4e90-be8e-6ce81c995661",
        "cursor": {
          "ref": "0cc03166-faa0-4983-9f54-7a90df6cdf0f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1f3e001f-c307-4356-b9cf-6d05d31a9491"
        },
        "item": {
          "id": "93b27810-cc86-4e90-be8e-6ce81c995661",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b489996f-805c-4f1f-ab33-5065b102d09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df765f3-760f-435f-b5ba-4f4de6e401ea",
        "cursor": {
          "ref": "1d4809fd-16b3-4176-aa71-6f16dafaca62",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2888f77f-fa09-451a-a635-53acf48dacc1"
        },
        "item": {
          "id": "9df765f3-760f-435f-b5ba-4f4de6e401ea",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ba90ccba-1ad9-4518-bda1-ff95921cbaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8479a7af-81ac-4038-bd37-74c7113faf67",
        "cursor": {
          "ref": "83b93552-4948-4e9d-ae78-c88b43b5acee",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "722bf2ef-e17f-422f-9381-83f6404d13d1"
        },
        "item": {
          "id": "8479a7af-81ac-4038-bd37-74c7113faf67",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e0279a84-429e-441a-b26f-1d723b2c0fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a3b30f-0851-417b-b50d-a0bfab9eba2c",
        "cursor": {
          "ref": "cae60432-8adb-4933-8fc0-7448917e92c4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "74da1637-96d7-46a3-bec5-a74a8d14460a"
        },
        "item": {
          "id": "76a3b30f-0851-417b-b50d-a0bfab9eba2c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c63fac23-164e-4fa9-a5be-7745bd5ad860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067d1490-883e-47c1-ba71-8be17adbbe7f",
        "cursor": {
          "ref": "cbd95d48-9a78-4869-9097-4a129f2b65df",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c20a8116-15be-4d17-aec9-fadf7ea046a7"
        },
        "item": {
          "id": "067d1490-883e-47c1-ba71-8be17adbbe7f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dbda065a-0112-498d-becc-10de9506b924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0aa0cd2-4683-41f0-856c-3c8303a3f40b",
        "cursor": {
          "ref": "d2686fa7-5490-4007-9a9b-d43f94580d08",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dc565447-0ef4-47e1-b9ee-3fbe16e27531"
        },
        "item": {
          "id": "f0aa0cd2-4683-41f0-856c-3c8303a3f40b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "60dda2d7-9fb4-4233-85b9-669773ec65f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2256607a-2436-4d65-bfa7-fcc58ed5b0da",
        "cursor": {
          "ref": "dcd29203-9a30-47a1-9fe7-772c2f5dfacb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "845f7cab-cf6f-4d8d-87bc-e221abf80b53"
        },
        "item": {
          "id": "2256607a-2436-4d65-bfa7-fcc58ed5b0da",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "efe31173-75cf-4f31-87b1-b9cf9068ad09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187a6107-f29b-495b-b2a1-e6324d81d859",
        "cursor": {
          "ref": "3166c005-64cb-41b0-a504-2fc4ecd4ccbe",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d4094e87-77d6-438d-81e4-60aa92e3a6e3"
        },
        "item": {
          "id": "187a6107-f29b-495b-b2a1-e6324d81d859",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c86523a6-7988-4411-b711-19f5657e2569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8afa03e-5b26-4b8d-8f9b-1bd1da0ed7ee",
        "cursor": {
          "ref": "967594ba-67c6-488d-b366-dfeb529efb29",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "43f35f4b-8696-46a3-9a97-1ea8223814a1"
        },
        "item": {
          "id": "f8afa03e-5b26-4b8d-8f9b-1bd1da0ed7ee",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d8908d5c-e93a-445c-ac3b-9ec5b2932fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0bf99a-d202-49f6-8f74-2e00d9ba18ff",
        "cursor": {
          "ref": "582389d4-82d7-4c7b-8ed6-ae5aac0a8cb5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "22f2e8a2-4216-4c22-bebf-b9465ecf5e82"
        },
        "item": {
          "id": "3a0bf99a-d202-49f6-8f74-2e00d9ba18ff",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d9f5efe3-54b9-49b9-b748-8e0c4decb589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d14632-68e3-4c3d-8c6b-6ddeba6d59db",
        "cursor": {
          "ref": "2dfe557f-c2ab-4673-ba38-e55d20c176f7",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "feae9624-14fe-4032-95d2-765db6a1be57"
        },
        "item": {
          "id": "e5d14632-68e3-4c3d-8c6b-6ddeba6d59db",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "09a33bd9-7c2c-4ba2-a623-0cfcd085dac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975110c4-7c9f-4312-8485-12849a2e8c95",
        "cursor": {
          "ref": "3be30b36-2815-4051-b599-8541afa329f4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "45d38ca4-6013-4859-8724-479a924b47a1"
        },
        "item": {
          "id": "975110c4-7c9f-4312-8485-12849a2e8c95",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b6ee1529-f2dc-4bf0-8fb1-81639cebc348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b409723d-7dc3-468a-aa3c-837227ad7901",
        "cursor": {
          "ref": "5afdf3d8-115e-49e0-99ff-e8c0470e3398",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bdf8a0ae-5d88-474b-a6e1-8665cc333ef6"
        },
        "item": {
          "id": "b409723d-7dc3-468a-aa3c-837227ad7901",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8b124ca3-7712-4886-b2b4-9e1781dabf17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b74c91-0676-40c1-b1e8-4ef49b4a83c2",
        "cursor": {
          "ref": "fb8cdd7e-057c-4e8d-b389-6834ec015ee6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9a38f5e7-efdd-442c-b599-43f73b1ff750"
        },
        "item": {
          "id": "39b74c91-0676-40c1-b1e8-4ef49b4a83c2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d2c3bd1e-93fd-4e90-b661-1f7f9a5ab712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d22dd7-da80-46b7-82e4-9390419503b4",
        "cursor": {
          "ref": "0d0b1474-3f43-4224-9719-ffa68d6bf0e3",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5599be87-62b4-4843-be53-f6ec21a2eeda"
        },
        "item": {
          "id": "33d22dd7-da80-46b7-82e4-9390419503b4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8aba41ad-33b4-4324-910e-52eca6486caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e84f27-f44f-477e-9f31-b24c2dd66837",
        "cursor": {
          "ref": "335591b7-e101-4fcd-9e8b-0d1c5454ae5d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "51934241-19e4-4903-9a79-c1a188bfa5ee"
        },
        "item": {
          "id": "d8e84f27-f44f-477e-9f31-b24c2dd66837",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f7bb9eb5-5d23-4c3c-a01c-1e120f0fb54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7946e15d-915d-45f0-8905-3a704021f0a3",
        "cursor": {
          "ref": "2ac8f661-9bb0-4911-b2c1-0edb7ed5f8b7",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f93b5a7c-3846-4f83-a1a1-94e0d2319859"
        },
        "item": {
          "id": "7946e15d-915d-45f0-8905-3a704021f0a3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9229afd7-48d3-4cd9-82f9-dad664da8fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f801a93d-6895-4189-90a3-89f6a5a0db44",
        "cursor": {
          "ref": "f7291387-2811-4d00-ad66-7970122f0fc2",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b83e7b94-43db-4098-93ce-274ec63af0c3"
        },
        "item": {
          "id": "f801a93d-6895-4189-90a3-89f6a5a0db44",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fcd65ef1-cab9-4214-a623-a91a1f02f1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d60e89f-447f-4802-bf40-41ae483d21e7",
        "cursor": {
          "ref": "82563dec-a37c-4727-9911-02a57035ee7c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "354bb2c8-f30c-45cc-b903-a4f58bded68f"
        },
        "item": {
          "id": "1d60e89f-447f-4802-bf40-41ae483d21e7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "61808674-928b-47e5-bfe9-1e33ed2b9195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643ee92b-ffd7-45ad-babb-921d9a196e3d",
        "cursor": {
          "ref": "e187ef32-34a1-4a06-aa2e-8271eab97c34",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8f982804-7f33-44b1-9e3b-ed206e82b031"
        },
        "item": {
          "id": "643ee92b-ffd7-45ad-babb-921d9a196e3d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f7b65bc5-b13c-4dd2-8316-f4d71956bf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba40058a-9d65-4c5c-9367-9017eb55dcd6",
        "cursor": {
          "ref": "6e420391-7073-4712-9b24-b6ee38e4eac0",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bd430432-dc28-4aef-862a-bd0079bd062c"
        },
        "item": {
          "id": "ba40058a-9d65-4c5c-9367-9017eb55dcd6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "708a10a9-dba2-402f-80a1-154c34be51cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d84c2f-a064-409f-bee9-9b7715dccfb5",
        "cursor": {
          "ref": "3b868c10-001f-42d8-a86c-049197b173dd",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "028f302b-e50f-469a-a045-b3780680ce85"
        },
        "item": {
          "id": "67d84c2f-a064-409f-bee9-9b7715dccfb5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9705e65b-222b-41f4-8422-6ebd23902bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0563eb15-c398-47a7-bfaa-a6db549df89d",
        "cursor": {
          "ref": "29cc918a-d0f7-4863-aa7b-a0a25e614aaf",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "00cd18ed-36bd-48d1-9f20-719e3466e8a5"
        },
        "item": {
          "id": "0563eb15-c398-47a7-bfaa-a6db549df89d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bdad33af-5014-4ecd-8bc8-c72fe4c9de3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba69fe6-3a53-4d1c-8930-b7442ca6bf16",
        "cursor": {
          "ref": "24ede922-ce27-45af-9b9b-7eb5a4284106",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fa7f3a0f-4d2e-44ca-ba00-cc94f5e5b4cf"
        },
        "item": {
          "id": "fba69fe6-3a53-4d1c-8930-b7442ca6bf16",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "eb6efa80-9753-49eb-88fa-8090cf2a9fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28a0e33-4886-4fbd-a70c-5288fa3a1f0f",
        "cursor": {
          "ref": "ee5678e8-435d-4014-b7a3-4d3951b2d35d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9f72b809-f2a6-4126-9a62-a8e23ad813e4"
        },
        "item": {
          "id": "e28a0e33-4886-4fbd-a70c-5288fa3a1f0f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4f4caead-c2a0-40d2-a95e-8c06fc70b51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a3dacb-8c06-454b-b7f0-0b3a3add6c3a",
        "cursor": {
          "ref": "c7a256ba-825d-426a-b8b4-591f2afa0f67",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d23d28cf-2be6-43f7-979e-7773d857d48c"
        },
        "item": {
          "id": "54a3dacb-8c06-454b-b7f0-0b3a3add6c3a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d69b5f91-d106-4416-b8aa-638740f8eccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3af4c1-de68-4235-8050-b118b0093eb7",
        "cursor": {
          "ref": "5829004e-2925-4782-9aa3-22309f5ba990",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4f811dbf-fe7a-43a1-b564-5f0816779c0e"
        },
        "item": {
          "id": "0b3af4c1-de68-4235-8050-b118b0093eb7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "270144c9-5487-4a47-bc34-136285bc54ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a365e4-84d9-480f-bf8c-0d4842f3868c",
        "cursor": {
          "ref": "fd9bbb0c-a9a7-415b-897b-702dc388ca13",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "89b5022b-7e21-4a0d-af51-3fd6df233eb8"
        },
        "item": {
          "id": "f5a365e4-84d9-480f-bf8c-0d4842f3868c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e4ba7b19-ca07-4a7b-bc2c-159e63e4417e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5458bb-2375-431c-8b85-d1944fbde19b",
        "cursor": {
          "ref": "ea1d847d-cba1-4cf2-91c3-b10182e3ebad",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "386331eb-ab41-47d6-99cc-dbc7cdc6815f"
        },
        "item": {
          "id": "cb5458bb-2375-431c-8b85-d1944fbde19b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "43c48dff-6fcb-4dce-812a-18721b50cffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faca8a0d-83b6-4576-9e6f-91dede02d398",
        "cursor": {
          "ref": "1ac6aadb-b1f6-404f-bd61-79aa591644a3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0cf1416f-4719-43ed-9200-914e39c3adfa"
        },
        "item": {
          "id": "faca8a0d-83b6-4576-9e6f-91dede02d398",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "df3299f1-3dd9-40b9-b9e7-58ba3361d067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e17a28-5621-41a4-80da-7e729f8e10e2",
        "cursor": {
          "ref": "45d8db58-4972-4d17-9155-b17a6e11eaa3",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a613dec3-2f23-41bb-bb06-9b1fe593de23"
        },
        "item": {
          "id": "94e17a28-5621-41a4-80da-7e729f8e10e2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2411712a-076b-4bd0-a8af-84c47c6fa081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9065e0d-92d4-4b72-b342-2411464badfc",
        "cursor": {
          "ref": "a3ca7d11-2a00-4fe8-b563-3cc2c858bd77",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bb2c7a3f-d62c-4b83-8a41-bd432ab39575"
        },
        "item": {
          "id": "b9065e0d-92d4-4b72-b342-2411464badfc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9a6c8ac2-26b1-4017-a7b9-40fd82c61cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30916ac-312d-4f98-b3eb-109c968fdbc6",
        "cursor": {
          "ref": "d29add5f-e4de-471d-a872-9924df23646f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "212c1c10-93e8-40ec-9df5-670f8725865b"
        },
        "item": {
          "id": "c30916ac-312d-4f98-b3eb-109c968fdbc6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "950751c9-6bf7-48de-b810-6e0794beb9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd68d93-43d9-4adb-a778-7122cdec27c7",
        "cursor": {
          "ref": "17736e6f-7d94-4b37-9cb9-78ff6ecee02c",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ef2eff2f-7bbe-48ca-a6cd-67236e2c46f6"
        },
        "item": {
          "id": "afd68d93-43d9-4adb-a778-7122cdec27c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b2b9c878-7907-4d26-a31b-4e9a52e893d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6311c9ca-b3f2-4079-bfd2-337a7bbfdc98",
        "cursor": {
          "ref": "6954381e-17c7-4468-b12b-87d69cfec07a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5565aecd-461b-4ee0-9c93-ddb38f37f702"
        },
        "item": {
          "id": "6311c9ca-b3f2-4079-bfd2-337a7bbfdc98",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ebcfcd13-42fa-4531-b6eb-668c364f5f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a077a37d-f63b-4abb-9b24-4ee55407b818",
        "cursor": {
          "ref": "741d7f33-b366-413f-8765-e06c217e1a5b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "97061346-5f96-4829-a88e-d70bd158f40d"
        },
        "item": {
          "id": "a077a37d-f63b-4abb-9b24-4ee55407b818",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "954a305b-d14f-44cd-b7d1-3ab6142fb95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6355409-bb9a-4093-ae82-37806f1f885f",
        "cursor": {
          "ref": "bff1c90f-2206-409f-acef-9c3ce05f79a4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "26e03845-0305-4d10-b7c3-2ff63b5dec92"
        },
        "item": {
          "id": "c6355409-bb9a-4093-ae82-37806f1f885f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8a843c04-e9ef-440b-82f8-c410619af5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f31789-25b4-4eca-8824-97be9d5b01fe",
        "cursor": {
          "ref": "80b11678-0ea6-444e-a536-c846b403ca6f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "46ee800d-7e67-41c7-9d85-c33fca5fb380"
        },
        "item": {
          "id": "e1f31789-25b4-4eca-8824-97be9d5b01fe",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b22e8786-c134-4bd8-8597-e401da2e48eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483a2af8-d52b-42fc-ab80-c28a5c4b99c4",
        "cursor": {
          "ref": "5af637e7-bfa5-438c-b479-b4b299af3d05",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0eaa4ff2-83e1-4690-9d20-6b111db08b9f"
        },
        "item": {
          "id": "483a2af8-d52b-42fc-ab80-c28a5c4b99c4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7b2fd957-7e4e-4223-96e4-7a5c5a6ba88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d38c52-091c-4c53-8f37-4a70a80f8897",
        "cursor": {
          "ref": "ec5fc852-705e-4bf6-8e58-e6b40206730a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c36d941f-ce1c-4260-8927-d9213845aeed"
        },
        "item": {
          "id": "01d38c52-091c-4c53-8f37-4a70a80f8897",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "18c5ea99-94bf-4167-ac1b-4cc384b7dc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc52507-52dd-4157-8015-4747799fdf1f",
        "cursor": {
          "ref": "ce3bf2b8-565b-4f6d-a14f-72f9d60df2b1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dc4e46dc-ca5a-498f-a5d6-397d9e213361"
        },
        "item": {
          "id": "5cc52507-52dd-4157-8015-4747799fdf1f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c5b0f5ea-d4f2-4149-ae3d-9a16ebcf25cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef15a3ed-eaac-4119-91c2-682084c12e23",
        "cursor": {
          "ref": "47cd47c7-a843-43a0-b700-f55fc5a2bf50",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a25786ee-2a94-4f86-af68-80f29606dd5f"
        },
        "item": {
          "id": "ef15a3ed-eaac-4119-91c2-682084c12e23",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "463b2bad-a066-490d-8ea9-ef7953165a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3f26b0-6d7e-42f3-9490-7b2ec0cfbfe7",
        "cursor": {
          "ref": "f9d90275-9d53-485a-b9a6-273fda53ba06",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7efac51e-dcae-48e8-addd-e169675c2484"
        },
        "item": {
          "id": "5a3f26b0-6d7e-42f3-9490-7b2ec0cfbfe7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "eb407b33-9b3d-4e0f-bc1d-dd906da3168e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac5998d-efba-4192-ad36-d4e51eeb6037",
        "cursor": {
          "ref": "f65f563a-92bc-432c-99cc-59ff0a05b6ce",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "38daf82b-a30c-4257-a07d-a0c065c7455c"
        },
        "item": {
          "id": "6ac5998d-efba-4192-ad36-d4e51eeb6037",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4f15161c-1a00-401d-83ff-d68547608db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da1f228-e227-4563-8233-f17d3008c920",
        "cursor": {
          "ref": "cb49c64f-f660-4116-9fd7-8aaa8565640c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cbedaa95-58fb-493f-ba38-194d1e6b813d"
        },
        "item": {
          "id": "7da1f228-e227-4563-8233-f17d3008c920",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a877ec5c-45aa-48cd-9391-9e4693b30ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d034c9-5d49-4b50-b5a1-e1c568d27b36",
        "cursor": {
          "ref": "05926ff0-f070-4fd9-abac-d02ca497b4ca",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d487819b-8ec6-4e4c-8479-afada2dfdd97"
        },
        "item": {
          "id": "b7d034c9-5d49-4b50-b5a1-e1c568d27b36",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ddeb4029-2858-46ca-a856-9ead9b946020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd16ac82-e566-4890-9e17-ba3edb9cdd83",
        "cursor": {
          "ref": "87fd49d2-918e-4ddc-bbe8-3e24674637ba",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "228af2d5-3eb9-4378-8fbb-6bf5e0bac77a"
        },
        "item": {
          "id": "cd16ac82-e566-4890-9e17-ba3edb9cdd83",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4ca4266c-423f-492e-a76e-a281812f482f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e11ffa-5597-4d59-9591-9300f832df3a",
        "cursor": {
          "ref": "3ed33823-18e9-4893-8fe4-ac5de8db5cd8",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "06ed8dac-125e-42f1-a421-acb268c1dfdb"
        },
        "item": {
          "id": "c5e11ffa-5597-4d59-9591-9300f832df3a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "900eb58e-df7a-4b88-a2cf-3f4b324c51ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1259f6e-a059-407b-8a6f-4b3aa23c4da0",
        "cursor": {
          "ref": "4d0dc6f7-c242-4ea9-acfc-fa1a0cf8991e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a8492d75-6aea-4cf4-83cb-dbeccbace623"
        },
        "item": {
          "id": "e1259f6e-a059-407b-8a6f-4b3aa23c4da0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5275a947-339c-47a0-bdba-1c7df90fde73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2324c86-d1ca-4080-a69c-b34b5ea0d2b5",
        "cursor": {
          "ref": "01e7b33b-e28f-40dc-8eea-34d2cc255d4a",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9c1a39df-d92a-4ebb-bec6-743f50829041"
        },
        "item": {
          "id": "a2324c86-d1ca-4080-a69c-b34b5ea0d2b5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "37a54abc-daa0-4a44-a768-0d8a0d97e0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff17d18-a296-4e1d-a0fc-f35f93bc0712",
        "cursor": {
          "ref": "1b733a7f-7837-44d1-a094-276c2c3cc104",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5d4a280b-df9a-4596-a076-92f732ef7f1e"
        },
        "item": {
          "id": "0ff17d18-a296-4e1d-a0fc-f35f93bc0712",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a1ca5528-e2e5-4d63-90b3-be72aef14a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017159c3-9575-4b47-9c76-ac94f85e04e5",
        "cursor": {
          "ref": "e2fbd49f-b726-4a11-a7ba-a9981538752a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ad90079a-03e0-43d7-b371-c16a32bb6dd1"
        },
        "item": {
          "id": "017159c3-9575-4b47-9c76-ac94f85e04e5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "500507b7-a654-4a97-9c6e-fdb9ab169d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58cfafb-51c3-42ba-a053-9cbb63957ad1",
        "cursor": {
          "ref": "f025221b-32e9-4ca7-a650-58b363313b22",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6af778d7-baef-4714-a1e4-b49138e21260"
        },
        "item": {
          "id": "d58cfafb-51c3-42ba-a053-9cbb63957ad1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "435b71dc-cd08-4a89-bf81-f669354979b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff28474-318c-4394-98a7-71de664074b4",
        "cursor": {
          "ref": "e8f8d413-22cb-403d-9eff-637251bf5e00",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bdaa6d64-306a-497b-8974-9e6a196681fb"
        },
        "item": {
          "id": "9ff28474-318c-4394-98a7-71de664074b4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2e63e62c-c22e-41ca-8cb8-b45bb9c29bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6989c41a-68fe-4d94-bf27-eeea3f465cd5",
        "cursor": {
          "ref": "3e24b6b5-a7ac-49c5-aab5-38738afe1f10",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "737efbcd-3bf5-4207-aee6-08f6cac9b4a6"
        },
        "item": {
          "id": "6989c41a-68fe-4d94-bf27-eeea3f465cd5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "86074fa5-1d7c-4c22-9c5f-6cef72e63247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fb8011-0e10-44a2-a5bd-406f3cace2eb",
        "cursor": {
          "ref": "598cc020-415c-4ca5-b09c-1249569a4009",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e1b5fa51-9cba-43b6-9a19-5aade357ce26"
        },
        "item": {
          "id": "e3fb8011-0e10-44a2-a5bd-406f3cace2eb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a84d7b7c-667d-4af3-a898-6fe611c9cf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbd0ae6-fa83-4f35-b9e0-b0af6cc68869",
        "cursor": {
          "ref": "66c7e07c-95e7-465c-9369-19d2441deb91",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e4174eac-18a9-4b11-8334-f7de84249484"
        },
        "item": {
          "id": "4bbd0ae6-fa83-4f35-b9e0-b0af6cc68869",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "28b2d2be-3945-4768-a7ce-6123aad86db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341bdba8-231e-4be0-a6eb-922962379d9a",
        "cursor": {
          "ref": "055dc52a-8f3e-4169-87a3-ac019d76158e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "59d07595-34b6-40e9-beea-628861a9d3c1"
        },
        "item": {
          "id": "341bdba8-231e-4be0-a6eb-922962379d9a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8736bfb6-9385-4a9f-b93f-0d7aed09e6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bdf141-8b5a-45cf-8182-3cbd5f31b9ca",
        "cursor": {
          "ref": "6bb7975e-9c1a-4394-89ba-016815dccf1b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "507f5ffc-e676-4593-b97b-4e95fd669be3"
        },
        "item": {
          "id": "29bdf141-8b5a-45cf-8182-3cbd5f31b9ca",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "75b8e96b-e3ed-4a1a-924e-afa9002b2e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d97c80-f339-431b-a1c5-d915ceaeb201",
        "cursor": {
          "ref": "d13d7fe6-8640-4b34-8b92-af396ce6b55c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e4a50c25-994a-4b6f-b2f0-3ee4aa0c9409"
        },
        "item": {
          "id": "d1d97c80-f339-431b-a1c5-d915ceaeb201",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bd2a7099-9462-47e3-8775-0a8a3533fbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f55173-6d79-4d44-986c-5f3a5e37a90a",
        "cursor": {
          "ref": "24b6817d-e3af-4fde-acd5-1f4e0d722169",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ff0abf9c-77bf-47db-bae8-3d51f76038fd"
        },
        "item": {
          "id": "28f55173-6d79-4d44-986c-5f3a5e37a90a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9952fffe-d2d7-4451-ae49-99f8c46dac98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66bc53c-509f-4c9a-9e33-74102a98fcc7",
        "cursor": {
          "ref": "8d93077c-5747-491b-b841-f85776c70faf",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "eb4f04a1-4340-4ad1-8fdf-6b68aceb393e"
        },
        "item": {
          "id": "a66bc53c-509f-4c9a-9e33-74102a98fcc7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d92e8b29-18f7-4650-a736-e542ee05db50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece89dd5-6779-4bb9-b85d-8dcee8617d56",
        "cursor": {
          "ref": "eda0fd3d-a357-4d7e-9c98-187c0b2974a9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f8c5bd26-e5f6-4469-9689-49034375de73"
        },
        "item": {
          "id": "ece89dd5-6779-4bb9-b85d-8dcee8617d56",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "59b3b975-abc7-44e5-ab5f-3c18a5cd0824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871d674a-e065-491a-8032-b77501b65cac",
        "cursor": {
          "ref": "387ed5e8-6ebb-4f1c-b4b4-092cee4515db",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8370464d-3711-4539-9b3f-c7513c501a31"
        },
        "item": {
          "id": "871d674a-e065-491a-8032-b77501b65cac",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5ebab20a-4198-4766-bebb-7486eeac9521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6913501a-671d-4209-983a-7fbbf9a9ee4b",
        "cursor": {
          "ref": "e9564941-db1d-4f1b-980b-fb7f93e78eab",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7921924e-f5e0-46c5-995d-155edcb8b780"
        },
        "item": {
          "id": "6913501a-671d-4209-983a-7fbbf9a9ee4b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c959dc6c-3259-4471-8dac-d8213d1700e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c825495-f10c-4572-800b-39f295fd7673",
        "cursor": {
          "ref": "64216d80-5834-4175-a331-37b63889d5ed",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a9047242-348b-467e-ad55-7992e5ba0204"
        },
        "item": {
          "id": "5c825495-f10c-4572-800b-39f295fd7673",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eb7fcec4-52b0-44d1-bb77-ae9464911b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8543be0-261b-451e-b960-098498171749",
        "cursor": {
          "ref": "71ff77b8-c283-4753-8962-8d46a46826e0",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e6ada253-dfea-403e-95c4-79e45d8ca09b"
        },
        "item": {
          "id": "b8543be0-261b-451e-b960-098498171749",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5724ea80-f025-485d-a5a5-daf7b2f817eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c11ede-55d9-4cb4-a013-26d8cd8a17e7",
        "cursor": {
          "ref": "afd2810d-fb08-463d-bf24-f6da6ad4f22e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "110f3436-7a4c-4444-979b-f66c5dfe2d2b"
        },
        "item": {
          "id": "c9c11ede-55d9-4cb4-a013-26d8cd8a17e7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "87481b07-ec28-4f25-bea4-3b3c856e666f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb19d87-2021-4bef-9d61-e464abe94875",
        "cursor": {
          "ref": "afbcefd3-9dc8-4638-9fba-9c5800e5d642",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "762aabaa-6ef3-49b0-8b72-2205d2579b5c"
        },
        "item": {
          "id": "0eb19d87-2021-4bef-9d61-e464abe94875",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b5419c85-6bb8-474e-a02f-475656b7152b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f91427f1-c697-432c-ba3a-dccda68962cd",
        "cursor": {
          "ref": "dffd0928-ac7d-4928-8e9d-72a5463a95db",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d054972b-cf46-453f-b3c2-11af1ee1b7b4"
        },
        "item": {
          "id": "f91427f1-c697-432c-ba3a-dccda68962cd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "566f7185-f62b-49f3-9374-fdb88d1e8f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7ba74c7e-176f-4c5d-8ab0-384e59817b8d",
        "cursor": {
          "ref": "0c0bb1df-c6e5-4bf5-a35c-9c5cfff9dcf4",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f43e28dd-69d5-436a-8acb-f35a4f89d1b2"
        },
        "item": {
          "id": "7ba74c7e-176f-4c5d-8ab0-384e59817b8d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2fb5ab17-c492-4ccd-8786-12f467d40c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a639637a-35ad-4743-ae49-d63023a730bb",
        "cursor": {
          "ref": "0e64452d-14c0-4789-8eb6-98ee6f27c4a9",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d4675fc6-245c-415c-bfdd-4fe67e378ee4"
        },
        "item": {
          "id": "a639637a-35ad-4743-ae49-d63023a730bb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b06cd990-8531-45f5-b5d1-6886f380f079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "54e0f9f5-f1af-4361-9a28-91ef175f5db7",
        "cursor": {
          "ref": "299cb267-ee1c-4f9a-8c8b-c1e20d6477d4",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "81ad73d9-7b8e-45aa-aa09-ef67f3557ac1"
        },
        "item": {
          "id": "54e0f9f5-f1af-4361-9a28-91ef175f5db7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "44b1a4a4-b1f2-4f29-a5d6-8eb69eee7467",
          "status": "Created",
          "code": 201,
          "responseTime": 11067,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9e6aaf-4542-41f1-9d92-5882beeabd68",
        "cursor": {
          "ref": "9da27223-cefa-4464-8f0f-f75a698c6c2d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "60a7f843-8a7d-40f7-992f-2fefc9cf46da"
        },
        "item": {
          "id": "ff9e6aaf-4542-41f1-9d92-5882beeabd68",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4b72cc86-3b33-4b84-95d4-2f0e8cf1d99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3d78fbfc-3edf-420b-9a69-3e13337bff25",
        "cursor": {
          "ref": "d6b52779-4471-4b05-a53e-45516e6373e9",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "934cddbc-37d9-41ce-87c2-271a5eb80309"
        },
        "item": {
          "id": "3d78fbfc-3edf-420b-9a69-3e13337bff25",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1ba009c8-1759-4bce-a98a-7f36e993e404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2308f4a4-51be-4f97-86c1-e5251e947eb5",
        "cursor": {
          "ref": "73d02f29-a755-4aac-b801-7e28a86735b4",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "961d4293-abd6-484a-a49b-159573dfee0a"
        },
        "item": {
          "id": "2308f4a4-51be-4f97-86c1-e5251e947eb5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "64c9c46a-e4de-486a-bbb5-2cad40f43930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58eaa021-126c-4259-959e-fb0ccabda28b",
        "cursor": {
          "ref": "91616e7d-5ac9-4981-8420-57ed17f052d2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fab5bd05-ae9c-4bad-a8b6-38452ac693cd"
        },
        "item": {
          "id": "58eaa021-126c-4259-959e-fb0ccabda28b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b0290577-abff-4dc2-8f4f-04097051c2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872e896e-32b9-4eed-a218-371914a6e810",
        "cursor": {
          "ref": "59fd9abe-0765-4a41-b546-89694678500b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "238c88bc-332b-41ac-9d8b-c6f15fb757de"
        },
        "item": {
          "id": "872e896e-32b9-4eed-a218-371914a6e810",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "edb8459f-5d9c-443e-a334-8d7cc15dd049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505e939c-611f-4754-bbd6-409869faecfe",
        "cursor": {
          "ref": "c75b7c04-4916-4e62-8e06-64362a6c2e49",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dd2ccbac-e111-4313-9574-3af17629f2d8"
        },
        "item": {
          "id": "505e939c-611f-4754-bbd6-409869faecfe",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5da0f395-78e5-44a8-99fc-e07a2f06d291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3a673b-d29b-4e51-81ed-42fdb526715f",
        "cursor": {
          "ref": "0a519256-7680-4d9a-8e00-db2a523d428d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "88866cfa-bfe0-4645-8f67-a1d32b028d38"
        },
        "item": {
          "id": "2d3a673b-d29b-4e51-81ed-42fdb526715f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "47592d78-bf40-46e3-9dce-4945e0509fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051beec5-d4d1-4fae-ae03-86943a8b5d8b",
        "cursor": {
          "ref": "5676bdaf-9e11-4aa5-8c14-1f8a38573af4",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6433311b-d86a-4725-aac2-780b37b961cf"
        },
        "item": {
          "id": "051beec5-d4d1-4fae-ae03-86943a8b5d8b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "78a3b0a2-7e40-4c92-8ab9-a4ed62e4a034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc667e03-9be0-4a59-a2d4-817684c2f166",
        "cursor": {
          "ref": "120fa75e-fb16-451d-ac94-de58b874c492",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cf12c10b-b2b6-4d31-9fce-7870afe8b332"
        },
        "item": {
          "id": "dc667e03-9be0-4a59-a2d4-817684c2f166",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b04decf3-a92a-4082-bd70-fad5b158ab07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8493671c-66d4-4686-9d6a-908b4ce1c401",
        "cursor": {
          "ref": "31a3073a-245a-4ee9-b66e-202939d30237",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "abb43df8-e8df-4130-afde-b5c09ed2cbc6"
        },
        "item": {
          "id": "8493671c-66d4-4686-9d6a-908b4ce1c401",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ab91e552-d1db-4e1f-bc23-1f297b5cc9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4f22be-43b5-44f8-ae48-c75ef840144e",
        "cursor": {
          "ref": "a3f76be9-1b03-4e96-9e21-6a9ded987a37",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6079b66d-ec65-43ae-a251-86b3fd90709e"
        },
        "item": {
          "id": "2e4f22be-43b5-44f8-ae48-c75ef840144e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "901e7ed2-5a38-4cbb-a964-ac08f86911da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6ff3d6-23eb-4e41-bd8a-14856f69d3b7",
        "cursor": {
          "ref": "381e90cc-8229-429c-badd-071dac1e6d8d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8b2e78c5-606c-41df-9738-c3db77de8469"
        },
        "item": {
          "id": "de6ff3d6-23eb-4e41-bd8a-14856f69d3b7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2e0de5ae-6eeb-400a-b96b-05b31ce3a1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989b9b51-8d7b-4560-942a-c3a0efd460f0",
        "cursor": {
          "ref": "113ecf3e-c842-40ab-8b6b-34072acfcf13",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1969bf71-e2be-44ad-9178-2483d9950da7"
        },
        "item": {
          "id": "989b9b51-8d7b-4560-942a-c3a0efd460f0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "46788e89-e3f7-405e-915c-3c51b514c709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82842db-aa12-4073-9e04-08e0b854c4f8",
        "cursor": {
          "ref": "07104ebf-bc59-4018-97f4-a0e87f3ae6ca",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "056f7ea9-a16b-49dd-8bc7-be04131a0b0b"
        },
        "item": {
          "id": "b82842db-aa12-4073-9e04-08e0b854c4f8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a5070355-a510-4f65-9f3c-dfc98ce90c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7aac3e-1104-4863-b116-47ed5fb3a2b8",
        "cursor": {
          "ref": "4d25171b-e512-49fb-9cb1-f180e854dc25",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "de943646-c33c-4655-9102-9efa1ecb44b6"
        },
        "item": {
          "id": "bb7aac3e-1104-4863-b116-47ed5fb3a2b8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7b332249-24e1-428c-9ce2-8cc0c8414820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83967226-f715-4927-9fed-10caf00d743d",
        "cursor": {
          "ref": "2cf49ca1-a4c2-47b8-9e08-c93ee542816f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "56599794-0464-4b37-9ce3-dec9df81dca8"
        },
        "item": {
          "id": "83967226-f715-4927-9fed-10caf00d743d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fc717d5f-0c75-4bc7-8355-6f2a024d5d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8f4f78-743e-4e7f-99a2-fe50373f8364",
        "cursor": {
          "ref": "19f65600-66c8-4a07-9856-7ded8ecf736b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dbd863a2-16af-435c-8b31-1fc333fa0b33"
        },
        "item": {
          "id": "4b8f4f78-743e-4e7f-99a2-fe50373f8364",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b8320983-39de-43ac-b0f4-5636a7b243e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d88405e-6678-4b66-91d8-198fff3d1e15",
        "cursor": {
          "ref": "6542a1a6-745e-42ad-af5a-49dad4d90320",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fa65c825-53e3-4727-ab75-a5192e0939bf"
        },
        "item": {
          "id": "7d88405e-6678-4b66-91d8-198fff3d1e15",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c1054843-e699-40dc-bda3-4d263d4afa1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21b23d8-4618-435c-a647-e080c1848d88",
        "cursor": {
          "ref": "de6fc411-8aa3-4416-bcc2-cc3646c16a87",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "38654b7b-1cec-4d45-8c6e-7d4d918adac3"
        },
        "item": {
          "id": "b21b23d8-4618-435c-a647-e080c1848d88",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b5fb124c-55a5-4aaf-8087-ecfb45e45895",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "01ea8618-9878-4099-82f3-3eea11a937cf",
        "cursor": {
          "ref": "1c7192cc-f8ea-4080-9dd4-b4cdfffbed43",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b91b09f0-6d29-4e65-9be6-4871bec0b815"
        },
        "item": {
          "id": "01ea8618-9878-4099-82f3-3eea11a937cf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d8d68478-a89e-4732-bc81-e03cd116fcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579bff38-b9fe-4675-82ba-a5cc435c5bcf",
        "cursor": {
          "ref": "65be6f13-1f6b-4273-939b-d38c7801cf86",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "34b5dab1-40d7-4061-94f8-fdfd04eb41ea"
        },
        "item": {
          "id": "579bff38-b9fe-4675-82ba-a5cc435c5bcf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ef78d869-bb1c-400e-a21e-295db11e993d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52410a90-5953-461f-b359-45d8b86c00f0",
        "cursor": {
          "ref": "fc97e56f-3280-416e-9bbb-6bfc38266248",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "013a9ae9-0e59-4175-95b1-fa5b7fbb5966"
        },
        "item": {
          "id": "52410a90-5953-461f-b359-45d8b86c00f0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d3eb98cf-0aa6-4235-a269-6ddffafc6e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4076fb-8b12-48b1-98af-062e61c171ff",
        "cursor": {
          "ref": "f858f90a-eb18-42ba-9dff-178d2e02ead8",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fad94355-03ab-4f12-a308-a3f192ae1a15"
        },
        "item": {
          "id": "0f4076fb-8b12-48b1-98af-062e61c171ff",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5f2466ea-33d7-4628-902a-2ec1612f5f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8208aff-cb73-4ce8-a72e-7f7b46ccd04f",
        "cursor": {
          "ref": "7aef986a-57b5-4e6e-9f9e-fbc81253a79d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0a7b31fe-182e-4bd2-94fb-f06c9526e3ce"
        },
        "item": {
          "id": "d8208aff-cb73-4ce8-a72e-7f7b46ccd04f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "992d287b-7f75-4a77-bb64-ea8d65687e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139b08c1-0f6c-4d55-9499-b9f0c55d5b8c",
        "cursor": {
          "ref": "9413d17d-751a-47f9-b05b-84f4b426b7e6",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "975b44e3-2224-4746-b147-fa0687919755"
        },
        "item": {
          "id": "139b08c1-0f6c-4d55-9499-b9f0c55d5b8c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "686d42f9-c4b5-4631-9198-d75d79d37b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a376ba0-5efa-46c5-b7b7-352d0393a376",
        "cursor": {
          "ref": "789d5681-aae9-4738-97d8-2d2140566cb5",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "10ca441a-11a8-4ebf-a517-229dd4d2288d"
        },
        "item": {
          "id": "2a376ba0-5efa-46c5-b7b7-352d0393a376",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1e42edf2-bf41-4fbb-a86e-48741bf32bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0f7a9a-5574-4889-a6a7-3f8b4f8777f1",
        "cursor": {
          "ref": "a2fd6b9b-ba81-485e-b415-56f7ce01b5fb",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1cfd7a99-ce61-4e6f-be98-ed443c81331d"
        },
        "item": {
          "id": "1c0f7a9a-5574-4889-a6a7-3f8b4f8777f1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1a786cc9-3d2b-4457-a8b8-f3fb090cf2c1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b3a6a694-a110-49fd-b147-8921b1ae7c8e",
        "cursor": {
          "ref": "2dfb09b6-9a06-42be-8344-536ffa47054d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "17e6684f-f651-48a0-b57b-8b6fbf7145c1"
        },
        "item": {
          "id": "b3a6a694-a110-49fd-b147-8921b1ae7c8e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d6a852e0-6c37-4a19-b99a-88506a1ec2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b560482-aa1e-4e78-b8d5-fc0261f41e19",
        "cursor": {
          "ref": "6f20a615-b8b9-4e9d-a238-c763cd328832",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "27703afe-aff1-4567-885d-c788cce77b53"
        },
        "item": {
          "id": "3b560482-aa1e-4e78-b8d5-fc0261f41e19",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0096dc2c-bf4f-45e5-8151-611ad22ed044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e295a3-d4aa-4ef7-bb81-44bc0a9f438a",
        "cursor": {
          "ref": "756f2017-4d71-4652-8d56-fc5eb63d6ee8",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "52b02d48-f4cd-4dea-9e47-00b5adbed156"
        },
        "item": {
          "id": "04e295a3-d4aa-4ef7-bb81-44bc0a9f438a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e28c7951-1b77-43a7-b0c0-19ee66463218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0cf56b-a079-4cff-b0bc-7339d25e1242",
        "cursor": {
          "ref": "91e6f36f-4f96-4fb7-a931-9d880adb6fce",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "28102775-fe07-4c15-93a8-0ca06329b720"
        },
        "item": {
          "id": "0a0cf56b-a079-4cff-b0bc-7339d25e1242",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "29e177ce-f042-4c92-8447-cab4823405d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d86e801-9f17-4b8b-b313-3eea7855888d",
        "cursor": {
          "ref": "d02c5eb5-74c2-4476-990d-c783225987f3",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "005f3c83-6ee6-4d1c-966e-8f6185c9bc25"
        },
        "item": {
          "id": "1d86e801-9f17-4b8b-b313-3eea7855888d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "770dc951-2066-47b0-864d-5ffc4d868fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8d0907-d9fc-425c-8e2a-f063cf8b7390",
        "cursor": {
          "ref": "042fca5a-fd8e-43e1-986e-05939ff506e0",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "499417e7-2791-4db8-92c5-b4cfed286f07"
        },
        "item": {
          "id": "8f8d0907-d9fc-425c-8e2a-f063cf8b7390",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "75587305-2a9e-4672-bfc0-f843ad88ef61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c869f066-2d60-4ec8-9042-3de9fcf893e0",
        "cursor": {
          "ref": "a9778cfc-d50d-4260-a36f-13c1b02564e5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7f4df2a5-9dcb-43ff-9400-c141755399b6"
        },
        "item": {
          "id": "c869f066-2d60-4ec8-9042-3de9fcf893e0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "766c1e11-da85-4e52-94e0-185c19ca0daf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "7d015cd1-bb6e-4035-8349-d3696c4429e7",
        "cursor": {
          "ref": "3125a931-54b5-4678-bb90-e9288c75a523",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2940d2ac-d8c3-404b-b584-fc2c3cc0b555"
        },
        "item": {
          "id": "7d015cd1-bb6e-4035-8349-d3696c4429e7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2a030f65-fa81-4021-971e-0618b96f46c9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "c7be6ad1-3830-4cdc-824b-83efec07b74e",
        "cursor": {
          "ref": "358d59ae-35c9-449e-95d4-0218e9de56fb",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ea1c7437-db7a-4911-9413-8982a751e543"
        },
        "item": {
          "id": "c7be6ad1-3830-4cdc-824b-83efec07b74e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8f3f2bb7-35fd-4c05-8b9c-8f9b6cab0b76",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "72828cb2-062f-4658-8c92-65cde2c5cfd9",
        "cursor": {
          "ref": "2bb14cc4-92df-4ee5-a6e8-1fa2656d336c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "565f414f-5f86-47cf-a6b6-60bb5aa80cc8"
        },
        "item": {
          "id": "72828cb2-062f-4658-8c92-65cde2c5cfd9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ba63b831-afb8-44e2-855e-057805985138",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "02c0c04a-b13c-4249-aa10-72c9a9d99f76",
        "cursor": {
          "ref": "b66147ee-89b9-49ee-b817-8a8cb247d1ea",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4b304bcb-0918-4600-a9c7-dcbc7a48a74f"
        },
        "item": {
          "id": "02c0c04a-b13c-4249-aa10-72c9a9d99f76",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f87dcea4-04d9-4565-ab9e-1117f13fecc1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "06fd94ac-d033-48da-b349-f44386ac16cb",
        "cursor": {
          "ref": "2ce198c1-2d2f-4a01-be14-1ec571f4509b",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "035aa3b5-5372-4d9f-8119-3480eacaf925"
        },
        "item": {
          "id": "06fd94ac-d033-48da-b349-f44386ac16cb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f6b0baa6-0157-4b03-8d06-13f65bd2cd6c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "993c4c05-77b6-4f72-9d05-92b60e336ccd",
        "cursor": {
          "ref": "a36b392f-7056-416b-afec-e4c26184088a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ecd4e053-6a41-4e46-aac0-b43da1ef4090"
        },
        "item": {
          "id": "993c4c05-77b6-4f72-9d05-92b60e336ccd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4125b32e-c86d-4495-80f0-c6c42b7be0f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ce15ef-ec50-4520-9c00-179ac17d4539",
        "cursor": {
          "ref": "56cff047-86d8-4733-b8ad-3b8d6c198684",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ce7c506a-5f2e-4b1d-b7c0-ab04b57aa981"
        },
        "item": {
          "id": "17ce15ef-ec50-4520-9c00-179ac17d4539",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d9d79604-0e37-4375-8ff0-37abf39df26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd65cbbc-9218-4829-8465-567cb20dbc1e",
        "cursor": {
          "ref": "ccd2cfbc-f734-4df2-bf31-a5b608e5c571",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "517905be-daf1-4e90-9fba-1d40b0bd08d4"
        },
        "item": {
          "id": "fd65cbbc-9218-4829-8465-567cb20dbc1e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5a894f3b-e4c8-4569-bf32-841769788008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dd242a-3063-4092-bc5d-cb058cb482ec",
        "cursor": {
          "ref": "73c2fbe4-d801-4b15-b271-becca149c464",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1b0b7f84-0bc6-43e0-a275-1ebe6d85af1c"
        },
        "item": {
          "id": "65dd242a-3063-4092-bc5d-cb058cb482ec",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a1f7ab36-7a16-45ea-aed6-20b2a55814ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c79bc97-692a-4480-a1d0-13e2b8e4c8d4",
        "cursor": {
          "ref": "6c7c2d5c-7950-41cb-83e8-d2b7a20511ce",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4e55361c-bcb1-4e50-9485-eb2d14434d8d"
        },
        "item": {
          "id": "4c79bc97-692a-4480-a1d0-13e2b8e4c8d4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e22b74df-ca1c-49b6-a7e3-a2acf304eae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd70abcf-c20e-42db-83da-cb1666290058",
        "cursor": {
          "ref": "e465ca5d-1859-422b-984c-21d93e68f97d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e191bc12-c980-43ae-b532-9465d555d70d"
        },
        "item": {
          "id": "cd70abcf-c20e-42db-83da-cb1666290058",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "83f693c8-a30e-4cb2-9a6c-d87cd8b924e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee38518-5f74-4fae-bf2e-392380a3b9ae",
        "cursor": {
          "ref": "2d78f9ac-815d-4b15-a9a4-6737205525fb",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "db8b9235-0570-45f8-a8bc-4b9bbb6e8e16"
        },
        "item": {
          "id": "3ee38518-5f74-4fae-bf2e-392380a3b9ae",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3bb1a10f-f623-4103-860a-e3656b45143e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaa803b-e9ce-4074-a79c-a9e3d6752cfe",
        "cursor": {
          "ref": "d6e68ca8-1743-4c32-95db-2cca6501d76c",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "021cc31e-0e5e-4e64-a7ee-6e2147b5e86f"
        },
        "item": {
          "id": "ceaa803b-e9ce-4074-a79c-a9e3d6752cfe",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "47b77458-b0ae-4281-9bd5-16714c75e2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f619af6c-96db-4044-9e2f-f19fc8c166c8",
        "cursor": {
          "ref": "cca1a414-27ec-43b7-804b-7167dd41dc7e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e155ab41-b099-41d2-b6d3-6422e698a715"
        },
        "item": {
          "id": "f619af6c-96db-4044-9e2f-f19fc8c166c8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "955720fa-f548-4e85-876d-43a7597375fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5450ccbe-17eb-4b76-840a-761d048fe45d",
        "cursor": {
          "ref": "9f2b700b-491d-4d3d-8421-27200019ee72",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3e67982a-68aa-4cec-ba4f-a9ef36a515d9"
        },
        "item": {
          "id": "5450ccbe-17eb-4b76-840a-761d048fe45d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "41c4f764-5ad1-44ab-96b2-cff6d650841e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da421a57-5aa5-4a71-bf78-4c7e093e4cc3",
        "cursor": {
          "ref": "7727d2bc-9f10-4fbd-894e-bb7adb9f3b58",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d7d1c7c5-c785-48f7-879f-5f457b94c271"
        },
        "item": {
          "id": "da421a57-5aa5-4a71-bf78-4c7e093e4cc3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b2564dab-5b7f-4bb1-b28e-dc83e162f172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce3e38b-05e2-4eda-a1b6-8f23bb021e01",
        "cursor": {
          "ref": "a71ba5ce-4bc9-4d17-a4c7-25d44097de10",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "28a3a422-b4cd-462f-9c57-303a6d62ca21"
        },
        "item": {
          "id": "4ce3e38b-05e2-4eda-a1b6-8f23bb021e01",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a900eccc-d8c7-40a3-bc47-21c14596e47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1b3795-cdee-40f1-92f3-8a7a2f0cc80d",
        "cursor": {
          "ref": "6a70baa3-288a-42c7-a5f2-69c95f0bdc88",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e0e808fd-d1c6-44e5-9063-9b552b386a89"
        },
        "item": {
          "id": "af1b3795-cdee-40f1-92f3-8a7a2f0cc80d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cb174349-185b-4f4f-80b8-6bfb6bb99c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ad86a1-98ed-48c1-b1c6-b223f275fbbc",
        "cursor": {
          "ref": "ac132948-5059-43fe-8513-d08712b39894",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "81c1a6a8-67ec-4569-ac6d-5a17fc28a004"
        },
        "item": {
          "id": "e9ad86a1-98ed-48c1-b1c6-b223f275fbbc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "73ad9854-f5a7-45f0-9df9-18d85322f0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f75b12-606e-4805-9a8e-500b486baa79",
        "cursor": {
          "ref": "e1ae0418-fc8b-4654-8f12-9657450a205e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "54808464-61a3-4797-a3fc-68e5855f8bf2"
        },
        "item": {
          "id": "34f75b12-606e-4805-9a8e-500b486baa79",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e5e90d08-41fc-49df-b68a-c411aaae41a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57eca77a-f940-4a66-8016-691adeda922f",
        "cursor": {
          "ref": "ea7e6491-a99f-4fdf-8996-87200f334606",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cd288858-36d9-4faf-9c6b-d3cd60e0af9f"
        },
        "item": {
          "id": "57eca77a-f940-4a66-8016-691adeda922f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ebc906b3-3117-40dd-ab7b-caf90ed46d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9ae8c3-3dcf-41c2-8945-b3bcff384647",
        "cursor": {
          "ref": "460f8637-86a3-430e-a04e-1ce05655b7ab",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4342ab12-0461-4279-89de-616d30739123"
        },
        "item": {
          "id": "dc9ae8c3-3dcf-41c2-8945-b3bcff384647",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1d272f60-f1fc-4cb5-8fd5-b040d6d65afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bfb1aa-3e2d-418b-95a6-03126a7cc5f4",
        "cursor": {
          "ref": "65fff012-cea2-4172-845a-8c984130b735",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "812e3eca-6482-4c26-b3ef-8422046726b2"
        },
        "item": {
          "id": "d4bfb1aa-3e2d-418b-95a6-03126a7cc5f4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fbf2b025-665d-424c-94a9-5f90e59c08ed",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "3260b1cc-6cb8-4c9f-a176-25121540191f",
        "cursor": {
          "ref": "b9d6d3e4-cdb9-4362-8369-2d3acbf44fc8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2904b8d6-e167-44c2-b8ab-8e0dc8a3e1ba"
        },
        "item": {
          "id": "3260b1cc-6cb8-4c9f-a176-25121540191f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d2eb917c-ab78-478f-9a7b-c5d40340d1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261d1949-f2e3-4a5e-a949-3c4a2da1b9c8",
        "cursor": {
          "ref": "89b9bd53-2f2f-4dc0-9729-51b04394b920",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f1cec6b5-29b5-4188-bf73-fda9a36257b3"
        },
        "item": {
          "id": "261d1949-f2e3-4a5e-a949-3c4a2da1b9c8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cbd76efe-b7b5-49ee-a7a3-7761a0b23d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d595dba7-3f34-4b86-ad3a-728a22d63ae4",
        "cursor": {
          "ref": "7d66e1a8-6aae-4031-932d-2fc7766891c7",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9a1fd0ef-af17-4ac7-836f-49ae934caad4"
        },
        "item": {
          "id": "d595dba7-3f34-4b86-ad3a-728a22d63ae4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4e9decf9-544b-4d5c-9520-1f45d69f4fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81966850-d3a3-43ea-83fe-67115cad6c1a",
        "cursor": {
          "ref": "b7f7e6fd-30a2-499e-b927-25bf134a9646",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "35756f6f-82e0-46b8-b94e-ba16ddc4227f"
        },
        "item": {
          "id": "81966850-d3a3-43ea-83fe-67115cad6c1a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ce4ffb0a-6fd4-49e6-84a9-dbbe463b1824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea89251-ef66-450f-883d-c1db18e03168",
        "cursor": {
          "ref": "5d1ff193-4c87-4e94-8aa2-f8417ed106b4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3de46b53-173e-4e38-a037-f1f1057fdd2c"
        },
        "item": {
          "id": "dea89251-ef66-450f-883d-c1db18e03168",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "12b90da8-d331-4967-809a-6049b4a3682d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cdf8ce-a293-45f4-88c0-2a85957c2a18",
        "cursor": {
          "ref": "ddc33a55-f2f7-4f8a-b640-892ad0bf0228",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "10d6934a-0b68-4366-9064-4f949ad3868c"
        },
        "item": {
          "id": "77cdf8ce-a293-45f4-88c0-2a85957c2a18",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3e0f3a1e-e50c-4749-9bb3-9d5b97e9eb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8d8b09-ac03-4df0-ad83-8610a45442e0",
        "cursor": {
          "ref": "e9556b46-b20f-4ffe-ab73-7ab687892212",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "da1a820b-de8f-4279-9ffa-9ad44df3de10"
        },
        "item": {
          "id": "5b8d8b09-ac03-4df0-ad83-8610a45442e0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b582d9c1-3596-4777-8965-90b835a8abec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4d2b05-9b53-4268-b31b-a746c6284ecc",
        "cursor": {
          "ref": "667815ac-aec1-4366-8385-3eb64d13ed09",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b106c687-3e4d-4f29-be2f-6ed2f73592ec"
        },
        "item": {
          "id": "7b4d2b05-9b53-4268-b31b-a746c6284ecc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8a5fcd52-9772-4267-9ec7-8390782fcb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a933a1-3dc9-4ead-99ed-5b8321e0e5e6",
        "cursor": {
          "ref": "2838dc8c-9bd4-40da-b1e7-4dd04642021f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7457db6d-cd5a-489f-ac2d-3b074f8bcffc"
        },
        "item": {
          "id": "78a933a1-3dc9-4ead-99ed-5b8321e0e5e6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8b786517-b9d4-47c0-b061-7f4ff443be4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4eb5462-9210-4ae0-b6e2-448321ffc07d",
        "cursor": {
          "ref": "889a3240-2099-4ea2-a117-b88e5a40c117",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c860e130-3fee-48e3-bf84-0e7fce1ab1ba"
        },
        "item": {
          "id": "f4eb5462-9210-4ae0-b6e2-448321ffc07d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "528b3a93-448d-4c3e-814a-38553942505e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790d9612-0323-447f-a69e-f36db020fb55",
        "cursor": {
          "ref": "766bf73e-1c0e-4c75-b658-df0100dab7d5",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e1f8cf2f-9216-451b-a6b1-e6a322d0afd8"
        },
        "item": {
          "id": "790d9612-0323-447f-a69e-f36db020fb55",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "56b464a5-47f6-4022-83ac-93fb8cf20db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e46a180-da0e-41a3-a657-8eea578ec4cd",
        "cursor": {
          "ref": "51706dca-c0c4-4dc7-ad7a-d3f6b7dea3a7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "16c755ff-a2bd-4ee5-897d-91e29ef2aead"
        },
        "item": {
          "id": "6e46a180-da0e-41a3-a657-8eea578ec4cd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ff437caf-4026-480b-9566-b311faf31b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7750f090-5895-4a1a-a88f-fdbaed390cd9",
        "cursor": {
          "ref": "fa20d726-4376-4e1e-984d-32e3927face2",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "94b935db-bdb4-422b-a301-0aa171fbdb75"
        },
        "item": {
          "id": "7750f090-5895-4a1a-a88f-fdbaed390cd9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0591090e-97fb-4041-98d1-f84e045f6bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deab06d2-4174-4ecb-9b59-efb6fa097366",
        "cursor": {
          "ref": "84c9f9e7-f45b-46f4-92b0-b78fd312f49c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "efbcd34d-3936-4424-a931-97331a4ec16b"
        },
        "item": {
          "id": "deab06d2-4174-4ecb-9b59-efb6fa097366",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d71c4e66-2383-4bdd-abed-6eb0f7e28fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e701a53-3846-431a-8b58-4b0b6eec313d",
        "cursor": {
          "ref": "4c067447-b2dd-475e-8c5b-49b903d07752",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ae76e983-4152-42cc-ad66-8274cb57f12d"
        },
        "item": {
          "id": "2e701a53-3846-431a-8b58-4b0b6eec313d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "40d043f8-a194-4fba-8627-2fd1ef303473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b746a6b3-b963-4b6a-a00b-223e321cd7d0",
        "cursor": {
          "ref": "114b0f66-5de8-40a2-b313-fcf33451ece8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3cf48438-dd0e-4f38-88ee-c715224ae067"
        },
        "item": {
          "id": "b746a6b3-b963-4b6a-a00b-223e321cd7d0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6eba9185-aa7e-4ef3-876e-cfcb4dbafdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ba84c0-b9fb-435e-ad4c-a7f7dede3343",
        "cursor": {
          "ref": "1ab660f2-72ad-4f99-bf7d-697465ad3372",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9e3e3f16-0051-4046-9add-7e626022fb0f"
        },
        "item": {
          "id": "86ba84c0-b9fb-435e-ad4c-a7f7dede3343",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8c605d43-5941-42bb-9cc7-9833011978cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5958f81-c7a3-40c3-9b64-ebfd664b2b61",
        "cursor": {
          "ref": "93dfa953-52ee-4492-aaab-965a90598c35",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f418581e-82c9-4cd9-afc7-965938c06be5"
        },
        "item": {
          "id": "c5958f81-c7a3-40c3-9b64-ebfd664b2b61",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e61ab109-992f-4471-8855-765f061f7a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e00cbc-95f6-452d-92e9-887f4d716a62",
        "cursor": {
          "ref": "6c82735d-1ec1-4308-b4c2-e2c821ffaa5e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "059256b4-1908-47d0-8887-a5aee02b1cb8"
        },
        "item": {
          "id": "32e00cbc-95f6-452d-92e9-887f4d716a62",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4704eb10-4716-4b5b-aa4d-ea983db7e730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74974fe-84e7-4515-9410-86b295b73f49",
        "cursor": {
          "ref": "7084a917-21f5-4758-90d9-732484ef795b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2c0e819b-070a-48bf-bd14-6fc5b06f0591"
        },
        "item": {
          "id": "a74974fe-84e7-4515-9410-86b295b73f49",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "dc7baccc-f449-4b79-b88e-a097dc7f16d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e79597-6488-4c43-a035-61d2f2e57e9b",
        "cursor": {
          "ref": "544ae2d0-f3d2-41d7-b4bf-29b52560fd44",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a5b23100-2ee2-4e99-9115-111379abe952"
        },
        "item": {
          "id": "54e79597-6488-4c43-a035-61d2f2e57e9b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b0ab5b36-c547-4d34-afea-49e5f6cd03d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdf9eaa-2707-4e30-96f1-ad0e5b448a78",
        "cursor": {
          "ref": "f32a03c6-1b15-4fa4-8dd1-15f29de4e48e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0d4aebd4-a7ce-4bb9-a7ca-3710642c14eb"
        },
        "item": {
          "id": "6cdf9eaa-2707-4e30-96f1-ad0e5b448a78",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "53f7ab1b-1d35-45fb-9cc2-2965a196ff7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4103f46d-1196-4e55-9633-48dbfd3cff02",
        "cursor": {
          "ref": "3774ebe4-6fb0-4309-a9e3-e135a8cda332",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "04a67bb8-7bea-4e89-b89d-07332896619a"
        },
        "item": {
          "id": "4103f46d-1196-4e55-9633-48dbfd3cff02",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "844cf479-d89d-4edf-817d-f22d74589078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0c2a9f-043c-4274-9081-69a86c171891",
        "cursor": {
          "ref": "ccc990f1-2d25-4ffc-bc00-6fcd0a77783b",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b2c60561-28e2-4b94-9973-522ddb384d1f"
        },
        "item": {
          "id": "4e0c2a9f-043c-4274-9081-69a86c171891",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f9398f67-882a-46d4-bedb-350ebd432541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6510cbbf-efa9-4880-981a-07ef7cabe37f",
        "cursor": {
          "ref": "a59ecee9-f336-4610-8be4-1fc2ee0dc325",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "df62751b-7fa7-4daf-aaeb-3370cad898c1"
        },
        "item": {
          "id": "6510cbbf-efa9-4880-981a-07ef7cabe37f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f52ee31a-95f4-4d4b-98d9-738fc7320759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d80f3cf-f36b-41fe-835b-ac5596f30ab0",
        "cursor": {
          "ref": "74a13800-c1c3-4dac-af6a-d754d43dce5a",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "701f93ab-0e64-4d19-b9e2-490911271a28"
        },
        "item": {
          "id": "4d80f3cf-f36b-41fe-835b-ac5596f30ab0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "657f9562-f8ba-4b8c-8e2e-ff8225d8cac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e3bc9e-17f8-4823-89c3-275912274e1e",
        "cursor": {
          "ref": "4da3b6c8-ed86-4e68-af75-f8b48a1a3e1d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2fa75c01-4ab1-4019-9c97-e4e6c3efeaa8"
        },
        "item": {
          "id": "52e3bc9e-17f8-4823-89c3-275912274e1e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c0cb932f-bb9e-4d00-bc90-368d8977ca5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e35798e-bb00-44ca-ba44-b05351b606c3",
        "cursor": {
          "ref": "dfe4dbc7-eb40-46df-b90c-93545ea0b4b0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3a929f4b-f309-4294-9195-13bb2465b592"
        },
        "item": {
          "id": "5e35798e-bb00-44ca-ba44-b05351b606c3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6c9a9911-db09-4f21-9014-2a18084bd7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1dde68-f511-4690-9311-7ce85ae8d0e5",
        "cursor": {
          "ref": "cd030787-b508-425f-8a71-75fe526edda1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2e954f19-294f-4a52-90d5-b23fc576e99e"
        },
        "item": {
          "id": "5d1dde68-f511-4690-9311-7ce85ae8d0e5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8535fe9d-41b1-473e-a234-bc8231317a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb9385f-1532-4653-aa60-86cfcd6fc8af",
        "cursor": {
          "ref": "4ebf0c9e-7588-43d1-bf64-e86c96e310f5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "23fc3679-0d86-46c5-b3de-5389d0e6934e"
        },
        "item": {
          "id": "5eb9385f-1532-4653-aa60-86cfcd6fc8af",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "461286eb-7799-4f2b-8c5b-bc69b4c49cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc10501-9b65-46ac-ae94-c3bfafe3556d",
        "cursor": {
          "ref": "9fb2c12a-a196-4cbb-bcad-841fba1f5ef9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "45c23ade-5fb3-4a4b-8fbe-f6e8b3babf7c"
        },
        "item": {
          "id": "0dc10501-9b65-46ac-ae94-c3bfafe3556d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "14c359a8-9f12-4c30-a41e-632ee7c4b3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d3671c-b598-406e-a058-018e9080f9a2",
        "cursor": {
          "ref": "cfa11238-7cd9-457d-9d7b-7eacd035376a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "faf1560a-9297-4cc7-8f1f-a751e2704263"
        },
        "item": {
          "id": "40d3671c-b598-406e-a058-018e9080f9a2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "dba57f54-2832-4944-b866-6f798f4c0932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6413cc3-2ba9-479b-9245-7c5877861325",
        "cursor": {
          "ref": "5d248583-d743-4e1d-ba4a-ade9e79fbf3a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "beb2ddb4-8c86-44ad-ab69-170e8bdef8b0"
        },
        "item": {
          "id": "d6413cc3-2ba9-479b-9245-7c5877861325",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f724fd3f-727c-4840-9bcf-93a861b97c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798bf82e-f915-42f9-a445-205c1817afd9",
        "cursor": {
          "ref": "e6eb1a1f-67fb-4632-853d-785c526d5ebd",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9d156e3b-0d6b-474f-a55b-9c96d603d78d"
        },
        "item": {
          "id": "798bf82e-f915-42f9-a445-205c1817afd9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "77f2917d-aaa7-4d83-ae13-dabfbbde29ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0497243-8d97-46ce-a20e-3f9e0e671923",
        "cursor": {
          "ref": "a6e502e1-11be-4804-93e5-5fb31478f1bd",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4899a696-d0dd-45d7-ad46-d0bb2353b52d"
        },
        "item": {
          "id": "b0497243-8d97-46ce-a20e-3f9e0e671923",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e637ce20-51c0-452a-bf93-f90c74ac036d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1dd898-d5bf-4774-bf1f-7fec0e43efc5",
        "cursor": {
          "ref": "01bd0322-0dca-4f0b-b513-1241e3f81b6f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "373e1b94-2fc3-447c-86b7-5ad20ab55c44"
        },
        "item": {
          "id": "2e1dd898-d5bf-4774-bf1f-7fec0e43efc5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a9916888-8fb3-4121-aa7c-927334a32555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c161d83d-5c17-4b3b-8aa0-a234bc07c188",
        "cursor": {
          "ref": "6ef4ad74-82c5-4440-9169-f4a2fde3f161",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2cd9e3cd-aff5-4b90-b8a3-a0929d6c12ae"
        },
        "item": {
          "id": "c161d83d-5c17-4b3b-8aa0-a234bc07c188",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "044329b4-5c21-4042-addf-cd63ab18a248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29001ba4-f246-4fe6-9beb-9dd1d862c8b6",
        "cursor": {
          "ref": "184a1f83-0dea-4828-8f33-fab28b2dabca",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "279ac222-93f3-4345-aeda-8c3f7d346154"
        },
        "item": {
          "id": "29001ba4-f246-4fe6-9beb-9dd1d862c8b6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "73d6f7d0-478f-4559-bdb0-934087af46e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710a89d9-6118-4d76-a07b-2ea22e84b1ef",
        "cursor": {
          "ref": "68b638a4-455f-48cf-a5bf-96605940b80f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "77a3c278-8466-4d10-867d-9a340de4b148"
        },
        "item": {
          "id": "710a89d9-6118-4d76-a07b-2ea22e84b1ef",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0eefa878-c6c0-45b7-9c5f-721bc9452f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c3a4bf-f666-4477-aca3-4845d3133b4c",
        "cursor": {
          "ref": "91b658df-792d-417c-a7f7-3799463d46da",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1b285c49-036b-4289-bc35-2e32c7fca9bc"
        },
        "item": {
          "id": "27c3a4bf-f666-4477-aca3-4845d3133b4c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9632dc73-3188-439d-bdd3-bd5fd3fae249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d69de8f-4609-4086-b580-46b1fd7cd860",
        "cursor": {
          "ref": "74ed0fda-8301-4646-b262-b05a0ff4ec79",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3b55fa68-0ce0-48e8-9a31-42a1e9c58096"
        },
        "item": {
          "id": "6d69de8f-4609-4086-b580-46b1fd7cd860",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fa3e37a6-413b-4e00-a26c-10d61826d61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd2c455-a61b-4c5f-a2dc-fcbdc1b47e4c",
        "cursor": {
          "ref": "77e1f16f-b4bc-4a71-912c-5ab8d6f051f6",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5e9b1095-4881-4720-a996-ff4fc213a844"
        },
        "item": {
          "id": "efd2c455-a61b-4c5f-a2dc-fcbdc1b47e4c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "899612e1-d67c-479a-a95f-cb7c7a6e7800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbfe8aa-5bfe-498b-a8a7-db116f631472",
        "cursor": {
          "ref": "d99de359-0c8a-4bbc-8dab-56567588dcef",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "59367a69-557e-4678-8a58-6c5af7ea6df5"
        },
        "item": {
          "id": "8bbfe8aa-5bfe-498b-a8a7-db116f631472",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "81ba1924-e2de-4124-88bf-30dbf10c0cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc33d12-a137-4d99-8d31-5f44554114aa",
        "cursor": {
          "ref": "6d1954a4-13c1-46fb-923e-7798294e8ea9",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "53253ea4-ab52-4653-a3f9-34d64c357450"
        },
        "item": {
          "id": "9fc33d12-a137-4d99-8d31-5f44554114aa",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f0eacc67-40e0-4eca-a8ba-0609aff59765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bc8037-1d91-42e1-a9e4-9524ece53d0e",
        "cursor": {
          "ref": "2d67f06d-53cc-49bf-9da7-4b234b0ee444",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6099cbf6-50e2-4cc2-80b7-dc78c595564e"
        },
        "item": {
          "id": "68bc8037-1d91-42e1-a9e4-9524ece53d0e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "084f414f-74cb-40a0-ad24-b34707359bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ae40f8-3f95-45e3-a05b-e0121c1a6562",
        "cursor": {
          "ref": "11f65e70-2161-4c41-b09c-94ce4de7a6bb",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "04a23d56-cf95-463f-b7c2-e740bdb95f1e"
        },
        "item": {
          "id": "a3ae40f8-3f95-45e3-a05b-e0121c1a6562",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "19fc9ffd-5e0b-43f4-924e-d1fdaf388376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab72860-0169-4727-965c-a3068aed3bf8",
        "cursor": {
          "ref": "5f7b42ba-b8d7-4fbd-bb3c-e369b9319363",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e1b145f5-4076-431a-a1de-7ad966681e07"
        },
        "item": {
          "id": "cab72860-0169-4727-965c-a3068aed3bf8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "92b4cef0-2ac5-414a-b99e-d7b2309faa17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7997fdeb-6fc2-4b19-a8dd-efaf58fe0ca1",
        "cursor": {
          "ref": "0d7ee2aa-1841-4e18-8629-bf050738ea60",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "05f78603-f676-466b-9d41-880aeea1869b"
        },
        "item": {
          "id": "7997fdeb-6fc2-4b19-a8dd-efaf58fe0ca1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4aa51fdc-45a9-48ae-adf5-dad49d13df76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f138b7d-b147-4e0d-a88b-7ddb97a80dfb",
        "cursor": {
          "ref": "e26c3fcb-affc-468e-881f-e36d53e34ff2",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "407c564f-22a7-4878-8844-f1cf1d278bdf"
        },
        "item": {
          "id": "2f138b7d-b147-4e0d-a88b-7ddb97a80dfb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "57d27464-7761-4d18-a360-5852f47c1cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2753eed1-c5cc-470c-a70d-7b75a4b86e0a",
        "cursor": {
          "ref": "536b07c6-9946-4363-ad8d-6676f6e60a3f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ff957ae7-7dac-4829-88c8-4f0e219efaed"
        },
        "item": {
          "id": "2753eed1-c5cc-470c-a70d-7b75a4b86e0a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d233dc54-a48e-4511-a106-c21b3f948a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691c0b86-14d2-4078-a0f6-9129de9acf6e",
        "cursor": {
          "ref": "1e555261-e6a5-4722-8347-09eba43fd087",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "65d83102-4602-4164-b871-2b4145ce026d"
        },
        "item": {
          "id": "691c0b86-14d2-4078-a0f6-9129de9acf6e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "33171bb5-12f1-4391-94fc-8679c835b6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12252ca-3864-478e-8886-df2307b2696d",
        "cursor": {
          "ref": "a9ea7a92-0171-4386-b0c7-eb76b3f86ea3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e891084b-0c50-439e-8799-7c559cca0b51"
        },
        "item": {
          "id": "f12252ca-3864-478e-8886-df2307b2696d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c7319776-c625-4bca-8aab-8e85e60a6e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5631056-f1a6-459d-b4c7-ac9595536d71",
        "cursor": {
          "ref": "2337f6ef-91dc-40bf-a62b-837d0748f7e3",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5c2a6232-062f-41f1-9202-a81a3c89aeac"
        },
        "item": {
          "id": "f5631056-f1a6-459d-b4c7-ac9595536d71",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1afe805b-ace4-4682-8c7f-8f2acef732ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22fcb31-8903-4f87-b3f4-14a293373237",
        "cursor": {
          "ref": "cca65853-52e6-4ea3-8942-bf1f0906355e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fe5ccfd0-731e-4476-8a3d-cb2207edb32e"
        },
        "item": {
          "id": "f22fcb31-8903-4f87-b3f4-14a293373237",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b48e0b82-9979-4f00-8ab6-9c164ccf3132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010fa63e-1743-471f-9335-77967f167385",
        "cursor": {
          "ref": "9876d756-fed6-4b52-8e9a-929b139c15c1",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a7a728be-9fb9-4961-8223-85a1b6c68743"
        },
        "item": {
          "id": "010fa63e-1743-471f-9335-77967f167385",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "50401c8c-e476-4faa-8ec8-a5a2d4dbcab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9ba523-6c40-49de-b410-1e88c39c47d5",
        "cursor": {
          "ref": "0a36af5e-5bb7-4e0c-9f73-c9026772e83f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "119ca3e9-6c08-47ab-ad4e-79e42e8dfe59"
        },
        "item": {
          "id": "ef9ba523-6c40-49de-b410-1e88c39c47d5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c11304b6-5330-4265-abd3-f802770397b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d5cb74-fba9-4b4a-948b-4c5d3e2aa11c",
        "cursor": {
          "ref": "df10d2e9-89ca-49a4-b826-0eec7c2e4e4f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f3875d09-8fbb-476b-adb3-b344654c8a24"
        },
        "item": {
          "id": "63d5cb74-fba9-4b4a-948b-4c5d3e2aa11c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ad763c1c-a8d3-45b3-b701-49500d2a7e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bc40d0-17ed-4070-92b3-0ce49580c9ca",
        "cursor": {
          "ref": "9d5404c4-0ae1-4b02-8abe-d5399dd968e9",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "11890991-fa8b-4321-a766-e152851caadc"
        },
        "item": {
          "id": "94bc40d0-17ed-4070-92b3-0ce49580c9ca",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "052a14e2-f030-4de1-9ef8-e3e21a89607c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27467dd5-95f3-4467-8b7d-2d50e85f861c",
        "cursor": {
          "ref": "4b4e54d0-8669-4538-941c-88d64bf2b2d7",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ba7deaad-e901-42d9-8cb9-35949046ce8d"
        },
        "item": {
          "id": "27467dd5-95f3-4467-8b7d-2d50e85f861c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "337d18b1-d576-425a-bd70-fb7cfa8a992f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14f4563-c20b-45da-99a8-1a4eb77ead63",
        "cursor": {
          "ref": "ddb16e0c-a695-4156-8fe5-11a994ffbaa4",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bc48a501-794a-4df8-9f40-e1a74fc5cb19"
        },
        "item": {
          "id": "b14f4563-c20b-45da-99a8-1a4eb77ead63",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d4c5fee3-5b6e-4f0a-800e-d5652a63ec36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ddbb96-181e-4ed6-93fa-e72605718345",
        "cursor": {
          "ref": "51a455ab-918a-4288-bab8-430b4aa998d9",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8305cd45-a339-494f-9ba4-7fd59e10aaac"
        },
        "item": {
          "id": "09ddbb96-181e-4ed6-93fa-e72605718345",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0be3f117-f601-440d-90dd-9256e82025b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334d45fd-fd0a-4480-817c-32b951cff2cd",
        "cursor": {
          "ref": "4abfcf6e-dcd0-4ae9-b0f4-fe74bd8cc985",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fb8425a8-0114-4ab6-85c4-3d7113ac132c"
        },
        "item": {
          "id": "334d45fd-fd0a-4480-817c-32b951cff2cd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3a533c35-20cb-4ab7-9055-d5d6f2d756f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de73d8d-b8f0-420e-b3ff-56d8c50f9e8d",
        "cursor": {
          "ref": "df1c00eb-adc5-4acb-891f-01187e95677a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e6624ae1-e77f-4552-8e3e-b7677b665a25"
        },
        "item": {
          "id": "6de73d8d-b8f0-420e-b3ff-56d8c50f9e8d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7aa13219-f40f-4eb0-935f-b79525775d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eb56f7-6544-4e37-9ce2-627636139d6d",
        "cursor": {
          "ref": "6e7a05bb-9c45-4189-ae83-d0e4e3d3e151",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f6133354-a6fd-4403-b8cb-ee115fe0c11e"
        },
        "item": {
          "id": "01eb56f7-6544-4e37-9ce2-627636139d6d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c265d1f4-9610-4a52-9702-d6c4190d2451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f6dac3-b961-4ab5-b3d6-d18caa796f74",
        "cursor": {
          "ref": "22b16dca-2cc0-40a6-8491-ec07f578c693",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2bccbf57-cbc9-48e6-820b-1cff4a313166"
        },
        "item": {
          "id": "48f6dac3-b961-4ab5-b3d6-d18caa796f74",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e5c9d5a1-6dc8-48e4-a0f8-c9e70c1a713c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc81f483-ce50-4fa5-94a2-1ca167dce303",
        "cursor": {
          "ref": "6136670d-e178-4d58-a8ae-9a2ed0821800",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b74651ff-3ec4-463c-8598-d226f61c7421"
        },
        "item": {
          "id": "fc81f483-ce50-4fa5-94a2-1ca167dce303",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8fb07348-9235-4bd4-bc06-8c012b7b3f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785dcfb9-c10d-4a4b-8491-a156938c8fec",
        "cursor": {
          "ref": "e4775591-d0cd-4277-814e-ccde27d378bd",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a2ccb5ea-02fa-4776-baba-14cf8a392b77"
        },
        "item": {
          "id": "785dcfb9-c10d-4a4b-8491-a156938c8fec",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3cdbbb23-cb7b-4ddb-a89d-11993249eacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a104d1-8420-4458-ab22-2b38585bb814",
        "cursor": {
          "ref": "0a3b3eab-8008-4a99-b967-0edc6891b073",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3e45eddb-a708-4529-8d29-310be903a427"
        },
        "item": {
          "id": "b8a104d1-8420-4458-ab22-2b38585bb814",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c10414c3-8231-4e98-8068-8482e3535943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58c4cd2-9d2f-48f2-bee2-3ceb9f2a6239",
        "cursor": {
          "ref": "beb7c7f1-3337-4c7e-82d0-4102ab2ff5f1",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b86c2750-06e0-40f1-9cdb-a65be2390aba"
        },
        "item": {
          "id": "f58c4cd2-9d2f-48f2-bee2-3ceb9f2a6239",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ad1a2aab-67ee-43ca-81fe-65e78bff9810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba6849a-0f16-4f69-835f-401cdbd1fa3f",
        "cursor": {
          "ref": "eef0a9ac-2fbd-4010-a141-41e8c3d87dc7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "28833f0b-c097-4692-9b9c-0fa1adcee4ae"
        },
        "item": {
          "id": "dba6849a-0f16-4f69-835f-401cdbd1fa3f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f131eca5-072e-408e-9ec6-5ba55afcae45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1594cf-7f86-455a-a344-bc6d8a53f5c5",
        "cursor": {
          "ref": "52806e09-9130-4864-b454-35c0b3b6a4d8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8bdac802-7949-4329-a02e-c7d6b61d27b5"
        },
        "item": {
          "id": "bf1594cf-7f86-455a-a344-bc6d8a53f5c5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cb462107-53f9-4011-9e0b-48933837b9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2fd367-6e86-40bb-b377-e35f43454682",
        "cursor": {
          "ref": "cda68615-8cc7-4da5-b318-a1c4d2b94593",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b1a5092f-8b58-4784-84fe-a0ebab42e595"
        },
        "item": {
          "id": "bc2fd367-6e86-40bb-b377-e35f43454682",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "01b70a84-7bfd-418a-ac5b-8e0b1aa116a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f132e21-ee2d-4086-81e3-379765f52622",
        "cursor": {
          "ref": "3e2bf616-7094-4483-b8e6-a4ef34be4991",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c678e622-9cb9-4b13-bf08-628e57c3267e"
        },
        "item": {
          "id": "3f132e21-ee2d-4086-81e3-379765f52622",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "92124ffb-f725-44fd-9e85-2e6296b640c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5dc96f-9f07-4ca7-be2e-9cc430c48b2e",
        "cursor": {
          "ref": "3844d8d4-5790-4e11-9d68-a17bdd2a9ea4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "206d666d-4098-4372-956b-4911e59e8a3d"
        },
        "item": {
          "id": "fc5dc96f-9f07-4ca7-be2e-9cc430c48b2e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "884a41fe-3beb-4d58-869b-dbdc1a095164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b4b322-16ac-40ce-9649-f1776d2141ff",
        "cursor": {
          "ref": "7bb0aadb-1529-426d-8b25-0f1532a436fa",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "69baaee5-226a-4b91-a0c5-ac33b184b8cd"
        },
        "item": {
          "id": "88b4b322-16ac-40ce-9649-f1776d2141ff",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "505a3cb9-b2e0-4b68-ab77-1d31cbf3c814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42831e16-fadf-4424-a57d-03191cf5e8d5",
        "cursor": {
          "ref": "14cd5745-1666-4fa1-a2cd-a479f3260177",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f70bceca-accb-4a60-96b4-98d64febe7d3"
        },
        "item": {
          "id": "42831e16-fadf-4424-a57d-03191cf5e8d5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7b9a289a-40e2-438d-bbab-32fbefc6ed17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45830ae4-6eba-4c96-b32c-48a501d305dd",
        "cursor": {
          "ref": "e7e9b234-e415-4415-923b-12ea32edf8ec",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "235866f4-5a17-4797-8f40-a9936d663523"
        },
        "item": {
          "id": "45830ae4-6eba-4c96-b32c-48a501d305dd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b080fe9a-90c8-4d90-b312-b552954ee9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f5ce2e-a1db-43b2-9f50-2ba1fe1d8a8e",
        "cursor": {
          "ref": "690b5add-bf55-403c-82de-7ead905df596",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1dd470f7-759e-4328-bb0a-60b2d9cd3494"
        },
        "item": {
          "id": "38f5ce2e-a1db-43b2-9f50-2ba1fe1d8a8e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "929baeec-5ffc-4a31-a1d7-a12475d8d288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf4fa8b-816f-4276-bfcd-d76167777c89",
        "cursor": {
          "ref": "a93a7e1d-200c-4fdd-bfd2-60a90b62546c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f9bd7a6e-5c9a-4548-b413-743a2349470a"
        },
        "item": {
          "id": "daf4fa8b-816f-4276-bfcd-d76167777c89",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f45f6ca3-ca5f-4afa-8e4b-c2dfc19bb633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3125a60-e52f-4bc8-b17c-140240d7f47b",
        "cursor": {
          "ref": "61946d0d-badc-4e8f-b230-3bd1cfc7ab46",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c2491300-161d-4902-9b89-a9311e3595c9"
        },
        "item": {
          "id": "d3125a60-e52f-4bc8-b17c-140240d7f47b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8a12b40c-3184-4546-a04b-4068b2d254e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd9d2de-1bfe-448d-9f7f-42a2357b4b2e",
        "cursor": {
          "ref": "c99f021e-c151-4361-b8b5-5a07e601efc2",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3b3763bb-fd1f-4be4-bdff-a7ace3dbb128"
        },
        "item": {
          "id": "4dd9d2de-1bfe-448d-9f7f-42a2357b4b2e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6661113a-33de-4e67-9dff-84245ed33226",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c7cee8-d812-4869-bc0a-e0f9e06e5df1",
        "cursor": {
          "ref": "c9e60305-2136-441c-bd9d-f23656089d8e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e58f4d74-fd03-4fbd-ae43-e86023b9949b"
        },
        "item": {
          "id": "b4c7cee8-d812-4869-bc0a-e0f9e06e5df1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0edb5721-e21c-4f86-a235-303569e14532",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cce37a-bfe4-4577-a919-d7be1c6583dd",
        "cursor": {
          "ref": "e8ccc915-7291-447d-b34e-927b0c438809",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2fa79603-17a2-48a8-8663-24626ecec5ae"
        },
        "item": {
          "id": "a2cce37a-bfe4-4577-a919-d7be1c6583dd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4b6ba481-6f3b-44f1-91b2-582e222293d7",
          "status": "OK",
          "code": 200,
          "responseTime": 2342,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3690bfab-8f73-49ea-b4e8-2fc8053b47b5",
        "cursor": {
          "ref": "137152c9-519e-47e7-8f81-3db9c6999046",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8055cfd9-df71-4815-bc72-b237d6ac1083"
        },
        "item": {
          "id": "3690bfab-8f73-49ea-b4e8-2fc8053b47b5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2550a6f4-622c-4cd9-9277-baaf3e0758a4",
          "status": "OK",
          "code": 200,
          "responseTime": 2513,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "340961f2-243c-4911-b239-83116fbed3ea",
        "cursor": {
          "ref": "df7e71fc-0fcc-4155-a5d6-36a9a0eaf3a7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "14819b1b-8818-4183-a24a-142fa335c8d2"
        },
        "item": {
          "id": "340961f2-243c-4911-b239-83116fbed3ea",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7afd6fb2-613f-46f6-ab3b-e4c30b90718d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340961f2-243c-4911-b239-83116fbed3ea",
        "cursor": {
          "ref": "df7e71fc-0fcc-4155-a5d6-36a9a0eaf3a7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "14819b1b-8818-4183-a24a-142fa335c8d2"
        },
        "item": {
          "id": "340961f2-243c-4911-b239-83116fbed3ea",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7afd6fb2-613f-46f6-ab3b-e4c30b90718d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1268bb3d-f070-4e29-80a6-9988881e6630",
        "cursor": {
          "ref": "534b5234-1fed-4bac-9941-e60f3a17428e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2fdea9c6-24a9-4e8c-8a24-4d1882920e29"
        },
        "item": {
          "id": "1268bb3d-f070-4e29-80a6-9988881e6630",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8b5aed9d-129f-4dff-b9b4-244f70600d7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0599bbd3-b875-4cc8-a5e8-9f37f668c725",
        "cursor": {
          "ref": "e1b23d0e-f6e4-4b98-b64a-fac551e01a9f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b9a2e4f8-7711-4a1e-83ee-52042fdaea8f"
        },
        "item": {
          "id": "0599bbd3-b875-4cc8-a5e8-9f37f668c725",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "067907ee-a8fa-4eeb-8fbf-89a1df0ac002",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}