{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0aa5940f-73a1-44b8-9d1d-e5f561fb0959",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8d7b0848-d8c2-4a85-a0d8-16e025e1068c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3713186a-64c7-408c-bbd8-0e09bc17e8cd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "16dc3285-78bd-456a-9847-9e29cc6318ce"
                }
              }
            ]
          },
          {
            "id": "e6819118-6c7e-4aa6-be67-47beef0d82ba",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b23eb39-a969-4a12-89b6-ed0b930923ae",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7d3d6254-8682-42e6-b985-c08c03525376"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3252a234-2fbb-484b-bb99-01928e37a62d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5607da4b-6835-42f7-8e73-5d7f9b887bc7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "983bf0e2-1d6e-438a-bcd9-434bcae57f8c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c142c4ca-325a-4242-bd4d-73492cbb386f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3d77253-a258-4f4a-8d16-c86d3f73bc91"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35aaec68-e299-435b-8ddb-fd451a788411",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9ea6519-c471-4d5e-b0ce-9c0ea646f567"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5afa338f-bba9-49cf-80fb-6b9b5c4a8987",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf341698-c141-49b3-bbd7-d54736a34e00"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cc1663f-abc5-4605-8f06-ea199b0be7c0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "63ed891b-7b6f-4a52-bb5f-65fabdd414d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8d2e3a5-e1df-4f63-be18-e621398d7e2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24677985-e6a8-4d3c-b369-0735a0a07984"
            }
          }
        ]
      },
      {
        "id": "0143c0b1-63ea-4b54-aff5-59c2847eb4a3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "14c35575-edec-48f5-815d-8a86503f3e05",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d5852dd-3f8c-4476-a176-244b606928ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "613b3bd1-6d09-4890-90b0-8d8f06bc3cc9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05042131-0a38-4538-aa42-58bae60c43e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b484723e-bf34-48ed-8ac9-ac12d0d87df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ede422d-834c-4d21-aba1-5131d8c9f019",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5ed1f5-907c-45aa-a08e-5a4e908010ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17168373-cd22-408a-b2ef-f5b007df722a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe88b216-001f-413a-8e8b-1c059965606c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6541ef82-0bc0-433e-bd05-260bc16fe06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "baed1f37-1ca5-4f23-9b1b-4fcfbaebfca9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb98a411-7551-44d2-bc3f-33e3769cae58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02c9b108-af5b-47e1-ad69-689f0f7b1494",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3b329a-79c6-4d5b-add2-b46cc22f5f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34113c08-dd9c-4908-b6aa-86e1dc3ce1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd3ca2f-7440-4812-a988-02e993fc2fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a584b1-2ede-4940-afc3-d37083bd0013"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a3035c25-79e4-4c3f-b109-a96a9931ea42",
            "name": "Positive Testing",
            "item": [
              {
                "id": "30b56031-804a-4d56-bafa-3245e4b7c0e8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77b6f4b3-a029-4d6f-b974-998ed980d911",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d7894750-533b-4d82-9603-90bfb572bbd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1bfd714-a09d-40b9-8f05-b27dff8bec89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "379b99fb-1353-43b0-92f1-f66cff1b1352"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a456624e-2a8c-418a-8e38-9bc619df2ec5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4138b06-9613-41e9-8e4b-55fa3ce6133f"
            }
          }
        ]
      },
      {
        "id": "c28e9b3c-60af-45e7-a4e8-d5b8e02ee78d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c46ab5c0-5238-4335-bf06-ea7150c1b69b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ace181ed-6628-4e1f-9f2b-53f3cb5ade7a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7f93aadc-5311-4999-9da7-6e70d24065f9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a54ebe-67a6-4141-b262-f345924e9bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a330a89-9191-459a-940e-476c8f134830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c595253-4b59-4ac5-aa96-c2de23ef52a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7c2bcdc-1b7a-4ad2-a02e-4aaac1471193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a3340f-81b9-4d34-a2e3-36bb281a36de",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9229a97-f548-4536-87c0-84ae960e8923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61dfc80-a2d7-44f6-8c13-8c58ba3931dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de61fce2-e74a-4fd0-a28a-2f1987e51306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ba19607-652b-4738-a6ce-04ed16524513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4792379f-b0ca-400c-aa57-5281d3fa0120",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de7a840-3540-4f8a-91d8-cb9164b674e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e192f5c-3ac3-4a53-8917-0ead45a3c93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cc2a8a-b9eb-4ffa-bcde-23ed16a9f35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac993163-0774-4354-adb7-1bb2ae2e93ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8264b296-3f46-404a-9a10-69f36d23140b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc20e83-455e-4138-b9a7-8dd2e95cd706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374bab46-3152-43ea-b878-d479caa1574f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c08a10-04eb-4585-b9a1-ee68aeae9d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67e069f4-7779-4426-91f9-61501d8a903d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3a558a-4fac-49cc-b502-084de2d2df54",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4e4e9e-8838-4d81-9a7e-93e2e760cafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9108b14-aab8-45c8-9c11-e38092e40440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee6f3d1-ee42-4641-89ea-572fc9beea82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09a60360-0620-458c-8f16-4945b8027698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c084e2-2857-4da2-b4e2-f2769ec280f5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53330944-d90e-4a0b-992b-39a22d3af98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b0a8a1-97b3-474b-996d-4fae14ba61ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552614a0-9cfd-483e-b883-b6f80f13fd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe97deac-84fc-4962-a058-caa4f5b9fe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b1f767-471c-4c75-b5e3-8a8c7b335722",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b203591-b840-4916-ad43-a5b8eaff59b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2afd0f-6463-4297-90a8-052dbcd82432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d39a4b-e00f-40a1-bdbc-4566a45597fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c0e5dbd-a459-4ff5-b31d-50619f975592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de017fc-4e93-4a0e-b829-07f79709bfd6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ccb65d-0b07-4b8a-b68a-79ae721ed769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3973adce-46f5-4a84-a676-4635d9dfc599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621d6233-6c58-4b30-b96e-36abd87c2bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d51b6dc-2b7f-4f38-af62-fc24fa954359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33de322b-a53d-487f-aa53-96f775f207d9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8b660d-6b9a-4962-b0e8-70f3ed2055ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1296a318-d696-4fbf-8406-8ddf2886ab47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5651b9b-cdce-4a3e-9518-f727fd4a96e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d1bdde0-feb2-4d6e-8aed-d53267879d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36250c9c-ec04-4abd-92bb-b6565dee7788",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57868683-7777-4b4f-b891-fd62475738fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd8a33d-5e5e-4d6c-aebd-b65d02ae3568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff26b62-51a7-4a26-9bc1-7d7048395f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e744e7ae-f968-45d6-855a-82f0a3180658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dc6ed5-b1a4-426e-be6c-ca979caf3b05",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0282562-4c8f-4566-835a-a54b6d6ae902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3070234-1f31-4f7a-a3a3-2af58d22ed4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e8334e-8fbc-42ee-ad51-5867398bbb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "643066ec-cda5-494b-aaf7-e324126431e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f6bfa0-705d-4d4f-bc3d-c6efdac121af",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acd416c-11f6-4470-aa3b-130d5bf10fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b66b4d7-7e58-4427-8e02-a8e498f1bd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b35fcb-4754-4343-9280-5ed60cdf5a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c051f0d-c236-47b2-95e5-8cf9be20a359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53d810f-2453-4d82-a5b4-b8361b2be6b8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b134e4-3174-4a00-b327-1b39f575b7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bfbc5d-f71b-43cf-a62a-67c55cc1c32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84e9c86-92cb-417e-9eda-8c192689994f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55751da1-3faf-4f0f-9858-2136fbdb03c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3201d39-4995-4c2c-90a4-a2e330413c70",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ea9ac9-574f-4e29-8c28-d1ac3537bc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fca53d2-64c5-4b3c-b3f3-17ab14144859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf27d62-9111-44d5-b7ce-7cb4fde73542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c7e9739-5652-440a-97db-05c7fc34d70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b6cc6d-000b-4bd2-abb9-b7d83f855a9c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89df578c-6e20-4443-a26f-2945a0d3d6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4f7f3c-e0c4-414c-abb1-72f24e68fff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1929b8d-98d4-42b2-8554-00880f69cebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e846a3eb-7948-4856-a1c6-c4f0ef08b2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0792f1-7159-417a-ba6e-450bdcc8f196",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2685a166-c4c4-46f8-8c84-628ed8ad82e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2d2788-03d0-4e6a-b6ad-8407fc18fc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d98dd91-a530-4dd3-be86-6d2960e07e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee107787-2c25-424e-b7d2-8ad99622a6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bfac11-b83c-4952-94c5-36875f21840d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f740f8-7970-47f9-b012-78962a348543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3957f898-1f4c-482d-8b0c-414062b11bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e503ff2-58c3-4e4d-b8d8-72e18046dbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b74c320-8c3b-4bdc-81c5-bd38f1dd5cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564a25bd-b75a-4689-8c25-40bb483d5e63",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcb7934-5441-41f4-ac80-885de88c1464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56e1359-83f4-432b-8ebf-3084d7683c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a4d4f5-a9f9-4fc2-8056-7edbcf5ff2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c024e0ef-b371-4e95-8726-644866df674a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d947ebe-337a-469e-9b00-887fce6f51f8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f28b165-0846-4d68-aaff-cd95a6c76fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bf6d32-6d28-478c-87a6-f09e03a7fffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bad3ab-e69b-430b-b497-5d9b1e633791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a796360a-65e2-4d40-97d8-302d6662f639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406fc00b-da58-4690-8b3e-e734e0090848",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af49424e-3c6e-4ecb-99eb-558a7246026e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee4ce16-287c-4fb6-add0-6b1473a8e258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3f7885-2fcf-41f9-b586-e1b07e9efd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48f87d66-2639-4537-8f89-a72c772258ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b2913c-1c20-44f1-92c6-2a8f8644d71e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c376e1e1-f450-416c-ac2a-0d05daec0c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762f1c4a-4ea4-47da-bc66-bd74349a414d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd6ae7b-f5cd-45eb-b329-bc5abd6cff60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c87dd2-33e7-4cb6-9cf8-b47e2f8fcd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c164ba-a7a7-48dc-9074-a1ec6f484972",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482c8581-8250-41ec-82c8-dc3fb551571b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b71b914-fade-4ce4-8c56-0d9ccbd10dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c897d5d9-401d-47c6-ae88-cd3dbe73d0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22692a8c-f28c-45ce-a065-4484fe132b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a48cde5-aee4-40dd-a3af-157e1912dee0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c094cf98-b11c-4a7c-85fb-089aba17e83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ab235d-9f18-42b4-9e1c-68ca1ec603b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1aca56-0e97-41eb-9220-8ea4eb471ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "373fa536-5b14-4297-b9ba-3e3eff7d6704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c435f6d3-9e19-4f80-b360-2f7b7350752f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bde108b-5da5-404d-80eb-11b1b7761996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677856b4-60ce-41fa-80c1-5f6265856b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce853d53-dd59-4671-871f-5609cbb746e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ced6d52-98a0-4023-9c70-dff013dfa2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784e3696-f1b4-4b37-8708-d90db94582e3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7494100-602e-4f74-9bb2-fb35cf0541d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ef9cd3-8b03-462d-ab2d-5657e8c6af09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fac5c7-b07f-4c71-b997-af09c079049d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bae19e4-578d-4e61-adb4-7cdfd0c55c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44966dc8-b374-4997-b51c-28640b288d4a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05dc365-7aa8-4541-b930-18760f9aaced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136a4338-c0b4-4c1b-8b96-70db085d674d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e300c37a-bf9c-489c-849e-28f26a34df26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca21c3d-4aa9-4cdf-9cce-485aee65cfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b6b30a-fd87-44a3-8b1c-1d6983f26005",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e60894-7cbf-450a-8e0d-edd9a2c9228a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c2ffeb-2767-40d1-b26e-705a4a694183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149f77f8-e5be-469e-9d0e-2ea55d1144ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01bf030-f85e-4a31-9201-125fa88e7efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988799bb-ecde-49b3-889e-a8cd0403dfd8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7aa566-4190-45ac-8eae-8d53b49dbdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee412e1-e72e-4b96-92d6-8b9c34abf83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52273e5e-2409-45e4-a98b-42ae003512a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6415320d-0a27-4335-a1c5-6e1333900b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef19a08-aeef-4e04-8361-b777375dde98",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682339e5-8d11-4119-b331-81a5449770de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95580385-679b-423a-ad6c-a272cede21c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48c63cb-8034-4779-81f8-04cca0188990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7953c3ee-1d78-4e9e-89cf-00db1f40c241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b974b3-2248-4183-8df5-25e2ea69ddc4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3377c3a-40d4-4802-9789-477256055740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96c6f73-8b7a-4983-ad17-78430dd04aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460effd2-dc3f-4572-befa-ac579e17c89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "32b525d8-4087-4c26-a1a3-c9494c412c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b6b999-a6ba-46a5-86a9-a10558e5f795",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b4f00e-c327-4ecd-9dc1-16419754a316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187eb459-88a1-43b1-bf09-2acb90d677d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d5eab7-6693-4a6e-8889-55b63e4d269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be4880f4-4ce8-481b-a381-592bfc54038c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8c5e3c-63db-48f2-b729-89270128d00c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503fd7f7-ff4f-406b-b41c-030178001c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748a4642-accf-4ea1-9558-023150c7302c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a050115c-7799-4b2d-aac1-160f34e5b9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02e4688a-da3e-4b28-baa4-0052cb9f1308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923ea255-ac0a-4f70-89e4-87695820a2dc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c831ccd-a636-4433-84b1-546367be28fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f707a1b-a759-4499-9348-2bdc73e7b75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7002bf-564b-4548-9ae4-eefa0e497a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9e3ae2-b83c-4d75-a850-0b814135d525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186b77f2-bfc5-4ca7-ae64-a30e58ac7a30",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e4a341-25b8-49be-a457-1d07228b1355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01be5cb-aaf4-49bf-b849-c4bca349d065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c03ccee-6fd4-4d32-bf41-098ee1392274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1bb1c1-0464-4a21-bc1a-d79b65b1d25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8c8bb6-fe4d-4a4f-b562-d46738ae2a0d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f05298-c548-48b5-b098-0d11f946f43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d793dec-1ac7-4997-8b13-780b6abc07e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd689b3-5435-459c-b317-f96815f64444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe7e1f0-14ff-49f2-b06f-7d3fb808f516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953c052f-122f-499a-8616-3f34e5944b52",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead25c71-1161-43dd-8827-2e24a58c2142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b49c11c-80f7-4358-9027-2fa8ca335254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bff2329-bb20-4219-a915-d91a782fb542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d7e92f-fa69-4601-b037-1874d0d3e798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a174bbf4-b69d-4de6-9111-d6926b57c0aa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef607dc-ba52-4d62-8bed-0f5f42fb4ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ebca51-43f5-4b88-8649-010dc85ab559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24e15c2-b0e1-4f5d-aa5a-8241c5d09218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20d912a5-c60f-47b5-a9c6-f464e9b398c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf34817-ffff-4796-80fa-4ac4d465b09a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d02b55f-e5df-41f8-8cd3-a6c50550e678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24fa287-0b6b-4ae0-a764-0570376d3943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37245de9-a8fc-42ff-8b7e-875fb5179178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "068beaba-1b74-43f2-9eee-6935e3af574c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93af1f70-c497-4366-9e14-350d42e2e6e5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f91ae5-b3ee-412b-8246-f5e241849926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d66ce65-9b5c-4cb5-8369-42151bfdda99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf19df0c-6eba-4e0d-be60-e38b3317e769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "73693eab-0409-4777-a40b-8f840575b7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d642e24-f95c-4e20-b697-e5b9950cc6f3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7bf3cb-0e67-47c5-baa1-84f12a7c41ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af81674f-b531-4e5b-a900-99dd2b119ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e4f5bd-5eed-4c37-ae2f-4d4c3733d3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e6e6eb-713c-432f-875f-4b3fbe173df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2a13f5-2fc2-4d01-ad0b-8fd831677575",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713df3f0-a762-40db-b0b1-8b9ecdee408e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e295a437-6c5d-4064-a92d-08ab34d3b65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecbf79d-a386-4cfd-ac38-df9e72720f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b1929f-5ca0-489c-b767-c3b6cc61d112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1110d0fa-fbec-407c-a24e-acc0d3ad70b7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf76d29-502b-483f-bbc2-78e01f472d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc61027a-507c-4293-8b16-c6cb3f3f5464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50afba3-c6dc-427f-989d-bbc1e622bc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e663082d-a016-4507-bb6e-b2d7be821d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fec9e78-e2b9-4009-a1c1-ab62cb625126",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee10782-4d7a-4a79-a7dc-175ddf112034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61cbb6c-3b7c-4aa5-992b-77793e6d5a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd5db28-c101-4bbb-89be-a3a01df991be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c35688a6-a386-4333-a732-7efec8114402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9da818-a6b0-48a8-80d4-e8ed766efa6b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dbf8c7-9240-4fed-a927-b7ab0f298193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c0c9fd-8d68-49e0-ae3d-30a205433c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa3f37a-70c3-4724-87a7-fc2b265f005b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "90bf23bd-74e2-43c4-92a1-e624396b61e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1afcd5-1f50-4a86-a5e6-16ea793fdbf4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a305d255-e570-4d07-af6b-5e66ccbdbc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbaf2b6e-c3c2-46a3-8d15-91f27c9ab6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652d4829-ee52-43af-9367-627bfc53df41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c0470b-3d7b-49de-8baa-ad2e0f1dce54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0985339b-a6a3-402a-9cf9-5768477f82e0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986ade9a-c62c-4c13-9442-2e4fe7d64291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e2c2a3-f0a6-4898-bd07-77a7ca89baba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d207038e-609e-4b0c-bf3b-457530be1347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa3bc8d-935a-4ce6-9404-3be09297a676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7697820e-dda9-4f34-86b6-39c5495ffe64",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007db8c5-9bf1-423f-a3d2-b9634803a7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f0d2f3-c0c1-4852-9070-6780925839c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52dc617-6ab7-4cfe-9eeb-fcc8c0929e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f490d8f-0028-41d7-ab23-1ff5e6a4b2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924f6b51-29f5-4601-91d0-25598cb56262",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253ec14a-097c-408f-aa6a-58027add3a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ffe6f9-2335-4397-81ab-c887d86de81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40662fbd-768a-4fcf-8492-9b076cc42ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33f1b917-ebd7-4583-ae28-0bb767f7527e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca1e4a9-49ec-4564-a5fc-43e6675b7cdd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fca3bf-6683-4af3-b261-0a70d7716d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddd9ee9-6100-4954-bf87-6d67ecb8f510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cdf782-5eb5-45bf-9621-13671438e2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b49394ba-d3c2-4f14-a1f7-26b4d92d6b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cac8d8-4669-461e-80db-6755b050e6cd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2232eb-50bb-4d87-b7f3-7d21adfd2b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df9af0b-9c43-4ca9-8ee3-508b34481ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23c5dd3-3470-40ab-aead-7a2347ed2bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61251ed4-75df-492f-bdc7-a76360f3821e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d75445-9a04-45e4-bbd8-bdfaf7cb55ca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8647c26f-1874-49e4-9774-1b2e94292e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e95ead-91c4-4c51-8baa-4f7adce69d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628b7aeb-8a95-47c6-854a-f83832ebcac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a064e9b6-444f-467f-9a63-05cae24f18ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb51de0-6367-48bd-ac28-702ede10fcbb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36256c4e-54a3-4e0e-8d23-13bd7015dde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a370b4-9f4c-438f-9596-957edc3829ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4884fbd5-f267-4a5e-ab3d-847d29542e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc30598a-4d56-4ed1-8ffe-39f0fd3fb030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b296b70d-b1c4-4a9c-86da-e56d3e5700bf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22caf16a-5d97-411f-982b-ec0988a32c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e91905-464e-4db3-a2eb-a9387e9138c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da5cd33-24d7-459c-8081-ff6b61624aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02b6e4a2-8ba5-4dc3-a58a-3a1257400ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f9de67-859c-411c-a978-764be1921fce",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e098863-77b0-49bd-a063-64cbadb43f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ea2395-4402-47a8-83b2-85d2e493715c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a9aac8-899a-4c78-b6bd-cc8eb43a61dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d78afa-4c8c-4786-89c4-822579da1603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3164cd6f-850b-48c8-a478-3d628863fe94",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d4f27e-15d5-4262-a85f-456f83118c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7105ad7f-93c4-4942-bfcc-421125598e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1481e09f-383c-4043-a6c9-1b4f4849fd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fb345d-7489-4a9e-8829-fe514d34a662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616f0b53-7ce8-4d51-a2db-ffe272c51f4f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7885827d-964f-4ac4-a8bd-6ad8f91b6444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf20653-bd7b-4c9d-9674-00368705f544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ecfeee-e0db-44b0-91ba-ab84b1c0ec9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bd26313c-a6ee-46ed-a897-4f7f136886d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4e8579-4efe-4736-99b2-df7349336036",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfbc0c0-53ee-4d8e-83aa-32fa9d0d788d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c10027-7b59-4b53-abed-10ae7e87ac59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f672828-74b1-42b5-95c4-a9b5990b0818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9364c0b2-3f3d-4615-a0d5-267a4fb52982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e34c81b-9481-4779-ab27-b1b7af5a2669",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec64fc1-7de8-43bd-a3bb-c400257f2711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c2f968-e463-480d-b17e-05d185be50c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2454489-3b8f-4cf7-b455-43b098009af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb174341-94f8-4406-9a75-a24354ebad16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faa2e30-6ac4-422a-945b-74549bae9dc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc10b83-f5d2-46a5-9250-f49e72ba1051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e9e9f4-7911-4558-9c29-c28ea97e6d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efca6ed-9ba9-4426-9720-0d0508ef04e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d969b2-fcfe-493e-88db-37407e7f0487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91799c9-b602-4bf3-b53f-faf5a151989a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb89ec57-569b-4445-8042-d911168e088a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b72d70-3536-4050-86d0-5d09c6c93b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5af7ae-a86f-4e51-8e75-4493632321e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "22706e0b-0664-439d-9cd3-4d13931ce46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4592204-e8ec-48f7-bed1-fd97bea3038f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0be08a-2599-4b5e-a9d2-9a050711f7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc4aa39-4065-48ab-88ee-cc7eddb11a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d632df9c-037b-4397-9dc5-bf2363085657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2cface-85be-4483-b914-146a48d7c575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49add12-e840-4dca-95a1-dc9871aedcac",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0f035e-0d16-4183-9a76-05257bf33a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74588319-9699-494f-9266-9281bde09385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae96f03c-7a6e-4224-87a8-f32feadbe61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "835c0aeb-68db-44fa-82c2-7e4cf27dc38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1e11b4-a972-4a01-942c-9dda9989c727",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566e04b6-fb5d-4daa-88f6-87674f89006d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dea7d2e-ecfa-4cd8-a31e-d2b3bb141c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a93bef8-e0ea-46c7-a9db-933a2953da1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "48da565e-6e61-4fb6-b278-89aef9e26cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30bbbc5-fc62-4423-83e0-fb3706fcc98f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46701b5f-f66e-4e61-b55f-590d1be5d2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c5051d-704e-473e-8552-bdb0883bc0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1247afcd-ca81-4114-85ee-75986c6b53db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4dc7dc-d395-42dd-8984-781987f36791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5ad767-613f-438d-aac0-98b258dd94d6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdac87d-28b2-4b08-93da-79a27095ba57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c1ed07-6ba0-42c2-9699-27268d16d84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f891436-9148-4f7f-8416-06faa6bc2c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "976fc03e-24b1-4e8e-90e4-90b30dd7b0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2420ae-74d1-4ab1-bed8-d9f8b95422c6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6c1bcf-0d36-4163-9cf6-1830b5a7896e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f343b5-9b1d-4492-9d4f-efb98bf27464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ce1292-6ea5-46a3-9bca-03f73de71361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba787f51-c665-4889-8ecd-1284139c84f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444c54fb-90bd-4ca6-bb45-5026afc93c0e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc6fe2b-d700-484c-a985-5f708110610b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43ce9f2-ef37-4df9-830a-93b685cab1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4bea72-5d83-4e2a-9f01-9c0e9b1c563a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d277543e-e7fb-4571-b1d2-396b16fb3c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb4a95b-f5f6-404e-a9f7-e22a1ba073a5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e63b21-0314-4a57-9914-5ba366e06b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62d8d2f-f4a0-4d92-a2c3-441f877930b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22c13d8-969a-4053-bae8-95beebec65b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e444fe6d-436a-4c8b-ac30-cd1cc318a9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5676ef4-bef4-451e-84f4-6a77b5edd0f6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196c8fa1-6c0f-423a-87b0-877d218b702e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96728cd7-9ca7-43f8-ab9e-c926b32db74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15854c72-5b35-4af6-aa57-8915133da8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a933b3-50ca-4353-bb15-02921cc5c61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b525243-b508-4474-b490-b3e60a496bd7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e7d880-a75f-4445-8c2a-98416c348691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e1efd8-075c-445b-a9f7-e70c69e5dbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9387b3d-c631-40dc-9194-c0a86812f8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98192557-28fb-48a6-b8b5-e9bacb8699f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1e9047-252b-4a15-886b-5feea80765b6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4edae2-9f2a-4fb6-b903-c3cb82c3e1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40dbec53-c2e2-4602-8305-77bd99e778eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6d43bb-bdc0-4385-8483-7294364a3c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2842770b-2991-4084-a9a3-d41197023a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35ff6c3-682f-4387-8c37-56563630d6a1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddc4726-0823-445e-830a-68edcf94253c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187a2ff3-4556-4c78-9c47-d143735f1d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af2dddd-fe25-408d-b0e0-74a72a4ad834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb9ea73-2bce-4b89-8a15-63cf9f7219c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8706694a-0095-43cf-a6cb-f0828e4d9bbc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2ac6b8-b44b-4293-86f1-6f7e19956dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f3cb22-f67c-4b84-a3fa-9efdcc778b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dd82d1-a188-4b95-9714-635cf673421c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1136b1-b321-4446-8e74-5c5214ee9c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1907ddb4-12fd-4bef-8427-f2fbb2e41958",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8084175a-149d-4b49-8c09-e3df491cca1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc93a1b-e80f-42b2-9d82-3f49d37470ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bd43b3-adb6-4f21-af56-f27f0c03a2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd409c8-358b-4890-8429-a027da8ece5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd82cce-7a76-4fe0-93e9-b40e022b21dc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b75721f-c653-4249-8e25-c7eba43755ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967ca6aa-fef0-4ae1-afa0-f144cb495654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1934e2-16c4-451f-9ac6-35f248ba7d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd68fb81-3596-43db-a1c5-0bd60b9e29ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d09655-98a9-43ad-bc0f-eaa630f63b2a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf0941b-a8b8-42d2-8e6f-a9d7eef6f845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf68c535-bb0b-48bf-b7f9-2a65310177d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de5502f-789b-40b2-aabd-45bd928fd1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "225fcfed-0860-40e2-86ed-3b662052f218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf2c83d-7c0b-4bbc-9f7c-e46d44564711",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30862f3-ab76-4dca-8c43-7c8051b19b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c61c1c-b153-4a52-8e66-7ac158fc968b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f13e48d-870d-44b2-bb6f-3dea5fae9f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2526030f-8347-4385-8769-2f6e93b5ff85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91414b1e-dc84-47da-91d5-7cf14d49f3f2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd521c7-c5e7-4db0-aa68-4466c24f1bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be39c14-384d-4765-8404-2efbcfd03544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878519a3-4c41-428d-b9bf-22b85c7d1d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7901366d-c9da-44d0-8bf8-8f9091c3cd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ba9595-7c0b-4355-af17-65fb869079f6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9c75ae-8091-4406-90c2-9baaf165a4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93230b7d-20c4-47b0-bc8f-ba95fcd50a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3793196-582f-40c0-acd0-f9cd4825d4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d05b9067-4625-47bc-97ed-eefbd7bd6819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e113e3de-2040-4a0f-9eda-9a03987d96c3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833f9d9b-a319-4dd5-b74c-5a11cfc9df7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5528cac6-b485-4c00-b3ba-36a666ff7d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d388c02-a363-404e-9255-8291560d662a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "545cfad4-3a56-4d26-a2ad-c6fcfad2379c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0732c67c-6a6a-4e68-910c-1323fc65f264",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b74271-d6bd-48b1-90d6-915e41319fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a37b88-c4de-479f-ba97-7eec195aacb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c741f64-0623-4e41-8bb7-52a05954029e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a09d372d-822b-4574-8d5f-681a286b85f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da782ae9-ab33-42a4-ab39-94bd8bcf7f09",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f8828e-4e6c-4c10-a50f-cf1b3644deb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25d2d74-c098-4371-884c-f2da58ee61ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4cde1e-3106-4787-83fe-75ec5f82631a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9ee4c1-c20f-40a5-9084-ec9acadf5060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2211f092-9f5c-42cf-ac8f-03e8574b311e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d77234-7c97-4a3c-8e57-c367c575201a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efba08c-69b0-4cc2-b5c5-e88e1856288c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a475f3-1753-4b2a-812f-9be7c9253d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98a82c76-27f8-4d72-9cf5-22681f4e2c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636e53e0-3cda-4b9d-8171-de9583a7f40d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84d18d8-4a2f-4abe-843f-8b31b1094bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22dad60-94f5-40e3-beda-108128b4b3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31e3fa2-136a-405a-a40c-d323c7a0984e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d10b4a-e277-4688-9582-9d9e91821977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285bcefc-152b-4cb9-a136-b27e1b7457dd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534dfcdc-39c2-4ece-bfb2-9a9012fd9d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b86ae4-8272-42e3-a0b7-e55ad2a8d841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b64db1c-3e29-4dba-aee1-0eb4563510e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d747dbdd-30a0-4936-88d5-d21b728393d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1fd511-07cf-4197-b905-21160de37107",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2285a957-910f-4734-a2ed-34c3358006a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ea2e6c-f25a-43a0-ab52-9f3bbb8870c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a315d9f1-fb4b-479c-bb3b-1f520dc448fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61112e8f-242f-4c4e-9c01-85085be83d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9fe0bf-f82f-41f3-814e-338374aba466",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9843d081-1994-4311-8cb1-0710f1c0bd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c3cbae-f8ff-4258-b35c-60f9c345fe1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dd138e-c82c-47a0-a879-99d3a487a87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "72676bc0-bdae-44eb-a132-3b529db4f136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c79fd65-68c8-483d-b34d-79b3cc53b81a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13834f87-e1f8-4305-9c40-f65ddb9ee22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54e94c3-726b-4d99-9c15-a3252e5c2ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b48c67-6097-4253-8ea0-88e3f3fca85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63ada2eb-923f-455b-945d-ae2a1a93a85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43c6175-9e79-4c77-84d5-4ef87001767b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2735915-79cf-4366-898a-858d44d4407b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b094baa-67a8-460c-8dfa-a28df57b2a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15de1751-c995-4311-8cc5-7e129a53777a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "15b24cdf-aca9-451f-a666-f36ecca9c40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142d915c-7ffc-4208-b87d-e30ad34fb565",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabd3189-21fc-43b7-8988-d47baca2805e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446f0200-05c0-4d5e-bbeb-b88cd6a0b22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bd4baa-a8d3-4634-8454-5f02e11f95c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92591ba6-4572-44b4-a4fa-c7e2b6bb23aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c522d4-4a71-427f-9226-77d55b47a602",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9babc962-ab5d-4cff-bbb8-fff288fbc48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89639f30-3781-4a5c-8f08-bb735be5d9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f5cdcf-92ab-41d9-b6a6-8db754cf4de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fffe91-e8de-4663-aec2-ada55cd1b4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050e467e-c6c6-4222-af14-e54bc60e2ddd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13f7e54-6867-44dd-856c-289024c8c0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "63beeb4b-4e45-40a0-9813-433a0c49931c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb31c8c-86be-49cc-bb9e-666b43da49e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1c0830-3a7d-43e4-a754-5a34f03faf55"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a08a41b-5048-451d-b4ce-aceee83f113f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96a46838-2bcc-4b6b-b0be-ee66e68b4396",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7620edc-f78e-4811-bd97-4dfa01e0bfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce38b22e-0972-454e-80f4-3dd47b8a6e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588cdb04-2775-406b-84a2-c6878f96241f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c434c535-118c-4876-9ca3-1d1bc24fedee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7d7b49d-055d-46ff-89a2-176436433ce7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b08cf35-a693-490d-9415-b22f9e98d4b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "667b541b-3217-4bb3-be43-797fd76cb988",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36eef76d-e90a-4a45-a300-01538609629d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "258018a2-8c69-443a-9c7f-4f746e4b9d4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc7241e1-1463-47e8-afb8-8d7b406798a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e39e2c9f-3ca7-4afb-964d-889d8071d8a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fcf5d568-a16a-4a17-9ed6-bdb8ceed71aa"
                }
              }
            ]
          },
          {
            "id": "3e8e51d1-c07a-437b-8d7d-22c6e4f840a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab607227-13f2-4451-a502-c6a37d8b0205",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "58795695-f8ec-4b09-8ab8-f72bb7185440",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be3e77b-edf8-4844-b460-b245bf7add53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4756977a-bc45-4b42-b69f-2fc8f105220e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594e7743-7c92-41df-ad62-23fdadfab359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec3ece0-9dab-45e6-8802-746e75c736ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e404030d-c658-4db6-b312-526f7b73a710",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9ff86d3-e80d-4d42-9db7-ebc9fd2277af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d092d91-700b-415c-a243-9c46ae665f00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cc29246-7a3f-4ddb-b2f6-4f474887c5e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "303376a4-488e-469d-bd1b-172265339920"
                    }
                  }
                ]
              },
              {
                "id": "a072756b-1b7d-4965-b938-a801892b36ac",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5b7e19f-d459-4c86-bf86-17d5466e39d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd1667be-9969-4a30-b1cb-10e1eeca19d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36e1c72f-6b09-4bdf-831e-249166614ea0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee8d9137-ad55-426c-900f-f3a5caa234a7"
                    }
                  }
                ]
              },
              {
                "id": "597cfe6f-3c67-438d-8e81-7dba775aa6e7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "069fac3e-cff2-49c7-87ba-267f9e9f239b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b3d38d9-fb89-408f-8c16-11c6adea0d96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4d59fbe-874b-42bf-b016-85c761460074",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6dc9fb99-fe0e-45bb-9603-dd7c7bc298c0"
                    }
                  }
                ]
              },
              {
                "id": "849019b3-5b28-4805-ba9f-809e134eea8d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffe2b08d-24b7-488a-9e3b-ca385311cba0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f84f1586-c084-4aeb-88b9-3b7550bb2a5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4b5af85-1ffb-4b2e-8ddb-30a552da17cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "78e9e6aa-09e0-4557-8a4e-d5837c641fd0"
                    }
                  }
                ]
              },
              {
                "id": "8ebf405b-876f-49ad-bbd7-309d14146abd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2b1877a-b45f-4533-8a4f-2bd24a2a3e1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cde69374-cb73-458b-8df5-4f496c48a3bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5709cb4-b6b6-470b-9a3d-d9b3e32f30b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8d456a36-c439-4aea-a382-ffd24f16a6e8"
                    }
                  }
                ]
              },
              {
                "id": "6c629c99-4c4e-4bb5-be93-84f170eb1fe9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71d11ae4-4af9-4aab-9d3c-ba398c72203d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b49d85d4-d542-47bf-9b79-f95c7a864b35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "438df944-1b92-4579-bf95-8b2682eb7415",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "19248c4f-bf46-41f4-8ead-961a71a945a6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa354601-fa9b-40b1-bea5-30e32b02e37b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c04946c2-77d1-4705-9a73-19a96a8c3fe0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9cf7bbeb-0da6-45c0-afbc-f81620d441ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5fd4d8e-a10e-46e2-9d57-2f49f390ca45"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca851c40-cb8e-42d1-92e3-6919c70637dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "04c80a88-b493-44f1-b465-551258e7240f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4635bf3d-6609-4213-ac8e-b6dafef25ec2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5fb1aa0-b88f-4180-9b25-b4f82a5101ee"
            }
          }
        ]
      },
      {
        "id": "baf630cd-7770-4602-97ab-d0da59bda6ec",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c03ddad5-6abc-4fba-93d1-d43df532e87c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54acc1d6-1381-4d19-a17e-37298db67a67",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c4222c06-cb97-4422-a285-92c67596cf66",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92541ec-e862-4291-b7e3-f052fdadf12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6b23e0-c46e-4bf2-93d5-e23df3441148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824c4ef1-26ab-4b6b-9479-1a8bd1d06e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "800b47bc-5911-464f-b001-fe0aa4e79a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cd16d6-af03-49b9-8ed8-c26dfcae0d6c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bb15a9-4d1a-4b2a-8fca-4ecb4d629883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f12b443-43b7-4b58-97b4-ba37d39abf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026dcd33-472c-45d5-b44b-a69645634b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b8cb45-ffb7-4887-9abc-d2a61b3062d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1eb774f-560a-4500-ac67-07ae77c14ac4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68315053-c417-4572-b262-5a9ba35be2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fcd78a-e1a6-4fbc-87b6-d53cd04f5ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dfee43-75c6-42f3-a4ef-28e509285cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1d82d2-743c-4d7f-aec4-1d308a9954fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d025cd23-0ef9-4977-ac9e-c4a6d1d91601",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d937b531-cd31-493e-9e93-157430e03a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56d37c6-a702-45ff-92a7-a81125001d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588cf2b0-33ff-464d-a06e-0761f78172ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e68dfe-68a1-4db7-9a83-15316324922b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d9702f-5eee-4af0-a220-78f221dfec43",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8919c5-fb50-47fa-aef6-bed1a5d5b390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197f39b1-2ff6-4923-9075-c929368e8132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a38e26a-47c6-4066-b3b4-7581132539ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b21588-05ab-46f3-81a5-a5a3acceec57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52807ce3-c3ce-49e3-ab45-2f6b3acbf8dd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943c7681-73ec-4d2f-b0b2-c2c7012fbb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc8dc50-72a4-43b3-a672-b3e4a53ba5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86b6389-9c32-4eaa-a0ff-6309ffa53367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f03c5293-91b3-4b90-819d-3c8e14042cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2a3610-e897-4af3-addc-f285a2e3c4b5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267d9a9e-c17d-4c97-b260-23e3b5d1a3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98796444-1f98-4060-860d-a8c0f7b86620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e82b8fb-df3e-4f96-83a5-0b790f3aa58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "645e828e-98f9-4b45-a945-06ccf1e3729a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bee9496-bd9f-4221-b44e-b3428ff60e1e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9cc2b6-63a7-44f5-a27a-f7e05bf3332e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcb6c99-9486-452d-a9c6-ff8415b1dad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d1d468-4f7c-4385-a794-292e4223a14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "caaa3038-67e2-450b-a8a6-e86a5c33d543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea44e86-2f25-4453-9c8b-1e8217f8e573",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b9a3da-8e18-4975-81f1-04a707d04d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17cd945-f502-4a80-bf62-ff48877a7a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb99451-808f-4e1d-bbbf-a85e3dff5206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb3cd6a-6ec3-4aba-ab84-cb3384901e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fc8223-488e-4dcb-8156-dc87dcf3757a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e28c376-17c3-4548-9206-29cf56528e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2964ef-b874-4b4d-8108-d41618e061ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d35f4a9-5ba7-4a6f-ba74-be0adb0dbb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60538853-b4a8-4755-a002-e9f019c104ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a0d7de-ed94-40e3-a8a0-b0c304a3388c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae17f064-a7d5-4532-9c65-5a0c4b455f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881da386-a235-4481-9313-2a2cb072982c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cac1bb4-22dc-4669-9441-04f68345b4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae1c12f-001f-42ac-85c5-f8951b1c63d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1983e699-642d-4212-859a-b674da78f1ed",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453af693-2945-42d9-b1a9-5521d482df50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa0bdec-07e1-4cb8-97ef-3ab0059eda4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4023eda-e1b6-49c5-bbea-0bdb4351dcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ae91c8-d47a-4bfb-a5cd-f2b93f32d9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2820823-70fa-43f6-805c-c5a4fcf171d9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b12a475-2392-484e-a0bd-e7a5794df573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012ce274-d4fd-425c-98c1-befcfabda1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0588c3-93f6-4fc5-9982-91958a79c80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "daad3d52-baa6-4e11-a7fd-7c91b76eed28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf99eac4-e69a-4db6-9de1-4fe29faae4b7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d14786-3afc-4bb1-89d7-6b4f231b9bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74c81d0-9db6-40fb-ac12-954f149d5b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee92d626-6ce2-4c3b-be46-d74b409aff94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8811ad2f-bf09-467d-a8d4-fc3cea13f424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef929343-d42e-415b-9405-c565ba0ae891",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70336ba-0601-4ce9-80e6-76215994a792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479d0f73-8bf9-4cc3-bd09-24853c573131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf425060-4886-41a5-99d9-74e7b071e6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc398d80-cd94-4c2b-9003-316ce1406ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9025761-ecdd-473a-a58a-3ea92ffb4170",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cd8162-f807-4b9a-bee2-91606057a3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc36861-da92-4c7c-9a21-1c706172cf3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7717d16a-ed23-4130-907e-76c46d343e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af5f61b-9676-4010-bf27-d07b1d813e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d911b88b-2a30-4bad-b062-6ee31bd7f8a0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3ca53d-3cd2-4198-833b-a985ea851490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7cddd3d-84c1-41fb-a307-05553dc642db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a3109d-c134-4499-8153-94a9b3291095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1135698-d766-4317-9c7a-5fd3437d0278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05976105-99ce-46b9-8ff5-1362def630d5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dc72ff-35ce-461e-9c0e-095f255048b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2ce1e5-85b5-456f-b0a6-1103b2268e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8479e0-656a-4554-a7ca-7e2c1df16ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91381d3c-86d2-45c8-8c6b-3de24d9134e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ea2b2c-aa3c-4853-a5d6-b5181e43dcf7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b79616-f646-492e-982e-807f2d0e1f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963455f1-cfd1-4c43-b552-83706e85eb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afe5437-5ca0-4aad-abe6-af0e6f4b3fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "079e0ec4-c3db-4d1f-8614-d54f852d315e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad54afc9-2cf9-4ed0-9485-0f3f633f9730",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ae3e8d-056b-4df7-93f8-9f27dcb2c337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9098db9-16e9-4dfa-be73-cb41e1f3e7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9654d0-f9f0-4bbb-8efd-4fe99b1c6fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3da18b4e-c038-47e0-9661-3a74121577d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f4e60b-4d47-46f6-9498-f2862034e45d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e628a190-c574-426a-adb1-5b85767026cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc61e1a-cf1d-40ed-ac2e-0949d7a12ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32945d3-6f73-424b-8204-07457d83376b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8646cc48-6bcb-490c-b5e2-d28538c6207a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fe4112-44d8-469d-96b0-e7dd6d94f58f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a975752c-31fc-4873-82a2-642fb7438ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc4539d-b32d-4934-b4ad-887754651436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e7502d-ecee-4a8a-a045-bca9eda04706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c661f4-7cec-4a9a-a79e-9090b69467bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75d599f-c506-442a-bfdc-2a52744cc18f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd466153-1660-41f3-8665-6c89e14af322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07db46c-f8b6-44f6-a410-c519b27e6e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b084b7-cdd4-4e91-82a6-7d83dd4489d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73154e50-2be5-4a67-aba8-715048984eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b424440-7d0b-4b8e-bf37-08b3ab84d34d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ff9a5e-25a4-4a6b-8baf-23460a718b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e000dd4c-836c-4d9a-b0fc-bf138db4db70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf627f56-661d-4689-88ae-6c5e9c25b714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cca87dbd-bd12-4fb1-92fc-ca7148a83ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50239ec3-1c3d-4707-a4b7-3694917e9280",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10946c7e-5ce9-44e1-b075-b5f1bd5c50b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30b11c4-a115-4979-ad5c-01ccb0d973dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc89780-98ca-4f1c-923c-f5b4242ba746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8962c6fe-ed89-4c42-ac2f-c14bab70bb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1440b6c8-d3d9-479b-805a-56ff184e38ca",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7913bae-56be-4c39-99bc-e578a0c81cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c466b7-99c0-4de6-87b3-18861e7f4a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27377ead-88ff-49e1-9932-3f40223f8b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bedf4cea-b75c-4805-b14c-8473d1ddffc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf8061a-6e71-4087-9402-fb4feec9e844",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760f76db-418d-422d-bceb-74241345660a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e06c3e-56c0-4709-b903-9501d41f42e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b2cfec-405d-479a-bc26-cf0690f82af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "943af899-09a7-488a-a064-c64b0a0b0652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517a2eee-0b5f-4496-95b7-6b73a49ed618",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2083d9-688d-474c-9474-4683da021b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c63d975-fc2a-4e5f-8a30-1fbb6b5d4fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bdbcbd-48a4-4bb2-b8da-0f15c982629c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c36100fe-db9f-4ba7-ada4-49ecd1e1935e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ad2349-a0da-4f56-ab52-85d25c8d802b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b10010a-20fc-470f-8baa-cd3a93c3b45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f436389-6574-4686-b2c9-cfa453fb27aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339d076f-ec9b-4ab2-bcea-865d0d503119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6012c37-2506-4721-9cfc-688abb4f4abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596e9e65-b034-4692-867c-3a8a9c1c504b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4054b0d-5398-4be2-89f1-6683eefa6026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0083d082-d60d-4853-8b77-950fbee0e327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f8159b-ebd7-449d-95ed-11c1a9fee4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beb8adf0-aa17-4219-bd3e-3f1b8686abc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90759327-5274-4d10-a8a4-0f956abc1803",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19328fe-19cb-4ab0-ae58-db3cf4ac5151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475a332e-aebb-478a-a49c-8092b1d50948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369c3ce9-9bb8-4cbe-a8b3-bfd9686a3739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccbf1e8-cfe7-4229-94d3-be24732e2c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49c1e58-9bae-4975-bd4f-b3829b04c140",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82c0229-d861-43e5-9773-ad3bbec97c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123a3978-f458-436a-858a-67a46544a63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e19273-25af-4645-a008-931b973dc954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a79043-cb98-4c6a-bd2e-2f9db27d6e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae235d6-b56d-40db-8753-195a28fa2076",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73787f6c-8d2b-44a3-a934-a96100b8e75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6dc1a86-8f08-4587-b778-fe90aefbb9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b19fd6-cfb8-4325-a6fc-7a210fa5650a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af513bc6-6c16-4b2b-bec0-012ef0a84f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bfdbbf-23a3-4db7-83cb-72790d5e99eb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422cf37a-f05a-4184-866a-6c04cb1649dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eceed7f-df38-4b51-90b7-deab543661d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328b5e38-ec92-4dd6-a2f2-2da64ab1c591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8283b958-0335-46f5-82a2-e690fd037ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f17753-66bd-4a55-a791-adc4bae37d75",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33010b1a-83d8-46a8-a5e6-160f092f9de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1293b286-91c5-4d57-8e73-e592ac37d8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edae0ab6-cb60-414a-8abe-02e8e65af7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "277abd80-8c5e-495e-8c75-1ba0bbfa13b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13776373-411b-49f0-a370-a78f0ec88832",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7164c789-5976-4923-bdb0-db67764d659c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204420f3-5b2a-4344-a6c2-e8de4a0d914a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbeca5dc-048e-4ecb-a81a-9b17bba59c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a75f6ec-fde0-4e17-8f23-130ad412e99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c06b12e-d733-4b4f-93bc-2be42006c742",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14eb7b49-6d0f-4ea5-8ece-45ea455381fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f036292-e79c-45d3-849b-d619bcdde3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328bca6d-8e88-40fa-a5a3-70942decc41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0606d56-ca62-48a7-b1aa-660f1afe9880"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "26eece98-b66d-476c-b2cd-639ffc112ac6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e885d44-e6a2-45ee-a1f6-5a90041a7edb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6f5650-0fa1-4dfe-bed1-bfecaff3c282",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e29ece8d-c30d-4264-be1c-5ce1695efebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a094e25-37bd-4fe8-b19b-4ede0c014fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ce970a2-f22c-4afa-ab52-7468c17fb05c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e50fb664-3723-4b89-b306-c57418bbefa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f46c8339-e542-4036-ac1e-89d9a1b036eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c005777a-0422-471c-bdd4-f55a94c1a8bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9868c5d-f7bf-4985-ae1d-a63707178632"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be51971e-97aa-4a52-937f-5a2fbb5dcacb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c46e86e6-483c-4ce2-8e8c-0b4232256059"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93d58c05-e965-482f-bbf1-1dd36279db65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f3cb78f-69b2-4cdc-97ad-874608866b8a"
            }
          }
        ]
      },
      {
        "id": "18caa79e-e01b-42a2-a201-d1d6f0ad2326",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fd360227-d7b2-4ff9-b329-9db78e63b59f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8616638a-a2b2-44e4-a57c-5a40edb69a72",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c862ae0-bf32-4431-9d75-c0205e4f1da1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61ff754-8e02-498c-95b7-1b0e65d7e399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bde2a8-791a-4b66-978d-4550ea21ac1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2142776-f405-4e7e-ab2a-1e25213745eb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1657bd98-86a0-47d0-b2e0-c891a9ba73be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79db6b80-17be-45cd-b1af-ee90e2f927e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13164df-5d5c-4687-8a88-2b7211942f19",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd96c05-4b87-49a3-845f-5c76153e705e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d898a3-b68d-479b-8f44-9943e72840dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061144e9-9e71-4cea-ac2f-4c3ecbc878d8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac267a41-0f68-475f-b50f-0e1faba9f296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a0ad96-451f-4425-bace-88eba1fcf5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dbfffb-3857-4a6f-8792-68b1857dab64",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55114a57-616a-4c05-9a35-990a48b883cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195445f7-800f-480f-96b1-435cd378b230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e4f928-ce0d-4c2c-9290-8bd21d3e1e43",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78509f2f-94ec-44b5-9cf9-9567a3181b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f86aef-7d0a-4bf3-a613-0ae04f6e6155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc83b6c-d6b8-4ca6-b38e-61e623b1f609",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412ffd50-047c-4a60-983f-d414779794af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c63251-5687-4acf-8e1e-06b03abe7785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee9591f-c691-4b13-86e2-4b821b5ade87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3420b41d-dfdf-486b-b949-0889938a1601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921b68ad-5ac6-4bbc-9c8a-fbb9155fba77",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bde5da-ae08-4aae-8c4d-cbeaacaca81c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e24648a1-cb03-41ac-a84c-8fc7c865df07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f865af61-8433-45fa-a594-cd42199b7659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86774a5-afcc-4879-bdec-8edb77ce3f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adc31c5-2ee2-45bd-8c2e-a3cfa37d09b1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f7ae08-79f0-4dee-9de8-c96cf5040b03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be56d585-47d1-4677-9b5f-343205c59f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35204e5-767b-45a0-a42b-8d25acce10d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018f9cdc-e298-4fc0-bbe3-42437004d8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b5e0f9-5057-430f-b98e-34d0ff20d0b4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e951d327-a216-4e5b-b487-d522ec1efd4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e405494-bb0b-4b7c-a5e8-9dcf13915cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33c76db-39c2-4731-964b-cd7590cf3882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc8b440-41a3-4d0b-9339-991d9b0899c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64e45d0-2188-4d54-8077-df253ef10b74",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79d7a04-b855-42dc-a1c5-41bf04429d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88a4e23-2cfc-4453-8c4d-ce45c22dc483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6229a002-f419-4df0-82b1-f8b0a387c51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166a623e-8116-4bcc-b589-889937be5cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c93bf6b-f592-487a-b97f-87fe8f93510b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d113cb-81cd-4491-892f-3cc60bd91f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51805689-0498-4a00-a6a4-0ca96d23abd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13c03df-6572-4778-a696-d85ef494ce3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ae5882-aaf6-4c02-af67-f7914bfce68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c5c222-31e2-4f03-bf40-dfd973b10f7e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6623254f-0962-4d02-97f3-5e16b88e7b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40ee9f69-fb2b-452a-ade9-b09b6d96f776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487d9795-101a-4801-82e1-e763b8342063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9df966-bc1b-447b-aee5-1d67a97bcff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa343f63-23af-4c3f-a190-90170796f9cb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558704f9-9f15-4e94-b8ce-a6c6449f0a0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e9e790d-8ae7-4a1a-b4d4-77bf9b1d711a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d066b96a-93a7-4460-88e0-49ff860cd601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532e68a9-feb3-4e2a-b6b5-54fe198f73e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaff2de-e5f7-4881-9bd6-65c3555d264a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ab9d31-9e69-4ddb-86ef-20b90ef584f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be37fdac-653b-4c6e-ac95-0f445b0e8422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e01e3b-6eb0-4618-a542-9464916b58d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9abd05f-17c7-4c31-9689-eac11ccdd8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96074115-bb40-41e8-96f3-4dae2dbbf6fc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276452fe-b6ec-4c18-94f8-797710fdfdcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00849206-7028-46e4-b15f-7c4d22c19782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dd6ce6-c55c-4da9-a5a4-67cdb55b67a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a025bf9-49e8-4cfe-a8ca-a5bcfbf74883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4b52b5-042e-4a76-91f3-8463f7cd804e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4939bc90-4637-4f03-9414-3385ebcae919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2051c20e-0d50-4367-ae68-8447a4027612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8619692b-9acb-4826-afd2-a3651a64a497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84925479-5e03-4e31-84ee-710e2c1c990b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354158c4-32b5-4033-8766-6439d805f1d7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b75a3d-852d-40d4-b714-07308151ca4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6fb4ec-c738-4831-a44f-51f9487a32b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c107eb-f290-4e47-8368-63496f3ea3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71700bc2-5a1c-4255-98ed-ce3c20ea8faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5350aa28-4f5c-49be-a2cd-55f1da8dc066",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7a3c9e-50fc-4ae9-96d0-692a0aba794f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b07c8a-1a3b-4fa9-875d-6fb95a812a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d3fefa-2b1a-417a-8e42-73d9dcfbfba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8a1cdd-9794-4cb5-848e-3917523efce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35eedf65-aa65-42ef-8cc4-fa877730e969",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cc1525-4026-4ff5-ae37-31705eb89408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4cc8cc4-d1fe-4952-95d1-9c459fb19027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5af84af-2b58-4ce7-8cd8-214c2c953ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde579ed-f122-44a8-99c2-9c7998aed313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977d5063-c41a-4a32-b629-01133702a2f0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0affdbbb-6dec-4a16-a84e-5362520392fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9fe5af5-b8b7-4343-999a-6931db3c5eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5753d1-c45d-4356-a966-87340d8bfd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7616b2-2c34-444c-85f7-bfcd3bb08a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d661e2-d0ca-424b-93f6-0938bbe9c093",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3392d55-96c6-47db-b974-bb42fe63c1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846f05fe-55c1-4c54-ba4b-645d9dc128be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d73961c-c19a-4948-8e7b-809ef5e13c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fccfa7-bea9-4161-94ff-b1af93c2a191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af97ae2f-f456-4a14-ab8b-470c6e0515ea",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbdd6ff-7ed8-42ab-aafa-cdaf4c121ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befbb95e-c4f3-4523-aaf6-f9770cbec9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ca9499-7e56-40bb-ba8b-d1fa57af64ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8910585-ba1f-4268-b4cc-dc674742b72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b59ae81-4222-4368-9ec0-20ce5eb0cd74",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbe19b6-0e20-4806-8c0e-415cd814ef25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e189eec-5a8e-4c6e-be2b-a433e00daddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794d46be-6c2d-48d2-b2e8-febcb92ee62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9051b1ce-269d-475f-8084-9f5f3a402675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca752da4-78b4-4ed9-b5be-58e56c14ddf2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111ad1bb-2034-44c3-af0c-51101eae1bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d84460b-c08b-4eea-bb6f-655d5b2f95f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be86486e-204a-4f1b-a0c2-927177600dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84ca6ff-81a3-4acd-8606-a91cc1eec5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ac0984-3765-4c5f-b85c-8003414f9473",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caeb7e43-c7cb-4a4e-8686-da12a9ed8a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a09d057-8ecd-4a62-8d0b-cc85f5204dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6997bc9c-da3d-4d2c-81b0-af595e1e5209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c10825-aeba-4237-98ef-17f56d253304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e0c264-e16a-4a62-827f-51d4ec626d15",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae40fe4d-8958-4774-9fcf-52253d520cbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07c2d4bf-2b9b-4743-8da1-234594ecc0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1856e0e3-d19c-48f8-9c2f-4e936fd41fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c705ee9-1549-44d7-ba87-84390e9d077f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6419a600-d490-4b6e-b371-0e2f3867afce",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc228f5-2250-45f4-b76e-3ff35ceb9be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cee29e-9da6-47aa-ab5c-092593c48cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5492f0cd-bb31-409a-9fa6-b724e48ff11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c041445-1387-4b0b-8d12-b275e136f0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ca0b5e-4a79-4678-b0d5-f05c326b4a67",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9554aa4f-8650-4218-9301-b82cc8201843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37b89051-915e-4cc1-a067-46c67e707a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dbc3ef-d218-4be2-88a4-51cb2cfd4837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8642745-c012-45d1-b00d-5c836835f93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8b5f3c-9540-4b61-b65c-86bf3030a95f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696d9e99-a603-4262-bfa1-8d80225c319c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "107cd9ae-db75-40f1-a19b-1c33a5841d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96cb22e-29f7-47e3-84d9-eb9978779397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96787873-4999-46a8-8fe2-9d8de5f11eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923b6319-a25e-4aa2-9869-ec664fb64e74",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10be6de-ede4-4b18-8798-2ad4afa4bfc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7421e6b8-5d52-49d5-a7db-cfb7ec7efda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1dd96b-ea3a-4156-86df-b6748f0b5a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa98fc42-cec9-4d05-9301-4d0a2a33d11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c708720a-cd5a-49db-9bbe-34503acb2f4c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f78360-6e0a-448c-897d-7c034566ad12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "474ba62a-8ba7-475a-8ded-44bb275ef7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ed22e9-61c7-4c84-a822-269dbf4c4d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1a0301-3a38-41f9-ac1a-bd2deeab001c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7f0530-ca00-4334-8547-46d9e2a8849e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50275aa-d36f-4701-93c1-f8d1d80d01dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd98ba01-b509-4ba6-9bfb-e5478c149d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "869a3daa-803a-41dd-a696-9713ce3d1695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5552b2d3-0589-4ff2-a08f-8f769e1a8820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624085fe-8484-4af6-937b-93fad1788553",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a029ad-1334-42f6-8ba5-3118aa180731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36eba853-29b1-4dae-9c86-1d1b36e5aa54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f28bba-c9a5-4a67-a4b8-d3db307d882e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f40f09-fbbc-44c2-b348-45902fd3ed8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68012a3-1518-4e58-ab3f-068d6f254496",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5000843d-2b9e-4d78-807d-1692b8adf84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36377651-6466-4771-8bbf-09dfca506428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ebb7bb-1a75-4ae6-89a5-21eb874bc3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a06d2e-03cb-4199-bac8-0b3e190de299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccd24e5-4666-4bc9-8460-636be2111be7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce90cd4-a457-4f31-9c05-c7c2e53e1498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1833c7c5-03ae-477e-9467-a8ad880f1bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53898a25-cb1f-4267-961f-02f966c4be68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d189752d-2506-4906-a384-cbbf8f5b805c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2d6307-8368-4477-a6f6-89c38e0a61be",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4922346-fe10-457d-8108-1dc253ecfa1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1877a2d8-a4b1-4b49-b7d8-5b2b6b1edfea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a729e3e1-2151-4dc6-bb25-1d9409cac426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac2aae1-5d25-4fe8-ace8-a9e0a46c1b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e34817-40f1-424e-8cfa-2d6cbc399c29",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b09e0b-f07b-4a15-8cf4-bc1f637b1c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79718e7-753c-40c9-8023-74f8e677cfd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce29ac8d-38af-4b56-91a8-9656666e42cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fce8582-ba5a-4695-9431-247e3befecfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e712b8-c405-45cc-8983-ef107d60a8a9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8af83c9-c77d-49a8-ae81-75bf695a0140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78aa30cf-e5cf-4119-be69-06eadf194840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f2b308-bb49-4f74-ada7-647ee28eb04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2abc45-16e6-4560-8f1b-de1302b74fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b607a8-f4ed-4ba9-88b9-dd1e7677ee28",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4bc041-45ed-4d93-bdcc-13cb65049b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0501b8-3fa3-47b1-b0a3-46aa6c929bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac0eb78-531d-490b-b5fe-f9b054d9c742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0eb6a19-bcea-49de-8d2e-b710b7701e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400863d2-bb96-4627-b4f2-62ff04e0899c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177c139e-7f5b-441c-b0de-ccaab08e9592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14bc5cb-3b89-46cc-a084-b3a039b6ce6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31832118-dd6f-4284-adf9-5064a26d24cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23df280b-13c7-4308-8f45-5dda0ed28701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6eb1977-631a-48fd-856b-791c10e7a81c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6acf12c-78e2-47eb-9032-c495b1f8d7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1a113e-db4e-4e39-adc9-10c803edbecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d5b247-6273-4b8c-849b-683f00670e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c6c750-20ec-443f-8d4a-4f00bdd79e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2235d972-f971-405d-9639-b76c3db8c638",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b94a8ea-666d-46ed-a085-334968331f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1072cbb5-9c85-4d52-9298-50d3a4cdb210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93936709-11ac-4450-9d39-c8a6f75d0f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a012ad8-a07d-4909-9197-b962af33db90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6b5dd1-1f94-441e-9b37-ec02a9eb9c22",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4590072d-9eee-4480-b46d-c1760d4b6a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af776066-17dd-4d68-9233-61515e55d823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca1dfb2-580f-489f-8c49-db07141a6469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3c2912-ba00-4812-9b6c-16397f11db6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f1b7e2-64ec-49ea-91d2-64b94a89794f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cc4aaf-b229-49ab-b6eb-7c5ca6aa80e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bac64ba-8dca-40a8-a119-bd4517df830e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01393394-60e9-434e-a64e-06be64496612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400163a6-0a89-47d3-be3b-844a2942804d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce649357-e753-4e21-a506-91b300b7f8d5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a600e1-0715-4ce7-96e0-fcae3f1208ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab7a85f-36c2-46cf-a8cf-4b52d2e9b9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e628b85-1dcc-4710-bb47-0a0a75dc314f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c77980-78c7-474d-b6c0-c8e995697379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b75a55a-1586-441c-812c-a0c5d714d331",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2477b9b6-04f2-44f8-b55f-59bea4264030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d94b88-cf97-4527-9a0d-5e281d70d7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57b2662-7b16-4896-981e-42a6edc1d48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca060309-5206-4ef3-a0d5-5e02d995a09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4765a7b-b946-4c43-9eea-de3afe85167d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e353cc21-c41a-4157-b3e1-7c6cb4f2628b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4961354e-ac6e-4301-8118-bcb58c6d3e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9ef6b4-ea9e-4dc2-b613-fd58015608d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8eae185-481f-497d-963c-7b219bfa78e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1792a8-7222-4504-a23e-60b8f7806c81",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4b93fe-2e8e-49b7-bd2f-57a127ae4543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f52694-8d4a-4954-a967-1eeb3aae25fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b496f815-1fd2-48dd-a310-778d5fac8fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec8675c-6843-4667-944f-bad686303952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b4e589-b0a6-424d-a966-81680228323a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a370b72a-5284-4d54-852d-317785971414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8d5e1f-2d36-44b9-beec-981ccf0ac200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca77fd7-ac75-4672-895c-cadddf9b2de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc208e7-598f-4268-92c9-23a3fcf8a2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70878a22-dc7a-4cc7-8c77-93b64da95d9b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ca03af-970b-4c82-bbc2-01b77dcc2f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eacd04e-946d-4507-ad9d-16c318f2aa83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6670c0-2461-45f3-aa9a-9b47b0607eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd68e52b-0869-4cc9-9691-417023cb70ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32097635-e813-4727-b6d7-82ac969c9790",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab87888-46d8-4a02-b0c4-b85591dd5dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12ce030-cadd-456c-99ea-cae942c3e142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0720a15a-1fea-4580-bbbc-fe0060865949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ec3cf3-188f-4e71-986b-31d12266b0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddc11bb-8f4e-4180-92c5-a1409d7b9fdb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce23745-dd30-4fb6-86f5-42230fd8bbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f7a187-37b1-43d6-b4f8-cbe32b6beff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1133f82-5ff0-4240-a9f2-3b4459596543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3abbc9-00d6-4c13-a42a-48c40a0e0739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d14722f-74f7-4ebd-9fff-e3f7873a64de",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf34d679-ebca-4bab-830f-1fdb83f686a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a62cf90-b44b-4001-b5bb-a1b20d1bd442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48607ec4-145e-4f6d-a4bc-502f7c8f8de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd3b993-20b0-4647-af1e-d66337b124d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cd9ba9-7a8c-4beb-80e7-52e1a61effb9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629845b5-0c62-4dd1-bd0c-b171d40da19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1de45b-2e25-4591-97c0-6dfd09e4fc08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3b4b24-f86e-4f3f-a9d9-89e196a64e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241931d3-a673-432c-bd9e-8481ae537d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872ebc70-c93a-43af-958a-dedb6604322a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2939c8e2-3bba-4410-8530-0a4e73d63c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093dadcf-7802-4686-9862-0ae495c41e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6682175e-7fd3-4aa7-bcbe-4ce6fd524180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263d2508-5680-49f1-8f7b-1d4230b5818c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbd59ec-3247-4c93-9539-236b5a0243fd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d70da1-c9f0-41eb-8964-8081fd49fc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45a0bce-cd19-426a-b93d-8dc57bfc67e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5328417-d7ef-4eac-a15a-5eb147da9819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2309029b-48e9-4c34-a6e4-9bdaef8242c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2087d402-9e6b-46ec-9355-ae4664b2da38",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef739343-165d-43c8-9287-d78909ffbae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189afdde-0c9c-4de6-8475-0748b707c3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfdde0b-d051-4f1a-825d-41f6a821ceaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f199364-feae-45d4-9b58-45634664c369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb766e1-46d8-41a1-9aba-9d5c73d4f97e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011f786e-fbc1-4009-8631-203e9c9e47f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3ece17-3f92-478d-8e5f-45b9c6e3adcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5eb94c-45b3-4a45-a899-36a77976166e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8738e877-674d-4fc9-ba3d-2cd3f4c17aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c845027b-4359-496b-9be1-196c7215914d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711d1708-dadf-40a3-a425-c5545cd80732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0a8342-dd7e-44cc-b4ec-807e8a4e2ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea4eea0-4db5-4a21-81f8-a52f01fff65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2e5870-3118-4549-a24b-6b5893460682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9aa716-0e84-4726-a1c3-77da93ec80c2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7bf46a-08eb-4063-a85d-e72a0a2c213b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc24611c-9a31-4856-b8f9-d80007717e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c142037-178f-4291-84c3-75e5cd347dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01fa69b-c83a-400a-bbf5-df1fa05588b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4230b7e7-d356-4a2a-a4a9-e843e0fe824c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4d1fdf-fb53-4a75-903c-06662383bf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff2cc18-7976-40b4-aeb1-fa08a8be6725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda847a2-4d09-43c1-b31b-571470363398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad80da10-42a8-4f22-a1fd-5003457bfb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfbebc6-b488-40ee-8e81-dbb224283e5f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbac4eeb-ab3c-4f44-8dcd-7fbd01a2a9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38796201-aea2-4ce1-addc-34b78284f087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac55386-3c9e-4e2e-8fcc-9d0410f9baf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fc6082-1f74-43a8-8071-2bc1fbf33e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4e6db4-d2b3-4cbf-94b0-924b086c88b6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbbfad6-267c-4929-b418-7845ac89c933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b75c4e6-2c61-44e3-b867-4b4e346bd8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6537e3e6-5133-4a00-9908-0f95bb40186f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7f7e57-6866-4179-b4d9-898b9ac0d55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5213ec-4cc5-47a9-9bd5-23939b3eaf4b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498d90c7-a072-494c-822e-aa827bc2f5c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a79adf75-286e-4d8c-9cd6-9d31587cef87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237ad759-271d-4fb6-8bb0-6df58e17ce78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a379a3-5e7a-4232-b904-80e7bca43650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae36fa72-4030-4084-9ec9-56678fc5f219",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c146c8-820a-456b-a018-67768cf344c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea405ac0-4b53-4b22-8e1e-78298d830c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9db25cc-e93a-4f17-8392-cf2973453d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedadb26-fca1-49d3-8fa1-5d87b08c0647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e680f7-f288-429b-8c64-3dc99a89e04b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ed4cbb-1f58-41f2-b797-ceeae8315e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7db6d36-46bc-493f-be24-34a8de93195a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cacb794-8fa1-4f70-b8f5-dc13ad16933b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4421f67d-0158-4abc-ab4a-1d526493c17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac96929f-a880-42a5-a5fc-fe5ed74b2862",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76498246-077e-458f-9b22-c1e5ce711f73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "068882c5-b7e9-4143-9599-aae49a1b1d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef972dc1-fbff-46ac-9ae5-45beb91ce69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b689ccec-1cb5-4bee-ae24-f7e20256bb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e9c55c-4c4c-4736-abe6-955021fd2274",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a1ffec-0c33-410c-b034-80bf48ff4565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ccac0e6-a26e-4a05-bf40-d80c39295ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4b1674-5637-4379-99bd-34b45bac6f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d590a5-7bee-4400-a9f4-c8cba0bdb005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ecb78b-ad9c-4913-abe5-31e11cd790a3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dae4fa-15e4-4a74-8436-75956c8cda2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f16f089f-b8e7-4cc1-a171-236b74efa671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db4d4dc-4059-49b9-8d45-cfa73a09e588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffac87f-b504-4a83-9a1d-5e62a7854e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcf8774-2617-4206-b275-75daea5c86ef",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ccd41e-f4a8-4898-8792-71a8edf7d708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d274c4b-8855-4e21-b98a-7374f866b4b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f8d2c9-d327-4120-8d5d-89d05308b3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11539636-4b8e-4c84-89f8-0c832c13f091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134e8df4-ab77-4d67-bec7-dda50e2753a5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24bc32d-5d17-4d9a-9453-6bf6c70fd99b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6cbbac2-c745-40e6-ad74-c32d3a6b0b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e651827-c5b9-4541-8230-3f994f755075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be94042-9edd-46be-9fe2-3a7c53596e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0747dc47-b0b5-4557-80ce-06d08cb336e9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c34c787-2970-4715-b454-e00feac7d32c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85fc1d6a-fefa-4d3a-ad9d-6096473448f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dec057-15d5-4af6-97bd-7b2477e17d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da81b06-01a3-4f08-acb4-652af13c10b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89483e0-7e55-4bb8-95df-b4521e91e095",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153c4a3e-641a-4beb-a87b-7111b99c9f47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b3c3ab5-24fc-4291-999e-2ee077ff8968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8742777b-ef15-45a3-b1c5-bc33d8507fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6eb6ff7-03c0-43df-a8d1-8b4d8222a07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ad7a0c-d106-47fc-bcb3-4a99a005db1e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5372bc35-f874-4e1c-9788-17df3f7779ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74cf3598-4a30-43e7-a501-3d771938feee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5894f38-b530-4f2b-9d53-c399742c0dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acdf0123-ebd9-478f-8c58-5401539863ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f78f200-b25e-45ca-bd0f-a138c436e696",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cd7d34-ea95-4776-80d2-d904f89ea9bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a19dad-6939-41ba-88e5-8c52cd19bf68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c425883-055a-4172-aa85-4ab61f48cc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f545675f-6033-43d9-9429-22131cde2051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8eaef45-8972-4f99-9a22-745620e444c1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba015c63-dac0-4d87-b019-6742c8f75bb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1197466-97d5-40d8-ae20-140b1bc83947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "966624c5-aff7-4794-92bf-d331b07ac00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f788770-717e-44ab-8cf7-bedfbbceef01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2e0f00-f3f1-4de2-8384-c476391ab96f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8d09ab-006f-4bed-8a36-a729293f0740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e367210-8399-4da0-9f43-35ac36783de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685da4b5-e3d6-4d6d-bbda-d29d7028e54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2721efe-6d32-4aef-a9de-1248c102084a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0e5a5c-7505-459e-a298-938b01344b03",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff34bbf2-58b5-4b87-ab1f-30a5d67bc449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68fa2d77-36e8-4a7c-8b49-fa8479b44f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a092baa4-92fd-414c-833e-2ae3190b7844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce0453b-e854-4eaf-b155-83b7dbe2fd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38ec220-7ecc-41d2-ab92-64d6e35ee789",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62af44a9-8a86-4775-b58b-921432c6877d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30f9d735-da56-41cf-8938-78ac5cf9ea61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83814092-8231-4066-9e36-63b21e429019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fad5aa9-de9d-4264-b08a-89ed7b47f5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992ff109-3f72-44f6-8a02-18e714a81ee6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907ac7fb-26f9-4aba-9993-0b151c3f7dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f2ae97-cb9e-4f16-890f-8a9cd46ac2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14b8d0e-7836-4eea-9cd6-84e2e1036781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e92c1de-ffc2-409b-b197-15bfa3ea0384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0ac36b-96bc-49af-b07b-86402f9ca2a8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92a90e8-7c2c-4f78-b344-be0ecf852e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0de27768-1b31-4f62-9cfe-806973399c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b802d4c0-433a-462c-8f75-11e7c872f42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043c6474-c552-469a-9288-ef3bf29fe79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b20d95-1847-42db-96b7-8db8d4e7daba",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd8bd87-2fb6-4022-937f-a6ac76c2e1b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f18673bb-5941-4358-afbe-5174de00c3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cf5060-6be6-4d87-bfa1-33e35741630f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02caf1a2-69c6-4fd5-82c7-1d3c103c08dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c32f5b4-52ad-4b9c-bb98-0e63154a51c1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43510c1-8f92-4d15-a4af-24bb85f7478c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ec34cce-6aa3-418e-8c4a-1118640ad399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a60f515-458a-4acc-8aaa-68b26b9c4cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d826ae04-c0e4-48bd-a4e3-9c4258626068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec5d7d2-8d65-4942-ad5c-932c77d6a7ae",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5362db8-bc67-464f-9959-5f32641be17a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09aa1eca-cfe1-4621-9e95-99cf6d90fdc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41ad54d-9cd3-439f-bfd3-163729a46fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6bcb20c-2634-4a3f-9ff1-464a17ba42d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de2666b-a751-4365-adcc-db2eca937183",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96937581-cb34-455e-880e-486cba4ac139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84fb7c0e-f0c4-4715-8403-f4cfafecb4b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc3bd4c-d6ad-4896-ae94-1490b9d58baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2accc6bf-3873-4cfd-b23c-92fdc5ff400d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf8386d-fba9-455e-8c9e-d7e4817df5da",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071f404a-ed43-454e-a0dd-05070969de15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4824dff7-e32a-484b-bdcf-70714833294c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3192b49-07f5-4fb2-bf71-f28d1c6263f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25bf0292-ca4c-4b59-9186-149552ec7cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e794de-9dfe-40e5-8497-5e70825beabc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7f350f-0df9-4425-b2fa-dde09c0ff9c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d5af843-861f-4f6a-b9f4-6b15ee76986f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b572e07-c170-44e2-830b-62f00575044b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e33bcc-705c-45a8-9119-29efe0c9c515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be43ba73-3e3a-4ad3-bedf-13c09f56bd10",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873be143-aaa2-4ac4-a275-661b09dd1ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fbad3a6-a90e-4684-8f7c-0675e94c2003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d5eff1-c5a0-440f-8796-d734c6ed7129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f0d550-f98d-4df4-8511-c4a2b8857f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adfdff0-a47e-4751-b0e6-64fac4c1cd2e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebaf6f45-ab9b-4ba3-a363-74e3af21443f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adecf2f1-e4b2-48c6-b56c-0d81bb368e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20caa09a-2e72-4e69-bf4c-40bae209e1c9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93faf7de-8f09-4d64-a563-631e9664bb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9b6e44-c2d4-44db-8cb0-e97da5c46b73",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fcbd88-8275-4216-9ca9-7b56b4f7c3fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aedc7034-9d8b-4d3b-8e8c-a6bdc4239fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d562bfea-45a8-427d-bd21-310ec5335bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ab4330-e5e7-42b8-8e7e-d9e0c58ba45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a3c8ce-d6b8-4cbe-9557-29ba2eb1d5d5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85afad73-747c-4507-904b-c3912589dd79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26bacaa9-d537-49fb-818a-5e5f32147843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee1b365-502d-42e0-91bc-b565579a2136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72dc041-10dc-4cbf-9ac5-ef1f7c1bdf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62712913-e40d-4b6f-9c70-1f64cde2e81f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d294f5-6bb7-43e7-b153-2ab481b81426",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e80517ec-327c-4f29-8bca-6796873f3e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5917f18-365f-46f0-a74d-7ec17790fac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af3b45f-9eb0-4128-b6a0-36845dee00cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c40a015-b9b5-48b0-b2c9-8df0f19713d0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c25d85-dcab-4c5e-8192-d24b4a26fb1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51e0ba40-ee86-4b4a-bca5-fc9e62663f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925d6511-bb07-472d-a732-669f684c75ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6062d094-6453-4445-b339-ef4ada322024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651c0535-f6b6-4a9c-8cbb-c2b1e4beb1f9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66751bf-fbd9-451a-94eb-4ce4815460c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8687917e-321a-4895-8dd2-bce45a8797eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b79241f-81f1-4603-8d5a-624bf499b0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b08513d-66ed-4a7e-85ca-46222ba36cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d221c371-0d9f-4922-bd4b-712be4010d8a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50732a5d-d33f-4aa3-ab60-ce92be661471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe19670-1bcf-4780-957e-29d4ad690442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf94966-2b54-432b-b407-0b6175dff467",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7f47b1-1838-4c6c-8a96-d490902e83de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a498ea2a-a683-49e9-80dc-5f585760fb06",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667b8cdf-58d0-4bae-8dc5-b85e9f5bcf07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f66eb5d0-0b15-44c0-82de-9072de454652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ecf527-2da6-417f-a003-b6886db77a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8930bed1-ecfa-4557-8513-2a00a47a2fa2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f55539b-2d46-4cba-bce3-ea8155f33de1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0e82972-48e3-4b41-905d-37cd56121616"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec6a987e-a4d7-4e1e-8838-d8f8feefd52d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81da3ae4-98c9-422c-ab21-c544244fff38"
                    }
                  }
                ]
              },
              {
                "id": "7b8109b0-cd00-479b-b499-6067d86955ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cec09513-78ed-49bd-a552-48b000d7fbae",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e2a2b7-6355-4bf6-8208-ae3435ee3990",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a665769e-6d67-4c8a-be74-9f91c66a655e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d2b52a-3fb9-41c2-82b5-ab592a9c852f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "291a8e1f-e306-4951-acee-7c3b79e5a15d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3475802-4756-4c0b-8297-a26a9167ae18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0567ab1-0e32-4ad0-bc58-113d85362146"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cfdae23-bf0f-4bee-ae57-1abff53b9280",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "294dd783-e0f3-464f-8c5a-31ff8e07e204"
                    }
                  }
                ]
              },
              {
                "id": "1f1f01b2-ae7d-484c-84d6-a168f7b7a028",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a7e98b46-9dd0-4e04-9c3e-0f7b5d10b4da",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2482f6-6d4f-4aab-a50d-0f3e12229bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "65ca3d88-e6b4-4b27-a3ee-df8f0ca60647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e36d9d-8dad-4e02-b329-4593df37fc42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d12a52-5595-4bee-b4e1-c36d777ace05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1c2886f7-463d-4005-b3b3-21d2013af48a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6fe81092-6794-4ac9-9d58-c29b68104863",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb48122a-f18e-4b9f-a45d-d550b875cf7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "47a661ec-4ad6-43e3-be4f-49ab381fb67d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de7dce13-d554-423a-95ea-b0c400af7fb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de7afb47-c38b-4d5d-9253-1911fc00551a"
                    }
                  }
                ]
              },
              {
                "id": "7f58a378-22ae-44c1-afbf-265959885ee4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "461b1fe2-fde5-45f9-9620-b4f2040ba2e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b5621247-2e11-4a7e-a830-644b93bf270f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce6b6c4e-9c4e-4f73-bd92-d4f62721c2dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f137b2d7-e016-4159-88c6-a79b1716a984"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c447ad4b-ecb7-45d1-aeb8-92762cdb3f87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9b899882-2ea2-4b20-9ca4-ae783bf3100b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d453ce03-0d97-48a6-95c6-39097c1be10b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6eebabe4-9916-48d6-8837-dc4c872e74e0"
            }
          }
        ]
      },
      {
        "id": "e181737d-80d0-44df-9751-a603cc7d4d85",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eb88db71-e285-4a21-b5fb-bd363d4dcf25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94ec2cec-0fd6-45c7-a583-af20ede13c78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e691988-5046-479b-a2c1-50e8ad092bea",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a52f188-b905-4cb7-a620-1647f7c0168a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3a96fbe1-a3a3-48d4-9939-0050e533f273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fdbe02-ecb6-468b-b2de-a236efad95a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f8dc715-04f7-46ac-8d3b-8d82d172b930"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89c92f35-0b92-4ade-8c8e-ba0c06a76def",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aecb093c-0cfd-498b-b7f7-6f7fa6729fd7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99792ef7-826a-4a3e-bbb9-d7785a43d1bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4a33033-5133-496d-9351-37081ce49884"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4bcbfbe-c3d8-43f2-a7b8-f11671b9733d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "616427a8-8e77-40de-b4b3-87ddd4290fbc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc978965-dedc-4d9a-aa6c-426a25668ebe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab5c418c-296b-44a7-988f-3f6ab89cd45b"
            }
          }
        ]
      },
      {
        "id": "99935469-5fc4-415c-9a24-c5ff2002b3e7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4b7054d1-b620-4053-b5a2-197f6be8e82e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "125d2e36-286e-465f-8bfa-f87eb344fc87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "244ec16d-0608-435a-a95c-f1c27185d320",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ade4248-9955-4b45-ad93-c4894ca942ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d85e3dc7-330e-4219-bd3f-9cd32af54a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822aca32-1407-4297-b331-00d7ab33d359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "843b2181-029a-4bf8-8c1f-20f91dd003a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a42fa22d-aea7-4cfe-86f0-3278ab1d8011",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74da04a8-3af0-4312-8735-aaaf98529df2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb832ff2-c75d-4778-92bf-f6a0c8a4390a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46f27cb8-49b0-4fa4-a435-3d805a3d3243"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29ed4f72-7e7e-4351-a30a-5fb30ec4922f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de798bf4-9831-4e6e-adde-a9a79e28468e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c61c5e5d-5da1-4d78-b9ee-80a1b72942b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4448df0b-7cc5-44e4-8635-9e69b6e1e251"
            }
          }
        ]
      },
      {
        "id": "7760f861-5b5f-4828-9f4c-ee5c9e4d1931",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0040bca1-3323-46ce-bf6b-d48d466e1f6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23a58677-44a1-4b6e-978c-f3518837a186",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa6ecdc5-fa4b-4f09-b6c6-a05fe4f7228a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e36763-75c3-406d-a3e0-b89e1163c99c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bed5854c-d0ee-484e-8ea5-257fbe2fbe2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69812a9f-f9a4-4ba1-8460-50b25cfc3c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36e4b621-ec83-446c-8fbe-957d399e2a0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2235e93a-e98b-4c0b-bbef-a772ea9bf722",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "486f02dc-ee9d-4c30-b997-56e6c4ab3af0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9be0259f-a5c1-4904-9741-f854118195e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00b66217-d13c-4635-a1ef-8fe78fdadd33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd674bf3-2c57-4041-9d1b-cb0026b692d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a5ecf5f-3cf4-42e2-a84f-f6acfcabb66e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebf0eaa0-b282-4562-bf62-d6991017eda5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f62e361-3184-40c5-81dc-d07dafbd43c6"
            }
          }
        ]
      },
      {
        "id": "0fb2c9b4-72f4-4d62-bf10-25b05582f072",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6693a17f-0c2f-4da2-ae7d-b16bf8530d7e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "093bd110-bcc8-4301-a534-778ebb699483",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9d73b7d5-cc8b-4117-b4e9-beccf8aae3e6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11e8a5fb-28da-433e-a9c5-6611fa3e8b05",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a6f61bd-0c38-4565-92b0-695eb83cd9e0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 90.1666666666667,
      "responseMin": 3,
      "responseMax": 11233,
      "responseSd": 752.1605942375662,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715992591695,
      "completed": 1715992622588
    },
    "executions": [
      {
        "id": "8d7b0848-d8c2-4a85-a0d8-16e025e1068c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7234f564-2c3b-437c-980e-49e3977f7a23",
          "httpRequestId": "1f0656c0-4173-445f-a870-1710b6f02069"
        },
        "item": {
          "id": "8d7b0848-d8c2-4a85-a0d8-16e025e1068c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f0b9ed25-941b-4f3b-b5c5-2716b13da61a",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "e6819118-6c7e-4aa6-be67-47beef0d82ba",
        "cursor": {
          "ref": "51cec11e-745b-4efa-b61b-24b3b581d876",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "795dd7b2-afab-427c-b990-23936d1e0686"
        },
        "item": {
          "id": "e6819118-6c7e-4aa6-be67-47beef0d82ba",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7378fa3c-653d-492f-85da-32e2e9e5da3b",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "983bf0e2-1d6e-438a-bcd9-434bcae57f8c",
        "cursor": {
          "ref": "23f4e0a9-3875-41f7-84f4-61c75fb1158c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0764e5ea-a47f-4e6c-87f1-aa3253c4042d"
        },
        "item": {
          "id": "983bf0e2-1d6e-438a-bcd9-434bcae57f8c",
          "name": "did_json"
        },
        "response": {
          "id": "4419f3cb-59b1-4325-a0cb-1bf01fa6bea9",
          "status": "OK",
          "code": 200,
          "responseTime": 239,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613b3bd1-6d09-4890-90b0-8d8f06bc3cc9",
        "cursor": {
          "ref": "c50903ee-bc35-4b31-8036-b4e8e017c719",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7e04dae8-dc08-4cc5-a746-80ee8f49f12b"
        },
        "item": {
          "id": "613b3bd1-6d09-4890-90b0-8d8f06bc3cc9",
          "name": "did:invalid"
        },
        "response": {
          "id": "ed8d6dc9-5c52-40d2-9984-eacdd1c29f24",
          "status": "Not Found",
          "code": 404,
          "responseTime": 438,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613b3bd1-6d09-4890-90b0-8d8f06bc3cc9",
        "cursor": {
          "ref": "c50903ee-bc35-4b31-8036-b4e8e017c719",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7e04dae8-dc08-4cc5-a746-80ee8f49f12b"
        },
        "item": {
          "id": "613b3bd1-6d09-4890-90b0-8d8f06bc3cc9",
          "name": "did:invalid"
        },
        "response": {
          "id": "ed8d6dc9-5c52-40d2-9984-eacdd1c29f24",
          "status": "Not Found",
          "code": 404,
          "responseTime": 438,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ede422d-834c-4d21-aba1-5131d8c9f019",
        "cursor": {
          "ref": "30c94f66-b7b0-4353-aa25-0b7dbd748b02",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b0cdc07d-3ec9-4a66-88c1-b4ee45f80995"
        },
        "item": {
          "id": "2ede422d-834c-4d21-aba1-5131d8c9f019",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9ec913ca-7a10-4b75-9ae0-3b4623a4bd83",
          "status": "Not Found",
          "code": 404,
          "responseTime": 20,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe88b216-001f-413a-8e8b-1c059965606c",
        "cursor": {
          "ref": "581adb51-a183-430a-8555-95373f39cb12",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b3e501b9-b26f-4000-8cc2-37d51272590e"
        },
        "item": {
          "id": "fe88b216-001f-413a-8e8b-1c059965606c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c36b4894-f2b2-4778-8f2e-e39e87011a0a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 25,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c9b108-af5b-47e1-ad69-689f0f7b1494",
        "cursor": {
          "ref": "09808a90-442b-4294-96fc-b08fa4b06c84",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fc76b37b-4ff0-4506-b6c2-6c7dd943b13d"
        },
        "item": {
          "id": "02c9b108-af5b-47e1-ad69-689f0f7b1494",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bf0ca2a9-64ca-4b21-b831-dffe69397cf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b56031-804a-4d56-bafa-3245e4b7c0e8",
        "cursor": {
          "ref": "ef2262c9-2daf-43ec-9922-31a4036023dd",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d31cc3e8-cbef-429e-9b5a-57fcf7f84004"
        },
        "item": {
          "id": "30b56031-804a-4d56-bafa-3245e4b7c0e8",
          "name": "identifiers"
        },
        "response": {
          "id": "cdcbca49-8e0e-4960-995a-133b73b3555b",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f93aadc-5311-4999-9da7-6e70d24065f9",
        "cursor": {
          "ref": "85ee637a-d5be-4514-b7dd-3b4f42a62c1b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8e7a2767-16f7-4eff-abe3-422d41401812"
        },
        "item": {
          "id": "7f93aadc-5311-4999-9da7-6e70d24065f9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e35012f7-3921-43b1-ae3b-ba14377d2533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a3340f-81b9-4d34-a2e3-36bb281a36de",
        "cursor": {
          "ref": "82949a43-5bb9-43a6-9221-358aff2588f2",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2f9d3110-4740-46b6-a50f-8dc724e2201e"
        },
        "item": {
          "id": "d5a3340f-81b9-4d34-a2e3-36bb281a36de",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2a551ecc-779a-496e-b876-d03fbda7d8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4792379f-b0ca-400c-aa57-5281d3fa0120",
        "cursor": {
          "ref": "e064b96d-e5e9-4757-b0f6-b438cc6141e2",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "07ed280d-990b-4aa1-b6d2-d67527530d29"
        },
        "item": {
          "id": "4792379f-b0ca-400c-aa57-5281d3fa0120",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "819cf3c0-9666-441a-8d27-d37ae38146d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8264b296-3f46-404a-9a10-69f36d23140b",
        "cursor": {
          "ref": "7b6b18ed-fe5d-43fd-9a77-37bb537677a8",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "47147d97-f3be-471c-bec9-9c7fd1e1d01c"
        },
        "item": {
          "id": "8264b296-3f46-404a-9a10-69f36d23140b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b64f27a9-75f9-416e-bc1e-f4e516dd0f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3a558a-4fac-49cc-b502-084de2d2df54",
        "cursor": {
          "ref": "b8b21322-a9dd-4d64-b4e4-7686abcfbfcb",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fbdddf33-8fd8-4cfa-8c19-a2ccc75169a3"
        },
        "item": {
          "id": "5c3a558a-4fac-49cc-b502-084de2d2df54",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2441fac7-9ca2-4c9f-a91a-a5226e30415c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c084e2-2857-4da2-b4e2-f2769ec280f5",
        "cursor": {
          "ref": "1e070aaf-7b89-46ed-88ea-50d0892435c3",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "89319eff-93c9-44ea-adbb-0021e4caa566"
        },
        "item": {
          "id": "a1c084e2-2857-4da2-b4e2-f2769ec280f5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "97842834-320a-442d-a60d-3846dc46fbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b1f767-471c-4c75-b5e3-8a8c7b335722",
        "cursor": {
          "ref": "fddaaac4-2b1d-4ce0-8601-d5a798000f5f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "eab1f9a2-a88f-4ccc-adfd-606578211139"
        },
        "item": {
          "id": "15b1f767-471c-4c75-b5e3-8a8c7b335722",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5f13cceb-724c-4e9f-b03e-42261e5617b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de017fc-4e93-4a0e-b829-07f79709bfd6",
        "cursor": {
          "ref": "18df5ead-46ef-4bc0-b581-51368df483f2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "21d730af-2abb-4ba9-bb65-ff10df9e6d00"
        },
        "item": {
          "id": "6de017fc-4e93-4a0e-b829-07f79709bfd6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b102aeff-bd93-40dc-9732-effb83476db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33de322b-a53d-487f-aa53-96f775f207d9",
        "cursor": {
          "ref": "3258a6da-a9e4-442b-b56c-47bac8557faa",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cf3f8a00-908e-4dfd-bfd2-4c886a1cbcfc"
        },
        "item": {
          "id": "33de322b-a53d-487f-aa53-96f775f207d9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2efca135-22f6-4dd4-bfa6-d4245c2389aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36250c9c-ec04-4abd-92bb-b6565dee7788",
        "cursor": {
          "ref": "c80d4ace-f11e-473c-a02d-43b81d58c833",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7e54549a-a792-4dee-b0c8-67a56f307c42"
        },
        "item": {
          "id": "36250c9c-ec04-4abd-92bb-b6565dee7788",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "20d1c3ca-7590-4a2b-8519-c7269d8cbbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dc6ed5-b1a4-426e-be6c-ca979caf3b05",
        "cursor": {
          "ref": "b9b9a625-3c85-4647-9fe3-f183dd573b98",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1cf95f50-5c0c-472a-997f-735fdb13845d"
        },
        "item": {
          "id": "e2dc6ed5-b1a4-426e-be6c-ca979caf3b05",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "53c7b43f-6d37-441b-83a8-bca837e093b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f6bfa0-705d-4d4f-bc3d-c6efdac121af",
        "cursor": {
          "ref": "40c3ded1-52e2-42ad-9b56-48d5605cce0f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2c8cd658-f856-4a41-b517-c65da12d0782"
        },
        "item": {
          "id": "66f6bfa0-705d-4d4f-bc3d-c6efdac121af",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0ebd943b-b659-438c-ba9d-865defc9e598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53d810f-2453-4d82-a5b4-b8361b2be6b8",
        "cursor": {
          "ref": "2b879d2a-269e-4bfd-8f3c-d93e4bb2a513",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "307ffdd4-345a-432d-aa75-8d25cd3c959d"
        },
        "item": {
          "id": "b53d810f-2453-4d82-a5b4-b8361b2be6b8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7ff06242-0275-4424-a256-b1c1b5d2c7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3201d39-4995-4c2c-90a4-a2e330413c70",
        "cursor": {
          "ref": "bc803f40-be70-4945-90f4-41dac42b1e22",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7cb48244-9b48-46df-8fb9-320c563c6b28"
        },
        "item": {
          "id": "f3201d39-4995-4c2c-90a4-a2e330413c70",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b1fa9296-bbde-4735-b3c7-81c44a65a757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b6cc6d-000b-4bd2-abb9-b7d83f855a9c",
        "cursor": {
          "ref": "d7500248-1ea4-42e0-bcce-bd448d50fbb2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ec5418eb-5fae-4bb8-a8fd-966c658632bc"
        },
        "item": {
          "id": "53b6cc6d-000b-4bd2-abb9-b7d83f855a9c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "64750147-634b-4f2b-92b9-71a456c34721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0792f1-7159-417a-ba6e-450bdcc8f196",
        "cursor": {
          "ref": "d3c0f86d-96a4-4b4b-b79b-a8ac8f000361",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f75efd7e-f1a4-40d3-837d-8b7b3ec158fc"
        },
        "item": {
          "id": "9b0792f1-7159-417a-ba6e-450bdcc8f196",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bdf6c542-0bcc-4a40-b6ff-f16329850d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bfac11-b83c-4952-94c5-36875f21840d",
        "cursor": {
          "ref": "65e72293-fd58-48bf-b0d7-65f64cc67821",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5837a33b-61c2-4be2-81d0-f2258409bef9"
        },
        "item": {
          "id": "96bfac11-b83c-4952-94c5-36875f21840d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "363896cc-2647-45fb-870d-5ea4be684d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564a25bd-b75a-4689-8c25-40bb483d5e63",
        "cursor": {
          "ref": "8e83dc0b-462a-49d3-acff-fe73670a982a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5a196d5d-8ad4-4cc1-acbf-4b7ff0cb54e9"
        },
        "item": {
          "id": "564a25bd-b75a-4689-8c25-40bb483d5e63",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a80d0112-6de8-4a90-8986-817936c8fc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d947ebe-337a-469e-9b00-887fce6f51f8",
        "cursor": {
          "ref": "87150f46-b080-4266-8e6e-f0c5d850165d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3c7f8cea-5f74-4460-a277-6e98e3f23f02"
        },
        "item": {
          "id": "2d947ebe-337a-469e-9b00-887fce6f51f8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3f1069aa-80db-4742-846f-6cdf2b824278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406fc00b-da58-4690-8b3e-e734e0090848",
        "cursor": {
          "ref": "6b3cbafa-0053-474d-8941-0ea64a6409c0",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d4ce896e-592f-4b2d-98f9-f8a1b8e98a89"
        },
        "item": {
          "id": "406fc00b-da58-4690-8b3e-e734e0090848",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6a5bc21e-d764-42d0-bf9f-9e3eaae8c871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b2913c-1c20-44f1-92c6-2a8f8644d71e",
        "cursor": {
          "ref": "e0557184-9897-44d2-9acd-5592e9000024",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bed46b52-fc4c-4c7d-a83e-a881256f355c"
        },
        "item": {
          "id": "29b2913c-1c20-44f1-92c6-2a8f8644d71e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7d5dd956-85b0-40ec-b493-db4900fab6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c164ba-a7a7-48dc-9074-a1ec6f484972",
        "cursor": {
          "ref": "957767df-3f3a-48c0-b9f6-759cd6f3b55a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7fad22c6-cb0a-48e8-8013-cb97e0709f8f"
        },
        "item": {
          "id": "68c164ba-a7a7-48dc-9074-a1ec6f484972",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b4e20dfe-73ab-4548-994e-74ffa33a413c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a48cde5-aee4-40dd-a3af-157e1912dee0",
        "cursor": {
          "ref": "de80045d-c4e3-4f48-8a5b-a60b6260ff86",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "39248101-e007-45b7-96db-049db6335799"
        },
        "item": {
          "id": "5a48cde5-aee4-40dd-a3af-157e1912dee0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "10d83a30-2b58-4dad-9a9e-6f91f0e10ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c435f6d3-9e19-4f80-b360-2f7b7350752f",
        "cursor": {
          "ref": "5cdc3837-c317-4c4f-bc7b-64ec18784fb4",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1b930c62-030b-4307-9930-2256360d217c"
        },
        "item": {
          "id": "c435f6d3-9e19-4f80-b360-2f7b7350752f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e062e430-8d6a-468b-b41d-62923ffd750f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784e3696-f1b4-4b37-8708-d90db94582e3",
        "cursor": {
          "ref": "2d9c05fb-17b0-4bbe-a94b-848329c5bc6b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2e02a4d4-3b36-4129-baf7-31b7599dd351"
        },
        "item": {
          "id": "784e3696-f1b4-4b37-8708-d90db94582e3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0e89c350-429d-4191-99a0-9dc4a39db3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44966dc8-b374-4997-b51c-28640b288d4a",
        "cursor": {
          "ref": "ab2f8002-0341-4a06-b28c-ff89578d3a9e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6f03a5e9-f7d5-48d2-8c1e-95da33db9ada"
        },
        "item": {
          "id": "44966dc8-b374-4997-b51c-28640b288d4a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2d46f394-e43c-4b51-b7c8-46fe862bdc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b6b30a-fd87-44a3-8b1c-1d6983f26005",
        "cursor": {
          "ref": "e1851b80-91e3-4613-9423-2f5a2a3720aa",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "21cdaa4b-b03c-45ee-bd52-d4ebd342fda5"
        },
        "item": {
          "id": "73b6b30a-fd87-44a3-8b1c-1d6983f26005",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "233dc904-d253-416f-b74c-64f4a7656627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988799bb-ecde-49b3-889e-a8cd0403dfd8",
        "cursor": {
          "ref": "1340e552-b0b4-4259-b87b-79bb22103341",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "86b57be9-3274-4335-a740-1bf64ecb0eb3"
        },
        "item": {
          "id": "988799bb-ecde-49b3-889e-a8cd0403dfd8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e8096cb0-d0d3-4bc2-b27e-e284d33bc2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef19a08-aeef-4e04-8361-b777375dde98",
        "cursor": {
          "ref": "ed0817c1-7d94-4a32-ab8a-b84505c9ac89",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "39144cf0-f2bd-45a9-ad6e-6199eac9bc56"
        },
        "item": {
          "id": "eef19a08-aeef-4e04-8361-b777375dde98",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "36d337f2-5dad-4d94-ba83-2bb1f6e7cc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b974b3-2248-4183-8df5-25e2ea69ddc4",
        "cursor": {
          "ref": "6553839a-23cb-4e7e-83d5-bb4d8c49c254",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9cf97c9e-4564-4cd6-a3fd-960cd95e9249"
        },
        "item": {
          "id": "02b974b3-2248-4183-8df5-25e2ea69ddc4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8af42ef5-55ac-4130-9288-86828683f813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b6b999-a6ba-46a5-86a9-a10558e5f795",
        "cursor": {
          "ref": "ed4726e5-1a79-453f-a3f2-4ce86b4ff2b6",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "06340cc9-228d-46aa-85e8-1c13bbfdb0e4"
        },
        "item": {
          "id": "e3b6b999-a6ba-46a5-86a9-a10558e5f795",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "91601f08-115e-4ef4-ae34-2b95ed5dfdd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8c5e3c-63db-48f2-b729-89270128d00c",
        "cursor": {
          "ref": "bc84e1db-76f9-4bc9-8161-fe7372e47ca3",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2d63330c-a9d2-4afb-a659-52512490de18"
        },
        "item": {
          "id": "9e8c5e3c-63db-48f2-b729-89270128d00c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "93d61d8d-5715-4f19-be30-9690a4df2edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923ea255-ac0a-4f70-89e4-87695820a2dc",
        "cursor": {
          "ref": "50938c94-62e5-4832-842e-923f4cd42acb",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bb1edfc8-90da-43c7-ae3d-781f13fe5351"
        },
        "item": {
          "id": "923ea255-ac0a-4f70-89e4-87695820a2dc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "96d89df0-81ad-4634-93c7-ed53750c43a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186b77f2-bfc5-4ca7-ae64-a30e58ac7a30",
        "cursor": {
          "ref": "fb1e8865-9e76-41fc-806c-e88e8dda321c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "624df44a-03cd-404b-a7b2-ddbda0d7f261"
        },
        "item": {
          "id": "186b77f2-bfc5-4ca7-ae64-a30e58ac7a30",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8ef21e42-0362-4dad-adc9-04339e98c2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8c8bb6-fe4d-4a4f-b562-d46738ae2a0d",
        "cursor": {
          "ref": "53dc5552-7080-469c-a63b-f5c7b100b9cf",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "35969765-7985-49c1-935f-c55461e9de8d"
        },
        "item": {
          "id": "cd8c8bb6-fe4d-4a4f-b562-d46738ae2a0d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4b68f3be-1a25-4d33-ae03-ba8eeefb3cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953c052f-122f-499a-8616-3f34e5944b52",
        "cursor": {
          "ref": "13310d5f-0ff0-4a04-ac03-81d302ac9e6b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3e80397d-3afc-48b2-8f28-7dd8d85f947f"
        },
        "item": {
          "id": "953c052f-122f-499a-8616-3f34e5944b52",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a56860ae-3e9c-433a-970c-d5ca3d4323b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a174bbf4-b69d-4de6-9111-d6926b57c0aa",
        "cursor": {
          "ref": "9eb31165-4087-4b88-847f-d49036a324f4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "75f024db-24e0-45d5-81ff-f4475a5403b6"
        },
        "item": {
          "id": "a174bbf4-b69d-4de6-9111-d6926b57c0aa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5d2f408c-5d70-4f61-bcd8-9a857639f662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf34817-ffff-4796-80fa-4ac4d465b09a",
        "cursor": {
          "ref": "5d019a19-e6de-4027-a5d7-6579e0b502d9",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "344598c6-41f7-4030-9eca-c4946b449395"
        },
        "item": {
          "id": "5bf34817-ffff-4796-80fa-4ac4d465b09a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f56eb8de-ce65-4aae-9115-2b124068b2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93af1f70-c497-4366-9e14-350d42e2e6e5",
        "cursor": {
          "ref": "b427a826-3dd8-4a8b-bfa9-43fd7ed14af6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "421cd80f-c988-413f-9b00-ec2fe8e167f5"
        },
        "item": {
          "id": "93af1f70-c497-4366-9e14-350d42e2e6e5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2ca87053-7230-408e-a512-a56e64f8650b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d642e24-f95c-4e20-b697-e5b9950cc6f3",
        "cursor": {
          "ref": "d2ee7578-290b-4296-bea4-10b266cdf5d4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "95789711-1549-492d-af8a-e6f0992c886b"
        },
        "item": {
          "id": "4d642e24-f95c-4e20-b697-e5b9950cc6f3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1021160d-6fa2-4fb6-806b-16ce961d95d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2a13f5-2fc2-4d01-ad0b-8fd831677575",
        "cursor": {
          "ref": "0bebb08e-33ba-46de-887f-a533d8962ca7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1da87bf2-d332-4a75-b8b9-f2e67402a786"
        },
        "item": {
          "id": "6b2a13f5-2fc2-4d01-ad0b-8fd831677575",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "93ae87e3-4318-4ad9-b15e-b1fdb9935d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1110d0fa-fbec-407c-a24e-acc0d3ad70b7",
        "cursor": {
          "ref": "ebf5b145-67a1-490d-9763-eb7f2139902d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "86964e03-dabe-438e-a7ed-3cfe78339072"
        },
        "item": {
          "id": "1110d0fa-fbec-407c-a24e-acc0d3ad70b7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "03c4e1ed-2822-442f-a8e0-fe0f83289671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fec9e78-e2b9-4009-a1c1-ab62cb625126",
        "cursor": {
          "ref": "9d02af3a-a5da-4c5e-9986-162d092e6532",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "26868912-ff54-4411-ac4c-a0fd55b71c9d"
        },
        "item": {
          "id": "5fec9e78-e2b9-4009-a1c1-ab62cb625126",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9ef1585e-7a22-4976-a473-5244f5eb4318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9da818-a6b0-48a8-80d4-e8ed766efa6b",
        "cursor": {
          "ref": "3144ba13-7f6b-4fa5-af65-cd9396f3184b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "20805a5f-6a35-499e-8855-26b0bb07205b"
        },
        "item": {
          "id": "6f9da818-a6b0-48a8-80d4-e8ed766efa6b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1a0c7ddf-21cc-408e-a69f-1bba171c3f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1afcd5-1f50-4a86-a5e6-16ea793fdbf4",
        "cursor": {
          "ref": "74b6da99-4eeb-4740-813c-58c2bd44f2f7",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ca293a4a-1115-4b14-856d-452c31b3313e"
        },
        "item": {
          "id": "5b1afcd5-1f50-4a86-a5e6-16ea793fdbf4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ab29a74a-05cf-48ba-b535-c3da047800ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0985339b-a6a3-402a-9cf9-5768477f82e0",
        "cursor": {
          "ref": "07ebf651-773c-4bf4-8764-336870ccb3c5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c33fa242-7151-48ab-8ed8-0ce1ce2bb6d2"
        },
        "item": {
          "id": "0985339b-a6a3-402a-9cf9-5768477f82e0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2ebc9a67-9a1d-42d2-b399-2240c86ece9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7697820e-dda9-4f34-86b6-39c5495ffe64",
        "cursor": {
          "ref": "24895f71-9ab3-4e52-934c-7facefd5fec9",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d14ef29e-557e-43c3-921e-703d0865a322"
        },
        "item": {
          "id": "7697820e-dda9-4f34-86b6-39c5495ffe64",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "aa97222e-1bf7-44b8-a0d0-71520668e3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924f6b51-29f5-4601-91d0-25598cb56262",
        "cursor": {
          "ref": "c6f73eab-6c69-4898-8a90-d0eeec71b470",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "30c5a2b1-642d-450b-9d64-9ecb2c09162d"
        },
        "item": {
          "id": "924f6b51-29f5-4601-91d0-25598cb56262",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9b4c103b-a589-4892-a251-f85c46691429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca1e4a9-49ec-4564-a5fc-43e6675b7cdd",
        "cursor": {
          "ref": "5bf43507-f905-49a6-99dd-b6c27c9b1788",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b1d04d4b-8af3-404a-a25b-d4fb23284bf5"
        },
        "item": {
          "id": "3ca1e4a9-49ec-4564-a5fc-43e6675b7cdd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a2e5c31f-5b0b-4851-808e-2f0b7ac3d8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cac8d8-4669-461e-80db-6755b050e6cd",
        "cursor": {
          "ref": "05376777-6f7b-48e7-8c20-19624a1e7e67",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "54eebe7a-3f5f-4585-a0a4-a2a328088d40"
        },
        "item": {
          "id": "29cac8d8-4669-461e-80db-6755b050e6cd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e724093c-9ebb-41df-8c6e-669f838b8239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d75445-9a04-45e4-bbd8-bdfaf7cb55ca",
        "cursor": {
          "ref": "3ac2b19a-4b82-47eb-b7a5-b267e41164bc",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5f5d7adf-9d39-4833-93af-0a67bc637bc5"
        },
        "item": {
          "id": "e5d75445-9a04-45e4-bbd8-bdfaf7cb55ca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fe680cc5-77dc-476a-86a2-6d0a7f5ce3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb51de0-6367-48bd-ac28-702ede10fcbb",
        "cursor": {
          "ref": "892e5c6e-dde1-47b5-838c-4335eda52c3d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7d597d85-2153-4156-8a1b-eea03f97051a"
        },
        "item": {
          "id": "6eb51de0-6367-48bd-ac28-702ede10fcbb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bbad07fc-154b-420c-ab54-7fadb9b4e786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b296b70d-b1c4-4a9c-86da-e56d3e5700bf",
        "cursor": {
          "ref": "d3537b61-b65c-4807-8b6b-3978e8b88c88",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3164b4ad-ccac-4dde-8720-e1db6ca8019e"
        },
        "item": {
          "id": "b296b70d-b1c4-4a9c-86da-e56d3e5700bf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3df8a277-20e5-4c4c-83c0-21c6c2247f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f9de67-859c-411c-a978-764be1921fce",
        "cursor": {
          "ref": "fa51c595-ac24-4e7e-aa5e-21d77022c5d8",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7e6146ea-cbd3-4381-9115-09217c76a5c7"
        },
        "item": {
          "id": "62f9de67-859c-411c-a978-764be1921fce",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "be46ddb5-e95f-43ec-a9c4-fe19b8803c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3164cd6f-850b-48c8-a478-3d628863fe94",
        "cursor": {
          "ref": "36161478-bd73-4773-8cf3-ffc9fc20b2a5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a6fe4e07-43d9-4189-893a-5e136848f84a"
        },
        "item": {
          "id": "3164cd6f-850b-48c8-a478-3d628863fe94",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cd6b7568-88f9-4ce2-81fa-24893bbcbff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616f0b53-7ce8-4d51-a2db-ffe272c51f4f",
        "cursor": {
          "ref": "8fd507a5-0f91-4a59-a633-ffd32041f045",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7951a0a6-e13f-4522-8b91-f245b9350b38"
        },
        "item": {
          "id": "616f0b53-7ce8-4d51-a2db-ffe272c51f4f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ea39eead-e5b3-4898-89f1-20d52df8c275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4e8579-4efe-4736-99b2-df7349336036",
        "cursor": {
          "ref": "2d18a06e-d61d-4950-a424-b7518502de80",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "87359204-df71-4190-baa5-bf348f82c6fb"
        },
        "item": {
          "id": "4f4e8579-4efe-4736-99b2-df7349336036",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5428317e-39f4-4deb-9a78-8ad08275248b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e34c81b-9481-4779-ab27-b1b7af5a2669",
        "cursor": {
          "ref": "f54798e9-60b9-4f48-be06-69a7eeab5a5d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d1c2877d-5d77-478c-88df-33374dc7bd5d"
        },
        "item": {
          "id": "9e34c81b-9481-4779-ab27-b1b7af5a2669",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c33dd326-255f-4168-a9e8-e4c8bb607470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faa2e30-6ac4-422a-945b-74549bae9dc8",
        "cursor": {
          "ref": "0c5f9ba3-b876-4689-bec3-3cfdf8d5922a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7c2c0bcc-2c36-4d2e-b70b-da64625a1dfa"
        },
        "item": {
          "id": "0faa2e30-6ac4-422a-945b-74549bae9dc8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "006bed68-d87e-4ec7-b716-b05216ab5448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91799c9-b602-4bf3-b53f-faf5a151989a",
        "cursor": {
          "ref": "9c48e0ab-afd9-4bde-92d7-37a3da712052",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f0bf8c3d-73ae-4db6-8fe4-07f42a34eed8"
        },
        "item": {
          "id": "b91799c9-b602-4bf3-b53f-faf5a151989a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "974c55c2-0602-4fa0-8232-be589accff39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4592204-e8ec-48f7-bed1-fd97bea3038f",
        "cursor": {
          "ref": "5bef8526-ee68-40be-976c-18d059193e11",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6bd8bd0e-1672-4b8e-b227-c6e15580d589"
        },
        "item": {
          "id": "e4592204-e8ec-48f7-bed1-fd97bea3038f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "631ce1c0-cf68-4491-962b-3828cf0594ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49add12-e840-4dca-95a1-dc9871aedcac",
        "cursor": {
          "ref": "cf8ab783-45f6-4998-a411-a8a4a067e598",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4ccf11db-cb35-407e-8364-fd9f38e321e8"
        },
        "item": {
          "id": "e49add12-e840-4dca-95a1-dc9871aedcac",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6b67d582-9f0b-409c-a82e-4576b662d3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1e11b4-a972-4a01-942c-9dda9989c727",
        "cursor": {
          "ref": "758f5a67-d67f-4331-ae09-7903c9272302",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e337deae-285b-4715-850d-d718731611ef"
        },
        "item": {
          "id": "ee1e11b4-a972-4a01-942c-9dda9989c727",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "81e36f31-f66d-420d-abfb-ffdb186b5467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30bbbc5-fc62-4423-83e0-fb3706fcc98f",
        "cursor": {
          "ref": "fe545441-a0b4-4bbe-9e0e-ea8cdf0fece3",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cd44d889-e3f3-4d12-9e9d-9ff407a97430"
        },
        "item": {
          "id": "f30bbbc5-fc62-4423-83e0-fb3706fcc98f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "07e08dd1-b72e-4abb-bfba-4670fa83d03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5ad767-613f-438d-aac0-98b258dd94d6",
        "cursor": {
          "ref": "487f9191-b715-41dc-8ffa-c9dc261d2a61",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8861e45b-863f-4368-bb56-2ee6303bee56"
        },
        "item": {
          "id": "3f5ad767-613f-438d-aac0-98b258dd94d6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1cd3a962-29e5-4262-93a0-03888db2332e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2420ae-74d1-4ab1-bed8-d9f8b95422c6",
        "cursor": {
          "ref": "c60d0642-f4f5-44cf-abf1-f777c06b5f99",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6c36eedb-ebd2-4ec9-bd45-73c91e648637"
        },
        "item": {
          "id": "fb2420ae-74d1-4ab1-bed8-d9f8b95422c6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7117b78f-6b94-4b3f-a555-ab63fe12a997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444c54fb-90bd-4ca6-bb45-5026afc93c0e",
        "cursor": {
          "ref": "6b217b8b-a559-4d66-95b7-03260d0dbdd5",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fa15512f-62d7-4f4e-8c36-d569dc0f7228"
        },
        "item": {
          "id": "444c54fb-90bd-4ca6-bb45-5026afc93c0e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b7b6df98-75b6-419b-9d50-1bd85d453c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb4a95b-f5f6-404e-a9f7-e22a1ba073a5",
        "cursor": {
          "ref": "0f3a0cdc-8f85-4c30-b062-f50be7d992ee",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ecf587e9-cb9e-4d7b-b5f2-8804341f8ee2"
        },
        "item": {
          "id": "5fb4a95b-f5f6-404e-a9f7-e22a1ba073a5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b739fb11-244e-454e-a53c-2e13f22223c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5676ef4-bef4-451e-84f4-6a77b5edd0f6",
        "cursor": {
          "ref": "8cb61946-8789-4316-9354-4cbae9b862ff",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e6c2827e-42cb-45ae-8fab-f2a265213a88"
        },
        "item": {
          "id": "f5676ef4-bef4-451e-84f4-6a77b5edd0f6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "000bbae3-8fd7-4ae3-bc40-37ac64aaa9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b525243-b508-4474-b490-b3e60a496bd7",
        "cursor": {
          "ref": "b1d8a0ad-2597-41b4-9144-87eb3af2fd9c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d1f59efa-23df-4792-bf10-354a93252b40"
        },
        "item": {
          "id": "5b525243-b508-4474-b490-b3e60a496bd7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e02dc4dc-6432-4f1e-a4df-247170536d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1e9047-252b-4a15-886b-5feea80765b6",
        "cursor": {
          "ref": "9d92b651-0cfe-48e8-af28-316ffe4aabf9",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d0da00f6-7ad7-4f06-b230-1bb874743049"
        },
        "item": {
          "id": "5d1e9047-252b-4a15-886b-5feea80765b6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2996e282-8275-48c0-bb56-1e0b5f321d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35ff6c3-682f-4387-8c37-56563630d6a1",
        "cursor": {
          "ref": "79d8b18b-7449-4925-b8c4-5deab3d1af4e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e925c3f9-d63b-4b24-80fd-e7349e78ac96"
        },
        "item": {
          "id": "e35ff6c3-682f-4387-8c37-56563630d6a1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3cc34235-20b8-48df-99f0-3142984590da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8706694a-0095-43cf-a6cb-f0828e4d9bbc",
        "cursor": {
          "ref": "42603cb3-f3ef-44f0-b9f7-20efb745e5aa",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "05f36c73-c60f-4cbc-9dc0-e42c76e34c2f"
        },
        "item": {
          "id": "8706694a-0095-43cf-a6cb-f0828e4d9bbc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2abee600-a2fe-4c6b-92a4-8e02c6312133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1907ddb4-12fd-4bef-8427-f2fbb2e41958",
        "cursor": {
          "ref": "dae5b363-9c5c-4a34-b672-5391800ceecf",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9342d004-56c7-447d-b2dd-8d8ec649b443"
        },
        "item": {
          "id": "1907ddb4-12fd-4bef-8427-f2fbb2e41958",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4a8ef94d-3a05-4da8-856f-973556836f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd82cce-7a76-4fe0-93e9-b40e022b21dc",
        "cursor": {
          "ref": "b698868f-befe-4481-842d-6d4366c655e3",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c809abe1-12ec-4fe8-8bb1-01143c334f68"
        },
        "item": {
          "id": "edd82cce-7a76-4fe0-93e9-b40e022b21dc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cd49d8ca-2295-41e8-a3ea-248f0fb452d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d09655-98a9-43ad-bc0f-eaa630f63b2a",
        "cursor": {
          "ref": "6d87a493-d17e-4e95-a042-abeee8375ee3",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1163f09f-b325-4b36-8b53-05cd21f25ef7"
        },
        "item": {
          "id": "a5d09655-98a9-43ad-bc0f-eaa630f63b2a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ca5a1c00-e720-4681-97f7-8c5c184b2a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf2c83d-7c0b-4bbc-9f7c-e46d44564711",
        "cursor": {
          "ref": "d1c196a1-74af-4aed-b2dd-f6a92244a097",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8214c34a-be4f-48bf-9161-c6f38748f791"
        },
        "item": {
          "id": "6bf2c83d-7c0b-4bbc-9f7c-e46d44564711",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "96dcca74-bcb5-4b72-9b65-f76f6c3373f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91414b1e-dc84-47da-91d5-7cf14d49f3f2",
        "cursor": {
          "ref": "7bc1390c-d833-41a0-92a1-fd8683224ebd",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "363f8868-34d0-4796-b2d4-89ca2cb6a80d"
        },
        "item": {
          "id": "91414b1e-dc84-47da-91d5-7cf14d49f3f2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c7c46475-25d2-4bbe-9f82-34aeacbf48d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ba9595-7c0b-4355-af17-65fb869079f6",
        "cursor": {
          "ref": "a78c2a98-2d8b-4c82-8aaf-0327542f7b77",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6e912d68-68f0-4d55-a2f9-5f78c25efdf5"
        },
        "item": {
          "id": "c4ba9595-7c0b-4355-af17-65fb869079f6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5631cfe1-5a45-4959-a8cd-263894a81675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e113e3de-2040-4a0f-9eda-9a03987d96c3",
        "cursor": {
          "ref": "ff30ba09-e25b-4566-829b-649cd54ab01a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cd75e9e7-331d-41ea-91df-e2c16509e75a"
        },
        "item": {
          "id": "e113e3de-2040-4a0f-9eda-9a03987d96c3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f1451f54-fe0d-4e8d-8d9f-deca6abdd6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0732c67c-6a6a-4e68-910c-1323fc65f264",
        "cursor": {
          "ref": "a8f3bd6b-2684-49ab-822b-db570f1ec1dc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f84814f7-cbcc-49df-ab00-6dd379a49a5c"
        },
        "item": {
          "id": "0732c67c-6a6a-4e68-910c-1323fc65f264",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4e50de66-4744-4f64-806d-444391d0183f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da782ae9-ab33-42a4-ab39-94bd8bcf7f09",
        "cursor": {
          "ref": "e97e198c-e0dc-46e4-a4fd-0720a85d732f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5f811a60-8a84-4161-9130-0682a0ad155f"
        },
        "item": {
          "id": "da782ae9-ab33-42a4-ab39-94bd8bcf7f09",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8d85dbfe-1f83-4328-b4bc-ec2d7eb72a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2211f092-9f5c-42cf-ac8f-03e8574b311e",
        "cursor": {
          "ref": "c7c59a35-9289-405a-b15a-bd2b66347234",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2973b126-699e-4235-ad00-186aae9bce55"
        },
        "item": {
          "id": "2211f092-9f5c-42cf-ac8f-03e8574b311e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8cbbc82a-d737-4c4c-8966-2597879473aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636e53e0-3cda-4b9d-8171-de9583a7f40d",
        "cursor": {
          "ref": "85d63599-29f3-4612-92b5-11cf1ab90461",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "43105e86-f16b-462b-9cea-0671ef5de9bb"
        },
        "item": {
          "id": "636e53e0-3cda-4b9d-8171-de9583a7f40d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2a65579c-a99c-4d56-8177-aadfc91fad15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285bcefc-152b-4cb9-a136-b27e1b7457dd",
        "cursor": {
          "ref": "6bbc9a70-6a73-4fbe-9b12-d69d3b72d5a2",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "231a635a-835b-46d5-8f76-03ba06eeea2e"
        },
        "item": {
          "id": "285bcefc-152b-4cb9-a136-b27e1b7457dd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "315163d0-8b61-4055-9320-d360d44abf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1fd511-07cf-4197-b905-21160de37107",
        "cursor": {
          "ref": "e97431e8-9210-4a5a-9d0d-70e91c0612b8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a6af72ed-b385-4d01-b4d3-2f5803a25831"
        },
        "item": {
          "id": "9d1fd511-07cf-4197-b905-21160de37107",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f5d8bf28-9f7b-4208-9435-c00e7618dd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9fe0bf-f82f-41f3-814e-338374aba466",
        "cursor": {
          "ref": "62d5ffa1-7149-491e-af17-75a375554a5f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "98849458-1af8-430e-a73d-270476c7fa6b"
        },
        "item": {
          "id": "4e9fe0bf-f82f-41f3-814e-338374aba466",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "06981166-6fe3-40a8-b9a9-53b86e401b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c79fd65-68c8-483d-b34d-79b3cc53b81a",
        "cursor": {
          "ref": "239ca0a3-a2b4-46e4-92e9-371ecb24cafe",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "37fe9527-e4a4-41ec-a3cf-bac4e556c076"
        },
        "item": {
          "id": "0c79fd65-68c8-483d-b34d-79b3cc53b81a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0b5e68e0-9db2-4e63-9ecd-0d3055e97ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43c6175-9e79-4c77-84d5-4ef87001767b",
        "cursor": {
          "ref": "e5383edb-3360-47f2-8b8a-bc172cde053f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0dfdc245-510f-465f-8180-be362bcffdfc"
        },
        "item": {
          "id": "f43c6175-9e79-4c77-84d5-4ef87001767b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fef0da28-a57a-49a4-a086-f75e02ee8953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142d915c-7ffc-4208-b87d-e30ad34fb565",
        "cursor": {
          "ref": "58a48d2c-754d-4b4a-94a7-2607e9ce6bd4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "aa087e31-84e8-4157-80fd-f20ee7157b85"
        },
        "item": {
          "id": "142d915c-7ffc-4208-b87d-e30ad34fb565",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "02700434-44b6-4827-836b-851f185348ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c522d4-4a71-427f-9226-77d55b47a602",
        "cursor": {
          "ref": "9f412c1c-fa24-48fd-88af-c6342600b262",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e0efb92d-301f-4f6e-a5fe-4faaa2283e6f"
        },
        "item": {
          "id": "92c522d4-4a71-427f-9226-77d55b47a602",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d76b0a64-b00f-4609-9a25-88168d3f9cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050e467e-c6c6-4222-af14-e54bc60e2ddd",
        "cursor": {
          "ref": "e5981878-754b-4b5e-98fa-47ea31d81f92",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bfe653fe-cb25-4f0b-83d8-7938f2987f3e"
        },
        "item": {
          "id": "050e467e-c6c6-4222-af14-e54bc60e2ddd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "53c92730-d931-4472-99e2-1b315894804f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a46838-2bcc-4b6b-b0be-ee66e68b4396",
        "cursor": {
          "ref": "0df64caa-fd2e-4112-993a-8fc836cd1240",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "05610b44-5d89-4060-8799-fc89abc0ddc8"
        },
        "item": {
          "id": "96a46838-2bcc-4b6b-b0be-ee66e68b4396",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8b91ffae-cdd4-4dac-83e8-da690c4f57f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58795695-f8ec-4b09-8ab8-f72bb7185440",
        "cursor": {
          "ref": "844fa56c-fa9f-4c92-a7b6-8ac494e51ac3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0ea50b9c-c37c-4b1a-b4ab-860aa1cc45e1"
        },
        "item": {
          "id": "58795695-f8ec-4b09-8ab8-f72bb7185440",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c3617b91-1b2f-4816-905f-d367b04d053d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e404030d-c658-4db6-b312-526f7b73a710",
        "cursor": {
          "ref": "57b5b715-3749-4a2e-8284-61c858821945",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f771eb1d-afba-482a-bcd9-9eeaa15b4b61"
        },
        "item": {
          "id": "e404030d-c658-4db6-b312-526f7b73a710",
          "name": "credentials_issue"
        },
        "response": {
          "id": "21b02677-4bce-4fb6-ad68-09b8ca02ebb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a072756b-1b7d-4965-b938-a801892b36ac",
        "cursor": {
          "ref": "53b01540-7eca-431b-afd9-053583acff71",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d6ee6387-60c5-4747-886c-633e088da532"
        },
        "item": {
          "id": "a072756b-1b7d-4965-b938-a801892b36ac",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5767bad5-52c5-43dc-ac2e-c566855120c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "597cfe6f-3c67-438d-8e81-7dba775aa6e7",
        "cursor": {
          "ref": "1632f104-e05d-4450-8e05-cf50e4ce3fa4",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b776437b-0e7d-436d-9101-ff23f8d32cb9"
        },
        "item": {
          "id": "597cfe6f-3c67-438d-8e81-7dba775aa6e7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "07908e08-0816-4b95-b06f-cc5f99c3aae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "849019b3-5b28-4805-ba9f-809e134eea8d",
        "cursor": {
          "ref": "117a3811-ca5f-48c4-80dc-340af6411693",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6e72b265-7f5f-43a6-b7f3-92bd7c0de89d"
        },
        "item": {
          "id": "849019b3-5b28-4805-ba9f-809e134eea8d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b9456c25-36d3-4a2b-a505-1bc671bb8641",
          "status": "Created",
          "code": 201,
          "responseTime": 11233,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebf405b-876f-49ad-bbd7-309d14146abd",
        "cursor": {
          "ref": "a321ecba-e65d-4944-b5e2-5626515fde53",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3d79e774-ceea-4d38-9691-593edc4bba7a"
        },
        "item": {
          "id": "8ebf405b-876f-49ad-bbd7-309d14146abd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0d13c6f5-06c0-4d75-a4ff-cf5c6baf4ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6c629c99-4c4e-4bb5-be93-84f170eb1fe9",
        "cursor": {
          "ref": "2ca58e10-bc51-4722-920e-286ea3a457dd",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c7a13c66-c6d5-4282-aeae-cd6736771723"
        },
        "item": {
          "id": "6c629c99-4c4e-4bb5-be93-84f170eb1fe9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "65172e51-1bef-470c-8435-72208bb8ca55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c4222c06-cb97-4422-a285-92c67596cf66",
        "cursor": {
          "ref": "be88dbf8-c248-4d31-b6c4-eb2b6cf12109",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "353145e5-37c4-4e7a-be7c-4636f555b2ce"
        },
        "item": {
          "id": "c4222c06-cb97-4422-a285-92c67596cf66",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dbd04769-29a5-4722-bd03-05da6d39ae19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cd16d6-af03-49b9-8ed8-c26dfcae0d6c",
        "cursor": {
          "ref": "26bf13e9-c1a9-42c0-8a5b-50cdd5c307da",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "55083b37-5579-4c30-b865-a93e92ead78f"
        },
        "item": {
          "id": "a8cd16d6-af03-49b9-8ed8-c26dfcae0d6c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bed9a660-372e-40e6-bc96-a04d518922e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1eb774f-560a-4500-ac67-07ae77c14ac4",
        "cursor": {
          "ref": "836d80e3-f3fe-4221-b9e5-f1fa7eef3ea5",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "652523bc-738e-4361-9bc9-aca6c39104b3"
        },
        "item": {
          "id": "f1eb774f-560a-4500-ac67-07ae77c14ac4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5ba546db-2842-4baa-8829-b38a508bb81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d025cd23-0ef9-4977-ac9e-c4a6d1d91601",
        "cursor": {
          "ref": "2bb75719-caf7-42a9-ae1d-58174cb71b2e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4d112c75-853a-4953-8f1e-45093c831327"
        },
        "item": {
          "id": "d025cd23-0ef9-4977-ac9e-c4a6d1d91601",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9cb31fdd-49fc-484b-8485-e0ac2811e317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d9702f-5eee-4af0-a220-78f221dfec43",
        "cursor": {
          "ref": "bc0ccbc0-a8c0-4adf-a54d-98abdf4cc4e8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6b26e4bd-ad68-4cf6-9fa7-ff7b21258e95"
        },
        "item": {
          "id": "89d9702f-5eee-4af0-a220-78f221dfec43",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "191d3505-ad70-4727-9e67-e192ccd92f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52807ce3-c3ce-49e3-ab45-2f6b3acbf8dd",
        "cursor": {
          "ref": "2d2f1f0c-529b-4c6c-b359-33c000a799e1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0e1ab0b5-b3ed-49b4-b83a-6a933f075f95"
        },
        "item": {
          "id": "52807ce3-c3ce-49e3-ab45-2f6b3acbf8dd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d455ddd9-229a-4b18-9dd4-fcfff2597c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2a3610-e897-4af3-addc-f285a2e3c4b5",
        "cursor": {
          "ref": "01482f34-a637-4983-82cb-1808fcb9343d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "99e6ba18-5b40-4e60-8846-d2248d3ee195"
        },
        "item": {
          "id": "3d2a3610-e897-4af3-addc-f285a2e3c4b5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b3790c15-69e7-46c8-a87f-26b254bc44ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bee9496-bd9f-4221-b44e-b3428ff60e1e",
        "cursor": {
          "ref": "bf3e2376-8d07-4481-80a2-3377c86b39e8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "365678e5-a3b6-4ff8-b4da-66746b737a93"
        },
        "item": {
          "id": "7bee9496-bd9f-4221-b44e-b3428ff60e1e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e03fcd7c-8298-4082-9ef5-58617d07571c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea44e86-2f25-4453-9c8b-1e8217f8e573",
        "cursor": {
          "ref": "2628ed13-5692-4eab-a91c-571a7b1c9024",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b108e2cf-2927-4029-9b59-495f3739d627"
        },
        "item": {
          "id": "8ea44e86-2f25-4453-9c8b-1e8217f8e573",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3610bdfe-7402-4302-923e-5cd9d84c40d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fc8223-488e-4dcb-8156-dc87dcf3757a",
        "cursor": {
          "ref": "791c900e-f26f-4c96-9105-09605ce9dce1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ff85fcf8-46c9-4bf3-a9e9-d7eac68b7be1"
        },
        "item": {
          "id": "63fc8223-488e-4dcb-8156-dc87dcf3757a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "634efe4c-97f6-4032-9aea-5f3a236f13d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a0d7de-ed94-40e3-a8a0-b0c304a3388c",
        "cursor": {
          "ref": "216a2072-e4b0-4af4-9ae7-03bb76da8860",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3223b055-d513-4988-927e-af17d1f679d2"
        },
        "item": {
          "id": "15a0d7de-ed94-40e3-a8a0-b0c304a3388c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2cb0f4ea-5f6f-4146-ab12-91adf90a7e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1983e699-642d-4212-859a-b674da78f1ed",
        "cursor": {
          "ref": "59fa4e29-ab73-43f5-ae30-264f0796c3a1",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "89fc02a6-f4a2-43a5-9d61-18b3bda0b182"
        },
        "item": {
          "id": "1983e699-642d-4212-859a-b674da78f1ed",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f3850f3c-a98a-49b6-8469-fc6565a91aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2820823-70fa-43f6-805c-c5a4fcf171d9",
        "cursor": {
          "ref": "4fb6601f-fbe6-4dd5-ad15-da28096e9471",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7d67c38f-f2a7-49a4-a874-156fd8dc9852"
        },
        "item": {
          "id": "b2820823-70fa-43f6-805c-c5a4fcf171d9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9b3d84ae-6720-4ddf-b044-bfd4c191af99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf99eac4-e69a-4db6-9de1-4fe29faae4b7",
        "cursor": {
          "ref": "68d4ef92-db43-44d7-bf4e-774ae8b9d5da",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b99ef849-3d13-4760-bc91-a2e8e18ff525"
        },
        "item": {
          "id": "bf99eac4-e69a-4db6-9de1-4fe29faae4b7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3dcdb860-fa60-4383-9633-17be98f0ec52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef929343-d42e-415b-9405-c565ba0ae891",
        "cursor": {
          "ref": "3bd53bfe-768e-40b2-88d8-a43316c5e583",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "09964683-1a18-4f3a-bb08-e298433a59e1"
        },
        "item": {
          "id": "ef929343-d42e-415b-9405-c565ba0ae891",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f5bebff1-993d-457a-8b3c-863ce0e679b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9025761-ecdd-473a-a58a-3ea92ffb4170",
        "cursor": {
          "ref": "17428538-3603-4959-95e3-8cdbad0078b8",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2a1441be-188a-4d6e-aebf-e52c72b90b02"
        },
        "item": {
          "id": "c9025761-ecdd-473a-a58a-3ea92ffb4170",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e51b5d8b-af8d-4b98-ae42-8556f70c8a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d911b88b-2a30-4bad-b062-6ee31bd7f8a0",
        "cursor": {
          "ref": "6e7e4d18-faec-4eab-8868-d73d38d8e357",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b612ba21-b194-486a-92b1-049cee8be55d"
        },
        "item": {
          "id": "d911b88b-2a30-4bad-b062-6ee31bd7f8a0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0e912f88-f561-47c3-a5ca-92a506fd3d77",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "05976105-99ce-46b9-8ff5-1362def630d5",
        "cursor": {
          "ref": "404005a8-fb64-42db-8659-6f0438f913b4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cc1c9836-69eb-4ffb-8983-325d0f64cb47"
        },
        "item": {
          "id": "05976105-99ce-46b9-8ff5-1362def630d5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e49860aa-6268-4c56-97ee-849d144cffa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ea2b2c-aa3c-4853-a5d6-b5181e43dcf7",
        "cursor": {
          "ref": "6454850d-786f-4ab9-a1ef-1db5a9517ac1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cc9a0981-6194-4b5b-a0b1-6f55e1cc2973"
        },
        "item": {
          "id": "b3ea2b2c-aa3c-4853-a5d6-b5181e43dcf7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4c2164da-ecbf-4182-b39e-324350de960d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad54afc9-2cf9-4ed0-9485-0f3f633f9730",
        "cursor": {
          "ref": "e8e345b6-e9d5-474d-87db-7238a2a86fa0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2887a114-40e2-43db-a073-883216417c65"
        },
        "item": {
          "id": "ad54afc9-2cf9-4ed0-9485-0f3f633f9730",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "332da087-8747-49f7-b769-938f57f1c38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f4e60b-4d47-46f6-9498-f2862034e45d",
        "cursor": {
          "ref": "1e7a4c7a-fc81-4f39-a129-1389cc454253",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3f1d03e1-f03e-4b14-b68c-d17fcca754a5"
        },
        "item": {
          "id": "b4f4e60b-4d47-46f6-9498-f2862034e45d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a78c8ba9-52ad-4fc8-88c2-7c99258918a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fe4112-44d8-469d-96b0-e7dd6d94f58f",
        "cursor": {
          "ref": "40f3dd7c-a692-434a-b686-c9d29a33df20",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8fc288bf-2fe0-46a1-9b01-15ec22261d5d"
        },
        "item": {
          "id": "62fe4112-44d8-469d-96b0-e7dd6d94f58f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "637d2ccf-c7f0-43c3-a7ca-cf39839f8fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75d599f-c506-442a-bfdc-2a52744cc18f",
        "cursor": {
          "ref": "5a7c5600-ec69-402a-a0fc-02f38a6037f4",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d25ebe82-6ea4-464e-8f1f-b485aab66839"
        },
        "item": {
          "id": "b75d599f-c506-442a-bfdc-2a52744cc18f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "072bb2a9-c92b-4d14-8e9d-6758c716e7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b424440-7d0b-4b8e-bf37-08b3ab84d34d",
        "cursor": {
          "ref": "05fa945b-388f-4d22-be1d-82634b93d952",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "90651497-83b1-4c74-8338-07494259547c"
        },
        "item": {
          "id": "5b424440-7d0b-4b8e-bf37-08b3ab84d34d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ef8cbe89-48aa-4085-9b11-76fbca00c43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50239ec3-1c3d-4707-a4b7-3694917e9280",
        "cursor": {
          "ref": "deb02f9b-ae16-485c-8c13-cb1de3e336bb",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6998a61f-e2fd-4e91-b345-3cd4625f622d"
        },
        "item": {
          "id": "50239ec3-1c3d-4707-a4b7-3694917e9280",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cb76d7a5-b091-4699-abc7-94bb40c39f73",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "1440b6c8-d3d9-479b-805a-56ff184e38ca",
        "cursor": {
          "ref": "3a72d77a-c2ab-462c-a08c-88b0d237b96d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3f2f419c-adbc-4c24-8c23-1de6a1047a61"
        },
        "item": {
          "id": "1440b6c8-d3d9-479b-805a-56ff184e38ca",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5a78ae91-b822-42fe-bdd6-4c4bce54abdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf8061a-6e71-4087-9402-fb4feec9e844",
        "cursor": {
          "ref": "a5d8ab78-8a17-42df-9335-b3f3f2432f23",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5155b3a6-7c35-4087-8b59-df2c858aa3d0"
        },
        "item": {
          "id": "cdf8061a-6e71-4087-9402-fb4feec9e844",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d808157e-4cb4-4809-ad6a-89df286511e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517a2eee-0b5f-4496-95b7-6b73a49ed618",
        "cursor": {
          "ref": "5835cf09-2971-4c7f-8c47-8e917b2d8a13",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "81ae7ecd-e92c-4f33-943b-0c3af23c33a5"
        },
        "item": {
          "id": "517a2eee-0b5f-4496-95b7-6b73a49ed618",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4af6d6a1-bef0-4ce4-ab05-53f04e301a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ad2349-a0da-4f56-ab52-85d25c8d802b",
        "cursor": {
          "ref": "920b7e0a-839b-4a83-9a2d-27e83ed8615b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e8137fc7-f4ba-47b0-b461-22e1a867a991"
        },
        "item": {
          "id": "93ad2349-a0da-4f56-ab52-85d25c8d802b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "855b878a-5f4e-48a6-a233-1ea85b349bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596e9e65-b034-4692-867c-3a8a9c1c504b",
        "cursor": {
          "ref": "39c3b8b0-7a3a-4f45-971f-f13f5864468c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6e864254-843a-4371-ac98-5b32d3b2f893"
        },
        "item": {
          "id": "596e9e65-b034-4692-867c-3a8a9c1c504b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "03ab651b-c786-492b-93fd-db67c2e5fd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90759327-5274-4d10-a8a4-0f956abc1803",
        "cursor": {
          "ref": "b7ddf710-e61b-4699-90f7-625bcef7144a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0268fc05-c387-41ae-9ad3-eba243d5fa3c"
        },
        "item": {
          "id": "90759327-5274-4d10-a8a4-0f956abc1803",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7fd06b88-9ca9-4121-bc7a-8a60c0880f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49c1e58-9bae-4975-bd4f-b3829b04c140",
        "cursor": {
          "ref": "a39ca315-d12f-4afa-88e7-a7b46c9222e1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f74369ea-9a39-48f7-913d-87012ff715bc"
        },
        "item": {
          "id": "a49c1e58-9bae-4975-bd4f-b3829b04c140",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6716402e-724b-4605-841d-43ae74146a1f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "8ae235d6-b56d-40db-8753-195a28fa2076",
        "cursor": {
          "ref": "08bbd164-d32f-4a89-be5e-5a05444559a6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0c8d4f35-9f48-4dcd-a660-19bff5e32f47"
        },
        "item": {
          "id": "8ae235d6-b56d-40db-8753-195a28fa2076",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f0e2e922-76da-4c5c-8cf6-212753e04b26",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "00bfdbbf-23a3-4db7-83cb-72790d5e99eb",
        "cursor": {
          "ref": "de951ed9-b3c6-42ff-a2e0-a5ffad9d0301",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "06f94f72-3750-4070-b908-c831a8c0d9e2"
        },
        "item": {
          "id": "00bfdbbf-23a3-4db7-83cb-72790d5e99eb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9f42272e-c0d6-40db-8db6-de4108ab39d1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "94f17753-66bd-4a55-a791-adc4bae37d75",
        "cursor": {
          "ref": "ba9b6d32-d22d-4a62-9f28-7187c1b288ba",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "07d12717-d08a-4eec-998b-7cc7cd0830f0"
        },
        "item": {
          "id": "94f17753-66bd-4a55-a791-adc4bae37d75",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "59065360-a816-4ab1-b939-93010999e725",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 11,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "13776373-411b-49f0-a370-a78f0ec88832",
        "cursor": {
          "ref": "0fc377a5-94cc-4e60-87c9-d68f3eb936c9",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a5e88761-8011-437c-bf4f-5345c047e970"
        },
        "item": {
          "id": "13776373-411b-49f0-a370-a78f0ec88832",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d5d13e0a-4ef1-41b9-9356-16b49c7fea73",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "9c06b12e-d733-4b4f-93bc-2be42006c742",
        "cursor": {
          "ref": "8bda4b90-e2e3-4951-88b8-e4a4f785db41",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1709a074-4d16-4a72-9f60-44950dd08829"
        },
        "item": {
          "id": "9c06b12e-d733-4b4f-93bc-2be42006c742",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1851f635-0b3b-4db5-b40f-6ab18d4ef2e8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "6e885d44-e6a2-45ee-a1f6-5a90041a7edb",
        "cursor": {
          "ref": "006a03c5-1c87-4ec3-835d-3e617904a8bf",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "94f04dd2-bbb7-448e-9b02-30ba25ca925f"
        },
        "item": {
          "id": "6e885d44-e6a2-45ee-a1f6-5a90041a7edb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "74ac3d5a-64ba-443c-88ed-b1775f07b757",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c862ae0-bf32-4431-9d75-c0205e4f1da1",
        "cursor": {
          "ref": "da407a87-46e9-4c62-b0e8-c5cbd36cc72f",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b8212ea7-39d9-4332-8868-01ba3b02e2ae"
        },
        "item": {
          "id": "4c862ae0-bf32-4431-9d75-c0205e4f1da1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dacf71ee-56dc-46b2-9bbd-3894b25d1246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2142776-f405-4e7e-ab2a-1e25213745eb",
        "cursor": {
          "ref": "e1320a05-5d78-4289-8500-6cbf7c0e8483",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "514cf3ce-04af-4ad0-8fb3-6d24a049c134"
        },
        "item": {
          "id": "d2142776-f405-4e7e-ab2a-1e25213745eb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "db02a5b8-18d5-4de5-8198-45fc9a6d36de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13164df-5d5c-4687-8a88-2b7211942f19",
        "cursor": {
          "ref": "8bbaacf0-924b-4b81-970f-b3778cfa9eb1",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "83328a6b-1973-43df-a31e-129379e4b942"
        },
        "item": {
          "id": "b13164df-5d5c-4687-8a88-2b7211942f19",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3db9da33-0716-4b0f-adab-56dc1aaec986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061144e9-9e71-4cea-ac2f-4c3ecbc878d8",
        "cursor": {
          "ref": "3eeb17f5-dc08-4fdc-888f-5d1cccb5867e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6adac665-60c2-4b67-9277-a83186a794cd"
        },
        "item": {
          "id": "061144e9-9e71-4cea-ac2f-4c3ecbc878d8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7c589be6-d04f-4045-8876-c201f34c81b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dbfffb-3857-4a6f-8792-68b1857dab64",
        "cursor": {
          "ref": "c52574b2-1233-45a7-a200-383e67280198",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dc806735-e306-4749-a293-e99b2aa4eccc"
        },
        "item": {
          "id": "d7dbfffb-3857-4a6f-8792-68b1857dab64",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6f4fb0e9-4d3e-446f-bca1-941a987fad26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e4f928-ce0d-4c2c-9290-8bd21d3e1e43",
        "cursor": {
          "ref": "d40b1493-8e02-4400-a72f-5abaa8aab039",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "414b24e2-f391-48ea-9cc3-1b323105359a"
        },
        "item": {
          "id": "e6e4f928-ce0d-4c2c-9290-8bd21d3e1e43",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "563c759e-9cdb-4c6e-9082-05580caddac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc83b6c-d6b8-4ca6-b38e-61e623b1f609",
        "cursor": {
          "ref": "dbaf0ecf-13a2-45c3-af13-ef620af80c5e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a6b925fd-d404-4bd7-b3a9-2a956b1f7366"
        },
        "item": {
          "id": "2fc83b6c-d6b8-4ca6-b38e-61e623b1f609",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "742e5f53-316e-4c1d-9959-576025319576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921b68ad-5ac6-4bbc-9c8a-fbb9155fba77",
        "cursor": {
          "ref": "19b3ab4a-3be1-4a38-8ff8-354b9e294949",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "67d77727-efa5-481a-ab43-462555a9656a"
        },
        "item": {
          "id": "921b68ad-5ac6-4bbc-9c8a-fbb9155fba77",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3d2cdb3f-c356-46f1-97dd-051424e7fd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adc31c5-2ee2-45bd-8c2e-a3cfa37d09b1",
        "cursor": {
          "ref": "d8f7c42f-840a-49a1-9733-4a4c5c50f664",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3d11a696-bef7-4015-8857-ccc68297933c"
        },
        "item": {
          "id": "2adc31c5-2ee2-45bd-8c2e-a3cfa37d09b1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "28459210-8380-4a24-a556-2fe7432f16ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b5e0f9-5057-430f-b98e-34d0ff20d0b4",
        "cursor": {
          "ref": "e985da12-8244-45ee-8c92-82fcf33ed3d7",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cfe0e082-1953-4e41-a43b-39169bc43721"
        },
        "item": {
          "id": "64b5e0f9-5057-430f-b98e-34d0ff20d0b4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2d1bfdfc-6ff2-47a3-a0be-f0a02c434cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64e45d0-2188-4d54-8077-df253ef10b74",
        "cursor": {
          "ref": "c4ccc03b-285c-45e4-a72f-514498f2a990",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "194dd72c-84f3-4f2b-8e38-8d5ef2f89e0c"
        },
        "item": {
          "id": "c64e45d0-2188-4d54-8077-df253ef10b74",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "715e9e06-fee7-4533-a62d-f84e6156f30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c93bf6b-f592-487a-b97f-87fe8f93510b",
        "cursor": {
          "ref": "87d58535-7322-4f01-a25d-480d519bf6ba",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ec8eb6a3-0c41-4b84-bb18-d0d04b37f8b9"
        },
        "item": {
          "id": "6c93bf6b-f592-487a-b97f-87fe8f93510b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4fe96cca-b1eb-42a1-bfd9-a0af9ee579de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c5c222-31e2-4f03-bf40-dfd973b10f7e",
        "cursor": {
          "ref": "32ea5489-23cd-44e0-aebf-185e92e48607",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ba3148ba-8f24-494b-826c-f5606f706fa6"
        },
        "item": {
          "id": "83c5c222-31e2-4f03-bf40-dfd973b10f7e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f7c23686-4dc4-41d2-982e-d5697786117f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa343f63-23af-4c3f-a190-90170796f9cb",
        "cursor": {
          "ref": "a286f3cc-cbf9-4075-b89f-71c1bfa5598f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "802ae0ec-d976-42a9-868a-773f3728546c"
        },
        "item": {
          "id": "aa343f63-23af-4c3f-a190-90170796f9cb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f6377572-3f2b-49ef-a48d-015fe62349cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaff2de-e5f7-4881-9bd6-65c3555d264a",
        "cursor": {
          "ref": "0b12e3c1-9736-4a1b-878f-e3c50aab5291",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "71676e9f-0362-4b0d-b561-d5d938c9de2b"
        },
        "item": {
          "id": "fcaff2de-e5f7-4881-9bd6-65c3555d264a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b1952532-0589-4ccd-8d53-b35d8f8614ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96074115-bb40-41e8-96f3-4dae2dbbf6fc",
        "cursor": {
          "ref": "cb0e274d-bf3c-46ae-b1c6-ef3b5250a3d3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d8ab539f-9d61-44c6-9b07-79fd9d6a42f3"
        },
        "item": {
          "id": "96074115-bb40-41e8-96f3-4dae2dbbf6fc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2ce952a0-f7ba-44cb-a0f0-e3163bc3c2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4b52b5-042e-4a76-91f3-8463f7cd804e",
        "cursor": {
          "ref": "2908953c-fb44-472b-abc6-e2586143145a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "871a40f3-6162-430f-831a-dfe333e4ad86"
        },
        "item": {
          "id": "dc4b52b5-042e-4a76-91f3-8463f7cd804e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "31a57886-a111-429a-b23d-0269ac88b8c4",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "354158c4-32b5-4033-8766-6439d805f1d7",
        "cursor": {
          "ref": "c3e782a9-eb96-4cd6-80df-2ef4da3f29a8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5d3647c9-efe5-4b45-9a4c-37a3f33c14a5"
        },
        "item": {
          "id": "354158c4-32b5-4033-8766-6439d805f1d7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5d24b6d0-4e4c-403d-bc9b-cfc166269863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5350aa28-4f5c-49be-a2cd-55f1da8dc066",
        "cursor": {
          "ref": "8183ecb8-3b0c-40a6-9ecd-595d5cdbc638",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "75345702-2937-48ee-91c3-8690df66a7fb"
        },
        "item": {
          "id": "5350aa28-4f5c-49be-a2cd-55f1da8dc066",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f56c7c7d-95ef-4fe7-91ff-3977f978a4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35eedf65-aa65-42ef-8cc4-fa877730e969",
        "cursor": {
          "ref": "56a6affa-1f96-434d-97ae-bc3bafac4122",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6db06d41-c704-437b-ac45-daf046806e82"
        },
        "item": {
          "id": "35eedf65-aa65-42ef-8cc4-fa877730e969",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "52e432a8-6526-4fe6-ac19-0e72b748f0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977d5063-c41a-4a32-b629-01133702a2f0",
        "cursor": {
          "ref": "6e92c48e-cae8-4200-bb2f-f2d26292e5d3",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "315e078a-e736-40d2-bfbc-7c33ba612930"
        },
        "item": {
          "id": "977d5063-c41a-4a32-b629-01133702a2f0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d8f9958f-69cb-4881-92e7-f7e003a3e17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d661e2-d0ca-424b-93f6-0938bbe9c093",
        "cursor": {
          "ref": "e145fa4c-5921-437d-ba09-45f61b8b8268",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cc541a31-7590-4e4e-ad39-701c5b074435"
        },
        "item": {
          "id": "72d661e2-d0ca-424b-93f6-0938bbe9c093",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "111136ec-255c-4ad8-bf03-0396652c256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af97ae2f-f456-4a14-ab8b-470c6e0515ea",
        "cursor": {
          "ref": "69c137bd-a52e-4996-b9d8-35d0d27f958d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9625aa81-15bc-4ac5-ad24-b8ba9e86fc77"
        },
        "item": {
          "id": "af97ae2f-f456-4a14-ab8b-470c6e0515ea",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "457e40b2-8026-425e-a4f0-0b3b1643ab94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b59ae81-4222-4368-9ec0-20ce5eb0cd74",
        "cursor": {
          "ref": "1aceb9b4-2548-4713-a8bd-a07b03d13921",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0b916195-9aed-4e0e-84a6-386c468d4c33"
        },
        "item": {
          "id": "9b59ae81-4222-4368-9ec0-20ce5eb0cd74",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ac101af0-4371-441f-936c-21c3274bf1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca752da4-78b4-4ed9-b5be-58e56c14ddf2",
        "cursor": {
          "ref": "9da188c5-5cce-4544-a6dc-ce7c1652e9ba",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "34742f21-887e-41a2-960f-f8795670f259"
        },
        "item": {
          "id": "ca752da4-78b4-4ed9-b5be-58e56c14ddf2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "01669682-a02a-44c4-b43d-13eca1294401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ac0984-3765-4c5f-b85c-8003414f9473",
        "cursor": {
          "ref": "3b4a2f10-e6db-4103-8814-67ca113e294a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4de3168c-af6a-46b8-a25c-17b22ad82adb"
        },
        "item": {
          "id": "98ac0984-3765-4c5f-b85c-8003414f9473",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "13e30d64-e543-4d38-96e3-f38e2c562a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e0c264-e16a-4a62-827f-51d4ec626d15",
        "cursor": {
          "ref": "1b04f03d-a706-4d36-bdf6-7d5590fa3263",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c5fcd4b0-bec2-4202-ae58-b22532ba1acd"
        },
        "item": {
          "id": "c3e0c264-e16a-4a62-827f-51d4ec626d15",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dd6205b2-3a47-4e42-ba33-98593458b44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6419a600-d490-4b6e-b371-0e2f3867afce",
        "cursor": {
          "ref": "eea65eb2-b72d-4e56-953f-888d4ec7b7cd",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b873b80b-2b8e-4a84-bced-b1f0855a66a3"
        },
        "item": {
          "id": "6419a600-d490-4b6e-b371-0e2f3867afce",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a84ea156-e4f3-4f43-ad56-33bbd6e23345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ca0b5e-4a79-4678-b0d5-f05c326b4a67",
        "cursor": {
          "ref": "1d9617f3-c1f8-4e2f-8e4d-b7093ae8cb10",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dd5e5c5d-06e0-48fe-b1ad-9f12987d0b63"
        },
        "item": {
          "id": "e8ca0b5e-4a79-4678-b0d5-f05c326b4a67",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ecddf24f-d0ec-4afc-b501-997827017217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8b5f3c-9540-4b61-b65c-86bf3030a95f",
        "cursor": {
          "ref": "7a20f4fb-2e8a-4113-905f-1c5b4571dbc2",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "50680e1c-dbbe-4518-b57e-d08755df6af1"
        },
        "item": {
          "id": "2f8b5f3c-9540-4b61-b65c-86bf3030a95f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4e86f52e-0b5c-439b-ab0a-38eb0a68b08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923b6319-a25e-4aa2-9869-ec664fb64e74",
        "cursor": {
          "ref": "c06badc5-bbf5-4f21-806a-40d441f5f3a5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0fc28946-4d07-4126-9f28-122b19cd7713"
        },
        "item": {
          "id": "923b6319-a25e-4aa2-9869-ec664fb64e74",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8abaa46c-4770-403c-9ddb-7fc810b047d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c708720a-cd5a-49db-9bbe-34503acb2f4c",
        "cursor": {
          "ref": "d26c1a94-8571-4c3a-b191-dbac4be86e03",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "03dda319-6b9e-4ce0-9433-ae829a301631"
        },
        "item": {
          "id": "c708720a-cd5a-49db-9bbe-34503acb2f4c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e015df29-5f9b-47b9-ad20-fc1c41b2822f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7f0530-ca00-4334-8547-46d9e2a8849e",
        "cursor": {
          "ref": "46975503-c2a2-4285-866d-7464fbc82ac1",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e4b1219e-e353-4bcf-b583-899506eef190"
        },
        "item": {
          "id": "8e7f0530-ca00-4334-8547-46d9e2a8849e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5da3bc5e-e9b5-460a-9f4a-c655cc26d29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624085fe-8484-4af6-937b-93fad1788553",
        "cursor": {
          "ref": "fbd161d0-7e74-4556-b550-7719927213e4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "52831f89-8a5b-405a-9260-177e7f166373"
        },
        "item": {
          "id": "624085fe-8484-4af6-937b-93fad1788553",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0f85ddb6-76f5-4884-8fc9-c6885a9f088a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68012a3-1518-4e58-ab3f-068d6f254496",
        "cursor": {
          "ref": "ecfe629d-ecdf-4f17-8081-eaa1b73c4c5e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "52496327-ca4e-4e93-8b62-1cd5c26b4393"
        },
        "item": {
          "id": "d68012a3-1518-4e58-ab3f-068d6f254496",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8512bc9a-ed46-4737-90d0-de4feb2a881c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccd24e5-4666-4bc9-8460-636be2111be7",
        "cursor": {
          "ref": "0d35e049-510a-4ee6-995d-0680f81f1256",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7c739e8f-426b-4e28-836f-85d3ff9db1c3"
        },
        "item": {
          "id": "bccd24e5-4666-4bc9-8460-636be2111be7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9e5433fa-47f9-4ccf-bc44-8ce1e32df708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2d6307-8368-4477-a6f6-89c38e0a61be",
        "cursor": {
          "ref": "42e4c67d-22b9-453b-97ff-42290b87efdf",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "87295fed-c7d0-4d04-98c3-e1e606154bce"
        },
        "item": {
          "id": "4a2d6307-8368-4477-a6f6-89c38e0a61be",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6327366b-12a3-4a84-bdc8-63463af968f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e34817-40f1-424e-8cfa-2d6cbc399c29",
        "cursor": {
          "ref": "91b066cb-b600-4110-bbe1-2b7bcd0388a1",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9bd130c0-e944-4be4-96aa-5b8018f3ef84"
        },
        "item": {
          "id": "24e34817-40f1-424e-8cfa-2d6cbc399c29",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "60174925-5f64-434a-abbf-2363ebd4a817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e712b8-c405-45cc-8983-ef107d60a8a9",
        "cursor": {
          "ref": "a8cf5904-02c1-4ab2-b600-f98cf7f4a8be",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "491ea132-18d8-4405-aa05-0fb99ad65bc1"
        },
        "item": {
          "id": "61e712b8-c405-45cc-8983-ef107d60a8a9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b72af456-9fb2-47e9-863b-a5d45f1aba62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b607a8-f4ed-4ba9-88b9-dd1e7677ee28",
        "cursor": {
          "ref": "b671eb16-4ec6-4aa8-8479-041b9b8370f2",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "92d22ac1-6a34-45ab-af21-c0b8440cea6f"
        },
        "item": {
          "id": "41b607a8-f4ed-4ba9-88b9-dd1e7677ee28",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "05cb7f73-8242-43c4-879a-21255052b5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400863d2-bb96-4627-b4f2-62ff04e0899c",
        "cursor": {
          "ref": "1563bde4-094f-4792-9fff-a2b7214f0eb8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c2f550da-483f-4c97-8fe0-cca2c2053357"
        },
        "item": {
          "id": "400863d2-bb96-4627-b4f2-62ff04e0899c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e7920fb3-87b4-4f60-b0e8-48f013f77d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6eb1977-631a-48fd-856b-791c10e7a81c",
        "cursor": {
          "ref": "6e47d611-edce-4527-8f91-42e84e426154",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "222c47aa-5f28-4acd-8902-362cdf149d30"
        },
        "item": {
          "id": "f6eb1977-631a-48fd-856b-791c10e7a81c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c421908c-8f6d-49bf-93b0-1b0907f7756e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2235d972-f971-405d-9639-b76c3db8c638",
        "cursor": {
          "ref": "5e007dff-797b-4745-b539-b09824fa5a2e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "824f012b-81ee-46a8-af98-d4112e9b2b45"
        },
        "item": {
          "id": "2235d972-f971-405d-9639-b76c3db8c638",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "de634e36-3bc5-4e37-9cdd-6a8b8d155904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6b5dd1-1f94-441e-9b37-ec02a9eb9c22",
        "cursor": {
          "ref": "c7eacd05-8cc1-4bbd-9dcb-90792e82f237",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b0918961-27d1-4a8c-9148-72c0f9705e60"
        },
        "item": {
          "id": "2e6b5dd1-1f94-441e-9b37-ec02a9eb9c22",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "adecc188-54af-4516-bf40-b7030f648ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f1b7e2-64ec-49ea-91d2-64b94a89794f",
        "cursor": {
          "ref": "2c015241-cb62-4541-92d8-02b5b2d33b30",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "292a7377-bf65-44eb-be23-ccde3250327d"
        },
        "item": {
          "id": "d7f1b7e2-64ec-49ea-91d2-64b94a89794f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f2964f71-4617-413a-90e6-7e75d03fae28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce649357-e753-4e21-a506-91b300b7f8d5",
        "cursor": {
          "ref": "352882b6-5191-4677-b0cd-4a489d505f00",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7b49814c-2d94-4d3e-9c10-8d553d0b89ec"
        },
        "item": {
          "id": "ce649357-e753-4e21-a506-91b300b7f8d5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2780ddb8-4c31-4b6b-b304-ac90e77668f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b75a55a-1586-441c-812c-a0c5d714d331",
        "cursor": {
          "ref": "b2abef1f-6296-4905-86c3-5693884c618b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "313e36ec-acf0-4414-9d29-51faa81c43c0"
        },
        "item": {
          "id": "6b75a55a-1586-441c-812c-a0c5d714d331",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b07c46b7-11fb-4487-a986-f8567137156c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4765a7b-b946-4c43-9eea-de3afe85167d",
        "cursor": {
          "ref": "3ea4507e-278c-4d58-9415-5fd50f62141f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c7703e86-36aa-4f9d-a36b-e96948497f00"
        },
        "item": {
          "id": "e4765a7b-b946-4c43-9eea-de3afe85167d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "82030fcc-21e3-4df4-88f4-b346e147f8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1792a8-7222-4504-a23e-60b8f7806c81",
        "cursor": {
          "ref": "dedfe9f3-8c38-4164-997f-eb5119b28a33",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6f3cf4bc-6e01-4b55-b2b1-bd4bc2cfe363"
        },
        "item": {
          "id": "aa1792a8-7222-4504-a23e-60b8f7806c81",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5b037add-0dcc-4019-8258-be2fa232a871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b4e589-b0a6-424d-a966-81680228323a",
        "cursor": {
          "ref": "b903789d-8f9b-4cf3-85d8-de312de4a950",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "25c67e2b-cd55-4e01-808f-6df39d45fd82"
        },
        "item": {
          "id": "88b4e589-b0a6-424d-a966-81680228323a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4752413d-4f62-47f9-83aa-1decc65c991f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70878a22-dc7a-4cc7-8c77-93b64da95d9b",
        "cursor": {
          "ref": "20f239ea-c27a-4bfb-85d1-37cbd003d455",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f4c7bd53-b189-4cf9-8907-fb49863ddf8c"
        },
        "item": {
          "id": "70878a22-dc7a-4cc7-8c77-93b64da95d9b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2132d030-4282-49bf-9148-11b7fb09dddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32097635-e813-4727-b6d7-82ac969c9790",
        "cursor": {
          "ref": "fa1164ef-1c5a-4521-97c7-fa64fa0d61b4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b0c8e610-c1cc-4a07-8cd5-6b4ef9a5ef1c"
        },
        "item": {
          "id": "32097635-e813-4727-b6d7-82ac969c9790",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ba64b9d5-1be8-43c6-9231-b2db4845d940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddc11bb-8f4e-4180-92c5-a1409d7b9fdb",
        "cursor": {
          "ref": "0c5a6240-9692-401b-b626-c54d05dc6d28",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "824fe4d5-8b50-47f2-82d1-d8433d1bf517"
        },
        "item": {
          "id": "8ddc11bb-8f4e-4180-92c5-a1409d7b9fdb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ede7de0c-e221-4f49-b358-f68b0103e9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d14722f-74f7-4ebd-9fff-e3f7873a64de",
        "cursor": {
          "ref": "4b9544e6-6e9a-4ff3-9bb3-04595d77f6d2",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "30c9565d-59c6-4c67-9196-6569289cadbc"
        },
        "item": {
          "id": "0d14722f-74f7-4ebd-9fff-e3f7873a64de",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8cb99edb-7608-4c38-88b9-b3a8b0c498f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cd9ba9-7a8c-4beb-80e7-52e1a61effb9",
        "cursor": {
          "ref": "d04393bc-587c-4845-b1af-43be63c048c9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "62be5554-6fa2-417e-9b7e-5932771cf8cd"
        },
        "item": {
          "id": "66cd9ba9-7a8c-4beb-80e7-52e1a61effb9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8b826fa4-afca-4763-a1c5-3e16be1c1a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872ebc70-c93a-43af-958a-dedb6604322a",
        "cursor": {
          "ref": "3efaa130-02fa-4559-8462-1dc1c9d6482f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "39a11ed1-fa7e-4d15-ac84-67ca24a7c378"
        },
        "item": {
          "id": "872ebc70-c93a-43af-958a-dedb6604322a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cdad4931-4590-4e62-9e03-cc996427103f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbd59ec-3247-4c93-9539-236b5a0243fd",
        "cursor": {
          "ref": "e1b7bb7e-e2c3-4c76-8bf8-a2be57da70f8",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c528839a-896c-4458-b68b-0bc6a0c0171e"
        },
        "item": {
          "id": "abbd59ec-3247-4c93-9539-236b5a0243fd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4c4f9db1-9190-46ca-8bc7-7a4c885b3442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2087d402-9e6b-46ec-9355-ae4664b2da38",
        "cursor": {
          "ref": "ffe38cb9-295a-4081-b12e-52a1723382ec",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c311e106-8b81-467c-8eff-fed51c9a3d0b"
        },
        "item": {
          "id": "2087d402-9e6b-46ec-9355-ae4664b2da38",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4962265a-ab08-4809-ac7a-fcf9c1ab0850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb766e1-46d8-41a1-9aba-9d5c73d4f97e",
        "cursor": {
          "ref": "70cd5a22-1677-4200-8d55-75ca265f7d47",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f50ddf9a-1db3-47b2-8c74-b151d3ee2de1"
        },
        "item": {
          "id": "6eb766e1-46d8-41a1-9aba-9d5c73d4f97e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d7d5493f-30cb-4e4d-b9ac-2ce4b1301aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c845027b-4359-496b-9be1-196c7215914d",
        "cursor": {
          "ref": "3356fed8-03f4-49d3-98e4-859bdeaf1229",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "45229e26-02f2-4a84-a0e8-d504bda4d7ef"
        },
        "item": {
          "id": "c845027b-4359-496b-9be1-196c7215914d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2acf1622-12fb-4353-bcd9-4344564afc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9aa716-0e84-4726-a1c3-77da93ec80c2",
        "cursor": {
          "ref": "e504aaa0-ad8d-4da8-a127-08bb4f27c76f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ac56333c-438b-45d4-aee6-9217788d8390"
        },
        "item": {
          "id": "5e9aa716-0e84-4726-a1c3-77da93ec80c2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c956dc35-9acd-4873-833a-fa9af35d484c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4230b7e7-d356-4a2a-a4a9-e843e0fe824c",
        "cursor": {
          "ref": "57552407-4961-40ef-8acb-7b0f1639ab80",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cbb178c6-ecf6-4327-8223-a28b2e9b24ca"
        },
        "item": {
          "id": "4230b7e7-d356-4a2a-a4a9-e843e0fe824c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "050fb3a9-b6dd-4945-8136-4ce80dffa93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfbebc6-b488-40ee-8e81-dbb224283e5f",
        "cursor": {
          "ref": "c5fe7f91-dc10-4fac-b70f-12ab080606ec",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b64677f7-03f4-4d57-a12e-a2279d2ef9e1"
        },
        "item": {
          "id": "6cfbebc6-b488-40ee-8e81-dbb224283e5f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5aebf36e-0f7d-4fce-bd23-b7c021d12d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4e6db4-d2b3-4cbf-94b0-924b086c88b6",
        "cursor": {
          "ref": "0c5fa4db-69a4-471f-9d7d-c176db95bf71",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3b79af3b-1524-4b1a-85cf-eb76c2e0cf9a"
        },
        "item": {
          "id": "ce4e6db4-d2b3-4cbf-94b0-924b086c88b6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c3a58a29-caf6-4018-b83a-2638b3a37361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5213ec-4cc5-47a9-9bd5-23939b3eaf4b",
        "cursor": {
          "ref": "5e6ef7b0-4e5f-46ea-8245-a7cdeb6c163a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a34c1926-feef-4bbd-a5a9-6a0920347b45"
        },
        "item": {
          "id": "5f5213ec-4cc5-47a9-9bd5-23939b3eaf4b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "12ad4875-ae67-4eaa-9e8a-51cb65c65778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae36fa72-4030-4084-9ec9-56678fc5f219",
        "cursor": {
          "ref": "a4ab3c20-630a-46af-a3d6-d4e8e140224e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "447844b0-4545-4e77-a66e-2981babf4839"
        },
        "item": {
          "id": "ae36fa72-4030-4084-9ec9-56678fc5f219",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2fcd078b-6e5e-4e97-b3df-d29f13f8d84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e680f7-f288-429b-8c64-3dc99a89e04b",
        "cursor": {
          "ref": "7c986d42-5808-4eda-83fd-6b1808a4e0ed",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d3a5914f-77ec-4292-baad-e33803b073c8"
        },
        "item": {
          "id": "18e680f7-f288-429b-8c64-3dc99a89e04b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8a2d8692-4657-4e69-8a1f-a090db4115e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac96929f-a880-42a5-a5fc-fe5ed74b2862",
        "cursor": {
          "ref": "ba7f24bf-9ad0-478e-8679-3a21fdb00e3c",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e9f7b690-e90b-45c6-b476-2ce4f67c7188"
        },
        "item": {
          "id": "ac96929f-a880-42a5-a5fc-fe5ed74b2862",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "70538d14-05ae-4bd8-8076-022e4dc88303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e9c55c-4c4c-4736-abe6-955021fd2274",
        "cursor": {
          "ref": "b12e4699-dcb0-4dcf-b2b8-a6d8d50184ab",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d10a0d3e-3549-475f-97df-c416b13901c6"
        },
        "item": {
          "id": "f1e9c55c-4c4c-4736-abe6-955021fd2274",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4f9d022f-da63-4650-8614-9d1fbac85d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ecb78b-ad9c-4913-abe5-31e11cd790a3",
        "cursor": {
          "ref": "245a4f3b-2cbe-479e-98f3-10e3751e07dd",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5a7c6da3-d7bd-4d8d-8577-e47c3cf5226b"
        },
        "item": {
          "id": "e5ecb78b-ad9c-4913-abe5-31e11cd790a3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d0d0d3e9-d0ba-49fb-8b27-39688b2f110c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcf8774-2617-4206-b275-75daea5c86ef",
        "cursor": {
          "ref": "1017018e-92f8-41ac-8022-1d59f0a4928d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2e284399-bc4f-404d-a42b-92b6b06aed03"
        },
        "item": {
          "id": "2dcf8774-2617-4206-b275-75daea5c86ef",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a1ebe457-98cf-4335-8ecc-535cc3aab550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134e8df4-ab77-4d67-bec7-dda50e2753a5",
        "cursor": {
          "ref": "8a012d19-70ba-44a6-a3fe-243b5f7cd43d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3bdb76a1-cf2e-4b4d-92d2-fac964bb9a0e"
        },
        "item": {
          "id": "134e8df4-ab77-4d67-bec7-dda50e2753a5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "85cee7ae-3ca0-4d32-8db7-74c96975b281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0747dc47-b0b5-4557-80ce-06d08cb336e9",
        "cursor": {
          "ref": "7e5372e7-2a1d-4f88-8a92-ddb933ee0b71",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0523b896-891c-43bc-afd6-f8a8e371827d"
        },
        "item": {
          "id": "0747dc47-b0b5-4557-80ce-06d08cb336e9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "45a2e0e3-0dbc-4f1f-befe-741fdc37ce47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89483e0-7e55-4bb8-95df-b4521e91e095",
        "cursor": {
          "ref": "3c8efcf3-bf15-42c6-bd91-ca17d53e98ea",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "94ab83e6-325f-4ea9-92c5-49aac44d4393"
        },
        "item": {
          "id": "b89483e0-7e55-4bb8-95df-b4521e91e095",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8bb908cd-c1e4-40fe-92eb-cebba9bba9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ad7a0c-d106-47fc-bcb3-4a99a005db1e",
        "cursor": {
          "ref": "13d6b928-2773-4271-a9f2-f478f1a46ad3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d9f2d5b6-3f57-48e6-a505-21a9879dd6a2"
        },
        "item": {
          "id": "95ad7a0c-d106-47fc-bcb3-4a99a005db1e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "431782c1-549f-4bf0-b724-af77d069d5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f78f200-b25e-45ca-bd0f-a138c436e696",
        "cursor": {
          "ref": "93235c69-3842-41ee-907f-bf27b0301fde",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "585844af-efdc-49c3-bc76-d44c7648537e"
        },
        "item": {
          "id": "6f78f200-b25e-45ca-bd0f-a138c436e696",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "26be82d2-34de-4aee-a24e-c94d779da51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8eaef45-8972-4f99-9a22-745620e444c1",
        "cursor": {
          "ref": "9dd6deec-0d9f-4925-bc3b-d21be6072bf1",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e2cb3483-1089-4ef5-9d97-5fed3a47bd22"
        },
        "item": {
          "id": "c8eaef45-8972-4f99-9a22-745620e444c1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c02cb13f-9055-4e89-a55e-4aef340a10f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2e0f00-f3f1-4de2-8384-c476391ab96f",
        "cursor": {
          "ref": "6f652abd-87e2-4522-8542-2946fd22c93b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "222fcb77-2e54-4380-869b-b85bc1834e37"
        },
        "item": {
          "id": "4d2e0f00-f3f1-4de2-8384-c476391ab96f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "632779bf-80df-4365-b952-5588e298f8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0e5a5c-7505-459e-a298-938b01344b03",
        "cursor": {
          "ref": "22c76f4f-8907-4e8a-a642-92a3e1e3bcc5",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "87d0654b-d6c7-4955-a74f-5262eb496078"
        },
        "item": {
          "id": "be0e5a5c-7505-459e-a298-938b01344b03",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3bf7bb49-6ee5-4d24-9cb4-b8eb56da6543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38ec220-7ecc-41d2-ab92-64d6e35ee789",
        "cursor": {
          "ref": "9bb71887-1cdd-42e8-80ec-e64163325e69",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0b3c0b71-ebdc-40a7-b6ca-a988fcd15be1"
        },
        "item": {
          "id": "b38ec220-7ecc-41d2-ab92-64d6e35ee789",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ac0dc545-b557-420a-8322-a04ed4826b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992ff109-3f72-44f6-8a02-18e714a81ee6",
        "cursor": {
          "ref": "f2c4ff58-4dd4-4a41-9aa2-200295cf5959",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "98642bb4-76e6-4c82-a15f-5f85a8a01d21"
        },
        "item": {
          "id": "992ff109-3f72-44f6-8a02-18e714a81ee6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "60fe25c3-6a42-4255-a61c-1e51a8a5acd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0ac36b-96bc-49af-b07b-86402f9ca2a8",
        "cursor": {
          "ref": "f797128b-4b72-4c30-a816-5cda15bbfc6a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f979f56b-41a2-4a88-b876-2129290b3d85"
        },
        "item": {
          "id": "1e0ac36b-96bc-49af-b07b-86402f9ca2a8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3f9259ba-7915-41b7-acfe-09712cfd6d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b20d95-1847-42db-96b7-8db8d4e7daba",
        "cursor": {
          "ref": "54f28191-a6cd-476d-9f91-ef26df28c68d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f9c354e8-693a-4e68-a04b-d4d988ba6a31"
        },
        "item": {
          "id": "a6b20d95-1847-42db-96b7-8db8d4e7daba",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bf1a3689-fd69-4a27-ab96-4e530b76eb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c32f5b4-52ad-4b9c-bb98-0e63154a51c1",
        "cursor": {
          "ref": "3ae26bf7-a60a-4b95-96bc-81246dec49c4",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d460e341-86b7-47b4-aaae-90b7542f245e"
        },
        "item": {
          "id": "5c32f5b4-52ad-4b9c-bb98-0e63154a51c1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "41520c58-1672-47ab-8859-6e5882ee0b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec5d7d2-8d65-4942-ad5c-932c77d6a7ae",
        "cursor": {
          "ref": "fe117855-b042-4dc3-bfb8-77f13352a082",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1ed658c5-ee28-4624-a403-07b32c3d3d88"
        },
        "item": {
          "id": "fec5d7d2-8d65-4942-ad5c-932c77d6a7ae",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "86be2f93-0830-4238-a26b-c163636869a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de2666b-a751-4365-adcc-db2eca937183",
        "cursor": {
          "ref": "4ab023f5-f1ac-4620-ac71-e4292ef58325",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b18877be-1324-4513-a0a4-b5fbbec26dce"
        },
        "item": {
          "id": "2de2666b-a751-4365-adcc-db2eca937183",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c98b2a65-fa53-469e-8f95-68fdafd719d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf8386d-fba9-455e-8c9e-d7e4817df5da",
        "cursor": {
          "ref": "d4a76b0e-8ca6-4fa5-9297-214a244baf81",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "dfa83f59-0fca-45a0-899c-74588038f15f"
        },
        "item": {
          "id": "1bf8386d-fba9-455e-8c9e-d7e4817df5da",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "713e2c94-a43d-4769-885e-5cf3f24815bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e794de-9dfe-40e5-8497-5e70825beabc",
        "cursor": {
          "ref": "a9252805-d0e0-4edb-b8c5-b91001117d6c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f78a5784-5ef9-4ce6-92b9-3c6186ce114a"
        },
        "item": {
          "id": "f6e794de-9dfe-40e5-8497-5e70825beabc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6a21cfe2-56cd-4375-aef9-d8fbc82cbc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be43ba73-3e3a-4ad3-bedf-13c09f56bd10",
        "cursor": {
          "ref": "185f6b3e-a1fd-4b3f-81fc-e6306abdfb2b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "97663206-e2c4-4fb2-ab85-8175ec2f4d01"
        },
        "item": {
          "id": "be43ba73-3e3a-4ad3-bedf-13c09f56bd10",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8b645fb1-35db-435b-bd4b-d97b14ea4c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adfdff0-a47e-4751-b0e6-64fac4c1cd2e",
        "cursor": {
          "ref": "8c1d2b4c-9163-4a13-a25e-6028ad0330c8",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f1244633-835f-494a-b4ec-3300fee30f79"
        },
        "item": {
          "id": "7adfdff0-a47e-4751-b0e6-64fac4c1cd2e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8c3c4463-96e8-4e37-b8e0-a011674ce953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9b6e44-c2d4-44db-8cb0-e97da5c46b73",
        "cursor": {
          "ref": "28a006d4-4269-43c6-ad9e-4a5c906587d2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b53646fb-2e93-4f08-b616-1686be06280b"
        },
        "item": {
          "id": "8c9b6e44-c2d4-44db-8cb0-e97da5c46b73",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "896b971e-8c09-4388-b971-1665e9f93791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a3c8ce-d6b8-4cbe-9557-29ba2eb1d5d5",
        "cursor": {
          "ref": "220156d8-068b-4057-a8c7-7f0741852157",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8a303267-e4aa-4672-9df6-4d1488f40b9b"
        },
        "item": {
          "id": "93a3c8ce-d6b8-4cbe-9557-29ba2eb1d5d5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9dd48fb9-4c02-4e70-894f-657f599016d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62712913-e40d-4b6f-9c70-1f64cde2e81f",
        "cursor": {
          "ref": "66f9264a-c9a7-4856-9761-aa2bf0b16e15",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "57848f7b-70db-493b-b04f-61c344faa363"
        },
        "item": {
          "id": "62712913-e40d-4b6f-9c70-1f64cde2e81f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e2f960b5-2de9-4e03-81b3-d4536d3136d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c40a015-b9b5-48b0-b2c9-8df0f19713d0",
        "cursor": {
          "ref": "7391e83a-868f-49b1-b37a-afbffec8437f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0471b625-eef6-47d4-81b4-ec5c3edfe32d"
        },
        "item": {
          "id": "9c40a015-b9b5-48b0-b2c9-8df0f19713d0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6a331616-0005-420a-a9cd-9511a487acb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651c0535-f6b6-4a9c-8cbb-c2b1e4beb1f9",
        "cursor": {
          "ref": "84f7b2be-6016-4a8b-a05e-de025d11eb18",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f4f614a4-2587-4e18-9ec7-01a1574cfcca"
        },
        "item": {
          "id": "651c0535-f6b6-4a9c-8cbb-c2b1e4beb1f9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f9271309-d6de-403b-bf69-71f047e31130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d221c371-0d9f-4922-bd4b-712be4010d8a",
        "cursor": {
          "ref": "dbd3d6b5-f1c1-4275-9757-447a11c9c7b6",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fc18b2ef-7e4d-470a-8a75-08ef31cf8c5e"
        },
        "item": {
          "id": "d221c371-0d9f-4922-bd4b-712be4010d8a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "91ee7cfe-97ac-41e3-b2d5-30c497dd1e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a498ea2a-a683-49e9-80dc-5f585760fb06",
        "cursor": {
          "ref": "c5256189-c047-4603-b414-c72704e4fc0d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f322efa7-6f1c-4774-a0ea-4d66d29536d5"
        },
        "item": {
          "id": "a498ea2a-a683-49e9-80dc-5f585760fb06",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "873c4e9b-b1b8-49e0-8765-02d106f547f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec09513-78ed-49bd-a552-48b000d7fbae",
        "cursor": {
          "ref": "998609fe-9276-431d-aeb7-acc43534ee5e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b4b3d575-cd31-4ae4-b320-cc380d6d570a"
        },
        "item": {
          "id": "cec09513-78ed-49bd-a552-48b000d7fbae",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e1354b6f-cfd2-42f3-884c-d62b8b3bd066",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e98b46-9dd0-4e04-9c3e-0f7b5d10b4da",
        "cursor": {
          "ref": "96a0c793-2168-4c45-964a-31679c17ac36",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c6ba61e4-e499-40ba-bbf9-c2b0ee8f6298"
        },
        "item": {
          "id": "a7e98b46-9dd0-4e04-9c3e-0f7b5d10b4da",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b01aacbd-d284-4123-973c-07bb1917dee9",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe81092-6794-4ac9-9d58-c29b68104863",
        "cursor": {
          "ref": "82192e75-e5c1-4072-b9f3-8eeb8ecad95b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c7c11cdb-74af-4d3d-98e6-30252e4ff236"
        },
        "item": {
          "id": "6fe81092-6794-4ac9-9d58-c29b68104863",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c4a3a637-6109-41f9-9cf2-a05e585685ba",
          "status": "OK",
          "code": 200,
          "responseTime": 2559,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f58a378-22ae-44c1-afbf-265959885ee4",
        "cursor": {
          "ref": "4ce83f95-97f1-43a1-8a47-8246ddeee372",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dedc8d34-0fa2-40e8-948e-64f0d8d17e3a"
        },
        "item": {
          "id": "7f58a378-22ae-44c1-afbf-265959885ee4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "91469466-74fb-443a-bef3-4d634ce4681a",
          "status": "OK",
          "code": 200,
          "responseTime": 3174,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e691988-5046-479b-a2c1-50e8ad092bea",
        "cursor": {
          "ref": "6b471f6d-edbb-4b87-b10f-c7a30dd4e06d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a463b22b-2f1a-41ab-90b4-ce2646eb632b"
        },
        "item": {
          "id": "7e691988-5046-479b-a2c1-50e8ad092bea",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4577bc28-f664-4cef-9aac-3be35835d94f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e691988-5046-479b-a2c1-50e8ad092bea",
        "cursor": {
          "ref": "6b471f6d-edbb-4b87-b10f-c7a30dd4e06d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a463b22b-2f1a-41ab-90b4-ce2646eb632b"
        },
        "item": {
          "id": "7e691988-5046-479b-a2c1-50e8ad092bea",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4577bc28-f664-4cef-9aac-3be35835d94f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244ec16d-0608-435a-a95c-f1c27185d320",
        "cursor": {
          "ref": "bfcc5f4f-3173-4dbc-bae1-822a777d6dc1",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "19fd4f8a-e2b3-4fcb-8bf3-3e952bb32776"
        },
        "item": {
          "id": "244ec16d-0608-435a-a95c-f1c27185d320",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "13412c4a-4e1c-4dd6-b5a4-ce70e234a73a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6ecdc5-fa4b-4f09-b6c6-a05fe4f7228a",
        "cursor": {
          "ref": "ae6270cf-7137-46db-9540-cfda83b8e885",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "37757d86-ac8d-447c-8ab6-678491548559"
        },
        "item": {
          "id": "fa6ecdc5-fa4b-4f09-b6c6-a05fe4f7228a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ca4073d6-9c5d-4a3e-b856-fd74270a8ede",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}