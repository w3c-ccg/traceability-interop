{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0c2ed791-757a-4528-b66a-ff616977645f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e4ecd94c-5e18-44c8-aa3c-f499b4caf7b6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "045580a6-8f4e-4c86-8f3a-14b3a2959a73",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ff168f62-2ef3-4c79-826d-fc033c910af9"
                }
              }
            ]
          },
          {
            "id": "5b3317b6-8879-4d44-9ee2-e6a5101bb103",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14a5f59c-159f-414c-b67a-7b434be5b53d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9f66b3ef-329f-4615-87ca-80f1aa5903f7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "976022de-5d07-4931-859b-e9968142f835",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c1938a53-8b72-450d-a00c-f920b3d0dc33",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c9619924-f119-4f9c-82a1-64a95168e7e7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d20d862-40cb-4d37-8aa9-e397a6989a35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "205ba7c5-21b5-40fd-b0ca-f456868fd45a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05d94e24-f993-4813-b8f8-a0451c1edb06",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39682606-105d-407d-b32f-74e808486cd8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "403d797e-2d92-4295-8732-3cbf183db707",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ebc2f78f-de45-4990-bec0-2d359f4930d7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59c4c24d-1b9f-4ffc-acd7-1356bcda72aa",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b577e941-b976-4978-b7a9-6c1820db7ff1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09d75c3b-dfd3-452b-a48f-1419cea98003",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e2afae0-b78a-4919-aeb5-c87f40163313"
            }
          }
        ]
      },
      {
        "id": "69352747-c662-44b1-8a31-d8ae4c65fbe5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "98833bac-67bc-4b08-abfc-8acc531716a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8acc885a-4e4d-43f8-933c-131b0d8b1726",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dcff9140-85e9-49a9-984b-7556c1c4570f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4831fc7c-c192-45e5-9d9a-37afa39b2ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1d959f0-0fed-46a7-a42c-06ff61db0dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ffd1ae-09a9-4c1f-a879-7013548655eb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a189997-2b33-4890-ab73-2182d950cd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fec9d360-e4f8-45c3-b4f1-be7f447b7951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90559191-19f4-47e7-b97b-ad5d9fd0bb73",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c02ae03-7503-4874-be42-612a5b8fcf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f98d20d5-5742-4f1f-9797-ffcd0bc3df2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a877afe-55c3-4b8b-98d9-6a8e9c6a5acd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12d403b2-ffcd-4efc-b8bb-ca99721987f2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df02fc7b-12d7-45f9-ba1f-0c9ca47f9512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6efe386-0694-4b31-8fd9-68ce1ae3816b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7485246-214c-4dd5-9358-c7f86ecc6798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360bee9c-41ac-4f3f-8994-43848222008c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2137a852-f502-4752-b825-3460799e80d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "03ef4214-8e56-463b-abef-dc42715716ac",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5161d08-3230-47fd-8648-1488b7621ab6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "31d8c711-182b-43ca-892c-71edf6b71221"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c628e94d-a102-4512-90b3-fa0f0304304d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b25812c6-c80e-4e30-91ae-6006a94ade81"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "457252d3-95f6-430a-b0fb-17cd85f21e31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "731c0ffa-9c53-46a5-8f3d-1ee23cf39579"
            }
          }
        ]
      },
      {
        "id": "bafe9767-7d9f-4705-8448-0c46e1dcb8af",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "72fdc286-eaca-47f1-9b59-6974b95b2b88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ab65c6c-77c3-4ddd-9942-cddb4cd85eb8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8af49c31-f93c-46c3-86a0-1d696a72c8ac",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0526da35-5ff6-473a-a7da-2b29184ff912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a7e5d8-11c7-46fe-b4dd-c0aadbe84e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c48dc5-6cf9-4d14-8edf-52a5c67695d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "137d3cbb-2745-47f2-9d8c-b6b79c8f75e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f67c752-2dd2-436b-804a-99713f07c48c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07099536-b021-4159-a28a-59da9107318a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbab6cb-d61e-4309-a3e6-06de3ee23112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c44511-f489-44cf-bb5d-5480a1a9f1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5e0bf5e-e854-4693-b61e-59346fa0261f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425cd6b3-2368-4755-8502-50fb2f6db4ed",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93494938-694b-49c3-a355-779303d25a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b964c3-961e-4010-9ba3-498c10e519ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cf1e83-0491-4344-9f08-bdcc124a40a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edcf6ae6-9140-4aba-9421-e9ab49f51c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb61f0de-28ac-49ab-a459-b585faee3db0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d761df2d-a8cc-47a9-bb3c-fa8f17e59c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e97b21-8ff3-4c44-ad3c-613166b49925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3213d1d-454b-45d8-99a1-b3f7b72add0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6c83c6a-af7a-4078-b09b-8e44401fbe41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2965247-576d-4266-ae08-784147313199",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e396540-9b9b-4766-a2bf-68941041fe82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ddbe02-12ad-411c-996c-86783937301c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418106f5-ac82-4ecc-baeb-944c48e365cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "700bc4a9-7112-4f85-8da1-f6a44037ed5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9998abf6-3ba2-42f2-bff6-fdc87b859f76",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd87bcc-e4bd-4f2a-955e-a7bb7799d2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caee4f0d-01db-4dc0-8ef9-fafc3603e6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e88f8be-3715-4b70-abfe-03330619a112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2d97d66-8f19-4c78-b56d-eeb2afefdebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbffa2e-d10d-4fe0-9bb0-369956bbe41c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08000fbf-eaab-4585-a5b9-837a8e88d310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8d94ff-1731-4cea-a864-7dd5642ac244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bb95b5-ba0b-4cb3-ba72-7c64ce65ee10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41e0307d-9ace-41bb-8f01-c7958c73b743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f7628d-b0cd-46f9-bf3f-c2f01907744a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344f634d-3657-40c3-9c0b-753f318bc17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b6826e-ed75-4ff8-9cc8-870999923f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3a872b-a6e8-40d2-9f75-e77e01c9a6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5902fb5e-9eeb-47e4-8e72-e468d3ae35ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295fef89-d2f0-40de-bd53-aff8f56f761e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56579b7c-a8db-488f-a7ff-823bcf5ee330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc215c43-d5b3-4aeb-b5cd-00c94f7e80a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b0f713-96ee-4181-957d-ea064d9484ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01065e6c-a70d-465b-99f0-918c470ba73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fd6ed8-3593-45f5-ac10-fde2c283cb16",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f65ef16-5ed4-4916-8ce1-c94360a1b934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a24831-091a-4aae-bb0b-4ca726049113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fbf806-3cd0-41df-9339-0114cca44a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9ee14c5-8598-48df-9812-c773f2749a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1016e1e-3523-4a9a-bb2e-a085dda74200",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb129c28-908a-4b8a-8406-d61146d60a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7c382d-f949-48fc-9de4-21ed72a4229d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bb2605-1cda-4f2e-9c54-ce83b8bb94ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7060e929-ba51-4a81-b21a-78ab45533bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd848a01-32da-4ebc-b716-7d59c21585d5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30419649-4484-43f6-be4d-c3de14e43b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45639b3-5814-4806-8b59-8602b17a9fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb416333-a5ba-4cef-97d4-20326f563ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8db23322-7dcc-4503-aa20-24f0d279f63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65258eb7-930d-407c-9f4d-1f79962fdb26",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbeebeb-8134-4d7e-806b-66b5cfe8e549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da2215a-5a6b-4843-b4cb-7b75fba1ae1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c502f8c-d276-42a4-8b03-84f974eb25d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a32b5bd1-6c93-44a9-9667-f137af426621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249474fd-bce5-4831-8e34-b68a0ef860e2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af52458c-b606-4efb-bb62-5643d4adfbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba870fc9-e7e9-4d5d-ac78-72e8e5b94588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec448117-ff7a-45a1-bc10-3034b65fc596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d127eafe-9a3d-4059-8067-953c4df040e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3925f164-6572-4405-b706-78982c96ec7d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fab2e4-0835-496e-8133-0cf4426893e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d3b450-f2e9-4ebf-bd54-8dd53e47971f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9193508b-66b2-49a9-a5c6-c5d9c8ba5a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "256fcdaf-c8b3-4db5-bfd5-a0cc4c34594c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804f4d7d-8696-4164-b664-45875988c285",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8848fc0a-a8c9-47d0-9ef3-54764deb2644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc43233c-6378-4418-bacd-daa9b3cb0618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32045881-9e9d-45e9-9f0e-2d8a35c594b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dc4c16c-e969-4ab4-af69-02dc8147d08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b3ad59-beef-4282-ac6e-923fd086b6b8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95bd595-5d76-4b12-9258-ad60e21b538d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60f808c-9fce-4543-bf9b-ee13271ea3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa5bbe4-eedb-4c2d-9a69-ce76775e4734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b86078df-e86c-42df-b6cd-b9c14498829e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b8f00c-3c2b-4fa5-8c7b-83f166b1f3c3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c46c5dc-eaa9-48ef-b6bd-08546fad55c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e185daeb-830c-4ef7-8f67-6c800d1ca61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e59f1ed-4e9f-4142-aba7-0c3721d32dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c67e4086-fed0-4d3f-93d1-930be6c7133d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e286422-24a6-4c7a-9ec4-0a49999f70fc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83fcc69-b78e-4bb9-b1fd-a9b076d7fa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb6f494-c375-4392-9902-0da69bc86f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb2513e-4571-424c-804b-224de0f32ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37cddde7-4635-4008-b5ec-6656d2b4f54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0629e748-0ce0-4ca2-aed0-6832cf4251c9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86109330-3e28-4524-bdaf-aa62faf5115a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5ee4d6-5103-4c07-a397-0cd5f7f49d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fe97d2-baf9-466a-8506-cbc915bcc7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa830fb-d4b3-4b05-9815-a8e35645d34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d587538d-3421-4480-abbc-a0d06b721c57",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45369c33-b199-42f4-871c-18d1a3646df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db64e6d5-8110-49bc-bfbf-d470b4d443a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe5c93c-cb64-4b47-9c74-3286300ec0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1460b14d-dc71-4581-a31d-3fcde48a635e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888ab531-2cb2-4cdf-beb1-42ef2d0933e5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7929b2-e771-4b1f-81d7-8f409bc6beee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24631df2-b21a-41bd-8991-cc27455d18f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e188761-97b8-46af-9291-adb25fd52f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9afa4d34-b09f-4a05-83d4-9e5a35478bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ec2b30-ab5d-4043-a5f4-16eba3461b4d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374e7c85-43db-4632-8a46-f6b1fc955fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f595ab0-c4d0-4139-ae34-3d3e39372c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5247c5ca-9ad6-484e-af5d-91e0271beb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "696a1267-e107-4f16-a3e9-e05cedf5d9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b5c176-6fb4-4c1d-a74e-539627b0253f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e26ea8-eb9e-4fc7-a92e-3f3b6db482e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a262f50-29d1-435f-8785-8cb9bd4e0080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931c8cc6-4fd5-46ae-baa1-c447236b13b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0da89d-79a8-403d-8728-74914c4c2b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bd2226-407f-423d-a9c1-e021a36b08ef",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d7a109-c22e-4d1a-907e-f881177bc8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c919dd0f-7407-4b3f-810e-d03a46a4eb7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388e4bbe-2c9c-4c22-bdda-be5be8ed31aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50eb870-dd3d-45dd-91fd-992eb09562dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510253fa-61c0-446c-87fc-4e57b7f0e42e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6514641f-a997-4982-8290-2436966ead63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a680ac-42a5-4562-a691-1ea02217cf11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203b15c1-0419-4901-a24e-9a3807a9fc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5570f19-cc82-4199-a488-b995fbc52f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5803f44d-0085-44cd-b258-89ba40b023b9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f9761d-4acd-4f0d-b2b8-7bf44b43a854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c9b2f0-3fa4-42be-91e0-2002a86bebda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d45319-9759-42a0-9deb-4d0179ce3a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "691552a9-3d34-4e14-a0e0-1a791c5e97e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848cac64-23ba-4a1f-a3da-5626a516f902",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9ef0c8-5d8d-42b2-89a0-18e024b9d274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae634403-4a33-47e6-81c5-586b4d7a4408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62283ed7-808e-48fd-b47a-f7094f376cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c744ec-25a1-422c-b445-2d9ddedc7e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fd1718-f436-4901-a76e-971b3b0f39c0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4952d43b-1bce-4c48-8539-faad19e5d57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a4efab-bd55-4042-87c1-9b43ce822431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb629d2-fd0e-4b53-b9e2-3f79a5fff9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f911c664-ea90-49f7-ac1e-02fdf672da0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a4b133-1b5f-4abf-be91-827eb77fc480",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b8b0fa-690a-4364-8b59-fcaa5d2072ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac0f05f-8e49-4767-aa33-d5efa87a78ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a43ed46-b779-4a5e-9f57-7c83180a1987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6786ff6b-dd5f-4341-8bbf-0b581f305e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d625098-5007-4b90-b369-48b11eefe9a3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c1b9e2-c696-4f22-9a71-8b6780a58995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67d428e-33dc-401c-ba01-cd3aa9eaf3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f813aa-8aff-46c0-a829-c8c5b0d5601b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "efc612ee-462a-41d9-863b-7029901a534b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32782f2c-041e-4265-92fe-ae551f8a8c3c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492c9ee3-db82-4ed7-a33e-4f145a0090dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3331a5-f684-40b7-b86c-c68cfcd0c2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a6f60a-4f7b-43b6-81d4-d89e20c79320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efdae828-03ca-4a01-9718-c4cd160d8be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8228dba4-877c-4045-94db-522a7636abb9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e95ba02-238e-42ef-b2b5-446c2844af64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19512cc2-fa3c-405f-870d-b3c4377d5e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e2b133-5378-43f4-8dff-aab71dec5938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f41f45-2a7d-4dd5-a4d0-0bc92008bcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88118862-504f-44ef-ae01-ec524b47a416",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368d5cc4-5f41-43cc-840a-579486459026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c79d9c5-096c-4608-9e87-fe27ca83ee24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7ab91a-df50-4b77-b7ef-5792e0604c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb0b118-5db7-437f-ba93-3e7f42e8afb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0f6cb7-b70b-4b27-90a5-01e0d3a72993",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e952dbe6-7fe9-4f21-a1ec-1d4bcef9052d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c02e157-3157-4960-814a-c9b87166d6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afaa1cfd-8d98-4324-8e62-badc06d1b193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "efd9e7c6-0dad-48bc-a14b-12953f980f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84fd268-bb48-4b0a-9029-7e4f6c99585e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69a0b69-ad4f-4908-a25f-917feb6e01f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c55b22c5-a716-4c55-b726-1294f9fe4133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4714070c-d4f1-498e-be67-760088b552cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1215e64b-3799-44fb-96e1-5bb8cba03986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e687a46-a2d0-4d3b-8574-cfd8162d0b85",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8632c588-5157-4447-88b6-3fce4dee460f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9020f057-c856-4b7e-b0ac-b644e8933b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230e3dc6-e053-4342-bede-b2482d3a5efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec14aac5-0c82-4cca-94ba-033ee6b80aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722ca0a3-82d2-4910-94d4-b37258ef988a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3c407e-3aed-47ea-ac07-52e12195ceeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c616c2-ab84-485d-b188-f07caebbe92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04123a64-473c-4745-b033-c61d5074074c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c206a22-88a4-4035-a5bc-fec885171e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049b6311-2967-4e97-a999-e406e4dc827a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c7e3c6-6c54-4596-9ddd-b9e5f05f6acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39f4b99-cbea-41a1-b211-3bac18129c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ab99b0-d53b-4ea3-80bd-5da1e49ffea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a2cf99-3761-483c-94ef-cca6438c73df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca28d53-3b3e-46c2-97a0-f0798e0e867a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384f93e1-e357-4905-8f25-c4e57b1e0228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c593f0-8eca-4265-86a4-b5a42e3d12a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa0b380-6374-4961-8c28-2f1dd55c9416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4aa1f04-1441-48fd-bbb7-dd14db2b9ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb93b525-7cd9-4fa3-bceb-5d25c849f481",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689ddd85-0a12-4812-846b-d7dd38a96c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a647dc-63fe-4fec-96ef-60a61341ebbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358b3f0c-f91a-4760-b326-7461e84df0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "334399dc-8c39-41a4-9036-02919686ab40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb376a2-7b75-464d-b429-ff9c749ade17",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f200c512-c336-49bd-b345-8f9585368f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a0e927-820e-4c77-b651-2ad4ad484794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47adf210-c3aa-44dc-9301-258f4217f35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "834e52eb-4536-45ac-97da-4c29f0c238e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69be6538-d2de-427a-b939-fe7debc3bcdf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec34927-c61b-4adb-9ff2-75e84c9d387e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc78db50-a488-4b5c-985d-b86e147d0da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7b10b9-59a2-4c1f-a4ac-8cd40fc52035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6964b652-1d56-45e8-a287-206818e765e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3191d0a-e2d6-40fc-a1fa-28a19ec6417b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705ee55b-4909-4f81-9933-50691b768432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ccf93c-9cb9-4c6e-b035-036395fb40c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7b972d-649d-43cd-ab99-9c1b4765e417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf323af2-f2e7-489a-b317-44d8df07447d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe5d21b-d4b5-4ab0-bf63-8397f6439534",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55b8318-2fc3-4bc3-a107-725a6712b4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5d6681-3ed4-4f4e-b6d7-155fcda6f12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a533904-c5c4-44e5-ad52-ee5d89e32f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d79af6-cbd5-47d4-8f59-b624798f4b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20550a5-df4f-42e6-8cc1-ee31d9ffcf7c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b5370a-e881-4f1a-b903-5d1fd828565e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa524a50-772f-45b6-b132-fe5ab962d0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6577f72-0f43-4cca-bd71-a76cefebbbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2e4737-1220-4081-a1de-0c343d401e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9edc5c-73c5-42ea-bdee-bf812d9ff426",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaebc93b-f11d-4f00-a162-7278c654c618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e6aafd-e520-4d48-81ee-b0541a19877b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dba6a5-9ff8-4a0c-a9fc-3209e39932a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17388456-bfa5-48de-9161-340ec41ea70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d355401-000f-444f-afc7-ce7dc66b669d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d882a072-4d3c-4c5e-963a-d37274ae90c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec550043-a92a-476e-8e21-fabfbc072b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fbc49e-a2e8-434f-ae31-f801e704441d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2d37d7-32f4-4b0e-b3fa-5bda64386efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9861f669-3ca2-48e3-9062-57e23e9408e9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5587933e-07a1-4fe3-a51e-73502c70343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1a6d70-ad2e-4f13-80fd-6d882d292c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764ef953-cf72-4668-80f9-1be54df9b4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5daf731e-b415-4dea-8e13-16359914313d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898ddc08-1961-4813-817b-ae36dfd07725",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b862aed-a20e-4ad3-bc92-1c00dd5c88ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd5e0db-61fe-41f3-8d08-7460a3a1c6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3d921e-9cfb-4665-b4f6-13f12fe12d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff506792-16c5-4801-9f52-ccac36ab1758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad02290-6367-4d1d-8d16-2def7997b245",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48299ec1-c76e-4da4-8984-a8f9f017d6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6990681-152b-4c60-99e7-c2e150ba45af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047abd3c-1c56-4467-8836-acd7ff143992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7880bfaa-b124-4551-8f65-9b126b66add6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e06730-d9b3-40d0-b17a-882f37a4dfc9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d78825-e2f8-4d76-b98b-c6305720eaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308171c8-7dfe-48b4-bffb-7a0e30b3d608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2585c9e3-1b82-4ebd-b11a-a2db5aa269d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9e8c55-bb2f-42d8-944f-59b955836395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8146ce90-2823-4213-adde-eba99011876c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03df5257-c40d-4349-88c6-63e8507db172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf75ab5-558b-4908-865b-60d622d611b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5da2560-64cb-4111-84b0-7b576c993551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e208307-2e89-4b68-bd8f-236df62c5502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f704f488-268e-4e07-9f92-2f6fdd4c685c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea291b3f-467c-4b95-8134-895618538879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88397f5d-803b-4ed7-b67a-9abab2b76526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c545b6-1ab6-45f0-8cbf-b357c5f33be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dadfb54d-c9cd-42f7-ad0d-0cc582d554e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc4dd5f-2f6a-4a9b-945c-2acda28cf30e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b80622-cb7a-4d5b-8220-01a6bad18ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50506ff-9bbe-4eb1-a312-d518fc1fd789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3972349b-3e3a-4926-8e11-295dca4c6e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc85323-a149-4dd0-8589-bd42d4dceeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07924cd1-b1e3-4fca-861a-a8674860c3a5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9270719b-f315-4bf5-b219-2bc6308d4708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664a0a14-469c-4067-a2f4-2300c14a90de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546f4b1c-e185-413d-9b35-ff9581f60d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c3292aee-990e-4ad4-beb7-55defa2e26a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa045dd4-17fe-43c7-8f3d-1b0cc4de799d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cb0b61-c8d8-4cdc-8950-da0c6732c56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae1b74a-d350-4eb3-bf53-7e0bd9e82f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87cba05-ad46-4b99-8274-6dea145d6c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "438aead6-480e-42b9-baf7-d68e4f8c9236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c3565c-fb48-4bbc-93d0-a95b432dbb6a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12c43c8-5623-4135-a092-794814929331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6330fd-da71-46e5-baa8-ea6aff4e2967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900f7bc7-ea70-4660-a7ff-a910a9e5a434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9fc543-981b-45fd-ba5a-dd46666a4939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64459de3-755b-4b7e-8cfd-0e34a8da19a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9906426a-3750-409f-b6e8-aa939cbf4aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1830434-3e99-4d42-886e-a350f987ec49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb30d37e-45c9-4643-aae2-189d7e921049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c57a29-c64f-4a10-b0ff-ac0b65618929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1d9bd9-7ead-43a8-acb0-0cabc5c53bf5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eaef0b6-74be-4e5e-b2a0-ca75dacd4a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb2f628-cd39-4653-9a88-b3bd26ff2ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447a5279-122d-46fa-b494-62d4d313e63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "191b6b73-3943-41e1-b0aa-958c812a8b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a59b46-7b23-4dfb-810a-36cdda3ce4cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020a4d4c-eb66-40f7-9697-31b9f7ecf8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc40d04-e5c6-4f8d-b2d3-66d55354fb8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92edad3-85f7-4779-968b-dafc9323ef9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "09a0e6f3-2f7a-4fdd-9a9a-4de8ed986399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3353736e-71a1-4b5d-a079-3c66caa228d6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac1d88f-80fd-481f-a302-40d3b7e6d398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c445ee38-99cd-4714-9718-eba8e088cf04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26a8511-54e6-4d2a-a9a1-c2b099fc0be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfafe849-2c82-45a7-b11a-a901978296d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37234f86-d463-418f-b69b-a38fbbdb0349",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b552930-2a8a-4b03-a76f-b9c5a30a932b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae1828a-b71a-4d06-9dc3-d104aebdb445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e72373c-24b5-459a-a6cb-ce24e0789a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "27d1250a-430f-4c24-8bae-acfd5fad4de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332b0dd3-8780-4dfe-8142-d4d1eb31996f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71268d7-5ee6-49d2-9a2b-b1cdefa4fbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba22c92-390e-4c43-a48c-32dd394d289d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26983899-8745-48bd-8f31-4da9cc120fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f20b2f2-567c-48ef-96ee-05cd3baebbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebbda3f-4685-465b-9497-809d50819d5e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de041598-77f1-48a5-ad4c-9c09947536b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93f5f3f-65fd-4eb5-878a-5b2ccb0832ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a149175-5542-40a3-8da2-02436b8935ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2741ad63-cec0-47d4-8a64-713fd1a596fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45533f5e-c59d-4b3d-b867-926aa6b518c8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eccbeb3-f0ba-47c8-b3ad-def022af1f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9234d633-a058-481f-83e9-b1c0c64b8f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf781e6-4ccd-45df-b331-7f5d3eae59d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "092f1b74-278f-4c81-9631-ae142c64c5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b711f16a-d1a1-4656-bb47-1d80b300b01b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a254dae7-3afe-4593-8229-ab58dd62ac13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4cc97f-838d-458d-81c6-076cd1a29928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d8e09f-7b05-4e35-bf98-edc683294e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6af51dc-21e8-49dd-98b0-b04f53438305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f3b531-d338-4c84-9a71-5f94489eb011",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2689b808-c199-4bcd-9425-b0c28abd539f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1848f19d-5fba-4fb3-ba3a-4c40c645ed62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24afd7e8-5c03-4631-95b1-9aa4dcb8b88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9298b56e-6f8f-4015-9e3f-5f99b638d335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc38320e-7213-4a41-92db-bd22d1115208",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d43266-8fb4-4679-a07b-adbe770f4568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5d826a-9cc6-40c7-b6ad-b133fb9a3b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e97b08b-7605-401d-b119-74bd8d560ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19283f81-8d7a-4b1d-8e12-fcb8b28b25e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6f46bb-47d5-481a-9ef4-b0f216c308ca",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6876def5-6426-4514-aaeb-075c4869ac7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49abb591-5b0a-41a6-9779-91a66f38c89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8709e9f-4ac1-411f-b2ca-f646e942c025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d95a9834-b4b3-42de-92d9-405c1a7f60a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d084114-2c36-4a65-aca5-4b2288fae85a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c403d221-7e1a-4c22-a503-9d873895cb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe964c5-3829-4873-b086-1bccf61e4cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25881a41-b9f7-488d-8104-652476215bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de6efa5f-0eab-4be1-99dd-5503e9090833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90bfbec-1e9e-4898-b5fa-635fd1193887",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf75323-522f-47ce-9a02-2a328e2509e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ed8e83-f3fc-433f-859c-5e2ecc94275d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239f61bf-9bc0-4c2e-b8c6-dc5a28b759a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5c4a63-80bc-4dfb-a338-ea5b2d94f7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0575d71-f37c-448a-bb99-1b234eaf1c1b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cca4e3d-7f0d-4e1f-892b-f7c61113d028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21094c2-1c83-4a82-9eaf-b66104eaa387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8706be-c5b7-48ee-a3bd-3013ed90aa0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9635ebe1-0433-4bea-b379-764383cbe0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5bad6d-05a6-4564-986b-8eca7d2a0839",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f798b12-1f2b-4c96-91ce-0af1b45b48ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2012956-506c-4eb5-929a-8eb7577f6d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecf2d11-d7c1-4188-867f-a5d55c5337da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "554b02f7-0362-4f73-b101-e047dace0835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb48cd8-cb3b-41b2-a4b6-8e4bf7ff9d74",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdd12fc-b286-4738-bffb-3a00d74cb2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac82e23a-f742-4e6b-816a-ad0a297ab98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dec103-9824-4cbf-8bb5-7049b092bf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "587666a6-1dc5-4e73-8643-dca2e8cd0ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b13089b-5269-4752-8560-e036b8c6c623",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1f9b7c-655d-4404-a7e1-47315928ac72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1abcdb-6fa9-4efc-83e0-6abf06788ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5cbcfb-0ae5-40df-81df-93c4e375609a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb96a48-a1c7-4581-a7f7-c835dcebcc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c304d88b-602b-45a9-995e-453c8766a1df",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad4f4a0-52ed-40dd-a632-cf6fefa419b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5c9a2a-6e01-4754-bb41-666c4eb6c461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e23f1da-8c3d-4c74-85c2-b93ff4b25a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b57dd650-4c6f-4bb2-82da-cf41e974407d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54d929e-6880-4b50-b567-aed07a8f80cc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02817b2-5d3e-4071-bcfd-682af337a979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680ebdf9-cb9a-4e37-a097-af997ef7e103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c29ce02-237b-477a-bde2-b1dba8fcfd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f43b92-6bfa-43ee-b351-459881d9d2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04aa305-1cb6-44bc-8a34-178677ec40cf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6da5d9-4880-4705-810c-8cc3a87f2aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebdccedd-37ab-4a61-a126-fde7c1e20c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3376ced-ddca-4517-a605-e0e6f7fb2164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68487ab6-b1fe-46e9-98f0-6ca3e7ab3d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46e6e16-76f2-487e-8885-8d01cb0489f7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee625c84-f22d-448e-a51a-ba496527d7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf460c6-ac1b-4e40-9413-05321831f2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1defed2e-d713-4d1e-a1a9-99ff838f47a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6b1e3f-26e0-4558-b033-f0486541c2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97957749-cfe7-420c-9b6e-0bf8253ac36f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fcd211-061d-4b79-94c7-616312ee85b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478d34bc-f535-4b7e-b851-89cff2ae31be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b6a9e8-2da6-4c4e-a4c4-7d8a026a8969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e0d898-665c-46fd-a8f1-98de6696bdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b4755c-3654-4f62-b25b-e105b8405a79",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a76ac8-3000-4834-8415-2ded6fc48d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5caf0495-7ef5-4ec0-88e8-28f5ad919155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c284c8-68b3-4fd4-b126-737871a43634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc1a480-3125-4fae-9c98-72057a2c748e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e628b8fb-ca49-4a1f-8d10-8c5a3c5e9f16",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788adb08-a2c5-428b-b4f5-05f2f1629422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdff5c40-f0de-4dea-a0f8-9f2390ff55c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83454c0b-ff1c-4b02-8f95-940d8eb0f939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15a56549-6946-4e00-84d0-e6f4d14ece1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fccce4f-0509-47c2-882b-7d583248ea4c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fa6da4-94d1-4986-a309-9b5d4d31180c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ecb76c-1b50-4e47-a9e4-7829d1bb5bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2f7819-d25c-4969-8620-18b3ffe4f6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02c5559b-2565-49e3-99f7-5545a9b8fbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccff52b-2025-4618-9e47-46afadfd9bc1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb653f85-bf7d-4c02-b866-fb0e27f0c22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73dad83-697d-4aa8-ab57-9d845f744837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9f80cf-3d01-4261-8d26-1dece9cfed35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e34a5bd-0676-48ef-a027-9b8861b4e074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ec1273-2ab2-4b24-87e7-336f62c8daee",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869334b1-5e0b-4c18-9fac-42fa027ab11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad58a94c-c535-490a-aaf2-4cc68742efcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8329e12-5442-4b1a-8f90-3aee67f27211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd944c2f-d586-4fef-8840-552de913794d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735358bc-f9aa-4d98-a9a1-1277e96a688e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9489f51e-8c6f-4ea4-b659-10d9fd61df7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1195a5ae-b379-448f-9b33-7fd421604d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf40d15-54a0-4d01-8da4-3e9ac5a03679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1283decf-ba4e-4dca-b589-44f355dbe23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa94d545-0f41-4e06-a720-00a9b1b3a29b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddb2ca0-42b9-4ea6-a36e-f12ac999e190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c172d0a-9de9-4f7f-8be8-9d16cb48ca29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a011f9-c474-47dd-9e40-be42098d4f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "04655371-dc3b-4dd2-a7f7-50219e266050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8179838-1279-406b-a6ad-6479becd4e5f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7eeb9c-ba63-488c-b791-4b5bff8dc673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e680e8-40b2-47fd-a72f-fd9d3d92bbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d713efe-4e33-45e3-8bbd-bd9d1ddf9657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8a6102-50b8-4ee6-9a0d-c90cc5905add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1790c800-8af4-478a-b2bb-2c384ad18ecf",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799a67de-42dd-4b36-a5d1-b9a312880711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1629226b-a919-4d0b-ad13-0c895aae1b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5c481f-b149-4123-a787-d71626d0c25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "72eefb1c-8ac5-4999-a2ec-ce4b9628558a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b87a0c5-a208-45ca-8750-138978416e55",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba03fe5e-9f30-4431-89e4-cf7430667000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59906809-a537-4044-aad9-911e66b246c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d81b94-361f-40c8-b829-f26acb92abbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2cf635-1354-4735-9436-2bb16446440b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf6d111-ee67-4b65-9417-6a61a11741e2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f9d57c-d36d-4b69-8ad4-ee91526f9a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "54dbafb2-bd36-4c2a-85cb-40b02980d2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a415f503-02f8-413f-8b17-4c4cbecb2d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "46926141-f74b-46bb-af7c-a9a638fbaf6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0e61dcb-92d3-4525-9a78-b6875d3c4fc5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "688d6749-5710-4f88-831f-a765413b0e27",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b758bd-d0dd-4501-95e5-6e7d191ab58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06b9df4f-b63e-4db5-8e68-6b51bc2939ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6c0d0b-460a-481f-82fd-be062d1d90f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc53a2aa-4e27-4edb-aa4c-3a2f547d226b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edbff274-e194-42f5-8cd7-fb70728474c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b8a551a-6664-427d-9ca1-c9a4fa9be5c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f040294-710d-4b3a-b5a7-696062865a2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eab81f4b-17c5-4494-8d11-0dc5b0127bbd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8aa5c87d-48d8-4465-8d4d-bdcf80c49b27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7806b1c-24d1-4f1e-a83c-5c1e8ac3ba58"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "caffc2cd-4316-4390-b784-4a3e078f96fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f456350-972b-405d-bb44-bf5be0a36978"
                }
              }
            ]
          },
          {
            "id": "a4235526-60f3-4b81-a626-7ff11fa983d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e266a938-8e36-43ca-bc95-67a75b71f386",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "cec1f4bc-5f08-4368-a78d-1ada9a0d4985",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3e26ca-4e6e-4992-9223-bb512aa75a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bb346751-35b0-469d-be48-3e2ec04b297d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15598fc2-9ecd-4ba2-9c8d-6ad3d283eb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11d349f-129d-439e-bd46-bd80ae73d22c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5474575e-d034-4d43-a97c-094bb83cd7c6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82405d47-dad0-48c4-9c98-5b743ee14baa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "505a6564-50a1-4e63-babc-be1c9d0cdf01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6fa40dd-ee68-4810-b397-29fa934918a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e6f07ba-02e6-4380-b2f3-efca5c6167a8"
                    }
                  }
                ]
              },
              {
                "id": "68353b6c-daec-4cdf-9d6f-77270ea2963e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00f3ee1d-d67b-4233-9748-63afb4919153",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18e7cc7e-2416-4290-b7c5-f4fee1f6d1be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f8a9cbb-6195-4009-a4af-ee659be3ad7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18992562-9604-4577-b3ee-b935962b7fda"
                    }
                  }
                ]
              },
              {
                "id": "43c4f526-72a8-44c6-ae81-abe94af6f5fd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2649cdc9-040d-45f3-878c-27fd1672bf12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "702720e1-856b-4bf5-9671-4b82f7a79438"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25d5c453-11bb-44bc-8026-ae527f960515",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "39f72228-c852-4791-8ace-ff91ac608883"
                    }
                  }
                ]
              },
              {
                "id": "2ec7f380-04e3-4f55-ae0e-84a1350f24bd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd49285e-4713-486c-94a0-6af9f02d81b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca6ca772-5c3c-436b-8099-7089e38ed89b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b348668b-fef2-41db-8d3b-7ac700613587",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ebc863e6-7d41-4152-a99c-dac6c68cf3fc"
                    }
                  }
                ]
              },
              {
                "id": "7ff11c24-d079-43e4-adc8-023a13292e9e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9879da76-33d9-4811-9ce2-31c55bdfa447",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5ff0d55-2827-41e3-8b2a-1925cfefaec7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5455811d-c86c-45a6-a61c-cf1953f96f72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1c824589-f3ad-4c66-9f47-c09cf5bfed6c"
                    }
                  }
                ]
              },
              {
                "id": "9859be21-88c1-46aa-ae6c-12b101dfd5d3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c4a0862-6c71-479a-a6d9-8c8d854f1bdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b774fb56-2d39-424e-860b-b151bf68d82e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66f5733d-3695-41d1-8311-50d909250c03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa6ccfa6-e373-443d-960f-e6cfed753e9f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86c08e2a-22a3-4123-aae2-a7bdcd65b934",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19f1c53b-e457-4922-b2bc-707a77979403"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a6d2cc04-d650-42c3-9bc6-f7d375fd2fe8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce4cdd99-12ea-41bb-8a72-29a237b03841"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a5a47c5-bc64-4083-88ca-231140ad54cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cbef32c2-2e82-4468-aaad-eb0d68c26d5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1be1576d-e5b2-4e67-975c-3871bbb3eb51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f26f1714-5720-482d-affd-1e3a45390bd0"
            }
          }
        ]
      },
      {
        "id": "f66812cc-5898-4418-9b08-ab9ce8c003f1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9c88fe4b-6727-4cc5-8ff1-92972e7deae1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f49d3020-68bd-4144-80d8-9ecc5b069579",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "48792b86-ce03-434f-9e94-ebf88177c406",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403aa485-f09f-4171-8533-cf87a752c34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facc2761-24c9-4c29-b54c-cbeb617d0813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba23ece-db61-49ae-865c-f7273e2f930d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "18d1f29b-5539-496a-a5d1-e372dad98a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63008cac-6090-4c94-9646-5d3574b43f2a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62530ba-4cee-4cfa-b8e8-9819e368908f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911fa74b-e977-43c3-85a4-693af8d66a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920cee42-f649-4eb7-a73b-f55cd4f0a2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25952cdb-f30e-439b-9891-706f39d807f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f79349e-4cf5-4897-8c35-bc27ec9a7f90",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cef1ab-8fc2-4e73-b1df-c81457c0db25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a814b4a0-76af-42f5-9f53-8bc844762dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112b1b6a-3cc1-495d-990c-ce40de2020f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82444e9a-ef22-4a72-8650-cc8eb08c1357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8da1d0-0dad-46eb-81fe-c6d96bce24a8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9e148b-7ba6-4289-bed5-ff4fd3666bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0144e7d6-55ec-45c2-8e02-5f19deff217c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08f8d62-aacc-4d48-8d01-481577e1a84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd54858-3d5c-42d8-998a-41322274e542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053d051e-2a35-4c8b-ac88-5c62a24da352",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708f5853-ee89-4a5a-a4f9-6e232eae4d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c3fd97-15fd-4651-a16f-474c6b3bf675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbfdf4a-8632-4fc2-9335-b3a68690985c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0bdf7f-4caa-4101-a020-17a359789216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59b43ad-e198-4bf5-9cef-fca1d977259a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fe20dd-3842-4aa4-91dc-061f935a0b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0fa46a8-4cda-4dc0-bc49-335b0c71f811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b79b61-432e-4192-a9f9-fc574db8954f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54a093d0-b073-4765-8271-ddaeff882c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2572fd-e3ed-45eb-849a-75d08c628cf9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547623f9-f1e6-4e66-835d-48f8dcc6b222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1da3cd-5af0-46ec-8c41-c1690a80bded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1371b0fb-6c64-42cf-abcd-1f1bf8e59297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "99823058-19b2-48ec-9243-4b0c9b64e11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60878c12-77ea-4097-9fed-50a76649d088",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4de7fa-b30e-49e4-9be5-9dce6a9bacad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f99cce3-8500-49ff-ab25-d54837b21622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991d9c1e-8093-409f-a39e-b7feae9dd637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4eb7ab-7b6d-49d3-8cdf-176654b54db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f5fe15-8311-48c2-b31c-c32244127afe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fab774-3c85-4b5f-b72f-b5fcffae37de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0b7c67-09bb-428b-bc8c-a8f0e88fc444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561612c0-87b1-4e58-a177-1e2f6bf03f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8446772c-e5ae-460d-ad43-c437382fd59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f933d9b4-1201-496d-91a7-ad0e56f77ba2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1937d7-8980-4434-8a13-a669780c9b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170b9d47-21bc-4bfc-a0a4-fee48ed87200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18884a4-877a-4aa8-9166-0fa2eef74c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3df43b32-1435-41ea-86ec-64b6ad2a76b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01b968e-800d-414d-b341-fd6d5da8a656",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1af5bf-5569-4f57-a6b6-1b70f2a2d3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461eaec2-760a-4429-97b2-ae397b24e3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349f1774-fa44-4782-bc6d-3f36e9e1fd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b458cc-b3aa-4ac5-9586-55bdf0b0d91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157b3953-e44e-4e78-ae94-b9c35b6c4b3e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19c04ef-9c64-4419-9efe-1ca103f7a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f202c6-27f2-4523-bf3f-2620df973c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8387e8-1fa9-4ff2-babe-5aab0b907a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8dbddc-5942-4359-ae82-ab2d0555ccaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a6234b-086d-43f1-834e-be9fc97da1fe",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfcfbdf-7dff-4e47-a641-161581a53b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01279dfa-c71a-4205-9047-f6ebd5669250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95de55af-00a3-4772-994b-925fdc792dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc41045-6cc3-4f6b-92a5-386fea6de0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687bc23a-e50b-4bac-97c4-005ac440cfbf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6325d1c1-1814-4e7c-a7a5-0ed35d2af4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaaef330-b90b-4f2d-89b4-d35971d6db1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bad5f69-1adf-49d9-83a0-90984427e9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a04ff9e-e763-4c25-88c2-5e27857f7fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc43474-7a6c-420b-a341-ae23a4670d04",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437e4ed5-4c52-43ff-9d98-adf256db579a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd9430f-a2f9-4921-b798-65b2e6035381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9782c6f-c020-4474-ac5f-5753e066435a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcd0d1f-5c1e-48db-a752-adc7f48e74c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1183ea8-ab7a-47de-a94b-5b7068e655e9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e437ec-757f-4082-b52e-99b46cb0e56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa148a75-1ac7-46b0-a10a-a1578a5e2858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e2d492-1033-4e8b-b8c9-f437d69f853e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e229f433-3b51-4cb0-8a45-c9c1333ca8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76015ca4-f69a-42d9-a544-766867ae2c92",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cceabce2-5d74-4bbf-9b50-c575b6719af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8d1a76-e1ed-4b33-af90-2e5e55f6cc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdd1559-7fc0-4e4e-847e-98dfc02f43c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c7ca67-8275-484e-9aa6-4d9ed64fb31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6233797-0a94-4194-b698-beb24a52e643",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321ead50-6ad4-492b-883a-e2f50184a478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f09f853-8f3f-404d-b6d5-47ccc1153135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebebbcb6-d717-4abd-a0db-910305df4d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01f0ca4a-8077-47a9-b3d9-290312ee94b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2deefe9-fa96-4430-a287-f81bef09eacf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0519c2-1d6f-4fb8-8490-839e65cedbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4723ff-de77-4742-88ef-96d8ce41ff3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9792a59e-c461-4030-baa0-1aee16acfc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0357eb2-f0ac-4558-bbb8-05eea6db5872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba13041-410a-4e2b-9be9-6318dd061d0a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187b3479-bd7f-48f7-a444-5b89e8d73a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb704554-f9f9-4fb5-87c6-83ee717049c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fad648e-8b98-4d37-bbc3-1a790a44fa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "150869af-e89e-4af5-8cf3-9044ff5a7e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fba1b1-1067-46de-a887-e2ad45420921",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5d8c1f-a603-42f5-8f92-f913fcc4858a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82469012-967b-4d05-9d4a-ddaba5ca34f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11967b77-4eef-4889-8f87-c26ea9e47ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "631e573f-2556-43c1-9c56-0e5417ae8490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ed388f-45e9-4075-b583-104c6cf46c5f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e8340e-70f0-41b6-adc7-a7dbbd812eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5820db-9aae-4063-ba24-b590e4e2d53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dee1a4e-9cb7-4168-97c6-a4378fd6f97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fe482a-1a52-4cac-b2e6-737b2c1e4da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e62afab-3d07-4c21-ab0e-533869fa508c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17900b94-19e0-4217-afaf-9ad14cf4b511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b68048-fd97-48f2-abce-4c8793a1f683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f418a5-56b3-40a0-aa2b-459caa7ba689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2513bd15-da07-4e34-936d-432b11680c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52260ca2-0c82-428d-98d3-bc02c15a8784",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2283a249-b1c9-4674-a2b0-67ba096ec68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c94b2b-6f7c-4b50-9ab0-d7c1f95ef17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7615c7b9-49c9-48da-a31f-defedb316fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0466d7-d282-41e7-987d-514b079bf46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287fa535-02d0-4a3a-9028-0e4c28c59215",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65ff54a-9740-4c9c-b32c-5bff656ba1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25d82a9-111d-4a10-ae41-c98a4888b546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3214ef7e-5437-4c08-ae47-94981c955bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acf00b7c-721e-462e-aae8-fd68bec4e362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd15a65-2f08-482f-8b58-f05475f7630b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292c5c65-83b0-4719-aa64-a745e055ca37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b1b287-591a-4acc-9b6c-f93f1601ac3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273600a5-6a7b-4e89-b356-daa4fd372e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e8e535-6c09-4e75-9647-ff31ec99d193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8926f1-d329-4819-9e1f-717a73f16178",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb44c846-394d-4803-af07-93416dec7bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31eac89-b962-4f43-8f84-c4fc44c9ae33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6591e1-cc3c-4a1a-b076-91f1b129775e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "780fb31d-36c4-4651-a3d8-6d3f8e3fa820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09e7ac9-4ce6-4064-8eef-695087d84558",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad11e825-bc46-4641-9f76-931d6c1955fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9529d7-b40f-46b2-97c0-8dbfb14b2c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6dffe9-fed9-474e-8703-e660e62a8737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebf7976-4351-4bcd-8db8-0480aca38fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3173476-2197-431e-ba72-5c6fb96bc219",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8cc3aa-d056-48a3-aa1a-5ee61dea21af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdea8553-f877-435c-8fef-9574072a9e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670c6353-3875-4b93-a86a-93426d3137d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bc6641-cd80-407c-b77e-19999fc69feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883914e0-73d8-4207-b3ba-7d685efd9077",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ab3beb-92ac-42be-9464-8233bca22083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9fda21-7ee8-4f9f-af5e-60f2ff363d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b23d4b1-82ca-434b-925a-9957c6871389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b864ab41-5ec6-4097-942c-7a540335842c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f41538-727a-42d9-ba58-8d04fbea7acc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbd3b19-3998-4c1e-bb24-0032b3d5b1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c678a4-c9f5-4f29-bf44-58bef6d78bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed0aa25-bd19-47a3-8cf6-18d502a95fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "034145ce-2014-46f8-8eee-e107f8e5ffa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e651211-868f-4143-81d3-8af5f0455667",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43972ae2-aaf3-4515-9f2f-09bc1e99b9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79be6dd-5d8c-49d0-a524-c9759b93a74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f650cd1b-d910-43dd-a9fd-a0f82c4e6967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb13db6-6cff-4d87-a94a-dd40d081580f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e0a0463-a8ca-45cd-bbe7-79cc43d3bd97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa23246e-9c47-4e1a-95bd-a7301e9e7c18",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1bcb52-6d8e-4f28-ab73-afa572359b56",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bc85d4-abb5-400b-aae4-ff8f8d8f9a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "687ac45c-efe0-486d-adc3-d356769c73b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c94bff91-b60f-4ea4-9ce4-75dd40f52b2d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8b87bb7-a400-41b7-b770-4bf24ecff2c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72f7b8a7-adb2-4831-aab7-e404c52677ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24b90469-f6e5-49b7-ab4f-7fcf5c483013",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1c5bf8e-315b-4783-8346-8374688f93a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0737d582-eb11-46a1-a58f-5f14b2edd5a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c610d74-e877-43ea-962b-320141b130a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07e0ee1e-3e91-494e-bba9-b2adb3e9591c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "614fcf3e-9c22-4491-9697-be231d6bc186"
            }
          }
        ]
      },
      {
        "id": "255ea678-f62b-4640-b35e-a842a1e46385",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5f1e7341-51d0-49fc-82b6-64afa247a063",
            "name": "Negative Testing",
            "item": [
              {
                "id": "874d4532-b8bf-4006-b463-3b92d6b6b746",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "116bcc77-1ce5-4999-8dda-727d21c8e35a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8511bb5-5619-4695-ab00-eb29cde3ef04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f901fe-4fbc-4606-b8bf-191b078854d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de963fef-8bb6-4cde-9d19-4af9bb978c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7243f852-6780-49b0-8eea-8db4b91aa7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebf5ea0-2d54-4325-84bf-bb2c404f338d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b9c158-fbb9-40d3-9f94-77ac36b87662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f13b46-fba8-4155-ba82-48c63869873d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090dd812-07ce-45e0-9181-4da230ca77d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c834215a-c701-4b3a-9ec9-6069cbf3ec78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2425ec7a-e1e8-4159-8639-51f12d5b0ef4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f5dd70-1360-48af-8416-f96008c417d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25185e52-7cee-4bd2-8981-9a095830fd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489c32ef-5a99-44ed-8fae-b7f340e4c78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc1d79e-5bb9-48ed-8bf9-c0feac594fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33da199d-4530-4d8d-998c-f3509c333362",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dd28f8-74ad-4ed5-98ca-e6a16bf0df66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43571375-2c82-49cc-b1ac-be965628eead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0ae0d3-d173-4066-887d-2210f79329d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dea7a77-66ee-4e5a-8464-d45683ecc9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57552ce8-55ef-47f7-8bfd-bb34a9624706",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71960d4-54f7-4a60-b7ea-2d7f687545b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7eff78-b671-4619-984e-fb6b926a38f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1536926-b2d0-45d9-ab15-9f28bad28d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e244208b-0ddd-422f-9f36-64f0821c53fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cb81b2-8890-4fdf-b036-f0d071f6feff",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb204ad-474f-4833-aa64-ce8821bebe67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c12bf5c-7986-48f5-9098-24d009eac08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b6aebb-5494-423f-9c5b-f82109ec5271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bafb2cc-d99f-4b89-ab99-32923fa6fa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea322a3e-90c9-4315-9a09-d5160021b951",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3107e40-5bb7-4da8-9045-abfd5a35d1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdd5806-c4d2-4504-9808-6469059d88f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6b462a-4d72-448f-8aea-af1c83db3ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dcc46d4-2d75-4ef1-bfa4-43702a32460e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2fc456-184e-4f53-ab50-755975390d37",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0127584-3d11-4ad8-8ba6-c61d258f6ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a1023a-f0ae-499f-87e8-ddffa72854bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13ddfde-15f2-428a-9251-5e979de5387f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70e01830-01f4-44d2-b925-99bf2d62f0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06df9626-c7af-49c8-95bb-3fbb46be31fd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9071369-c796-4fcb-86b5-89da27eb6ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f1ac24-2f8c-45ca-9051-7e6b11a33eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f6e9e6-0839-4576-9b53-2a6e50db7eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2010fdbb-f273-453e-8b7e-978dada0a53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092610f3-6c84-4381-b700-00bd1f80bb4f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1504c8-4776-4cfb-811a-b5599a62a580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39b8f08-062f-4b81-bca5-b29b7079104f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8a6035-ae64-4785-99c8-1ee8c1493a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4895ff89-4aa5-438e-93cf-b90dee19fbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0ea9d9-a5b3-4aed-9695-90c5b1521047",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8927d0a5-4781-425c-b616-28a8a9f70a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9b175d-ca35-4780-82d0-edc459484d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca68dcf-8ec6-43f7-9930-e3ca4b830679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1a43ff62-f4b3-4507-907b-c5d998552b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1640987-cb8e-4b12-981a-3939904c0337",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e9803e-5f35-4679-9d0b-3eec8f379a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e54df33-fc3b-47ae-8613-58b8ba31466a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7290563a-bf5b-4601-bc4a-d57da4ab14dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b3d9ff-984d-4750-8c5b-91a608fe60df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495839a7-b324-4562-a2ec-b6041bc06a83",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a862426-1c6a-4781-ba78-6aef85ecfbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678c02d7-533e-4580-abcf-afd774d97ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97f82b2-6a28-43de-97d5-8af99710f51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85737b27-4e41-4c41-bf8b-626c274a6090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9350ad2-4e25-4e44-82c4-0d519b204840",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4b3877-e550-48a1-8511-a041e215537e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3366ea77-6be4-4e24-b935-92cbf278f0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bb35b8-f58e-437b-9949-3c1cabf975dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1792b002-7352-4333-8d7d-fcb053065d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6b2364-019d-4b0d-8741-9d4588123200",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bf6009-8e3d-4045-9c4e-bb79fa311de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f649fa67-6223-4129-8127-266baab8c25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ddace3-c9eb-48de-9183-8e3cbcf646e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e43809-5d0f-43c7-857d-0224d9db2ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedaefa9-1c07-474d-8876-6810624e1696",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348f215d-4a7c-4f22-adf3-89266578032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2e852a-0837-480e-9428-5955c324babc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3e8c99-8c23-4c78-a9ec-ebbbbaf8756d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5e6fda-6c14-43c7-8220-dc50d59a2cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222b35e1-cf4a-47d2-b9f4-f6afc5f5aa7c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1ce527-7b90-4709-8b67-a7f81098c32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0779da-95bb-49c1-a458-80755f3a234d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa97f77a-a8fa-4ee2-b63a-851a338ebaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "97dab9b5-5d12-4f09-86a0-9e1f942cb4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad5b1cd-e29b-4273-b266-77e3246f5e27",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e719a9ae-522e-41f2-aa83-bf50d3fdacb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f0f29a-5fa5-4170-9c42-4ada376d1f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb31c97-0822-4390-beb7-543938cbeb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59cd6456-1c32-4806-b175-a3663b8ef3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1553011f-2c0a-49e1-813d-52df4c50d510",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27efb050-2134-4b04-85bc-fbab297ce5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb17125c-0c55-404d-87a4-3088ec9103e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26984971-dfbb-4f10-906e-289f97dfd69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58241edb-13a9-40f2-a766-7206af783949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ea51ef-9d50-4a22-95a5-85f2df4ce015",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ea667b-b294-44f0-b9b5-c1562c14fe4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a899163-a82f-4de8-bb72-e1b42c15342c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6150c5a-5ad6-4954-9cc0-9ad04cd15c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "968bbe01-7597-49bc-bb62-85b0d7654ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b528d7-6f10-4596-b7f9-600265703eb2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fbfecb-a72d-44d5-b4be-e06fcf896b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cca050-5ca7-4f59-867b-ea55105fc611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9654a19c-f849-40d0-b71b-6f7230975b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37b1efc6-df1b-487f-86b7-6d335be398e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509c3e4a-1ff1-49cc-9b96-940898ed45cf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731cf010-dc80-4816-98a9-742e26526efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088f34d8-d8ca-440c-876f-e75bafa59a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c278e5-d7f2-481c-9c36-addd71ebbdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9d91c6-1fd5-4e77-8b76-652fa58581e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d20e61-368d-4072-917c-fb590669d9ea",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882165ca-7e67-425d-b4e0-c73d7a55bdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdd714b-30c4-4ed4-9327-e4195d5ecb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900004fa-3e43-47bc-98e2-ff9292e74b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf47a5a-8d68-4463-ae31-babf6a224d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410e59d7-2cf0-4d88-9e66-d02922eda2ee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaa0e8d-5834-4c16-abde-af6b15de50f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a163d5a-cbc3-4bf8-9de1-62f6735cc000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8949ab-1ca8-468b-a132-a4d76fad296d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2deea1-7e46-4eee-b800-2853483125ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8769802f-46ab-4bd4-ab42-5e2b2564bee3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ab2edd-68d0-4773-8fef-748796b1e35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa976e6d-6575-4f8b-86b6-37e3e7bc0011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120d3729-ae14-49e8-8d07-ba6fcd983dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbc496a-1465-476e-82df-453dadebc79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2d45a2-e782-41af-aaf2-8bae295fba4c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e757b2ac-801d-4f66-9ff2-716c6872a15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5761037-a6d2-4e64-8570-f721a74afc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49786ef-35d5-4571-9f9e-75fa13758f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "668e25b9-a06c-4705-9afc-65d00b16eae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cb648c-9f84-4e32-9972-c3c1ea91a7e5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4771c5c5-fcc8-41b5-8f06-5f966e2ce8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523d6728-f3a7-4df9-b9ac-51ed8a91397f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664e3b09-7f59-4937-87d8-44959c872ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbccbad-8ddf-4e0f-849b-5b3932b38a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5851f2b-2929-4616-93c2-a6e75361eac7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c239a6b-7482-4f31-92e1-44a6babc310a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2960f73-6c4c-4dfb-bc7a-c4369dfd910e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa936e6c-fa02-4f36-b125-cfba4f78d058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b5ff30-ae20-4395-97bd-d00c9d46673a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166d9538-9ed8-4c4d-bbfa-a9c2456c285d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c29a73-0dfe-409f-9c8f-bcbf673e258d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3f8114-3863-4654-a076-200f0bca47f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba225c5-7f1e-4e00-a6df-05c24f6ef092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eec5c0d8-8937-4e23-ae87-7b7b4686e701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97fe441-12ea-4c87-8fcd-937f36e4debf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb0ffc4-54f8-4e26-81cb-567390dd3103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254d3714-05e3-4a7c-9dc2-5b7024ce473e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15a1c44-7028-44b9-b9e3-8e785ae3cbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c25227cb-a3e8-4249-b36b-3cd636487dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2be58b4-f989-4bf4-9c18-dcdd981d2a19",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5484c79-86f8-4457-a41d-ea18e3660746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a2e112-cfdd-4f2c-a159-9839f1255b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8d4178-74d1-4bbc-9a7b-48289eacd370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "349dda07-2372-4f59-b2a9-d2bbe7f036a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdd9483-a8bf-4221-807b-891b56ca27f6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536a0304-3938-4aad-a49d-dac56976082b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc43e323-a91b-4b33-bf85-655f5a91569d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b284fa-c7c1-4205-a64a-0a37aae397b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3869549-f701-402d-8efb-0937aa7e358c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a84472-2880-4e5b-a6e8-44f402ff551c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf715f56-42aa-4799-bbdf-52dabf3d8c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bca09fc-0a36-409a-abf5-543bd4b68fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95037df9-8345-4a5f-aba4-b0c282c002cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88300b9c-e5e0-4e7d-9b29-67db5879a4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fed9593-6ca8-4a9e-aa12-d6b8360890da",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bf2c02-20b2-4b3e-aec7-601765ab7e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98aa6640-549c-444c-81f8-cfc95cafb7a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e789d29c-5bd5-41c2-8852-79e6e6a7f641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d01c4696-1e44-4b67-a1ed-eb54b1dff472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94933f8-a073-4e1e-b8b9-f5d2f572b5ed",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6a8df0-3961-41a6-a282-24ca8bcc9826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfa4395-858c-41ba-8717-d1b7ab82639f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00749f3-2094-431d-8199-e88f886f838b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c377d1b9-568b-4fb4-9e71-19296b0e8c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bf67d8-6a87-417e-a89d-129b4b3ca99b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb5acd5-eaac-4e4d-b767-20e52db5eeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0788be-4824-427c-891b-d9f033b15b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf855cc-bb78-4656-9f67-0073a6d9d385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "144905ed-faf0-42d0-9a8d-12fd4727e261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1788dc-c2be-4b4e-ace3-81aadec8b768",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee73dfbe-799f-4c4f-b901-7e34e6c20c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8777be8e-a958-46ab-ad01-69773c1c406d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7e955c-3c59-4fe3-ac88-cbcb1faccc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d8c9fb-f751-4f83-8ee7-a8cab720f67b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d5fea09f-0a3c-4671-84a2-e109cf002558",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c79a2a80-f0f9-4ec9-b5a9-01410e1f9ea1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48107d59-b152-4e3e-9ee2-56d473b4ae1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "002f70f3-631a-4657-b652-d531b47019b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d5e302-b5b5-48c5-97ca-8d9373fb5bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8cf196d-6b8c-4237-8ce8-3073a7124961"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74acf0c6-cef4-4329-a423-d76bd6e0cdce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2672ca05-9d8d-4a0a-85bc-41eb07e5ea0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3e51d93-d474-4c00-bf73-4b679626273e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93dd36d5-843c-4201-ae31-6aef608b0046"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2067fa8f-6b7b-4f25-87d9-e5e95c9a1d8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0817234b-b290-4655-8ae0-4410547ad6e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5601ce03-d99f-4b48-bb0a-593262016476",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab3a5f4a-0789-48ef-84bc-84a36b1377e0"
            }
          }
        ]
      },
      {
        "id": "f9f80af8-bac1-4f92-b306-ed149ae18ba8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d2e7c009-a72e-4d1c-97af-df4ff3f34a42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e3d07f6-be68-4b9c-a925-edc1e22e140b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88c2ce42-9533-4bc4-9f70-d9be161c8674",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88ff7d1-f980-42ab-a9a0-3d794bf7948a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f1aa67-2434-4190-ab08-2d5dea731f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee770c4-a58e-4ec7-823a-52e009bd692a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98811821-1d64-499d-a815-7e28d6a8790f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561571df-ad50-4d0d-81a6-f14cc9a44a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa97bf2-e188-498a-b321-c5bf7b967aa8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85e0816-70ef-4251-9274-9ae984e66b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fec8d3-e958-4763-9243-813e46a0ebc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc24c657-8794-4580-a8ea-5b5f9cf51d14",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc1b870-5efc-4f5b-8151-da271ddab58c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cf3c4d-7465-4c7a-b47e-429c34c23f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c210f2b-e165-4105-8292-b04dd49d42b7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefc2807-45ac-4c27-8d66-1131c0a5c9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5899f457-4364-4a01-ac91-5eb961be3aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e168ef6-427c-4019-a926-286c168380a5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a82d551-11b2-4c82-a833-63984d771117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107fe63f-8bc9-426a-855f-9a7e0d9b237f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4bdf83-0533-4e6f-aa6f-b8c37ead1546",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb5fcf5-eb09-420b-be44-d2ef534d6dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581903ed-28e9-4779-a40f-6a763d38dce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa2d5fc-a020-45ea-be01-283789cf245f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235a7aa9-fa67-42df-88fe-15fe249bef3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2755ecd7-6fd9-4ea2-b6a3-a6f7e087d3cb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27a5113-063a-472c-8d86-1aaac88c5338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eefb815b-2299-4563-81d2-f2a552a53070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4763edc-9382-45a7-a682-5ef05b872400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b94951-9de4-4a1d-8a4d-6896bf5669cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237f36b4-3c0b-4d54-9ed2-5cb121549dde",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbecb2e-aaba-4677-9433-a71abc280509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40fcbf4-643b-4e15-9b30-92791eb802ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a84b91-dd32-4c73-aac9-08f1974ffe02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfb4469-0fc1-4f31-91e3-69ee4168bc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29ef703-09ec-4426-ba6d-56c891b21f42",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75cf7bf-ef70-4c55-913a-c244c541adf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d50c7a84-52cc-4148-b5c7-03c14375db10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d052b8-3b2b-406a-8525-fd718ff9a0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b05e7e-3864-43ae-b0ac-4362b63c6b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678a7932-cd5b-432d-86a1-cff723d80eff",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2a3ac6-cdd9-407e-910e-ebaf006fc2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea589642-a629-43dd-a56e-c3ad1ad0ed05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ee24dd-3c65-4cf4-a7a0-600df8b3fc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d215388-e05a-4b45-898d-b3f26f060237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44be876-4a8c-48d6-8291-cab343b88cbc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e66191-3490-4087-adcc-bc5dacb26564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c8960a-76ac-4777-a226-136eb44d3a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7eb36b1-3fd8-4092-b3c0-f8d0f35183c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9d48a0-9aa3-46ab-b89c-8499d414618e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e50099-b4b4-4440-b3a3-e11a850a15f8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae2e037-9b76-4879-8a24-bc9650e2b6a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24da0278-1b94-4832-8a1d-f9295cf1e0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a641ed27-51e9-4976-b6ed-8826c4bf25e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9466c1f7-f2d4-42e8-8a73-db7e38b4a0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30d0c31-7282-4c69-83bc-baa3e86848c1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5919ce7c-3c0c-40dc-a807-1f48f1dd1865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63c857c8-31f0-49ad-b135-a55d74ae765d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f7637d-186b-41fd-8f4a-c99916ab98e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368d9093-bbe1-4c62-885b-608047e475d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c11de8-cfaf-447e-bdf6-23c1231fe396",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17545e9-cdaf-4dc7-80c1-33ce376b5b78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb1a9554-4a13-4db8-afcf-41ee8ba17bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2ce6d6-0dd0-4b33-a820-1c04ac7aa21b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57379fd2-c613-4bf3-8b71-4a518d9ad5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613cd95a-78dc-400c-813c-cac34c776a3c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacf6d00-42ad-4fee-a81d-7818d963734f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6361a0a5-c9b9-4cb9-ad56-a5e6d6d86abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b461a79-fa40-4710-ba4e-be61672edaea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832e0753-47de-4e35-a235-0403e66140f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f17842e-ff01-454a-af93-0d1a04916f2d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6939517f-e92e-4016-b2f4-e45829cb93ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f206ba4-ea03-4a8a-9037-87884a54f31a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef138c7-c428-47a5-a121-6fc179a4e9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16675b56-2f98-4db3-9e1a-13a9819eadda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7b2fbc-30a0-4bfa-8bcd-346baff78581",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c902be-75e2-4873-af4d-40788656bf5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897d2f84-c401-4647-9a15-2e2a3e357542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb6359f-87e3-4428-a1b4-9bad149b1d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda7d114-5075-4c45-9ff4-18ad840cd8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710dcd18-407b-4e1a-b28a-30785d6653e9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd63607-7188-4ab3-94d5-6f4113bf70ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11643c51-e5a2-4825-bdc4-b7a85503b70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a23ef8-06a0-4e37-b61a-90d422773832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbed542-d4bf-4005-804f-532fc52164d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d7392c-4633-410d-9763-d8ef20bcd0e4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5299cb7-e350-4cb0-9ee4-22f76fe85ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00bd2cdf-909e-4826-9bb1-0bc541bfe015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585e85f9-fd06-4434-a5fc-60fea271e6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59b3e6e-4caa-4157-9272-85a1776ba004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d353c11-5eec-4865-9193-e446b4f8ee21",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fc0f04-c14a-4054-9763-095e9915337f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16046623-c77a-488e-a374-77ce2a3e3d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8515822c-2f8f-4ea0-85f0-5740674cc573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677a75ad-59c5-4bb6-acc7-16f0ad5dd026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8ae86e-735f-42ca-b48c-f40630c5aa76",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277fa311-2495-4219-acce-dc95b2a45e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9fdc1a-7b3a-4e2f-a9cb-32d0f3245e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf45e2d-7964-4707-8dfb-1472df9f2740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18908a3-6f23-41b1-8776-3ae9e723afe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cce515-0050-4d20-acf4-7ee0564b8fa5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f110ab2a-5249-4229-b628-940b30f4aa53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d55e06-e202-4522-827c-666e3c35280c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f13584-c03e-4999-80e6-fdc1d854d826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff3d9c4-6438-4ec2-ab41-7dcee5b4059b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea2bc76-cb49-4715-9a69-a7b16afb33e0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d859e6-10fa-4274-8c4c-8a0ee9a1e11a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51528cea-2602-4085-a723-257ae125e86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79924172-c14c-44ff-a044-5adee3e9e2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1add0f8a-317e-4e19-a754-51b2862d99fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ca581f-8636-4a5c-9bfa-b188b8e6b43c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c69376f-6e49-4932-9aa5-57723337c97b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43bc7db1-5ed3-4b0c-b4f1-d2e2db32c242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10db5bcf-76c1-4562-8693-c459522b6770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c45c241-4a70-4a75-bc32-26d935d66f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cf2e0d-c34b-431e-ac98-0c1a3f797b82",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c94aeb9-6163-476a-8031-8adfe39d6fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e84ee2a-464f-485d-9b6b-3a5bcdd2d6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f9f7c6-5a16-4006-a784-9cff7e08931d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4bbd7d-1e7f-4a65-a1ef-8cdc771615ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a928ad1-bc54-4571-8bd6-cdf0ada6c84c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5b2d7b-f49c-46c4-ad53-23e93d113769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b32aa3-1bd1-4198-8692-33a4295d8721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a2034e-c1b9-4e6b-b439-746c5191e68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf24eb5-97d8-420a-a714-00b62711eb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a2ef03-879b-4a5e-803c-865ecb2eb0ca",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8215cd-883e-4ed9-a528-1efd0ca8ff09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6903625-a3f3-4ee3-bfaa-82e33ea351f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc1552c-54dc-4806-8232-6467b3791e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3713db78-3b91-4245-ac50-e96f86f94a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54923fc-b5d9-48ad-a790-7c7984fef1a6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411f5b97-3888-47a9-ad84-783f890cadd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9509cbc4-81a3-4867-9c71-79b2dd7c8000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb60e6d6-df2a-4ff9-8770-a0434b47e5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f40c0f-a64c-4955-8ffe-8b1712656e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca37f899-cd15-41eb-b067-b747f0693c23",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae64d56-7711-4766-98d4-e1d126672b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b28198ae-e5b1-4fc8-8bce-f7ea3b44d6ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bc4d32-d358-4a55-8031-de5f867fc6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72826060-5a1a-41a5-ae69-3a5ae6b5ba44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccd439a-7d5e-4a70-a7bf-04155f37ab1d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3678d1-4ad6-452b-beff-5dacd895268e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f26c4d-e0d0-47e2-b0cd-cb74eef5424d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46670b1-c4f1-4d13-88b7-3504d2f18558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9240e3a-13c6-44dd-9262-f3293ae547e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e56c7e-ba1f-4642-a401-ed62047d9790",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ae6cd7-0032-469f-88f9-e99608f8b7c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a055ca7a-4a10-4304-a963-1886646439dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b292c8f2-01bc-42f5-b0a8-b88be5c65bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad58278-6879-4a42-ace1-1ab9541b0b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d147864-ff23-4268-ae98-369bc256d90a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f709e8a-3b62-4fcd-88a2-17f6d7bae20e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb069a56-fa99-4c71-bebd-0e5334ed8bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afa4d08-82c9-48e8-b6dc-5fad9bf012c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3ad969-ca93-45a3-9494-3a42f9c28f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de59367a-73b7-466c-ad89-a8c9e7bfc318",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee04fa50-147e-44d3-8594-dc9795342a3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e67ee71f-d2fe-4c0e-8102-85b9aaff5bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de5b63b-aea2-4148-af2f-0239fe15f4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fb04cb-ba57-4dbf-89c7-d7f96f8fcaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171bb6fb-6819-4558-8f0d-73d140bf3524",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f202f9fd-dd6d-48c3-b02f-aeae54af9724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f9a8df-4296-418a-814b-53bd2f2f9c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec06f54e-04fc-4d28-8dfe-c9936d8aaaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2eb159-3025-4df7-adc6-78fde67f3132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e11729-0b55-4970-8f1e-ad6cbb39fe73",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890a3626-b82e-4320-b207-ca9c65bbf22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f172e6a5-a487-42dc-b9ef-4aba75a01047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddaf997a-478a-43c8-ab96-f849e55b70b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a07ea1-3cdb-4af6-884a-49186082b59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70180dd-bdc3-47f1-99fc-eb5c41ce9459",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a72b10-efe4-4fe1-8728-a3539c88d64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc3e1d8-fba5-4aae-ae74-b304a14bd86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7836030-21e5-4639-91c1-56ae17b0880b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ac9fdb-6afd-4ebe-a622-f4168cfe9c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0f5edd-6cff-4f2a-88f1-39c78ba15509",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f17f64-919d-47ac-a217-6960aa15b830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe2e1a3-df3a-40be-a5bd-519380ff7724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea9710b-1901-4d23-9d09-f28ab5c79916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4194bb-b8f6-4d04-8e6f-dd2be3c65e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d27355-4800-41d1-a697-6795d6379bde",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d89466-c801-4d08-98d2-77fd4946c3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0ec8eb-93ff-447e-ad94-d146f266f024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f89becc-a81b-40a1-aec4-66dae5018c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9837fa7-5161-4e71-8c83-5f38be71b089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb365ab2-5c2f-441a-9e15-573e72e651d4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b610b854-8a4f-4d27-bca2-ef7e7ac90795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ea8d8c-bb40-48d9-9114-dd64f928ad6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae61b18-6148-4860-84d2-38b1595979c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337c8364-5b57-4d84-a52b-c65d09117640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c268d0-e289-493b-be82-ca56ade5a4ba",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2283bc-5a40-4ab9-8865-1f8e1059ae62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10ab32e-918d-4a2a-a669-8157d1636d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d2556b-4089-4681-b06d-c4178595a2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d658f084-f980-4841-b5e9-e50bd5546007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3da86f6-8d22-47a9-ac28-7081d9558ac6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94b72f9-6fc5-45a0-a27f-16579332de95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f592c8-5fd0-4e65-9ff1-bb5e630d2cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ec4a9c-d7f3-4f12-9ce5-8fa1cceee79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08ef84d-c252-4712-8987-41c4e70fc0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23488d5d-2c8c-4efc-8079-d891ae10eb87",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6676655-41d7-4149-9d88-96f33fa223bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2697b85f-e772-4bc9-b577-03b50882d9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae215f8f-e8c2-45e3-9dc4-147948c3a753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51314a5a-bf24-49ba-a895-7f00c7d28acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f544fa9-9869-4602-a4df-66ea5cd8cd2b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbca592-40de-48d0-91ee-2e92b45bd734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b38c5ea-fea2-425a-8ac3-ed9edaad0d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430579ae-2a2d-4680-a478-7e4530abf903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abab243-8ae2-478a-bf1b-9127e5c298e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72035d6-9820-4351-a3ba-699e55e05271",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2d934e-f330-47da-aa22-4d1c0365e592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b531980e-0d6c-4c67-8198-f658219ef47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82711350-047f-404b-b24f-73aaa237fc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a887cde-9f1e-4e7c-940a-817135cc11c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30778ea8-a26c-40f7-9413-643476218216",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d3a491-4f14-4fbd-860f-940fdc1e43fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fb5c9e-f160-4a8a-a024-a433759e67dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507f3925-5af4-4fed-9f06-70d5b2e2d325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "becb23c2-4d18-4c1d-bc2c-57e407f461b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac3fe3e-f61e-4104-81e0-310475d4cb46",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8570671-16ed-4614-af8c-37da0629b6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5b914d-d0fe-4478-bf94-a19e549a9ce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b88d80d-61db-4ccd-9847-3d0e2aab01af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e93eb9-4df7-4967-8699-93ad2c443d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c9ef57-a38a-4509-869e-d7e345629acf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dea700-0350-4e55-8a55-c7447a6933b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c40ef4-5e1f-4e1e-8682-38e692ac88dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22a67d2-0055-4fa3-b783-a9762e04ec09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b818b2e4-8d71-4df6-92eb-1bf10f756c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd52e41c-9761-4d5b-ae34-8cda0afa13aa",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebac2d5c-87e6-4bae-8b09-0e3f8a1b9633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8279ebcb-023f-4baa-95e7-4046a8b846da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415ea469-7a1d-446f-b354-2afdb1891f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25ead2b-bb77-42ef-b3b4-c5fbfc4f98b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394990d9-79ab-4531-9e4b-908915344e08",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c997b2e6-a5c7-4850-b25f-46c9a4cb639b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57779b3e-6dac-4748-a103-25f0d707a75b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd76573-d67b-45c3-a729-814e1467e727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20697f35-1810-4a99-bdfe-ad2db1689317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57a2f4d-1347-42aa-903d-558f448d79ee",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffc0f06-6544-454a-8124-d534834bd691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdb8019-d8ad-4dca-9464-0436a25be88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bc8f68-b1f1-4d5d-9a63-2827db8137a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2315ccbf-d38a-4445-aadc-e8e254cd955d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ecc466-3b16-4b66-97f6-92b86c2652f6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c5f466-4240-45ad-8c6e-f174f9f7fdd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c145439c-dbde-4530-b53c-f982392435b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac344de2-2896-4f28-99f9-cce4a85d9418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c154c44-7dfd-445d-b125-95a55eba0d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871862ea-1121-4bd4-9cc8-796431235b03",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d584be5a-7489-4236-bf22-41c69c424050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a212b2f-324d-4b97-a4b2-5283a15a79f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b38e351-7a94-448e-a2a3-47127eec6ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1734b0cd-3820-40c3-a67d-9e6920154840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae26eb52-fdc3-4886-aa76-06bf9ff913c9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9858c8a8-6533-47a9-ac59-9b24c4b7015e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5501a642-12b3-426c-9523-95cdda1a435a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7e08f8-86ac-487a-ba57-2d12ef13f3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63486409-9fb4-4bfc-b909-a7b52a1ed175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ada078e-e45f-417d-8002-6f4691fc9c57",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04df05a4-f46b-413a-b121-3726247de4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42863a3a-7198-49ff-9d19-423fa8e7aad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9badc2e9-e621-42b4-aeb8-4f7ef3a096cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7903dcf-e391-445d-ba0c-93ffb2a9f3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aed964d-8ae2-43e6-87f2-cb47cf145441",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e166dd-d242-4e0f-9869-4b032cbcf5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43ffbec-40ea-4cfe-be5b-afac5ca8a394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5109e0f4-8482-4844-b5aa-767e1cf57927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fd20da-e16e-48ef-a215-5ee0a4324be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56429970-b1d9-4b86-8803-431ea57d6a39",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e067c2c7-bd9a-4531-b5c1-0ce10381a40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eeca47f-6c59-4f37-bb7d-04652debb5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449295ed-ebdb-4ca3-acdd-2cd5030a5ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ce4945-da25-4d1b-94af-14fdaacaae33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526af2f7-0a02-47a2-9948-7cbbdf376027",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cc2613-c7e6-4c50-a275-a2bd946608b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad06f7e-a25e-40b4-913a-1b4f4cc52366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fafcf18-219c-4bf5-bf32-898d472c4d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c23759-c2c4-4a55-8a4b-7a1efa4cf365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2207e0d-421b-43a6-bd43-fc5179a31ee3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb4f7b6-7db0-41c8-92a7-c3309f6920ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f012ca-957b-43ee-a063-d6b1a2650eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f24007c-f254-4d5d-89eb-dd147f6f032b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598abbb3-23fb-491b-a840-11bae34abc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158afb5f-a2de-45f5-a40a-3b066be4e260",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876c1343-c30c-4028-9a88-5821b712000b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b668f14b-322e-4406-956f-a7f97ff8a6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727b8613-e32c-4a88-9d16-d27854c55a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7da595-46e0-4ed7-ba66-0431c829f010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce6f300-af4a-4570-9ac6-7aeaf61a168c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4484a0-96e4-44bd-a591-b76cefec23c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b1e564-7015-4229-9660-ca21f4e37512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8c8c0a-b55f-438b-a28e-19f12e434378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7bfd0d2-80b4-450e-bf9f-aea2443bf8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdfb446-b644-4ebc-83ba-7cb62660d715",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4883bcc0-acb6-4890-910d-8cb6441289fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3112aa-995d-415b-a557-4e48375ffe1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fa2b2a-7ce6-429d-a0a3-9ee7faef144c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a024e1d-a55d-4e14-af74-a7b1b8f915bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55984c68-48d5-4c20-ae96-a316816dddd8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633af175-0d19-4afc-9adf-2165cd453583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd0da8d-d80f-40b5-8a6a-0e6106606c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17ed7eb-67da-48b2-b00f-dd0339ac78d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08dcbbad-68d3-40c2-acf4-7b74c428af04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13fad23-abde-424d-8a0a-812a480daebb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561e9f8e-e450-4e4b-a1a2-e5f23ec8dcf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dee8462-68dd-46a5-9045-5152650a2370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b4742b-cefe-4659-a511-7040c3f1112f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10eef191-f347-42e9-9ca1-62baa56e513f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70786518-3735-43f5-9051-e52bfd9028da",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432ba47b-2024-42ef-a5e7-0311b960094f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a99d6d4-e874-457a-8e40-a016cb54a503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c64112b-8727-4647-bad8-4769bb6a9166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e625182c-d663-4bcb-aedb-dbb1908ff849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70373a7-030e-4fb3-9670-15bfc327892c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04996220-44bb-4bd5-97ab-3c12797804f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1a5012a-7cce-4e5f-a2af-151640588072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77ab945-2d06-4708-95a2-5185e01829d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3490104c-cdb0-495f-9af6-299d22988741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c644dc2-74bc-4fb5-8570-9e1adedc5399",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493fac3b-55ec-4e2f-a59f-df7c96d44655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93cb5314-1ff3-4dbb-9ad1-ebffb8557074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28291d1b-021c-431f-b16e-0da84a34a792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5874ec1-281e-4a4d-90b0-4e74c7a24392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6d0503-dc0f-4676-bb37-646274d550a3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd550a90-1b20-45a0-8cd8-35af841405fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ccb61b1-7020-466e-b926-0f75d01ccbe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b37ef79-37ea-4855-a405-26017d5ade41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914fd3b0-d902-417a-8967-e53452167200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b381fad7-40de-472e-b1e4-ccca51793d6e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e5475a-0d8f-4e0d-a705-a77161eb087d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2822b52e-1004-4492-bec2-4aeeaddc6e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98947c8-dc39-4c41-8e90-dfc37a2df1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8460e38c-cd57-4668-9b4b-7b8d22af7c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4689f6b7-4505-4e19-b5c5-f4190cc76983",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2311a20-8cde-43cf-bd88-a7dc79f16193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83cc8e15-c6a8-449f-a81f-f30e92f4f00a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a11532-8020-42c4-8143-0a785722beba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4748c24c-ab06-4b3d-970d-e4c652d7fb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a633fa-3f3a-4b2b-a44b-33d1c35aacaa",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20df1194-c411-42b8-ac12-9f935c1d3787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fce1d4c9-eced-4442-9aff-10d6b6e8d546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3e1619-8dd5-4e01-bae3-b7c90512bdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a300cd0-cf72-4865-b522-bcdda541870f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44967e8-f2e6-4cfd-a16d-d9299391cfff",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba2bfaf-0829-4043-93bf-20e62c6a0145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1984f24d-fd63-4ab3-adc7-2ded47f46b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d3a6fe-911a-43aa-a44a-60162e6e7a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a19dae-6a33-4cfc-8db5-7c39b022a185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd6acf1-d123-439d-b981-017f292e7830",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576656c9-9f47-483d-9dd2-93e1edc9d991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "820ade81-1ad4-4822-9492-7ea9cca0e3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c4a4e6-9597-4bb5-a934-d70e3e442ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be36d50-0fbe-493f-9d93-9f10bafb27f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8147cb94-1fe9-4af8-9318-21d33f0ba0fa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc27304b-650a-41f2-99d9-69df6ada0f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9130be8c-fc0f-46eb-8a78-9d20755000e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83db803f-f37e-45c8-942b-40129a7ddabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efb65a2-d3ce-45f0-b65f-5a456e117644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781a0b7f-ceb5-4152-9edf-aa1eb1cf86f1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07df692d-3b88-4205-b6e1-689b2d79398e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87a35461-fba3-4b72-a162-58a718854a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b109f9-b1dc-498b-911a-d2ed785d79a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5fdead-ed19-4dbc-8eae-6fc0198a0d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6affeb8c-7a99-4352-8a8d-1670c38a3e28",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85220a73-5432-432a-9c1c-457f0cee09dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44cbad98-c596-4373-a6a7-56307c9902f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232bbdd2-20ed-45ce-aa7c-57d9cb30aaf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc80db1-7281-4516-a297-9ec660745ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487815b7-9982-4cba-8ced-9dafdedd35e3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49af919-cec3-4d2f-8f24-5096c359d39b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84508bf5-ee80-433f-9337-02ce13e4b981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f4db06-7e76-4a2e-8c35-9534e3bf9fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5103927c-3e16-4266-9990-cc1701b5b337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db6af2f-9bb7-4c01-ab36-4e4a6776411b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374b8571-9889-4e3e-bf16-d805e9d8d6b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bca3be03-f5c9-46d3-8712-c8cee68fa60c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dcedfb-a9d7-4266-a385-468121a60fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1d554e-a207-429f-957e-6347fee559b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6455eb-b2ad-4169-bf3c-fc3e582a504c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52103b4-a6fb-4469-929f-fdcff5d426cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "819275e3-fce8-478b-a4a1-47918f35e3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653f13cb-561e-431c-9d9f-f9b48a522f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59505a6a-d7ef-455a-90f3-528deb9bd209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946b9dd0-c037-4a6a-9e19-1f1bd29fb0c8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1747f04-58d8-4dd5-9dce-d4dd3e922f44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75cfb4c-ce3c-4f89-84e8-54a661e5c7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21749dc8-05ab-49d3-a1a2-96747affbad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fcdd820-67bb-451c-8e48-c066a326f574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912dedf0-a19c-472d-9693-f5a6fad5c964",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a258ee-726d-4265-bb22-e475dc473231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b74bac76-93dd-4aaf-8a10-a7ae1d0650d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec4a914-de06-45e9-bfba-753652020451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac9e9e3-cb72-4564-852d-ce1f03ed2b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb8530f-29df-4353-a587-43d0f4c5a8d4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24ae1aa-8aa3-4266-9c75-6635df7d4041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63ecf032-36e9-4dff-90bc-95f3454d7d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d48ead-39c4-4511-afc9-e53d4a59933c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ef1b45-8805-43bb-9883-ffc1be2e8847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501d4275-55da-4164-b55c-dbbded31def1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ddc803-6509-4997-82e2-0e3a539caefa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d32c44d0-6eb7-4897-b572-7f4b0f21e545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dd0ae4-1d49-47b2-8a6e-099616e08c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68c6cb0-81f3-4dd1-b1c8-ba3f81f36559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb445fe4-50ad-4a81-be14-3dacd7ba2892",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041c9e95-864f-4924-8825-e98c4e6f9640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a059f248-a375-4ef3-ba78-e11190881e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fde47f-295c-4d83-b617-c2853323f2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549fbfe6-101a-47fe-ac1b-fab0c833ae24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435dba74-fdb1-4b34-8d5d-b38cd923fe50",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cf6ccd-cd72-4a39-a996-23e774ac3017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eb47f72-ad92-46aa-9354-e2ecf09ac69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2a9dfe-798e-4852-905f-98cb2fce7fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ec568f-d5e3-4966-a532-8bfb822bf4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b3d8e2-8baf-42b7-9927-c9fd9f256f53",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04722dba-1582-4231-9faf-da43f6d185e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34404bc6-242a-407b-bb29-9edd66bd2a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de844ea-8668-410e-bc15-d4065d6a2e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e5f6c6-55a5-4dfb-aaf5-270b589db37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc15fdc7-5027-4011-9a40-0c58eac9648b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d44083e-7ebf-4f86-a370-ee9630e70f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d76e7a6-ae8d-4091-b0f6-7b8c332775df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cba6cde-1767-4f88-904d-10ee46b5d2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3b8d8f-d729-479a-9370-b3bc78098687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422bf0fd-04c4-4bc6-b60b-de421c9ca349",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d4be17-6265-4e46-90e2-a112722f71ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62a48fce-843b-464a-9173-132622a3b879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85290858-0dc9-4075-92d5-1f86a6d8e79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a7a1dc-9fd5-4409-b114-7f2b2d600063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2c7849-04aa-44aa-a36b-d32f233df158",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1ec8ab-671f-4a49-b810-0d87abcd1eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba77aa73-b6f0-4e49-807c-4914e5d7e9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ff3e4f-da6e-4b4e-a7e1-e2cb78bf7cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899163cc-8781-493c-914c-ccddf22e0e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133c29a9-9d94-41b4-8965-875e97a25fbc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ded8fa-fd24-411f-aeeb-52400186c257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15016543-1f9d-41e2-b689-4c0346ba88f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4e7b8c-08fd-49b6-a3fc-c963a656e1ba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea83c8a7-260b-4553-9c58-f81f13f6f117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bacbd5-84f3-4169-beef-99f14b734fa3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e11fe2-0dab-464d-97fd-6838c02df661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "444f3c1d-d40a-4f7a-a0d2-4d095365fe46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "accfc03b-5427-4086-8bf5-15fbaaa911fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7da9c0-9b8e-4e26-a99f-5568d6310152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b69098f-3f67-4783-8157-57c456ac6c90",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77459de9-3021-40a0-acb8-0528bdcb9025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9da981e-488a-4b27-9965-ad81bcb6cfd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f07222-2a03-460e-b62b-b3445ddb0e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b831265d-f741-4f09-a690-4e3dc17973dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf756ee-24fd-4818-ad6b-7d1ef4d063dd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec92fb0-5d22-4500-9143-f9386cf5b3d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e17e90ce-d797-41c4-806a-9c837f2f20ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f8598d-7ea3-48db-beba-831fd1d733b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1844be-f634-4aaa-942d-e7da7b3ba792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b2fb0c-54bb-4e3b-8683-c0d937940c00",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cb8b71-35a2-442b-99f9-bf5c87c6724d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6df011-0d0c-46eb-8192-13876a0d5337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5d6c82-8517-4d7c-827c-ac2979be3ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec13b98-b1fd-436f-8f1b-e149dd3e2af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2f9ec6-cc63-40eb-a022-07fd1c3d4f51",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b15c64-15b0-47bf-b271-9e9c26b32e3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e0fa791-0107-4366-bbc7-5c5ea1913d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83eb0ad4-a7f9-434a-90c5-48be8400acd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3ae278-9819-4642-aedf-504c623796a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade9f953-1970-4983-9cd3-57e7afed10f8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7cfa63-bb9e-4c24-9e2e-2e1a1ebb8f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "019cabc6-9655-42a9-bd19-64c79d8a09d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507999fc-3d6a-4c6c-baea-3f485041c3ce",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e682489-4ead-407a-8821-4b156b6ddd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7c2ae8-9ab8-4967-8129-233972a99e7b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d503ca1e-200e-4a38-86c7-ecd5400fbbc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89fd0430-64b7-433e-bb39-f583902bf5bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59e4bbd-0c2e-44c5-bc63-45896cba5e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d86838b-199a-4f92-9534-3ac157768a4c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81ea149e-ef0f-433d-863c-f9b604200d26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9a9bc18-8db1-4bfb-9d7d-de87d55e3d2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d92056b6-4e97-4b0d-aec5-59f616735af2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8aa3914f-2cf8-441e-b2bd-37055595fe59"
                    }
                  }
                ]
              },
              {
                "id": "f35449c4-427d-47c6-beb7-d38a3ccf8365",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0cf4f60-ca81-45f6-a301-3c9c7ad1b928",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a39c7c-f26d-430c-8bd9-ab7da5812bc5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4ba57c42-15bf-4a2a-ad1d-7455bf8372ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f63d97-2442-4c60-b8e5-233f5599cd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5b979c8-024c-45ba-9189-6478aef54434"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81d370a0-a9b5-47ba-9263-4bce1c2c9afb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5089008f-8e2e-46c7-8b8f-e306cebdaf6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ccec8a4-d314-4683-9cc0-9bb4765c1555",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd2c7032-662b-4768-af78-3ce95ddc51a3"
                    }
                  }
                ]
              },
              {
                "id": "191fd207-92c0-4951-8d84-00cbfef6850d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dacb371e-111d-4ed3-823e-ff62c71d80bd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7601964-06c4-47ca-b149-bd2a5a5e639e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "22b6be46-4398-4965-9d31-69c9a5da448d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae4112d-f028-402e-bbec-0af6e82ef393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1146ec9-20d5-4217-b325-56c734e8ce3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "75ca9126-01fb-45b6-b26f-191c1fd0eef5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fbe3c24e-5af6-435b-8ef7-0c6c48b62249",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b258fa62-8b7f-4c6e-b74e-4ca31bc95c53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dbe238cd-2f19-4052-8719-724a228e6043"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "201fc871-5ffc-4464-aac5-ee60ab955dd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4660be6-3d79-48a8-8107-3c4869535850"
                    }
                  }
                ]
              },
              {
                "id": "1b3aeee1-d037-4159-8011-fa8f933be5e8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "520bc94a-6ef4-44f9-b943-3251b4343127",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "00bdd073-5bda-46d7-8b82-c8eebd15dd0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a10016e6-f42d-41bc-9373-3b685634a98a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1703f041-d0e4-49b9-a0d2-af66e3c5069a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88270203-8122-4e17-88bb-906acca08eeb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "be853e10-7811-4c43-9601-4117f7ac63ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e0ea192-bb2a-4239-b262-177eb031244d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9d2b60d-4405-4a83-aaf3-5b11c7cad0dc"
            }
          }
        ]
      },
      {
        "id": "3c599024-a33f-4e81-85e3-f5cdbffb9311",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "25e9a504-a5a1-4906-930f-9b4b730e7358",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a23228b6-26e9-4210-bbef-a73fdd9e3718",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "657fff64-8548-464a-bbb2-b9bdc09d8369",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757d8f57-f0a9-453c-93c0-8857a303973a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "670f7a8f-2b29-4735-9376-d5028d21f28e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf51fc1-a7ea-4076-a87b-879e90484058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92b27804-a644-4179-8d6a-142e6f1914c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b09c286-0642-46fd-a0ce-5eedb21d370a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81788886-a048-44d1-9e0a-f6df4cc7ecdd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9476fe6-fe6f-40fd-b72b-9d103acbce12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f797021a-40bf-4025-bd51-568ea0c5fa71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2f752e4-f16a-40e6-a075-464eaccbe96e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1303162f-2751-4d19-9f43-9665214a125e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "139533b8-fba0-45a8-a60e-59ee7f4cbe22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e234c96-6a00-4266-a354-28bbfdb20e72"
            }
          }
        ]
      },
      {
        "id": "b858b9e5-836a-4696-98b4-750e05772405",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "52b38e75-5a58-4db3-bc8f-eeb29b2187e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d905369-01b0-421c-a344-28a960a548d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5921967d-3c3d-434a-87c2-c14d4c294dbe",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7dab0b-0604-42ca-8910-d08dc855b9f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db91a652-a9b0-4b9b-aa5b-f49c5a02d998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2eea01-ce54-40b5-be00-1b9d2d804e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaa48f64-3e70-4d5b-849e-8d62fc454bd7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0b8f958-694c-4325-a7f4-27cea0806e2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26c7047a-6cbc-4996-b1a2-e097cffdfae9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f181565-46ac-4d4c-9e1b-4f3bc40b80db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffafa72d-a26a-42c3-b9a9-f3ca11b5f470"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1566caa4-e7bf-402c-82c0-c9cef0de9c12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "33310f96-5c01-4445-a24f-9687e72fd76f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e69dc902-e780-4921-97fd-e064d48e9e0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08944a84-0270-4df3-b6f8-92b2099de44f"
            }
          }
        ]
      },
      {
        "id": "db7f91a0-ddcc-4eb3-ae5c-7a093ef1ca14",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "41c7c6a7-1a99-46d9-826e-14c58a51cea6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "677d5d84-71a2-4875-874d-3583b6c21f9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0364c9c3-13e6-4891-a956-6e2fd2104748",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63875b2b-3bee-41d1-a0ce-27fd0af70cd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e665ad00-7193-4336-9463-983bc99a55bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8bb446-3ed7-4431-b298-8c840c2ba38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f34d57c9-c938-4428-ab49-1e591d21573b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdcf2043-8ade-43cb-a14d-2febf2385e2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "827c9225-fa39-4ab5-928b-bd176c042a5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef47f503-1131-4364-995f-04a65c762b26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec929b3d-a325-44ad-b1ff-8d29a334a250"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e86832c-5aa5-444b-897c-7a6bdb052652",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2fe60e1-c667-4d7a-98b5-9241c855d5a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "395a4652-0eaa-4a1b-9bda-207edd37c335",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ed5151e-1a93-4077-a331-e85d37ea9446"
            }
          }
        ]
      },
      {
        "id": "83a29fa9-a24c-4f2a-b307-16e5a1f8043b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49d31ecd-5485-4779-a85a-5ea20f3c6aa1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13254802-6489-4d8a-a4e6-80d372c8676a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "47b096fe-ae38-460f-93fa-d9d17b3238df",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4845a0ad-3c76-4741-81d7-76c2ec788e83",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f175f4b-fe50-44b3-8a28-d73c8ef7a4b1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 243.09824561403508,
      "responseMin": 10,
      "responseMax": 9851,
      "responseSd": 1124.69239342208,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701304557364,
      "completed": 1701304636112
    },
    "executions": [
      {
        "id": "e4ecd94c-5e18-44c8-aa3c-f499b4caf7b6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8d7e9e78-2ff5-4592-b05c-73232eb89c15",
          "httpRequestId": "053e9ad1-ac68-48eb-9d5c-33f12c35f5a9"
        },
        "item": {
          "id": "e4ecd94c-5e18-44c8-aa3c-f499b4caf7b6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "27bedf38-f5dc-49fe-9760-30869036a8db",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "5b3317b6-8879-4d44-9ee2-e6a5101bb103",
        "cursor": {
          "ref": "92fdb03a-86c5-4e8c-8ae7-93450acc34ea",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "93781633-5d94-43d9-9f75-33911c0a0dc7"
        },
        "item": {
          "id": "5b3317b6-8879-4d44-9ee2-e6a5101bb103",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "195261f5-97a0-4fb5-81f4-f1059e91e535",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "c9619924-f119-4f9c-82a1-64a95168e7e7",
        "cursor": {
          "ref": "e5dd76ef-5074-442f-bf06-e0aa6158e652",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "49f8bc5e-3191-4051-b442-172862360e87"
        },
        "item": {
          "id": "c9619924-f119-4f9c-82a1-64a95168e7e7",
          "name": "did_json"
        },
        "response": {
          "id": "292e055d-5232-4c40-a2b8-00a4c1d04d1d",
          "status": "OK",
          "code": 200,
          "responseTime": 1917,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcff9140-85e9-49a9-984b-7556c1c4570f",
        "cursor": {
          "ref": "88211608-e35a-4177-8be1-ae2137f282a9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cb88b00d-b4a4-49d6-a3c2-7d3175192f49"
        },
        "item": {
          "id": "dcff9140-85e9-49a9-984b-7556c1c4570f",
          "name": "did:invalid"
        },
        "response": {
          "id": "08937b2a-9363-47d6-a1b3-5240cb8583b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcff9140-85e9-49a9-984b-7556c1c4570f",
        "cursor": {
          "ref": "88211608-e35a-4177-8be1-ae2137f282a9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cb88b00d-b4a4-49d6-a3c2-7d3175192f49"
        },
        "item": {
          "id": "dcff9140-85e9-49a9-984b-7556c1c4570f",
          "name": "did:invalid"
        },
        "response": {
          "id": "08937b2a-9363-47d6-a1b3-5240cb8583b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ffd1ae-09a9-4c1f-a879-7013548655eb",
        "cursor": {
          "ref": "5d96433b-a66a-4d99-971b-9154242cdbe9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b16f0e95-af7f-4a94-967b-183570269a43"
        },
        "item": {
          "id": "b8ffd1ae-09a9-4c1f-a879-7013548655eb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1f667ad2-e246-4794-9d45-b9f3b4d58713",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1176,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90559191-19f4-47e7-b97b-ad5d9fd0bb73",
        "cursor": {
          "ref": "b44764fa-964b-4158-9a16-8991c64e1e1e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bb2e154e-245b-4274-adc8-bbe64a42f639"
        },
        "item": {
          "id": "90559191-19f4-47e7-b97b-ad5d9fd0bb73",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6a008c36-2506-49b4-b702-5ec9a73426da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d403b2-ffcd-4efc-b8bb-ca99721987f2",
        "cursor": {
          "ref": "b12fe45a-387f-4ddb-a798-d7a5c460a721",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4e1d1b64-bfd3-4d9a-b028-410427301714"
        },
        "item": {
          "id": "12d403b2-ffcd-4efc-b8bb-ca99721987f2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a4798404-83d0-4177-81a2-5e2bebe2a783",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ef4214-8e56-463b-abef-dc42715716ac",
        "cursor": {
          "ref": "49c96abe-4f8e-4b44-bc53-69d84da379f0",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4d664c70-6813-4576-9df0-bb7be2a68bc9"
        },
        "item": {
          "id": "03ef4214-8e56-463b-abef-dc42715716ac",
          "name": "identifiers"
        },
        "response": {
          "id": "68686a10-40f9-469a-bec7-78ee1f7f0e0b",
          "status": "OK",
          "code": 200,
          "responseTime": 1128,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af49c31-f93c-46c3-86a0-1d696a72c8ac",
        "cursor": {
          "ref": "ec6a3936-59f2-4acc-a364-144ce855524f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7e0ec187-d8ac-4ea9-92a1-eaaab6324cb3"
        },
        "item": {
          "id": "8af49c31-f93c-46c3-86a0-1d696a72c8ac",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2112b9a0-033f-441d-b065-6463444dc3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f67c752-2dd2-436b-804a-99713f07c48c",
        "cursor": {
          "ref": "54f298e4-fa69-43c4-aea2-b529a603ba26",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "53ce2250-2938-4905-83c9-99ef5ea28d19"
        },
        "item": {
          "id": "8f67c752-2dd2-436b-804a-99713f07c48c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "13fa1b1f-80ca-48f5-9388-b3814b25c254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425cd6b3-2368-4755-8502-50fb2f6db4ed",
        "cursor": {
          "ref": "4e217d83-db4b-4009-bfdc-f35e6dd3146d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0b47b36d-2fda-4c7a-a216-9dea97a5588e"
        },
        "item": {
          "id": "425cd6b3-2368-4755-8502-50fb2f6db4ed",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a11d7905-ea5f-47ab-857c-643f34abbd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb61f0de-28ac-49ab-a459-b585faee3db0",
        "cursor": {
          "ref": "42f23ad2-6bba-4546-9cd2-6a0835c09df2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "68ddf5fb-4983-4a2f-a7e0-d590a1ab25b0"
        },
        "item": {
          "id": "fb61f0de-28ac-49ab-a459-b585faee3db0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c459300a-0862-4557-8c1d-7621a83a8729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2965247-576d-4266-ae08-784147313199",
        "cursor": {
          "ref": "74123e6a-c187-41c2-ac26-0ef4aaf452c7",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5006643f-9430-443b-85e5-885382c9d239"
        },
        "item": {
          "id": "e2965247-576d-4266-ae08-784147313199",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7f46db57-f7ca-4b69-890f-1aa856620eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9998abf6-3ba2-42f2-bff6-fdc87b859f76",
        "cursor": {
          "ref": "9732a301-c81e-4a0f-a0f3-f48ae18ef771",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "366f3a7a-be3a-4e37-aa4e-3eaf9d72dad0"
        },
        "item": {
          "id": "9998abf6-3ba2-42f2-bff6-fdc87b859f76",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6dd0cbba-d155-4818-a357-b4fbd9c8008c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbffa2e-d10d-4fe0-9bb0-369956bbe41c",
        "cursor": {
          "ref": "379856a6-fbc5-4c03-807e-d500ca2f7bc7",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "606e0535-ce64-431f-9527-939218270a66"
        },
        "item": {
          "id": "ffbffa2e-d10d-4fe0-9bb0-369956bbe41c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dca5b11b-d31f-484c-a1cd-517fdb11dc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f7628d-b0cd-46f9-bf3f-c2f01907744a",
        "cursor": {
          "ref": "9dc0c5ef-5f70-4684-8b68-78a4267d1883",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9a91af26-6c24-40d9-add8-371ec80da9df"
        },
        "item": {
          "id": "d8f7628d-b0cd-46f9-bf3f-c2f01907744a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8da93012-f55b-42f5-957e-b722a716d45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295fef89-d2f0-40de-bd53-aff8f56f761e",
        "cursor": {
          "ref": "52d19f2d-7337-4f37-af90-258e898e6448",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bbccae14-a6b8-4b65-8673-b46dd92d4f61"
        },
        "item": {
          "id": "295fef89-d2f0-40de-bd53-aff8f56f761e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5b3ee1e2-66c7-4fb4-a64f-e04a5c34e7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fd6ed8-3593-45f5-ac10-fde2c283cb16",
        "cursor": {
          "ref": "f4d15239-641d-4185-b128-337b14ec51b7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8973744c-1db3-444b-958c-3be816ef8782"
        },
        "item": {
          "id": "59fd6ed8-3593-45f5-ac10-fde2c283cb16",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4d0c11c3-edab-4c18-83ee-3a2981f40550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1016e1e-3523-4a9a-bb2e-a085dda74200",
        "cursor": {
          "ref": "9e9e8400-46fb-4728-a926-a1dad022d907",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f6969515-86a4-481b-8ffd-2f9d76182f3b"
        },
        "item": {
          "id": "f1016e1e-3523-4a9a-bb2e-a085dda74200",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "64a45885-10d7-4ed1-bbaf-b7f4b02c1e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd848a01-32da-4ebc-b716-7d59c21585d5",
        "cursor": {
          "ref": "d3d2e1c6-ef55-484b-ae2f-02a1e27c5209",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1ae72ab0-ec8c-4b59-9d29-690cfb9f13f7"
        },
        "item": {
          "id": "fd848a01-32da-4ebc-b716-7d59c21585d5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "39cc4b62-774e-40ec-b230-60d521c37ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65258eb7-930d-407c-9f4d-1f79962fdb26",
        "cursor": {
          "ref": "5ffde008-fe5b-4086-8796-2ba163836928",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "23ecfa55-0858-4995-955a-89dfa4fcd4cb"
        },
        "item": {
          "id": "65258eb7-930d-407c-9f4d-1f79962fdb26",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dfda4bc1-5ab1-4175-a1e0-0b0f5f83b4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249474fd-bce5-4831-8e34-b68a0ef860e2",
        "cursor": {
          "ref": "9cb82bd6-d888-4211-84f1-a7fe5ac98a09",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f561786d-3316-447e-b8d6-60076f1f53c6"
        },
        "item": {
          "id": "249474fd-bce5-4831-8e34-b68a0ef860e2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ecce83f2-2a50-45f2-8f65-5685415dfda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3925f164-6572-4405-b706-78982c96ec7d",
        "cursor": {
          "ref": "cae51e17-cb88-49b2-89b7-6d46c4a17d0e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a37dc80f-fd3d-4c91-bbb3-024b12dd9e55"
        },
        "item": {
          "id": "3925f164-6572-4405-b706-78982c96ec7d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3649d6b7-5cc5-4ff7-8d44-ccaf10a6023b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804f4d7d-8696-4164-b664-45875988c285",
        "cursor": {
          "ref": "d134594f-a6bd-4fe7-b49e-774d8ad2c341",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e3b38561-de92-4ec9-8efc-e5a227f98732"
        },
        "item": {
          "id": "804f4d7d-8696-4164-b664-45875988c285",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9595bbc3-a23c-4ed1-86b1-08361d52aced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b3ad59-beef-4282-ac6e-923fd086b6b8",
        "cursor": {
          "ref": "ce1d2e4e-7692-4ded-9614-0cebb9d2773d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0aeafeb5-48fb-4a08-9e4c-d4a072a70bfc"
        },
        "item": {
          "id": "c0b3ad59-beef-4282-ac6e-923fd086b6b8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4318b46b-b172-42ef-b537-1469690ee7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b8f00c-3c2b-4fa5-8c7b-83f166b1f3c3",
        "cursor": {
          "ref": "67080d84-4d71-49c7-b218-e6a08466da20",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0d790fb5-3a54-4e1d-a10a-6a00dad3720e"
        },
        "item": {
          "id": "c1b8f00c-3c2b-4fa5-8c7b-83f166b1f3c3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "43828ba6-2947-4ea7-b445-16b3698b92db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e286422-24a6-4c7a-9ec4-0a49999f70fc",
        "cursor": {
          "ref": "25011759-ef80-43d6-89d7-bbf11763d966",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fbbe5dbb-f8b0-46e2-b4e7-a680ae97c068"
        },
        "item": {
          "id": "7e286422-24a6-4c7a-9ec4-0a49999f70fc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d0bbd5c2-b369-4f36-88bf-098770b7138a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0629e748-0ce0-4ca2-aed0-6832cf4251c9",
        "cursor": {
          "ref": "c8962e21-deb9-4c9a-8518-db550468087f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "39c47676-aebb-4d07-86a6-c35869c052f5"
        },
        "item": {
          "id": "0629e748-0ce0-4ca2-aed0-6832cf4251c9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "13bcfe0a-23bc-472b-9e2b-ab635c904a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d587538d-3421-4480-abbc-a0d06b721c57",
        "cursor": {
          "ref": "4b912f77-0408-4b7e-bf07-95670a1dd39c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b4dd694b-a5cd-4c29-a28b-0dd1d2c5b42a"
        },
        "item": {
          "id": "d587538d-3421-4480-abbc-a0d06b721c57",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e5c224b1-6cb1-45db-a9fa-3da5fba3c615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888ab531-2cb2-4cdf-beb1-42ef2d0933e5",
        "cursor": {
          "ref": "a12cd668-7aad-4c00-b856-5db31c6a2c19",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0c4204cf-6016-4a45-9383-0883ab1ca84d"
        },
        "item": {
          "id": "888ab531-2cb2-4cdf-beb1-42ef2d0933e5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5bae80bb-e7b9-4688-9016-c74373f27c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ec2b30-ab5d-4043-a5f4-16eba3461b4d",
        "cursor": {
          "ref": "d4509a1b-9f6c-4d70-823b-7251f72960fd",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6cadc8bb-c055-44d2-a997-767bcff0546e"
        },
        "item": {
          "id": "f9ec2b30-ab5d-4043-a5f4-16eba3461b4d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4df663a3-e5c8-4a35-869b-9aeb911f52ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b5c176-6fb4-4c1d-a74e-539627b0253f",
        "cursor": {
          "ref": "7e78c3d9-f149-488e-ac4c-8d7e8a70bfa0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a19f12ca-fc8a-44f7-9110-85d544feb8e7"
        },
        "item": {
          "id": "d9b5c176-6fb4-4c1d-a74e-539627b0253f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bf62f070-8224-4914-b10c-30ffd81b915d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bd2226-407f-423d-a9c1-e021a36b08ef",
        "cursor": {
          "ref": "ec755967-ab78-4f7f-be44-35b4ffc59a6b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "acc9750b-a406-492b-973f-afb66b2b54f7"
        },
        "item": {
          "id": "53bd2226-407f-423d-a9c1-e021a36b08ef",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9a41a30e-a4a4-4991-a079-98fd1f3be260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510253fa-61c0-446c-87fc-4e57b7f0e42e",
        "cursor": {
          "ref": "c8691313-f7c3-40ae-a7c3-4c1bb992a73a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ba1728ae-d006-4e9e-8a07-1122ef595752"
        },
        "item": {
          "id": "510253fa-61c0-446c-87fc-4e57b7f0e42e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c1ed0b54-3a8b-4565-b8f5-f10d5b7dbdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5803f44d-0085-44cd-b258-89ba40b023b9",
        "cursor": {
          "ref": "2b3796f3-35fa-438d-816e-9e5a47622182",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7fa15b7e-b97b-4695-8879-362461e7f238"
        },
        "item": {
          "id": "5803f44d-0085-44cd-b258-89ba40b023b9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5c3e141b-6e4f-40c4-82cb-928fa119b07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848cac64-23ba-4a1f-a3da-5626a516f902",
        "cursor": {
          "ref": "221668d7-10c7-4837-8f9c-4051d511c201",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "eeb9344f-c876-434e-b9eb-7045e525fb6e"
        },
        "item": {
          "id": "848cac64-23ba-4a1f-a3da-5626a516f902",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8ee78f77-cbcc-4d94-b617-7fb88d4642ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fd1718-f436-4901-a76e-971b3b0f39c0",
        "cursor": {
          "ref": "df714340-e72a-49a7-b4fc-b62950ba051b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3849dc1b-4706-4172-8fca-09c4dd56ad58"
        },
        "item": {
          "id": "a3fd1718-f436-4901-a76e-971b3b0f39c0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "30f5f59d-6442-45fa-9600-1748d072af7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a4b133-1b5f-4abf-be91-827eb77fc480",
        "cursor": {
          "ref": "cb202b3c-835b-49c1-baef-9eea20cdd8ce",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0d9c000f-3ebb-4fc6-b78e-00e82ffdd54f"
        },
        "item": {
          "id": "07a4b133-1b5f-4abf-be91-827eb77fc480",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5e0164d0-2c76-42e8-9c3e-9a4e0c347453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d625098-5007-4b90-b369-48b11eefe9a3",
        "cursor": {
          "ref": "4128fbc2-97e5-4d91-8d68-67fd0452110f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3fbb1d39-5cac-4e16-8200-a0adf2f4584a"
        },
        "item": {
          "id": "3d625098-5007-4b90-b369-48b11eefe9a3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "62d6ccc6-3b7f-4db5-9c52-26cc0edfb8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32782f2c-041e-4265-92fe-ae551f8a8c3c",
        "cursor": {
          "ref": "164c4fd6-f106-4685-be38-0780ed84e8d1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0e302f40-b0bc-446c-b275-288a091e2409"
        },
        "item": {
          "id": "32782f2c-041e-4265-92fe-ae551f8a8c3c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "48a78149-0d94-4ef8-9352-11e4148dd2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8228dba4-877c-4045-94db-522a7636abb9",
        "cursor": {
          "ref": "d8d2dfb5-e8f3-4b52-8241-f6e55a0b0049",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "08a72294-1f73-46a3-886a-890d2b56a8b8"
        },
        "item": {
          "id": "8228dba4-877c-4045-94db-522a7636abb9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "db16eebc-3f02-44b5-b6c0-a6dc51af1468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88118862-504f-44ef-ae01-ec524b47a416",
        "cursor": {
          "ref": "0f93a382-e754-45e2-9308-01f2e1a99e7a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4b8e72a8-ad08-4034-99b3-49eb12737049"
        },
        "item": {
          "id": "88118862-504f-44ef-ae01-ec524b47a416",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5af0efe5-0c7f-4374-939c-053052f9db33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0f6cb7-b70b-4b27-90a5-01e0d3a72993",
        "cursor": {
          "ref": "3725f822-fd70-492d-b58e-43ea48f048bc",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "18221fe7-42b9-4200-a06d-36e526176b40"
        },
        "item": {
          "id": "0d0f6cb7-b70b-4b27-90a5-01e0d3a72993",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "86383d43-7ac3-44d5-8607-b0ba04fecabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84fd268-bb48-4b0a-9029-7e4f6c99585e",
        "cursor": {
          "ref": "8ccd67bd-5de3-45d6-b59a-f8b4f5ac28f1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "314e6d9e-ca47-49f9-b571-63f66839cfee"
        },
        "item": {
          "id": "d84fd268-bb48-4b0a-9029-7e4f6c99585e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "491b1a81-e356-4759-9bc3-2f3f1540cfb1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1332,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e687a46-a2d0-4d3b-8574-cfd8162d0b85",
        "cursor": {
          "ref": "ee9e447e-4464-43f3-942b-e16cefe33683",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d61135f2-0481-4e5e-b0b9-8dd765f78878"
        },
        "item": {
          "id": "2e687a46-a2d0-4d3b-8574-cfd8162d0b85",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c30f731e-2bc3-44b1-8594-dc35a18614a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722ca0a3-82d2-4910-94d4-b37258ef988a",
        "cursor": {
          "ref": "5b35af73-f766-4546-887d-6cdfdcc0302d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "85f16539-fe4f-4a04-8bde-7d5001fa6e79"
        },
        "item": {
          "id": "722ca0a3-82d2-4910-94d4-b37258ef988a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5518abd1-fcf5-452b-8531-5d1a7f658ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049b6311-2967-4e97-a999-e406e4dc827a",
        "cursor": {
          "ref": "3edf3a10-838c-44ce-83ce-5daa3848a579",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "98bae164-d7c2-4557-82be-f10f3e1a7845"
        },
        "item": {
          "id": "049b6311-2967-4e97-a999-e406e4dc827a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "eb6e20a3-9cc3-438e-a30c-345c0fdadc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca28d53-3b3e-46c2-97a0-f0798e0e867a",
        "cursor": {
          "ref": "66f559c7-b615-41e9-b04d-971e8174ab01",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4d93dc64-b672-4cce-8238-bd0654fdc6a5"
        },
        "item": {
          "id": "1ca28d53-3b3e-46c2-97a0-f0798e0e867a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "90ae8338-8819-4591-ac99-f01fdf6f3b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb93b525-7cd9-4fa3-bceb-5d25c849f481",
        "cursor": {
          "ref": "9b339b1e-7624-4de8-a489-6fae567bbf59",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e7fe399a-d7ac-4f5b-81e3-92f7571ecf35"
        },
        "item": {
          "id": "bb93b525-7cd9-4fa3-bceb-5d25c849f481",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "65e1724f-9fee-4e6a-8d41-d79be8bd06d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb376a2-7b75-464d-b429-ff9c749ade17",
        "cursor": {
          "ref": "56400bb7-b089-4f02-9716-08b60acf91c0",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fd6b3205-105c-4c7c-98e3-e427a65f93e7"
        },
        "item": {
          "id": "cfb376a2-7b75-464d-b429-ff9c749ade17",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "be01dfb3-ebea-4f3c-91d5-d532ee320750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69be6538-d2de-427a-b939-fe7debc3bcdf",
        "cursor": {
          "ref": "2820a71a-f56b-42bd-a4d5-fcb328eb15a9",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "139e5117-ab27-4229-99fe-4dd14b595a2a"
        },
        "item": {
          "id": "69be6538-d2de-427a-b939-fe7debc3bcdf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e9a736da-ce6c-4adc-a6d1-f37ef2e80d16",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1334,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3191d0a-e2d6-40fc-a1fa-28a19ec6417b",
        "cursor": {
          "ref": "c7ea5567-d8ee-4e75-9e8e-6ae71bca5484",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e3f06af7-989e-49ff-8fda-35e8b29cf577"
        },
        "item": {
          "id": "a3191d0a-e2d6-40fc-a1fa-28a19ec6417b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f656f10a-2528-45cb-b5e0-71bc61350c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe5d21b-d4b5-4ab0-bf63-8397f6439534",
        "cursor": {
          "ref": "1251c3b8-6f96-4785-8aa0-09d8e2754912",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6130bdea-895d-4e5f-b73e-ee1e82da6e34"
        },
        "item": {
          "id": "5fe5d21b-d4b5-4ab0-bf63-8397f6439534",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8ccf1d55-0fb9-4c69-a8da-7b442fad5c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20550a5-df4f-42e6-8cc1-ee31d9ffcf7c",
        "cursor": {
          "ref": "90bddf33-6dc9-41ed-bcc4-bb67d1c22513",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "145acc28-d814-4d11-92c2-d821d09e5b01"
        },
        "item": {
          "id": "f20550a5-df4f-42e6-8cc1-ee31d9ffcf7c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2493ca5e-60b1-49ae-a1de-38b41a34546b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9edc5c-73c5-42ea-bdee-bf812d9ff426",
        "cursor": {
          "ref": "cb2b03d2-d15e-4b4e-a68c-06a238340f1c",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f9c1a9b9-cf16-4de3-857f-df64ae49257c"
        },
        "item": {
          "id": "7c9edc5c-73c5-42ea-bdee-bf812d9ff426",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "83d479b5-5c1c-4185-8508-ae3abc5abc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d355401-000f-444f-afc7-ce7dc66b669d",
        "cursor": {
          "ref": "dca26a9d-75fb-4c16-9bd3-3b2d833593be",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e80fec93-996e-4c5f-b8b3-3a069cbe80d9"
        },
        "item": {
          "id": "0d355401-000f-444f-afc7-ce7dc66b669d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "80cf7baf-72f1-4d0c-ab09-7140e11d2574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9861f669-3ca2-48e3-9062-57e23e9408e9",
        "cursor": {
          "ref": "1f5101c0-ca5b-477d-8eea-8a8ea6e6e062",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cf0a25b4-4291-4a03-a4a1-86ee0f0ae3f4"
        },
        "item": {
          "id": "9861f669-3ca2-48e3-9062-57e23e9408e9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "72101b00-6478-450e-ba83-6604dd5830f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898ddc08-1961-4813-817b-ae36dfd07725",
        "cursor": {
          "ref": "7844f851-e764-4ef6-80a2-033337dafd30",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0acb2f8b-fd73-4261-8692-5fd9333a7039"
        },
        "item": {
          "id": "898ddc08-1961-4813-817b-ae36dfd07725",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ae31881a-d5f9-48a1-8494-bef3d3c48194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad02290-6367-4d1d-8d16-2def7997b245",
        "cursor": {
          "ref": "b1c11a2e-ca8f-46d9-9a21-071024e7457b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7242cd17-ca49-44c6-b2b9-738f7f3105aa"
        },
        "item": {
          "id": "3ad02290-6367-4d1d-8d16-2def7997b245",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f1fe9c00-85c7-4cde-9b4c-0eb0bed4e9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e06730-d9b3-40d0-b17a-882f37a4dfc9",
        "cursor": {
          "ref": "8f7da309-e62c-4647-94f6-403deda403b3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cb10c69e-8b60-486d-b116-fb9826411a22"
        },
        "item": {
          "id": "48e06730-d9b3-40d0-b17a-882f37a4dfc9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "58017ccb-155e-44c6-ae78-d93ad214c6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8146ce90-2823-4213-adde-eba99011876c",
        "cursor": {
          "ref": "707ced98-011e-4aa6-8959-03d6559e2375",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "58f67033-afc9-49ea-9fd9-bb0438f02f5b"
        },
        "item": {
          "id": "8146ce90-2823-4213-adde-eba99011876c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "435dd3cb-7915-46ef-818d-9b19aa4f97f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f704f488-268e-4e07-9f92-2f6fdd4c685c",
        "cursor": {
          "ref": "c5e62ee6-d3fa-42b6-a185-bbc0323aa0ff",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8c20caf1-b81d-489e-9337-0638490aea05"
        },
        "item": {
          "id": "f704f488-268e-4e07-9f92-2f6fdd4c685c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d4939d5a-8136-450d-9532-1451651846e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc4dd5f-2f6a-4a9b-945c-2acda28cf30e",
        "cursor": {
          "ref": "b2d28e11-2bda-45ca-8225-449921b4dfc2",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e3fd008b-9510-4903-8f14-33648e1dd461"
        },
        "item": {
          "id": "7fc4dd5f-2f6a-4a9b-945c-2acda28cf30e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ad1554c6-2b71-4663-a077-7e092e12d179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07924cd1-b1e3-4fca-861a-a8674860c3a5",
        "cursor": {
          "ref": "11786cf9-7e05-4858-a8f5-bbfdd333f7d7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e34d1f45-5f94-41b4-9164-1473e5995377"
        },
        "item": {
          "id": "07924cd1-b1e3-4fca-861a-a8674860c3a5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f9283597-47c7-47d8-8406-9eb3be6a57b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa045dd4-17fe-43c7-8f3d-1b0cc4de799d",
        "cursor": {
          "ref": "bbfdf5e3-c02e-4be1-97b6-94c1245b931a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ed8d609f-5402-4dbc-97c6-7f3e43e1ab64"
        },
        "item": {
          "id": "fa045dd4-17fe-43c7-8f3d-1b0cc4de799d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d70485db-4015-4894-b538-f25603a2797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c3565c-fb48-4bbc-93d0-a95b432dbb6a",
        "cursor": {
          "ref": "2a1d59bd-a27b-4f04-9dc8-451fbaebedff",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0df22632-4d41-4f97-a47a-31c6a57539ff"
        },
        "item": {
          "id": "a5c3565c-fb48-4bbc-93d0-a95b432dbb6a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "aeb019c2-67a0-4f2c-83ca-ae403cb76dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64459de3-755b-4b7e-8cfd-0e34a8da19a2",
        "cursor": {
          "ref": "12ac523a-0ad1-4da0-acc3-1e9117e8d018",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3acab418-4d1c-4348-9b43-b2e5456860cd"
        },
        "item": {
          "id": "64459de3-755b-4b7e-8cfd-0e34a8da19a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "faf14a41-f7cb-42f1-85ad-f7c5bea8888a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1d9bd9-7ead-43a8-acb0-0cabc5c53bf5",
        "cursor": {
          "ref": "ad02d579-0129-490a-b213-41cb60cabd03",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "12c3ab9a-b418-4b02-afb1-c201f829d106"
        },
        "item": {
          "id": "3d1d9bd9-7ead-43a8-acb0-0cabc5c53bf5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "abe93c65-23f3-4a07-a9be-fb1695269c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a59b46-7b23-4dfb-810a-36cdda3ce4cc",
        "cursor": {
          "ref": "b53060bf-2595-426b-be6f-41367c1c2cc8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b1fb696c-1784-4158-a2eb-31dc7cae8b65"
        },
        "item": {
          "id": "57a59b46-7b23-4dfb-810a-36cdda3ce4cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4a1e6836-da5a-4866-a482-cd2ac2e43edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3353736e-71a1-4b5d-a079-3c66caa228d6",
        "cursor": {
          "ref": "a7e5539a-22e5-4d48-9d85-27219e4e2dd9",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bbee03d5-a747-4bb3-98ce-028c9a0205ba"
        },
        "item": {
          "id": "3353736e-71a1-4b5d-a079-3c66caa228d6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "838ee0f8-ade2-4f4d-9c79-291e7f49557b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37234f86-d463-418f-b69b-a38fbbdb0349",
        "cursor": {
          "ref": "9c67840a-08c7-4b46-8af5-87658774225a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "87977a7b-ba4b-4470-bf36-d8db55c98d16"
        },
        "item": {
          "id": "37234f86-d463-418f-b69b-a38fbbdb0349",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9b4fac5b-ffb4-418a-af0c-64aae05e0837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332b0dd3-8780-4dfe-8142-d4d1eb31996f",
        "cursor": {
          "ref": "4c3c07fa-4293-47f8-ac6b-ab837b1ff3d1",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bd5d2085-b123-4cb4-878f-05f9c812a8f9"
        },
        "item": {
          "id": "332b0dd3-8780-4dfe-8142-d4d1eb31996f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "62a98903-4e68-4470-81fa-81df2c23d36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebbda3f-4685-465b-9497-809d50819d5e",
        "cursor": {
          "ref": "463ff76e-80d0-49d7-8be3-75878866bdd0",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "42cd7fac-6591-469b-b365-ec0447f4d794"
        },
        "item": {
          "id": "1ebbda3f-4685-465b-9497-809d50819d5e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4f262b6b-4713-43d0-8a26-2a1393d8c705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45533f5e-c59d-4b3d-b867-926aa6b518c8",
        "cursor": {
          "ref": "519263a2-a764-41a7-b5b4-1c179387f1c5",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5cd0370c-4e21-4d2a-b9fb-9f7bf4de63bc"
        },
        "item": {
          "id": "45533f5e-c59d-4b3d-b867-926aa6b518c8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b9c27fa2-44bc-47a7-927d-c5be8374afc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b711f16a-d1a1-4656-bb47-1d80b300b01b",
        "cursor": {
          "ref": "63c733d4-529d-4b06-87ff-eecad9fac7d6",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4d8725fe-9074-47ad-8661-9d80493546cd"
        },
        "item": {
          "id": "b711f16a-d1a1-4656-bb47-1d80b300b01b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3d27d59c-8bde-43ce-8aef-b627d5aa5ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f3b531-d338-4c84-9a71-5f94489eb011",
        "cursor": {
          "ref": "de6dbb02-a7ea-475d-9f61-48a0198a70f2",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "142347ca-8789-46b1-aaeb-c17be56110d5"
        },
        "item": {
          "id": "d3f3b531-d338-4c84-9a71-5f94489eb011",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "81627d2f-fcab-4f61-b2cf-5b6b49162d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc38320e-7213-4a41-92db-bd22d1115208",
        "cursor": {
          "ref": "fb25a9d4-2370-40a7-ac69-d98053af9d2d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2a586b35-2560-4daa-95ad-73e00c6d849e"
        },
        "item": {
          "id": "dc38320e-7213-4a41-92db-bd22d1115208",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7d41f3d2-85cc-4185-ace6-79bd404533c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6f46bb-47d5-481a-9ef4-b0f216c308ca",
        "cursor": {
          "ref": "b9a549b6-2475-46e5-9a77-3fcbc7433570",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f002e725-8d84-4c34-9939-009c0418c445"
        },
        "item": {
          "id": "3f6f46bb-47d5-481a-9ef4-b0f216c308ca",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f232e03b-ac76-4203-b79b-80ac199cfb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d084114-2c36-4a65-aca5-4b2288fae85a",
        "cursor": {
          "ref": "cf5465de-0fc2-40c6-b129-0424a373d552",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ee34d3cc-c48b-454f-b3cb-e5eb891c15a2"
        },
        "item": {
          "id": "8d084114-2c36-4a65-aca5-4b2288fae85a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5d152ab3-3765-45f7-877a-15e7bd01ae03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90bfbec-1e9e-4898-b5fa-635fd1193887",
        "cursor": {
          "ref": "2c3eda0d-1128-4d8e-acbe-a33209e1d5b5",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4fe8863c-01d6-455c-8176-3e64e1983fc1"
        },
        "item": {
          "id": "e90bfbec-1e9e-4898-b5fa-635fd1193887",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7b710306-ba78-4bf8-89e7-a9d9afa9e1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0575d71-f37c-448a-bb99-1b234eaf1c1b",
        "cursor": {
          "ref": "5ffd01e7-d684-498d-9380-d82ce4777d5b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b3a5b2b2-4e54-4815-b207-a8a5932128f8"
        },
        "item": {
          "id": "f0575d71-f37c-448a-bb99-1b234eaf1c1b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "af49501c-e486-41cf-bc2c-1d7ac911f4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5bad6d-05a6-4564-986b-8eca7d2a0839",
        "cursor": {
          "ref": "f1e881cc-43a9-4fea-954d-1b96bca438ed",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9e353b5e-50bc-4c74-9b14-949cafc964a3"
        },
        "item": {
          "id": "4f5bad6d-05a6-4564-986b-8eca7d2a0839",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6f3c58df-cfde-406d-97c2-c70b79da6611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb48cd8-cb3b-41b2-a4b6-8e4bf7ff9d74",
        "cursor": {
          "ref": "3a56f543-536f-41c9-b8af-b8f72f5c0d1c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5a578df3-9274-4763-a629-1c7b6b265e9e"
        },
        "item": {
          "id": "8cb48cd8-cb3b-41b2-a4b6-8e4bf7ff9d74",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e48c9f3f-5537-4d8f-9253-a0f71c8ac4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b13089b-5269-4752-8560-e036b8c6c623",
        "cursor": {
          "ref": "90b39b98-e346-41ac-9d73-5ad337f59d58",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a8b41c17-f54c-4457-8f04-f77d04c08a94"
        },
        "item": {
          "id": "5b13089b-5269-4752-8560-e036b8c6c623",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b08aa5ea-9741-4805-a8b2-a9e31e9cddba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c304d88b-602b-45a9-995e-453c8766a1df",
        "cursor": {
          "ref": "7aadc763-b454-41a8-bc80-3f2e420c118f",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "30c7d422-2630-4ba2-a333-a9bd4bc1d6d8"
        },
        "item": {
          "id": "c304d88b-602b-45a9-995e-453c8766a1df",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9586f501-2fa7-4ee1-93fc-cc2ba8ec7647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54d929e-6880-4b50-b567-aed07a8f80cc",
        "cursor": {
          "ref": "d56383c9-37ed-4762-af11-1ef1a0d69a4e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cb2b63eb-6db7-4713-8c2f-7cf7fbd1aa31"
        },
        "item": {
          "id": "d54d929e-6880-4b50-b567-aed07a8f80cc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a67aafdd-7b12-45af-85d0-8f1b22204fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04aa305-1cb6-44bc-8a34-178677ec40cf",
        "cursor": {
          "ref": "4f63ab4d-aa68-41ad-9e86-16fe7ea6704b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6b70f4e5-0271-4c80-8074-3401aa3b297c"
        },
        "item": {
          "id": "d04aa305-1cb6-44bc-8a34-178677ec40cf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5f12131a-c12f-4480-b074-c628320c9302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46e6e16-76f2-487e-8885-8d01cb0489f7",
        "cursor": {
          "ref": "3dae2fda-e8ac-49cd-9e9d-a41c7afeec13",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "05c40cf6-37ef-429b-bc0a-13de4ce3df51"
        },
        "item": {
          "id": "a46e6e16-76f2-487e-8885-8d01cb0489f7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "93461e19-304d-4fe0-aa8b-62dc773d43c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97957749-cfe7-420c-9b6e-0bf8253ac36f",
        "cursor": {
          "ref": "bf734263-40db-401b-a2d2-bbc9d7057c8e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b6d570ca-0bfb-4e02-a1c1-84ba2e99904b"
        },
        "item": {
          "id": "97957749-cfe7-420c-9b6e-0bf8253ac36f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6a5f8435-a61d-4a95-beca-3796851d328e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b4755c-3654-4f62-b25b-e105b8405a79",
        "cursor": {
          "ref": "b0539e76-c91c-4af3-b02e-92cd85628975",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8bac31ee-517b-4abd-9a64-632881179dac"
        },
        "item": {
          "id": "54b4755c-3654-4f62-b25b-e105b8405a79",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "aa692222-0815-4859-8ee0-11d573929533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e628b8fb-ca49-4a1f-8d10-8c5a3c5e9f16",
        "cursor": {
          "ref": "a584bd3b-4525-4ffc-9819-8d012ad26968",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d5c53efd-3153-4bac-ab0e-38c2641cac61"
        },
        "item": {
          "id": "e628b8fb-ca49-4a1f-8d10-8c5a3c5e9f16",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2c871f28-7377-4025-929a-f3f8441b51b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fccce4f-0509-47c2-882b-7d583248ea4c",
        "cursor": {
          "ref": "e02fa78d-2996-43f6-aa09-04a6f55aec0f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c258ae6e-41cb-48e5-ab9e-62cbf776a19a"
        },
        "item": {
          "id": "5fccce4f-0509-47c2-882b-7d583248ea4c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7a7e06f4-615a-4f20-8c21-65ca5520837b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccff52b-2025-4618-9e47-46afadfd9bc1",
        "cursor": {
          "ref": "332093d8-2215-4880-b809-82b33fda053c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "917af6f5-5c1b-4d53-a21a-7faedfbb37f4"
        },
        "item": {
          "id": "fccff52b-2025-4618-9e47-46afadfd9bc1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fe974194-b3b5-4b0e-b277-4dc4a3d2083b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ec1273-2ab2-4b24-87e7-336f62c8daee",
        "cursor": {
          "ref": "604a9144-6b11-46ec-8ea1-7e17e7e11bbb",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e3f784bf-c8ba-4fff-b664-9f095ca4176e"
        },
        "item": {
          "id": "a6ec1273-2ab2-4b24-87e7-336f62c8daee",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3307e302-0f2e-481d-8b01-66777e0dc303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735358bc-f9aa-4d98-a9a1-1277e96a688e",
        "cursor": {
          "ref": "b91fd24d-b37a-48db-b825-cddd686ef78f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e9380565-ffb9-45c3-85ac-da229022076a"
        },
        "item": {
          "id": "735358bc-f9aa-4d98-a9a1-1277e96a688e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "38342c91-0a5f-44fd-a5b1-c356d1feef7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa94d545-0f41-4e06-a720-00a9b1b3a29b",
        "cursor": {
          "ref": "110e8165-a04a-4fad-bd58-1d0f3db53a53",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "89edcafe-81d2-448f-8e4b-475346fff6b6"
        },
        "item": {
          "id": "fa94d545-0f41-4e06-a720-00a9b1b3a29b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d2813cc8-bc7a-4db5-a01d-0c7b7bb1db3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8179838-1279-406b-a6ad-6479becd4e5f",
        "cursor": {
          "ref": "ee936464-37f0-4fe1-8aa4-3a9e4d1bdc44",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ebbc9e54-7488-4543-9e59-d473833470cd"
        },
        "item": {
          "id": "c8179838-1279-406b-a6ad-6479becd4e5f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4ea4dd04-e4c1-42b8-8892-215a54c083ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1790c800-8af4-478a-b2bb-2c384ad18ecf",
        "cursor": {
          "ref": "fc8113ba-b23f-40b0-a901-a51deaa53cb1",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0bf1e226-cba4-4c90-8644-e54786a3a34c"
        },
        "item": {
          "id": "1790c800-8af4-478a-b2bb-2c384ad18ecf",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1c04a3f6-53f7-488c-98f1-6d64bda05c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b87a0c5-a208-45ca-8750-138978416e55",
        "cursor": {
          "ref": "55a00f06-461e-4c59-b370-8186b85e1757",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9656dc18-9906-4018-9e01-d447dab78212"
        },
        "item": {
          "id": "9b87a0c5-a208-45ca-8750-138978416e55",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "df981ead-6f53-4eda-aadb-c4b1af06fdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf6d111-ee67-4b65-9417-6a61a11741e2",
        "cursor": {
          "ref": "c36fe2cf-e2f5-4c1e-8af4-48b9954e2d74",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3e392477-721a-4de4-9c95-ade39e5bd6e6"
        },
        "item": {
          "id": "faf6d111-ee67-4b65-9417-6a61a11741e2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "980254c7-db13-46d4-a6bd-3ebf3e490f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688d6749-5710-4f88-831f-a765413b0e27",
        "cursor": {
          "ref": "8b5d6fb6-9968-4ada-8193-d64dfd808a69",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "08eff205-2615-4830-a2e1-8a30e3096402"
        },
        "item": {
          "id": "688d6749-5710-4f88-831f-a765413b0e27",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3cc17c2f-d3e9-49e6-b917-fc3fef610ed6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec1f4bc-5f08-4368-a78d-1ada9a0d4985",
        "cursor": {
          "ref": "832ae991-9ff4-4fb0-955a-c7c4b34b1e16",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2f48d895-3056-4cb1-81b6-03e85e5aedd0"
        },
        "item": {
          "id": "cec1f4bc-5f08-4368-a78d-1ada9a0d4985",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0b29cfcd-d44c-4568-8501-610325f61773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5474575e-d034-4d43-a97c-094bb83cd7c6",
        "cursor": {
          "ref": "ed196892-6943-4e98-885a-3a591a6fe297",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2567adc9-915b-4b33-a3cf-e46cf5769a19"
        },
        "item": {
          "id": "5474575e-d034-4d43-a97c-094bb83cd7c6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "258df6d8-be43-4106-b897-e0bc62e26c1d",
          "status": "Created",
          "code": 201,
          "responseTime": 9851,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "68353b6c-daec-4cdf-9d6f-77270ea2963e",
        "cursor": {
          "ref": "7e161736-b5e5-4532-b0ff-64d1c2a3926e",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "04f23a3f-6394-4729-8194-7b6114f0b0a0"
        },
        "item": {
          "id": "68353b6c-daec-4cdf-9d6f-77270ea2963e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ceed3ab2-7196-4e90-b897-02e8792068a4",
          "status": "Created",
          "code": 201,
          "responseTime": 7602,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c4f526-72a8-44c6-ae81-abe94af6f5fd",
        "cursor": {
          "ref": "7c064142-a7b0-4c95-a84d-07e7aa90c43b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ae32a6d3-d211-418c-b985-5d17cf93a0aa"
        },
        "item": {
          "id": "43c4f526-72a8-44c6-ae81-abe94af6f5fd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1f39af5d-c296-404a-bf09-bbf86d5c7154",
          "status": "Created",
          "code": 201,
          "responseTime": 8933,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec7f380-04e3-4f55-ae0e-84a1350f24bd",
        "cursor": {
          "ref": "c46f7afc-4be8-4ce8-9af6-20269f9d4f32",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3d69b0a3-0253-4301-b915-31c9b806978f"
        },
        "item": {
          "id": "2ec7f380-04e3-4f55-ae0e-84a1350f24bd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1d3ce938-7a43-4b7f-8609-a7426394b308",
          "status": "Created",
          "code": 201,
          "responseTime": 7833,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff11c24-d079-43e4-adc8-023a13292e9e",
        "cursor": {
          "ref": "eb45d320-0e91-4027-8c79-271c21021906",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3614937f-cf3e-4285-b970-2e48392a605a"
        },
        "item": {
          "id": "7ff11c24-d079-43e4-adc8-023a13292e9e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "01759b11-a98c-47d3-8486-4a52538dbe11",
          "status": "Created",
          "code": 201,
          "responseTime": 7972,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9859be21-88c1-46aa-ae6c-12b101dfd5d3",
        "cursor": {
          "ref": "44255ea5-da2b-48f6-b750-de3386097c1d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f9cb1750-5292-4961-b1d5-3319cae545a3"
        },
        "item": {
          "id": "9859be21-88c1-46aa-ae6c-12b101dfd5d3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9ed30481-2a0e-491c-a772-afb5ef6c1659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "48792b86-ce03-434f-9e94-ebf88177c406",
        "cursor": {
          "ref": "63005ef2-a2a6-4cb6-9f7c-a090bd9658e3",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "94dd471e-4973-48c6-8016-7044bbe867b2"
        },
        "item": {
          "id": "48792b86-ce03-434f-9e94-ebf88177c406",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "38f86c8c-a4af-4489-ab46-28661fd45669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63008cac-6090-4c94-9646-5d3574b43f2a",
        "cursor": {
          "ref": "74c7b119-d070-4317-ba3f-69b498b3af6b",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "00539375-1d92-482b-bdf1-74a79ddb0e39"
        },
        "item": {
          "id": "63008cac-6090-4c94-9646-5d3574b43f2a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0dac611e-da64-4e13-929d-7d010d22f92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f79349e-4cf5-4897-8c35-bc27ec9a7f90",
        "cursor": {
          "ref": "ddd9a963-2c60-4d37-bdb1-93bb65a58c74",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0874d699-5641-4461-aba8-78c5bedba6eb"
        },
        "item": {
          "id": "7f79349e-4cf5-4897-8c35-bc27ec9a7f90",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "908cc368-fbd8-435d-9b22-07de8d508a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8da1d0-0dad-46eb-81fe-c6d96bce24a8",
        "cursor": {
          "ref": "e208ce17-4121-4fa7-9986-1744f0991bc4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "aaeac030-31e7-4ae7-80cb-85ff2fa2b521"
        },
        "item": {
          "id": "8e8da1d0-0dad-46eb-81fe-c6d96bce24a8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "91fccd40-4693-4867-a13d-ffe87e78951c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053d051e-2a35-4c8b-ac88-5c62a24da352",
        "cursor": {
          "ref": "1577a71b-8a9f-4e7a-b617-dbe4e743e022",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "aa5098f7-c215-4cbe-8fd3-3a613cb90c54"
        },
        "item": {
          "id": "053d051e-2a35-4c8b-ac88-5c62a24da352",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "130b44bd-8f35-4341-b3c4-f33fc5d2df16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59b43ad-e198-4bf5-9cef-fca1d977259a",
        "cursor": {
          "ref": "b4f89a62-d1ba-49e1-b6dd-f2c2ede094d4",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "14c1b06d-111f-4999-9f3d-f05dd1f02a3a"
        },
        "item": {
          "id": "c59b43ad-e198-4bf5-9cef-fca1d977259a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "21ff1886-7b8b-4bbf-ab04-c52c28ec0299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2572fd-e3ed-45eb-849a-75d08c628cf9",
        "cursor": {
          "ref": "3be38502-a350-412d-8593-60e3ae96f78b",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3bd3d3b1-2b7f-4ca0-9b5e-f46cd9aaef74"
        },
        "item": {
          "id": "4c2572fd-e3ed-45eb-849a-75d08c628cf9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "67c4a86e-436b-4a76-a85a-bbce63b278b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60878c12-77ea-4097-9fed-50a76649d088",
        "cursor": {
          "ref": "e4032f57-1efa-4e26-a08a-20697dde8884",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1105edea-c5d0-40fc-b931-5db20f99598a"
        },
        "item": {
          "id": "60878c12-77ea-4097-9fed-50a76649d088",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6af1e8b5-1918-4e09-9bcb-72c397411e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f5fe15-8311-48c2-b31c-c32244127afe",
        "cursor": {
          "ref": "3e432b85-915e-42c7-98aa-6ac2740e2a97",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c7a353ca-bc46-42a3-9c9c-0518481fcae6"
        },
        "item": {
          "id": "43f5fe15-8311-48c2-b31c-c32244127afe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f9f02a5c-420c-4da2-a9eb-2b60a8c7bac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f933d9b4-1201-496d-91a7-ad0e56f77ba2",
        "cursor": {
          "ref": "e02388f8-bd63-4688-9496-11e93e194a33",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0f0fa6d7-7de4-4083-88ce-247a07534d35"
        },
        "item": {
          "id": "f933d9b4-1201-496d-91a7-ad0e56f77ba2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0021ae16-9a5b-416d-bee9-932278792f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01b968e-800d-414d-b341-fd6d5da8a656",
        "cursor": {
          "ref": "6d4e70ed-b5e3-4016-adc4-47cdca92e28c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fa727962-697f-42d6-b7f2-30242c78c739"
        },
        "item": {
          "id": "b01b968e-800d-414d-b341-fd6d5da8a656",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d52f0776-55e8-47ff-98fe-bafe52aaca85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157b3953-e44e-4e78-ae94-b9c35b6c4b3e",
        "cursor": {
          "ref": "f14d214d-a7cc-4dc3-849c-6f1046519907",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dc6157b5-2ce8-4187-ae87-a105ba4e21df"
        },
        "item": {
          "id": "157b3953-e44e-4e78-ae94-b9c35b6c4b3e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b3994cb5-60c0-4117-b2b6-6200aa54a3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a6234b-086d-43f1-834e-be9fc97da1fe",
        "cursor": {
          "ref": "37d9308b-451d-47cc-9b0b-049815343095",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bf9372c0-7871-49e9-b199-7d85e689d097"
        },
        "item": {
          "id": "52a6234b-086d-43f1-834e-be9fc97da1fe",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b40f05c2-c25d-479b-a240-20ca4cdb6142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687bc23a-e50b-4bac-97c4-005ac440cfbf",
        "cursor": {
          "ref": "192256e8-cf6b-4c70-b02c-34ebf4aafbff",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4afb655b-32e6-4bcc-b9c2-a33a7d646d8a"
        },
        "item": {
          "id": "687bc23a-e50b-4bac-97c4-005ac440cfbf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "21013824-4b35-427c-97f0-f999fabac718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc43474-7a6c-420b-a341-ae23a4670d04",
        "cursor": {
          "ref": "1d215deb-106c-407a-8e28-70df5a8122e5",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a0bb7b55-06de-45d2-9183-a8e132c37ded"
        },
        "item": {
          "id": "7cc43474-7a6c-420b-a341-ae23a4670d04",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2eb74635-53c5-463a-84f0-3dc1da44e150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1183ea8-ab7a-47de-a94b-5b7068e655e9",
        "cursor": {
          "ref": "adc8a8c8-f411-4a76-9a08-5dc305039be4",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e097828c-17d7-4c68-a172-12a72f788790"
        },
        "item": {
          "id": "f1183ea8-ab7a-47de-a94b-5b7068e655e9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1dbf3a02-3689-464a-b6d8-5806fe910f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76015ca4-f69a-42d9-a544-766867ae2c92",
        "cursor": {
          "ref": "3f7e725c-0c00-4fc5-ab6a-1ee7fa6b16f8",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "409d3a1b-a0c3-40ba-9df9-f1d494fd4a49"
        },
        "item": {
          "id": "76015ca4-f69a-42d9-a544-766867ae2c92",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c70da575-e041-4b67-924e-ece30ec13e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6233797-0a94-4194-b698-beb24a52e643",
        "cursor": {
          "ref": "32e774bd-d752-4af9-868a-a6564702badb",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bb101902-6a32-48f5-8678-3bb5575e18d6"
        },
        "item": {
          "id": "e6233797-0a94-4194-b698-beb24a52e643",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4c674df8-6be5-4993-934a-2c714f5b0831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2deefe9-fa96-4430-a287-f81bef09eacf",
        "cursor": {
          "ref": "f9889076-b49a-45da-8b48-b0961665acec",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7db67349-13c2-4a11-a2dc-4432f79c4a05"
        },
        "item": {
          "id": "c2deefe9-fa96-4430-a287-f81bef09eacf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7031c848-f0bc-4482-baa8-3003d9f04275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba13041-410a-4e2b-9be9-6318dd061d0a",
        "cursor": {
          "ref": "0eca549f-1896-4b1c-99a9-dbb7a45eb414",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7cfc51eb-75ce-4c6c-b4d9-dc5f06ea699e"
        },
        "item": {
          "id": "0ba13041-410a-4e2b-9be9-6318dd061d0a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5607ff54-6780-43fe-b941-fdd3a96f932a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fba1b1-1067-46de-a887-e2ad45420921",
        "cursor": {
          "ref": "e6cfd067-6374-499b-9a7b-1f7a777a618b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3961ef0a-5ca9-4ed5-8ab9-7c4bed134bc7"
        },
        "item": {
          "id": "75fba1b1-1067-46de-a887-e2ad45420921",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "780bac39-c879-4b45-8b1d-910646e90a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ed388f-45e9-4075-b583-104c6cf46c5f",
        "cursor": {
          "ref": "57014556-0f1a-4381-b278-0bf37da89021",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1478b9c3-2bae-47e0-8bd1-68a0cfa4df94"
        },
        "item": {
          "id": "86ed388f-45e9-4075-b583-104c6cf46c5f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2a7b1862-d7f5-4887-ab28-2b7ba70616db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e62afab-3d07-4c21-ab0e-533869fa508c",
        "cursor": {
          "ref": "e61d6233-ddf1-4897-b7de-1c00d86121f5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ca01f0ef-df2c-42b4-a41a-3b92df8c6ec2"
        },
        "item": {
          "id": "1e62afab-3d07-4c21-ab0e-533869fa508c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "82e47c95-25fb-4d32-88b0-01830b0d2959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52260ca2-0c82-428d-98d3-bc02c15a8784",
        "cursor": {
          "ref": "31603c27-1cc2-4f14-ac9f-bddfc018f2bd",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4c0d7cfb-1da3-432b-9d89-1ad20ad91c23"
        },
        "item": {
          "id": "52260ca2-0c82-428d-98d3-bc02c15a8784",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "74ab8b34-06e0-46da-88c0-1acff29499d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287fa535-02d0-4a3a-9028-0e4c28c59215",
        "cursor": {
          "ref": "a8ca1246-52fc-4680-b2ae-c588e79713dc",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ebb75930-391a-48fc-9ead-0cfd84af1f82"
        },
        "item": {
          "id": "287fa535-02d0-4a3a-9028-0e4c28c59215",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "09f69b15-1a5c-442e-a2b3-d6655f30dab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd15a65-2f08-482f-8b58-f05475f7630b",
        "cursor": {
          "ref": "a96dfb5c-4a59-4acb-bb91-8731744558c0",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f13da35e-d794-463c-aefe-7ce4cf03d1f3"
        },
        "item": {
          "id": "6cd15a65-2f08-482f-8b58-f05475f7630b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7d4a3d54-ae75-4f4a-98d5-eceae43cf317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8926f1-d329-4819-9e1f-717a73f16178",
        "cursor": {
          "ref": "e558e382-2912-4999-8546-856ee747e9f7",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "888cfa62-330c-41c8-aa8b-3ac6aadab475"
        },
        "item": {
          "id": "cd8926f1-d329-4819-9e1f-717a73f16178",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8d958c7b-b003-4ef6-bb6a-f6948d48bfee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09e7ac9-4ce6-4064-8eef-695087d84558",
        "cursor": {
          "ref": "309356f1-5c69-44fd-b6f0-9fd14d6a7495",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4430f46c-0131-42e0-9ddb-f6ec897b0244"
        },
        "item": {
          "id": "d09e7ac9-4ce6-4064-8eef-695087d84558",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3849ed74-09af-414c-bf7a-57ce6f6ab8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3173476-2197-431e-ba72-5c6fb96bc219",
        "cursor": {
          "ref": "99da40b6-e1eb-4651-a418-b946cd25a191",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "016777ca-2785-412c-9815-39563e36f1c9"
        },
        "item": {
          "id": "c3173476-2197-431e-ba72-5c6fb96bc219",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2012fb4c-f3bf-4a25-9871-e91f7b7176bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883914e0-73d8-4207-b3ba-7d685efd9077",
        "cursor": {
          "ref": "8f0bd7b4-9601-4902-8261-b24bd4967f51",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1f5dec60-d275-428e-bfe0-dc2ec083ca52"
        },
        "item": {
          "id": "883914e0-73d8-4207-b3ba-7d685efd9077",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8bd98900-be36-42c1-87ff-d497d3335980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f41538-727a-42d9-ba58-8d04fbea7acc",
        "cursor": {
          "ref": "7c3ee4ea-ace9-4f55-b0a7-9618a1fba5b7",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0388326a-b8d3-4c3b-abbb-926c70a6a599"
        },
        "item": {
          "id": "b7f41538-727a-42d9-ba58-8d04fbea7acc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "75cc1670-3ece-4434-9bf7-66db9f7eb5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e651211-868f-4143-81d3-8af5f0455667",
        "cursor": {
          "ref": "7e0eb2cc-f592-469e-afa6-a0cc85d76c2f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a6cc96e9-3ed9-453f-97bb-62d85d71faf5"
        },
        "item": {
          "id": "8e651211-868f-4143-81d3-8af5f0455667",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6c5e3b11-04ab-4c6e-9b18-6345e7cd7327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa23246e-9c47-4e1a-95bd-a7301e9e7c18",
        "cursor": {
          "ref": "95d2b43a-4beb-4736-b583-d37106c83ecf",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7ce10fc0-9548-41f6-85cb-96c323563be5"
        },
        "item": {
          "id": "fa23246e-9c47-4e1a-95bd-a7301e9e7c18",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "827b7793-fad4-4960-9830-b9db3c310831",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116bcc77-1ce5-4999-8dda-727d21c8e35a",
        "cursor": {
          "ref": "a9d46f76-382e-4565-8f23-364a88b55c7c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "86f5c945-b9a5-47eb-a04e-871a05e2b150"
        },
        "item": {
          "id": "116bcc77-1ce5-4999-8dda-727d21c8e35a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec0d0f77-416f-4445-86aa-a6462cf99d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebf5ea0-2d54-4325-84bf-bb2c404f338d",
        "cursor": {
          "ref": "fe098764-49d9-42ed-94ff-7bf3b88e526e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6860d6a7-7e0d-4f59-be08-ad51d99b950b"
        },
        "item": {
          "id": "4ebf5ea0-2d54-4325-84bf-bb2c404f338d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dc58f480-f621-4927-91c4-26dbc56d1945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2425ec7a-e1e8-4159-8639-51f12d5b0ef4",
        "cursor": {
          "ref": "57d9a265-2b95-4637-b299-ef9edf278eba",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1dd2d66c-7786-4ace-a5ae-dfe408d51cb6"
        },
        "item": {
          "id": "2425ec7a-e1e8-4159-8639-51f12d5b0ef4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1b6e8a5b-3e18-499e-af45-3f0f359790e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33da199d-4530-4d8d-998c-f3509c333362",
        "cursor": {
          "ref": "4b54484d-6002-4756-abd7-7221237af7af",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6bbc79fa-5015-4d0c-9e0b-1e0b25f59a76"
        },
        "item": {
          "id": "33da199d-4530-4d8d-998c-f3509c333362",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7764b509-5c51-403a-817f-01a40a2b1d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57552ce8-55ef-47f7-8bfd-bb34a9624706",
        "cursor": {
          "ref": "a2626e41-b6e5-4c9a-ad11-3b5dad7d1211",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6d639b3f-46ad-4253-98a4-bdb565acd6e5"
        },
        "item": {
          "id": "57552ce8-55ef-47f7-8bfd-bb34a9624706",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "db9cdf50-50fa-499a-bc15-82cc23b37392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cb81b2-8890-4fdf-b036-f0d071f6feff",
        "cursor": {
          "ref": "d97d5ded-f2be-4c35-a8c3-42c6dd4cf1bf",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a8f7109b-9a06-41fd-9f45-f82d046e4f09"
        },
        "item": {
          "id": "97cb81b2-8890-4fdf-b036-f0d071f6feff",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "45a7e2a5-3c79-4be0-a71f-8daef7b35d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea322a3e-90c9-4315-9a09-d5160021b951",
        "cursor": {
          "ref": "dd506f07-8d2a-47ff-8dc9-c468e3d3515f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fad1bcbb-1fca-485a-91b0-fbb5843df13b"
        },
        "item": {
          "id": "ea322a3e-90c9-4315-9a09-d5160021b951",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ff6b56dd-84af-4f91-84e8-8b1c362b8818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2fc456-184e-4f53-ab50-755975390d37",
        "cursor": {
          "ref": "9e3c495c-b68a-4ac1-8cb1-d9ae7f17fc9b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a7ea1966-d84d-4a93-9b49-9dac4c6587a4"
        },
        "item": {
          "id": "5c2fc456-184e-4f53-ab50-755975390d37",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "608fdc63-137e-475e-8937-bcdd7a95aac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06df9626-c7af-49c8-95bb-3fbb46be31fd",
        "cursor": {
          "ref": "abae8079-0590-4677-910a-ac328c0f4e02",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e023f816-4406-4adc-9afd-731fbf051ab7"
        },
        "item": {
          "id": "06df9626-c7af-49c8-95bb-3fbb46be31fd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a4fdddaf-b923-4605-8b3c-93eb087a8e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092610f3-6c84-4381-b700-00bd1f80bb4f",
        "cursor": {
          "ref": "e31155aa-76bb-43c2-a5ed-70890665ce73",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "306938bc-2cc1-4774-96b0-7d07183fd84b"
        },
        "item": {
          "id": "092610f3-6c84-4381-b700-00bd1f80bb4f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6680f1b7-6915-4dd1-8331-d3b70b7ae6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0ea9d9-a5b3-4aed-9695-90c5b1521047",
        "cursor": {
          "ref": "52a00023-6b56-451e-abc9-7440b6bdb0c3",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e0e86399-adef-4886-846b-e4e2c7e31a46"
        },
        "item": {
          "id": "be0ea9d9-a5b3-4aed-9695-90c5b1521047",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "03199cff-ff94-4021-9482-0f2a4c297def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1640987-cb8e-4b12-981a-3939904c0337",
        "cursor": {
          "ref": "7bb15dd1-d9da-4440-b0b5-5a6bf30fe0f8",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a299937e-ccac-48cb-8e6a-86be19705b42"
        },
        "item": {
          "id": "c1640987-cb8e-4b12-981a-3939904c0337",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "157941b2-b15c-44c3-b713-cc74abc45a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495839a7-b324-4562-a2ec-b6041bc06a83",
        "cursor": {
          "ref": "cfe1707e-e12d-426c-af44-e74bf8d54718",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6646a8d7-4975-493a-8367-7e30deff2f40"
        },
        "item": {
          "id": "495839a7-b324-4562-a2ec-b6041bc06a83",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a478e1f9-ec3a-4d11-b515-6d56fb862265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9350ad2-4e25-4e44-82c4-0d519b204840",
        "cursor": {
          "ref": "25692c21-1fa5-4482-ad5f-a41c8b9d82e0",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "268a34da-4997-4dce-8f06-fb4951bdbdd3"
        },
        "item": {
          "id": "e9350ad2-4e25-4e44-82c4-0d519b204840",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4a48c148-1977-4324-8a46-39392939467f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6b2364-019d-4b0d-8741-9d4588123200",
        "cursor": {
          "ref": "7ec826e7-d14b-4493-891a-6c7016e5da19",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5a3f4db9-7a88-4246-bd73-27a5f0af0bd5"
        },
        "item": {
          "id": "be6b2364-019d-4b0d-8741-9d4588123200",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "35852332-f4c5-4a9a-8cae-7abb60997398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedaefa9-1c07-474d-8876-6810624e1696",
        "cursor": {
          "ref": "43eda09c-99fa-4136-a6aa-94eec42954e0",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "437c9594-49e1-4f62-9b86-a2df42586b31"
        },
        "item": {
          "id": "fedaefa9-1c07-474d-8876-6810624e1696",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d97f9d99-383c-4516-972f-06bf0ea31259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222b35e1-cf4a-47d2-b9f4-f6afc5f5aa7c",
        "cursor": {
          "ref": "e1a0cdad-9768-46ec-b16f-5826063793a3",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "47bf2d5e-7601-4a4a-8390-62f3e7bdca31"
        },
        "item": {
          "id": "222b35e1-cf4a-47d2-b9f4-f6afc5f5aa7c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0ef1c09d-9e52-4c70-be77-7f52ca174004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad5b1cd-e29b-4273-b266-77e3246f5e27",
        "cursor": {
          "ref": "db3b5cfa-e6f5-433c-a118-4e9252bd4fea",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5ee176cd-5243-4420-aaf7-3e27ed185ed5"
        },
        "item": {
          "id": "9ad5b1cd-e29b-4273-b266-77e3246f5e27",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c763f3a5-afcd-4f03-b82f-bc1cc104199e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1553011f-2c0a-49e1-813d-52df4c50d510",
        "cursor": {
          "ref": "87a90280-1ef7-4cd1-b8ca-3f5ea3318768",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5562d36c-ce4a-4245-bf50-2c83bd5f350d"
        },
        "item": {
          "id": "1553011f-2c0a-49e1-813d-52df4c50d510",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c755e32c-4a2d-42e5-baf7-fe53d068bf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ea51ef-9d50-4a22-95a5-85f2df4ce015",
        "cursor": {
          "ref": "93cf4ad4-0bf2-4f00-8b10-66e84b290348",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "85920d96-b42d-4700-a261-36831cd7c559"
        },
        "item": {
          "id": "c3ea51ef-9d50-4a22-95a5-85f2df4ce015",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cfb4465a-7eed-4138-8af8-d32e99ab1c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b528d7-6f10-4596-b7f9-600265703eb2",
        "cursor": {
          "ref": "8e58007d-2ca5-4205-a862-0795dbe57280",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f8fc9ac3-33c5-4e9f-8e3a-6ec93fedd9fd"
        },
        "item": {
          "id": "43b528d7-6f10-4596-b7f9-600265703eb2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a9f720ef-a56f-477a-a377-166f27489b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509c3e4a-1ff1-49cc-9b96-940898ed45cf",
        "cursor": {
          "ref": "d429d385-602b-4bf0-9f84-dd9f9e23e355",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "418bcc4f-fc3c-4d54-afee-ce5dbe38e4b3"
        },
        "item": {
          "id": "509c3e4a-1ff1-49cc-9b96-940898ed45cf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "88726f1e-59c7-4a3f-a0e8-2e6bc667f8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d20e61-368d-4072-917c-fb590669d9ea",
        "cursor": {
          "ref": "90e708be-5764-4ac0-b8f5-2d1dbe8d4f75",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6fc3b9bf-620b-47e9-89a9-29eb662a31dc"
        },
        "item": {
          "id": "72d20e61-368d-4072-917c-fb590669d9ea",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "133cf5c3-2208-447b-90d8-9cdfebd5d0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410e59d7-2cf0-4d88-9e66-d02922eda2ee",
        "cursor": {
          "ref": "a612c313-3ad7-4314-b153-df22b4d50afb",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "61e00e95-9b12-42ab-a80d-68ab4625a085"
        },
        "item": {
          "id": "410e59d7-2cf0-4d88-9e66-d02922eda2ee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1fd72b50-4b46-4d60-a737-16b2e0285177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8769802f-46ab-4bd4-ab42-5e2b2564bee3",
        "cursor": {
          "ref": "2099974a-2791-4c92-999f-19ec223fec00",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "49260320-2f9a-4f4d-bf8b-d9786a9e9927"
        },
        "item": {
          "id": "8769802f-46ab-4bd4-ab42-5e2b2564bee3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c2e9eb2e-491b-496e-8f8f-173622f761ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2d45a2-e782-41af-aaf2-8bae295fba4c",
        "cursor": {
          "ref": "66d9f670-32fc-4e53-8e7a-e7b5f0858194",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "781c6ee4-9b47-4c25-beb6-46183501d22d"
        },
        "item": {
          "id": "4e2d45a2-e782-41af-aaf2-8bae295fba4c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "35c1c7d2-ec1b-436e-a91b-f5a7fdb95060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cb648c-9f84-4e32-9972-c3c1ea91a7e5",
        "cursor": {
          "ref": "73338876-9b30-4009-8f2e-21c3695a60c4",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a0294a30-cba2-49d8-914f-d94948ba7f49"
        },
        "item": {
          "id": "72cb648c-9f84-4e32-9972-c3c1ea91a7e5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1ef4d58d-634d-499f-80e2-2a4376e55a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5851f2b-2929-4616-93c2-a6e75361eac7",
        "cursor": {
          "ref": "8ee13f25-b244-4c30-a03a-32ca2f9b1ad3",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "86abc5fe-e009-4946-a08b-15a9256161e4"
        },
        "item": {
          "id": "b5851f2b-2929-4616-93c2-a6e75361eac7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d7258369-07c5-4ded-86fa-05709c4610be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166d9538-9ed8-4c4d-bbfa-a9c2456c285d",
        "cursor": {
          "ref": "8db70c0b-9bd7-46b8-b373-82b877a2f1b9",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a11fecd0-950f-4cda-9841-bae67454e314"
        },
        "item": {
          "id": "166d9538-9ed8-4c4d-bbfa-a9c2456c285d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d1233458-bdff-4881-a6c1-76e504039c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97fe441-12ea-4c87-8fcd-937f36e4debf",
        "cursor": {
          "ref": "563ed828-22bd-4d17-b7ad-9fd0f7e2564e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8f1f29f5-559b-46b5-8973-1baa0f1e91bf"
        },
        "item": {
          "id": "d97fe441-12ea-4c87-8fcd-937f36e4debf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "db71a442-7fd8-4ecc-9b7c-3ace1e65a8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2be58b4-f989-4bf4-9c18-dcdd981d2a19",
        "cursor": {
          "ref": "9a5a7730-7f91-46ce-9808-446ee6640529",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ea12209e-91e1-4731-9efe-fc78a67268bb"
        },
        "item": {
          "id": "e2be58b4-f989-4bf4-9c18-dcdd981d2a19",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eaf60382-fd3b-4597-84bd-cf77baac7349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdd9483-a8bf-4221-807b-891b56ca27f6",
        "cursor": {
          "ref": "8b005e1d-756b-46ab-af3a-37b3edc645d9",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b7c44a63-4108-43be-a866-04f1e6f63a5d"
        },
        "item": {
          "id": "0bdd9483-a8bf-4221-807b-891b56ca27f6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "062f3531-af69-4c75-a971-589d4b8592ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a84472-2880-4e5b-a6e8-44f402ff551c",
        "cursor": {
          "ref": "69e927e2-d8b6-423a-8f8d-1373982700ec",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "99910f51-df74-4eb1-b33e-13dd41c2d22c"
        },
        "item": {
          "id": "94a84472-2880-4e5b-a6e8-44f402ff551c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c8778c45-034c-4e71-b846-a1f92308eb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fed9593-6ca8-4a9e-aa12-d6b8360890da",
        "cursor": {
          "ref": "317460de-abb0-4053-adc6-92ae61a9439d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bff3c9d9-15bb-443d-8631-11195536603f"
        },
        "item": {
          "id": "6fed9593-6ca8-4a9e-aa12-d6b8360890da",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "33135180-096a-46f9-971f-65743a29fdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94933f8-a073-4e1e-b8b9-f5d2f572b5ed",
        "cursor": {
          "ref": "5adce2dc-cb7f-48a9-b4b1-a55f64a7be49",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1566cb66-3b58-486b-8c13-c0ca5f34a0e1"
        },
        "item": {
          "id": "d94933f8-a073-4e1e-b8b9-f5d2f572b5ed",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "350accc8-0977-4119-9bca-e450dcbdb2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bf67d8-6a87-417e-a89d-129b4b3ca99b",
        "cursor": {
          "ref": "99e12371-239e-4326-8c0b-1b75a6abc7bb",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b07f6fe7-36a2-4f70-a72e-016686d65a14"
        },
        "item": {
          "id": "65bf67d8-6a87-417e-a89d-129b4b3ca99b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "155ddd35-a148-4e77-be4e-eb3f79d797b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1788dc-c2be-4b4e-ace3-81aadec8b768",
        "cursor": {
          "ref": "bb8dfa53-61f2-431f-92b0-71b3e98e3e3c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4dd71b02-9eed-4c4c-b178-e624d5b7690b"
        },
        "item": {
          "id": "4d1788dc-c2be-4b4e-ace3-81aadec8b768",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "df40b94e-a253-4235-8f3c-5fed2e37c40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79a2a80-f0f9-4ec9-b5a9-01410e1f9ea1",
        "cursor": {
          "ref": "d371100e-3996-4802-aaeb-5f12107bb2fb",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3325117f-35a2-452e-be3b-cb3d6751d0c0"
        },
        "item": {
          "id": "c79a2a80-f0f9-4ec9-b5a9-01410e1f9ea1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f4fa1bde-2078-45f8-abce-516b483acdc2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c2ce42-9533-4bc4-9f70-d9be161c8674",
        "cursor": {
          "ref": "216f1b8c-9a10-404e-9d4e-ab70945628cc",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3f3e3ffd-9ce3-4e5f-ad29-ce9a45fe059b"
        },
        "item": {
          "id": "88c2ce42-9533-4bc4-9f70-d9be161c8674",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "677687d6-6ffa-4d7b-ad48-4db46df9232f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee770c4-a58e-4ec7-823a-52e009bd692a",
        "cursor": {
          "ref": "46b63dbb-42f8-471a-8018-febd965e69a9",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b5e0863a-184b-40ed-93dc-85b8f6dcd203"
        },
        "item": {
          "id": "aee770c4-a58e-4ec7-823a-52e009bd692a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ea42cd64-d683-475b-8dd7-bef5621a291f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa97bf2-e188-498a-b321-c5bf7b967aa8",
        "cursor": {
          "ref": "727503b4-be34-4626-a6f1-8db30e3f9793",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "456a9c3a-a70c-4972-bd19-f518accfc6b7"
        },
        "item": {
          "id": "7fa97bf2-e188-498a-b321-c5bf7b967aa8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "75a986ee-9782-4d55-ab06-3ee645a39c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc24c657-8794-4580-a8ea-5b5f9cf51d14",
        "cursor": {
          "ref": "a6ce81be-437d-409b-b40c-eea4b68b97ed",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f5e97624-0583-40c5-8fa5-2e2311dd663e"
        },
        "item": {
          "id": "cc24c657-8794-4580-a8ea-5b5f9cf51d14",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d749b344-30d4-4dcd-91f5-dc5850d46a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c210f2b-e165-4105-8292-b04dd49d42b7",
        "cursor": {
          "ref": "453fb10b-3ba4-4a00-8b79-613f63bdc71b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9251fae6-2ca0-4840-bcc4-a07449475b55"
        },
        "item": {
          "id": "6c210f2b-e165-4105-8292-b04dd49d42b7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f9c3114a-17a7-42b9-a083-2c4d536965e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e168ef6-427c-4019-a926-286c168380a5",
        "cursor": {
          "ref": "ee844b45-8620-4872-9ec6-4b66a7331216",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "90d3af0a-4334-4bbf-a732-f9dcc56baf41"
        },
        "item": {
          "id": "1e168ef6-427c-4019-a926-286c168380a5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "de818af3-a744-45b5-9ab8-1206e393e118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4bdf83-0533-4e6f-aa6f-b8c37ead1546",
        "cursor": {
          "ref": "bedfd6bf-6922-45e3-aa35-eadf2a52cd87",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "53cfe7b5-37e1-4074-bc5d-331e2a33635a"
        },
        "item": {
          "id": "1f4bdf83-0533-4e6f-aa6f-b8c37ead1546",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "90cb0856-122c-44c5-abbb-d549fcb72951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2755ecd7-6fd9-4ea2-b6a3-a6f7e087d3cb",
        "cursor": {
          "ref": "ffea4656-958f-42fe-88e8-035a9dda5269",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a93c4a0a-7093-49bb-9af3-eee65482546d"
        },
        "item": {
          "id": "2755ecd7-6fd9-4ea2-b6a3-a6f7e087d3cb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "27b93c46-7bb6-45d9-8ca1-b75a6a75ea56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237f36b4-3c0b-4d54-9ed2-5cb121549dde",
        "cursor": {
          "ref": "6394a9ad-9aed-49f2-9ab7-2fbadf87dbde",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "46a997a8-8356-44de-a655-d1e404564444"
        },
        "item": {
          "id": "237f36b4-3c0b-4d54-9ed2-5cb121549dde",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4344b2ad-7b5d-48fb-9a12-d3e7fbb7c9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29ef703-09ec-4426-ba6d-56c891b21f42",
        "cursor": {
          "ref": "fa0615e8-888b-4379-ad54-bb70be926990",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "714ffba3-199d-4f9f-aa5f-d0f2bfddd677"
        },
        "item": {
          "id": "c29ef703-09ec-4426-ba6d-56c891b21f42",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "811185e9-c837-4a9f-b281-84cbce43a97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678a7932-cd5b-432d-86a1-cff723d80eff",
        "cursor": {
          "ref": "d0b99989-aca9-4c0d-b89a-185b193eecc1",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dd7201a5-8ba5-4481-a903-4465eeb53819"
        },
        "item": {
          "id": "678a7932-cd5b-432d-86a1-cff723d80eff",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dec9cd24-3cd7-40cc-b792-deb8cfc1f780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44be876-4a8c-48d6-8291-cab343b88cbc",
        "cursor": {
          "ref": "a02ad50e-f7b3-4aa9-b1a7-f7ed9c4326f1",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c7215253-2d5a-4878-989b-1d12cc6a8387"
        },
        "item": {
          "id": "a44be876-4a8c-48d6-8291-cab343b88cbc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3d6d3acc-500a-49c3-bd7c-2c31e09bb828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e50099-b4b4-4440-b3a3-e11a850a15f8",
        "cursor": {
          "ref": "7d634860-8156-4927-b57a-e0bb6d7d27c2",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "05dcc699-dc9f-48f6-80c1-79be7dcf7e74"
        },
        "item": {
          "id": "03e50099-b4b4-4440-b3a3-e11a850a15f8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "481c12d3-329a-4e0a-bbf9-f0f140db3a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30d0c31-7282-4c69-83bc-baa3e86848c1",
        "cursor": {
          "ref": "aa26e590-ae01-4570-a641-7b43f11e6c4d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "27043cda-b913-42c2-9ad7-1f86f4d0243f"
        },
        "item": {
          "id": "b30d0c31-7282-4c69-83bc-baa3e86848c1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "755e19d3-c183-4c1d-a2dc-60dc06697c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c11de8-cfaf-447e-bdf6-23c1231fe396",
        "cursor": {
          "ref": "2ccda01e-a1e8-4417-a65e-a38ed85a347b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1a8d20db-7713-4d85-85db-9513f0f97c74"
        },
        "item": {
          "id": "39c11de8-cfaf-447e-bdf6-23c1231fe396",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "855f652e-3d1d-4c2b-8430-2de227dfc708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613cd95a-78dc-400c-813c-cac34c776a3c",
        "cursor": {
          "ref": "69117b48-4e93-4e0e-bfb1-b91ebf7b8aa3",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "46eb848c-ce87-4ad8-97e5-2809fc8e5cbd"
        },
        "item": {
          "id": "613cd95a-78dc-400c-813c-cac34c776a3c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d25c47fa-80c7-4136-8a5e-562fc42c826b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f17842e-ff01-454a-af93-0d1a04916f2d",
        "cursor": {
          "ref": "99a37b7e-bb2d-478e-88d1-106e6f557dd6",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "434735cf-2f1f-455a-9382-be32baf8184b"
        },
        "item": {
          "id": "2f17842e-ff01-454a-af93-0d1a04916f2d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b38a1e04-cba2-439e-96c8-79b29676fa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7b2fbc-30a0-4bfa-8bcd-346baff78581",
        "cursor": {
          "ref": "fd695cb7-d8ff-4595-b134-32c7130fad96",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6cc00b38-7bf2-4d4b-a93a-6283c477462d"
        },
        "item": {
          "id": "6c7b2fbc-30a0-4bfa-8bcd-346baff78581",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1a4d614b-cbcd-499d-ae5e-6939681471db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710dcd18-407b-4e1a-b28a-30785d6653e9",
        "cursor": {
          "ref": "693f3478-3462-40b7-a035-50a95e36e042",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "56ae71bf-355c-461f-a29c-12ece02735b3"
        },
        "item": {
          "id": "710dcd18-407b-4e1a-b28a-30785d6653e9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2c5ee06d-d2bd-4d08-80d1-c929bd906ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d7392c-4633-410d-9763-d8ef20bcd0e4",
        "cursor": {
          "ref": "f9bb4997-3559-4e1f-8958-5d6d1ca61c67",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dc82e928-b91f-40d5-b631-f56ffae45b56"
        },
        "item": {
          "id": "78d7392c-4633-410d-9763-d8ef20bcd0e4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "befaf67b-1483-433a-ae59-0c2647cf5789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d353c11-5eec-4865-9193-e446b4f8ee21",
        "cursor": {
          "ref": "fa22d272-c67d-4e2f-b207-0e2bdf261ff0",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ee3318fd-8893-41df-a2d2-b066d5275d47"
        },
        "item": {
          "id": "3d353c11-5eec-4865-9193-e446b4f8ee21",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "25a24626-3ada-4f45-9772-851bd19a11be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8ae86e-735f-42ca-b48c-f40630c5aa76",
        "cursor": {
          "ref": "2c74d261-2ec0-4b9b-b27f-8f8ce9bb4258",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "16d27b11-ca60-45db-a7ba-0a08ac816c65"
        },
        "item": {
          "id": "8f8ae86e-735f-42ca-b48c-f40630c5aa76",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "54370c6e-9087-44f6-b296-b8c43730f07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cce515-0050-4d20-acf4-7ee0564b8fa5",
        "cursor": {
          "ref": "b7e973fe-a602-4cd5-b853-b36005e35064",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "80931a9b-f8d4-4e6d-a196-b887a707e5a6"
        },
        "item": {
          "id": "70cce515-0050-4d20-acf4-7ee0564b8fa5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "34fa4808-e28a-4687-9a8d-38036ffb6d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea2bc76-cb49-4715-9a69-a7b16afb33e0",
        "cursor": {
          "ref": "aa835b21-b7b1-4c8c-b951-ebad6b9c134b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a24cbaf3-fa13-499e-a5c8-e5015e9c9929"
        },
        "item": {
          "id": "cea2bc76-cb49-4715-9a69-a7b16afb33e0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ba61f813-254d-4a68-832c-0019752d7e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ca581f-8636-4a5c-9bfa-b188b8e6b43c",
        "cursor": {
          "ref": "3a2d81eb-4c81-4af4-bdec-cb1ebd459d9b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "50bfe9db-1ab2-40a6-a573-f9aee53adfea"
        },
        "item": {
          "id": "c6ca581f-8636-4a5c-9bfa-b188b8e6b43c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ebaa04a1-81ac-4284-a87b-3c59bf792a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cf2e0d-c34b-431e-ac98-0c1a3f797b82",
        "cursor": {
          "ref": "e818fd70-d9b5-4cf8-861a-2cc19c489956",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "041d1804-f8e4-4f14-8284-dc1ead72b973"
        },
        "item": {
          "id": "44cf2e0d-c34b-431e-ac98-0c1a3f797b82",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8179ca42-e0eb-4cc1-b52c-aca1ae14c9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a928ad1-bc54-4571-8bd6-cdf0ada6c84c",
        "cursor": {
          "ref": "dc726bf5-3c41-49e6-895f-6fdab6458afb",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "18e1dff2-3a08-4a29-977c-32bd02786d71"
        },
        "item": {
          "id": "5a928ad1-bc54-4571-8bd6-cdf0ada6c84c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4254fba2-f0d6-4a14-ab78-276eb140def4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a2ef03-879b-4a5e-803c-865ecb2eb0ca",
        "cursor": {
          "ref": "69fb9e9a-e9e3-4916-919e-bf4ee6a10cd6",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "35487340-fe1f-45c3-8051-f01408e6e2c3"
        },
        "item": {
          "id": "73a2ef03-879b-4a5e-803c-865ecb2eb0ca",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a10e1fd9-f344-48e3-8b07-8c521265d630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54923fc-b5d9-48ad-a790-7c7984fef1a6",
        "cursor": {
          "ref": "6aa6201b-9eab-4cff-99e0-d4e05348370e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fb793521-0736-4a70-a045-29bb367a32f5"
        },
        "item": {
          "id": "a54923fc-b5d9-48ad-a790-7c7984fef1a6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2c16a6e6-341d-4576-8c94-d07b3a992d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca37f899-cd15-41eb-b067-b747f0693c23",
        "cursor": {
          "ref": "87912e6f-fd6b-4e83-a90d-eed66af3d822",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e3dc0242-5568-4184-afb9-56e19ac6ad8c"
        },
        "item": {
          "id": "ca37f899-cd15-41eb-b067-b747f0693c23",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "779c4d5d-6249-49d8-aa3d-9c1c2a8d21d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccd439a-7d5e-4a70-a7bf-04155f37ab1d",
        "cursor": {
          "ref": "0dcf5e9d-d166-4483-bc3c-35987f970290",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "aa07fb77-ddef-4300-b9e2-ddeb7bda1004"
        },
        "item": {
          "id": "eccd439a-7d5e-4a70-a7bf-04155f37ab1d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f58b802d-fd8b-48f2-b39f-8937471c4cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e56c7e-ba1f-4642-a401-ed62047d9790",
        "cursor": {
          "ref": "70580c18-f7e4-44a6-b506-47ee7078899c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "033cfef8-6a37-422b-b055-47bba356b128"
        },
        "item": {
          "id": "c5e56c7e-ba1f-4642-a401-ed62047d9790",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8e2e3a7c-b6b9-42c2-b41a-36e136f19f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d147864-ff23-4268-ae98-369bc256d90a",
        "cursor": {
          "ref": "8298a082-d6a2-494c-98c6-8453c3384128",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1e46f8b6-dc4d-4783-a146-67f023ae0339"
        },
        "item": {
          "id": "6d147864-ff23-4268-ae98-369bc256d90a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c97e5d5b-bb6e-461b-9ea0-0b4b492a03ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de59367a-73b7-466c-ad89-a8c9e7bfc318",
        "cursor": {
          "ref": "232a9684-76e0-4928-8f60-b01f8a50c154",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4a519136-0de8-4413-95b7-a53d8664fe6e"
        },
        "item": {
          "id": "de59367a-73b7-466c-ad89-a8c9e7bfc318",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "27a0bae6-e8ea-459f-8eac-c6b9ed47582a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171bb6fb-6819-4558-8f0d-73d140bf3524",
        "cursor": {
          "ref": "69993330-22b0-48b6-a702-324989335e6a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fea69ecc-427b-4a2a-9fd6-961a55264aea"
        },
        "item": {
          "id": "171bb6fb-6819-4558-8f0d-73d140bf3524",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d58663e4-014b-4dc5-8550-720caa1fca1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e11729-0b55-4970-8f1e-ad6cbb39fe73",
        "cursor": {
          "ref": "3cbf9fd9-527e-46db-bcfb-96fca6b27245",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "13d0f176-3a2a-4fac-b90e-c7c284711d20"
        },
        "item": {
          "id": "08e11729-0b55-4970-8f1e-ad6cbb39fe73",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a3ee402a-3769-4ee6-8f1b-e8eb02c71b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70180dd-bdc3-47f1-99fc-eb5c41ce9459",
        "cursor": {
          "ref": "093940fb-7d64-4db3-a127-0f239867c334",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "42bc3e01-1a34-4a21-ba4a-acd3bf0f090e"
        },
        "item": {
          "id": "b70180dd-bdc3-47f1-99fc-eb5c41ce9459",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9d658ee0-8c7a-40d7-aa61-bec13738a288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0f5edd-6cff-4f2a-88f1-39c78ba15509",
        "cursor": {
          "ref": "41dd4eda-9f51-4b73-ab77-5e85ca193aac",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c250a33d-9c76-42f5-8447-2d89a4090683"
        },
        "item": {
          "id": "ef0f5edd-6cff-4f2a-88f1-39c78ba15509",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "28b41c4c-7e2a-4b15-8515-93a3e05c3fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d27355-4800-41d1-a697-6795d6379bde",
        "cursor": {
          "ref": "7d344dda-8b4d-4a49-bed8-5f7ebe3f2ff8",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a568e151-78f6-424f-81b9-ae7f07fe8349"
        },
        "item": {
          "id": "a8d27355-4800-41d1-a697-6795d6379bde",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "21bce394-fcc8-4135-a111-d4c8b7e80d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb365ab2-5c2f-441a-9e15-573e72e651d4",
        "cursor": {
          "ref": "d260b9ec-1573-4b98-953c-37e27ebefe99",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fa7394e3-c5bc-4829-a4b0-96aa922cd9fb"
        },
        "item": {
          "id": "fb365ab2-5c2f-441a-9e15-573e72e651d4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "89c4b690-ad61-4ff9-934a-216a35d7274b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c268d0-e289-493b-be82-ca56ade5a4ba",
        "cursor": {
          "ref": "9e25dfd4-0ba0-4476-8484-69ad29487c53",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4edc0a23-6f6e-4df6-a229-3546fb403251"
        },
        "item": {
          "id": "25c268d0-e289-493b-be82-ca56ade5a4ba",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dadaad64-2915-4a37-ae6e-74122b8c9ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3da86f6-8d22-47a9-ac28-7081d9558ac6",
        "cursor": {
          "ref": "7910efd5-aded-437a-a113-a2b0dfbb1f65",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ce0251a9-cda6-47ab-bd22-b1d6d061a95a"
        },
        "item": {
          "id": "d3da86f6-8d22-47a9-ac28-7081d9558ac6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "64519df9-2be2-4e18-9a61-1acc9759c0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23488d5d-2c8c-4efc-8079-d891ae10eb87",
        "cursor": {
          "ref": "1277d17b-16e4-43e4-9b4e-1ef32a813eee",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "04e25e19-f12f-45b8-8902-b9fc1e9803ee"
        },
        "item": {
          "id": "23488d5d-2c8c-4efc-8079-d891ae10eb87",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bd1cddd3-c814-4a2d-ba1d-872c48beb9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f544fa9-9869-4602-a4df-66ea5cd8cd2b",
        "cursor": {
          "ref": "957049b1-93d5-4395-9070-8dff228a4506",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bb614311-db92-49fa-bdf3-fe4b549ba08f"
        },
        "item": {
          "id": "6f544fa9-9869-4602-a4df-66ea5cd8cd2b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4ad5a61a-09e3-4250-830d-97b4b3553606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72035d6-9820-4351-a3ba-699e55e05271",
        "cursor": {
          "ref": "f670315b-73b6-42e7-a22c-c93016e76849",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "22b585a0-cafa-4d93-b936-f963ad1f9556"
        },
        "item": {
          "id": "c72035d6-9820-4351-a3ba-699e55e05271",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8cb2eaa5-fa1e-4b66-a26c-7cd26597ac20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30778ea8-a26c-40f7-9413-643476218216",
        "cursor": {
          "ref": "ce7600ea-20bd-4412-ab07-993ba0a523e7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "455f05c0-f6f0-4ec5-9fe6-3b6dfb0c74db"
        },
        "item": {
          "id": "30778ea8-a26c-40f7-9413-643476218216",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ee0105b1-43fb-4e15-a0ad-8708dae56282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac3fe3e-f61e-4104-81e0-310475d4cb46",
        "cursor": {
          "ref": "4789d102-e04b-4f44-9cfd-89b91c1d5c13",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b9b74b84-f720-4127-be7a-de68ac09bc00"
        },
        "item": {
          "id": "1ac3fe3e-f61e-4104-81e0-310475d4cb46",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6800cac9-25ef-439c-a4de-2a04f526d54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c9ef57-a38a-4509-869e-d7e345629acf",
        "cursor": {
          "ref": "6dfb0c74-8cef-4c86-a0ef-80a06160cf49",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d10dc4a2-ec27-489a-8c93-79a716c34183"
        },
        "item": {
          "id": "e6c9ef57-a38a-4509-869e-d7e345629acf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e1564fd9-0cff-46a9-b99a-973120645642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd52e41c-9761-4d5b-ae34-8cda0afa13aa",
        "cursor": {
          "ref": "6c0fdf84-bb2f-4840-b767-2cf4200e1689",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b633ad87-fccf-4012-88c3-02b805cf2200"
        },
        "item": {
          "id": "dd52e41c-9761-4d5b-ae34-8cda0afa13aa",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "44ce415d-73ab-4215-bb5f-7cde7371503a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394990d9-79ab-4531-9e4b-908915344e08",
        "cursor": {
          "ref": "56966958-27f1-4937-82e3-993b0fe7b219",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "796cecbb-4ac1-44e4-8677-39f8c9596251"
        },
        "item": {
          "id": "394990d9-79ab-4531-9e4b-908915344e08",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "46693711-fc82-4610-a0aa-642a627afdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57a2f4d-1347-42aa-903d-558f448d79ee",
        "cursor": {
          "ref": "519a3cf0-04a5-4a1e-9d20-dfbabde2e3e2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1940e4ce-88b3-4440-a657-61aeea633c87"
        },
        "item": {
          "id": "a57a2f4d-1347-42aa-903d-558f448d79ee",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "89a2b675-feae-4f2a-b210-1d3313f0bcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ecc466-3b16-4b66-97f6-92b86c2652f6",
        "cursor": {
          "ref": "89dc708b-6a3f-4984-b041-e6fd1f1cf9ab",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "52a7a07b-a94b-46bd-83a4-5e357fa75a06"
        },
        "item": {
          "id": "44ecc466-3b16-4b66-97f6-92b86c2652f6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "998b8c19-2183-43bb-b3d3-527b81de2b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871862ea-1121-4bd4-9cc8-796431235b03",
        "cursor": {
          "ref": "5600e66c-500e-4558-b7b8-9ff87633de6e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ed706640-da15-4a87-b253-c60f0b8000a9"
        },
        "item": {
          "id": "871862ea-1121-4bd4-9cc8-796431235b03",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1d9f0782-8d2a-46bc-9f7f-b66963ca1301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae26eb52-fdc3-4886-aa76-06bf9ff913c9",
        "cursor": {
          "ref": "7375423a-aa4d-489a-8243-fd984a49355b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bb49cf9c-cf15-44eb-a2be-59a5298d98af"
        },
        "item": {
          "id": "ae26eb52-fdc3-4886-aa76-06bf9ff913c9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2cc0a75f-1d03-4e14-ae90-90aa90248b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ada078e-e45f-417d-8002-6f4691fc9c57",
        "cursor": {
          "ref": "2e5173ba-9485-4044-bc35-e35114f2bbf4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9c3c64eb-4fb0-47c2-99f0-38e193e9c643"
        },
        "item": {
          "id": "3ada078e-e45f-417d-8002-6f4691fc9c57",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fe423a9f-8333-488e-8a22-f28397d38c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aed964d-8ae2-43e6-87f2-cb47cf145441",
        "cursor": {
          "ref": "277b41f3-4b6e-40b0-8140-41770920f320",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9149f834-6029-4011-b6ca-1e41eedfbe4f"
        },
        "item": {
          "id": "9aed964d-8ae2-43e6-87f2-cb47cf145441",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "eda0973e-55a6-42dd-9d8a-af789aea2ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56429970-b1d9-4b86-8803-431ea57d6a39",
        "cursor": {
          "ref": "52d4af71-2cf2-48c3-a11b-d6c32dfc928c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8de6feab-85a9-4207-ae83-75933e419a96"
        },
        "item": {
          "id": "56429970-b1d9-4b86-8803-431ea57d6a39",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b18ee01a-85c2-4391-91c3-5d4ff976daa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526af2f7-0a02-47a2-9948-7cbbdf376027",
        "cursor": {
          "ref": "03008975-ec0a-4dfc-8e03-80f233ecbfee",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "13fa2218-da7b-4022-8747-3e5b9007f3e3"
        },
        "item": {
          "id": "526af2f7-0a02-47a2-9948-7cbbdf376027",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6cc96f81-d110-4083-a818-d05466e02efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2207e0d-421b-43a6-bd43-fc5179a31ee3",
        "cursor": {
          "ref": "e1406647-2778-4bf3-a0de-7612a8ad7741",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1c88e4a1-b487-49f2-a8f9-c7e913e069ae"
        },
        "item": {
          "id": "b2207e0d-421b-43a6-bd43-fc5179a31ee3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "447323c9-06dc-4244-9465-ca683984b1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158afb5f-a2de-45f5-a40a-3b066be4e260",
        "cursor": {
          "ref": "542a1909-8d4b-466a-a305-d870183c106e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c8492edb-56d4-4247-bbb3-0da4b0f49ca6"
        },
        "item": {
          "id": "158afb5f-a2de-45f5-a40a-3b066be4e260",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "027f3750-b237-4b7a-beeb-18e80cf34317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce6f300-af4a-4570-9ac6-7aeaf61a168c",
        "cursor": {
          "ref": "94b92972-192e-4830-a003-7e74c00305bb",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d72db875-bf6c-4172-adff-bcd98e2798b2"
        },
        "item": {
          "id": "dce6f300-af4a-4570-9ac6-7aeaf61a168c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "01ad5c54-5028-4e93-a61f-cb07137c9f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdfb446-b644-4ebc-83ba-7cb62660d715",
        "cursor": {
          "ref": "d9d77f58-3cfb-49be-8e93-45af296e1e2c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0943aee5-a224-4df7-b4da-502e365dd886"
        },
        "item": {
          "id": "4fdfb446-b644-4ebc-83ba-7cb62660d715",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7f36915a-5c75-4056-933e-8bfec82c68f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55984c68-48d5-4c20-ae96-a316816dddd8",
        "cursor": {
          "ref": "b6be5c38-4f57-4918-89dd-84e5c18e5334",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f65bd6a5-bd46-4e73-9a49-d5bacc1cbc16"
        },
        "item": {
          "id": "55984c68-48d5-4c20-ae96-a316816dddd8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a445bd9b-1669-470c-9e31-94c466b9f62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13fad23-abde-424d-8a0a-812a480daebb",
        "cursor": {
          "ref": "0f63e085-5013-49fc-8e74-b99bb539920f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e128d69e-f545-45e3-b1a8-03471a302714"
        },
        "item": {
          "id": "a13fad23-abde-424d-8a0a-812a480daebb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7e273958-0757-454f-83e1-c99d87fbe982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70786518-3735-43f5-9051-e52bfd9028da",
        "cursor": {
          "ref": "9f4c6b50-a92e-417a-8792-cc0af1145ceb",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3bd209f0-ab7c-43d8-bcd8-745cc06e3608"
        },
        "item": {
          "id": "70786518-3735-43f5-9051-e52bfd9028da",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f262584d-c5bd-4bfe-ba76-4ecb318f4878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70373a7-030e-4fb3-9670-15bfc327892c",
        "cursor": {
          "ref": "2a4f2c57-4168-425d-9864-31023ef1b2a6",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4db8b1fd-145d-4f49-9ff3-98001312365d"
        },
        "item": {
          "id": "a70373a7-030e-4fb3-9670-15bfc327892c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "76fb0738-9242-41e8-99e4-ef1ef414464f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c644dc2-74bc-4fb5-8570-9e1adedc5399",
        "cursor": {
          "ref": "51ab5e4e-0df9-44e5-a6ae-08dd5129916f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "83bc91cc-b688-44e7-98a6-1cbbdc3023f4"
        },
        "item": {
          "id": "3c644dc2-74bc-4fb5-8570-9e1adedc5399",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "98471e9b-560e-4c53-996a-9d8badb1385d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6d0503-dc0f-4676-bb37-646274d550a3",
        "cursor": {
          "ref": "69089389-e66a-4120-b00b-7a74bc8329b1",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a8e22d8b-292b-4dc9-b28f-89cdcc890cb4"
        },
        "item": {
          "id": "da6d0503-dc0f-4676-bb37-646274d550a3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cd352fd1-cc88-4427-af35-d728b57e4d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b381fad7-40de-472e-b1e4-ccca51793d6e",
        "cursor": {
          "ref": "1ef52215-12b7-4ca5-9b52-a2f727a89956",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8039bea3-451e-4b73-9485-564b431724d5"
        },
        "item": {
          "id": "b381fad7-40de-472e-b1e4-ccca51793d6e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "490184e0-4d54-479b-83e6-951261a55630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4689f6b7-4505-4e19-b5c5-f4190cc76983",
        "cursor": {
          "ref": "2827554d-cadf-420c-844c-039e69fbce98",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f2ca8002-05ca-4c02-b8cf-2922194e9992"
        },
        "item": {
          "id": "4689f6b7-4505-4e19-b5c5-f4190cc76983",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "78b39d9a-323f-420f-bc18-6312e3b6b00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a633fa-3f3a-4b2b-a44b-33d1c35aacaa",
        "cursor": {
          "ref": "a39da9e8-5acb-4689-b63c-22031055475c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eb219712-7d73-4ef9-adcc-6e62a1df2d59"
        },
        "item": {
          "id": "63a633fa-3f3a-4b2b-a44b-33d1c35aacaa",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4970e644-62a6-4f0b-ae43-69594c7c5f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44967e8-f2e6-4cfd-a16d-d9299391cfff",
        "cursor": {
          "ref": "dbd90b13-24c7-4e8f-a248-1ec8a050e0bd",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "79d42f9d-1df7-4491-b6b6-0d3ceeb7f965"
        },
        "item": {
          "id": "e44967e8-f2e6-4cfd-a16d-d9299391cfff",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5a9be00d-a0b4-487b-91e0-3f625c5cfc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd6acf1-d123-439d-b981-017f292e7830",
        "cursor": {
          "ref": "9f0ceb2e-5a3e-4083-9e87-1c5c111a31e7",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "59129e57-4946-4bb6-be63-ed8103597075"
        },
        "item": {
          "id": "2cd6acf1-d123-439d-b981-017f292e7830",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3afb6283-89e9-4084-939d-89ad2797f753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8147cb94-1fe9-4af8-9318-21d33f0ba0fa",
        "cursor": {
          "ref": "b896b19d-7df1-4ba3-8858-68f161e3f2f1",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6def9d7c-0f5a-4423-97af-d6a02c702371"
        },
        "item": {
          "id": "8147cb94-1fe9-4af8-9318-21d33f0ba0fa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ab486324-a10e-4f45-86cd-8614e1178dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781a0b7f-ceb5-4152-9edf-aa1eb1cf86f1",
        "cursor": {
          "ref": "b44c002d-a050-4976-ad11-6d93c85a85c8",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "10874a60-5d18-427b-a39d-36f566d044fe"
        },
        "item": {
          "id": "781a0b7f-ceb5-4152-9edf-aa1eb1cf86f1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "98896bd5-3fbd-407b-a958-04d4cf1b1c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6affeb8c-7a99-4352-8a8d-1670c38a3e28",
        "cursor": {
          "ref": "6ee38dfe-ce53-4a92-b789-2cdd455249d6",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5dd5f8e0-c597-4ff1-a6c3-6f3c0328cc1d"
        },
        "item": {
          "id": "6affeb8c-7a99-4352-8a8d-1670c38a3e28",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "72265e2e-13c4-4086-8a46-976159661fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487815b7-9982-4cba-8ced-9dafdedd35e3",
        "cursor": {
          "ref": "12e8a93a-89d5-457c-b80e-c1f5215173ce",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6fc2bf74-fcb6-4cca-a5f7-9325d68e28dc"
        },
        "item": {
          "id": "487815b7-9982-4cba-8ced-9dafdedd35e3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e7d16716-e529-459e-86b3-50a3b8dcc59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db6af2f-9bb7-4c01-ab36-4e4a6776411b",
        "cursor": {
          "ref": "a893be24-01e8-41fc-b2b3-355549dbb00d",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e12099c7-66cc-4522-85dc-278e886839d1"
        },
        "item": {
          "id": "4db6af2f-9bb7-4c01-ab36-4e4a6776411b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cecf877c-4fcc-449c-bedb-41754ae06a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6455eb-b2ad-4169-bf3c-fc3e582a504c",
        "cursor": {
          "ref": "072b607b-a00b-4402-8c20-71efee9cba22",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ebb547ba-aac0-44f5-a248-a50d538f5d6f"
        },
        "item": {
          "id": "bb6455eb-b2ad-4169-bf3c-fc3e582a504c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ec610a28-2686-44d5-a6f5-69df71ae684e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946b9dd0-c037-4a6a-9e19-1f1bd29fb0c8",
        "cursor": {
          "ref": "7fc804de-8484-4144-a425-da0684363016",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4c10e4d3-979f-490b-9766-7d515747e7e2"
        },
        "item": {
          "id": "946b9dd0-c037-4a6a-9e19-1f1bd29fb0c8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b1984965-85bc-4f3c-be00-dd0858d661e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912dedf0-a19c-472d-9693-f5a6fad5c964",
        "cursor": {
          "ref": "a3f5333c-2377-4825-98a4-38bba97c03bf",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2dbd0a4a-f64e-44a2-a4c6-d056521ab597"
        },
        "item": {
          "id": "912dedf0-a19c-472d-9693-f5a6fad5c964",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "edacda0a-dd75-4f34-8203-aaa662d36e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb8530f-29df-4353-a587-43d0f4c5a8d4",
        "cursor": {
          "ref": "b9a9b647-7b4e-4422-8c5f-8e39e94676f2",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4e5b4db0-1e7c-4bd2-af73-e493ab75251e"
        },
        "item": {
          "id": "7cb8530f-29df-4353-a587-43d0f4c5a8d4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4803590c-3feb-4ad3-9657-0d26cc1e6a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501d4275-55da-4164-b55c-dbbded31def1",
        "cursor": {
          "ref": "69defbbc-b80a-48e3-b59e-74d98d362752",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "505423ff-686d-49eb-b0b3-ec81e4e42e9d"
        },
        "item": {
          "id": "501d4275-55da-4164-b55c-dbbded31def1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6f67873d-8d1b-4063-9280-9b78474192d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb445fe4-50ad-4a81-be14-3dacd7ba2892",
        "cursor": {
          "ref": "f39d1725-0030-4ac8-9125-96241765d37f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "edf24ed8-4987-437d-9972-d18df96752b8"
        },
        "item": {
          "id": "eb445fe4-50ad-4a81-be14-3dacd7ba2892",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "95780ab3-9781-45d4-a578-d47553be7de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435dba74-fdb1-4b34-8d5d-b38cd923fe50",
        "cursor": {
          "ref": "27a8b711-d880-4129-a087-0f6c20e5b761",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fe477ecd-025d-44b4-bc9b-ef44bf7e9995"
        },
        "item": {
          "id": "435dba74-fdb1-4b34-8d5d-b38cd923fe50",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "de9eb4e5-730d-4d30-8e15-23ea4d9caeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b3d8e2-8baf-42b7-9927-c9fd9f256f53",
        "cursor": {
          "ref": "46cf86c9-e7e2-45e7-ab48-9347e5ada901",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9de868d4-91f2-4cd4-b929-7ac381c4ad6a"
        },
        "item": {
          "id": "56b3d8e2-8baf-42b7-9927-c9fd9f256f53",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3a394b3f-9465-4cb4-8a72-f02f54a4a6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc15fdc7-5027-4011-9a40-0c58eac9648b",
        "cursor": {
          "ref": "1469700c-017c-486f-a7d6-6a594733a040",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f87a9c6c-0f5a-4256-8c82-219c11f67ea0"
        },
        "item": {
          "id": "cc15fdc7-5027-4011-9a40-0c58eac9648b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3f637924-30a9-4ae2-a90b-d63dbae3c3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422bf0fd-04c4-4bc6-b60b-de421c9ca349",
        "cursor": {
          "ref": "a05594d3-1678-44be-8ec2-1a3fdf94089d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4b1200ac-993e-41f0-ad14-df9aef470c82"
        },
        "item": {
          "id": "422bf0fd-04c4-4bc6-b60b-de421c9ca349",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d06175ec-6f0b-44a2-bbdd-3e2b8545652e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2c7849-04aa-44aa-a36b-d32f233df158",
        "cursor": {
          "ref": "768f5791-a601-444b-8675-40b106ac9051",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "635dbb46-d3ae-4910-ad1a-65b020a87227"
        },
        "item": {
          "id": "0a2c7849-04aa-44aa-a36b-d32f233df158",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "148199cb-8c44-4fee-8371-9bf404629b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133c29a9-9d94-41b4-8965-875e97a25fbc",
        "cursor": {
          "ref": "1132dd47-9865-4153-a0e2-e66fea9b4df0",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8c9d109b-5d0f-41e5-978e-2fbee45b7fdd"
        },
        "item": {
          "id": "133c29a9-9d94-41b4-8965-875e97a25fbc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b6ffe6ff-b740-4131-86ff-a2f648e5406b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bacbd5-84f3-4169-beef-99f14b734fa3",
        "cursor": {
          "ref": "a2f67965-4d5d-4876-83a4-d3e542920b91",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "84370373-c627-4576-8fe3-71b64ae76ff4"
        },
        "item": {
          "id": "58bacbd5-84f3-4169-beef-99f14b734fa3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f2585925-d99b-41a8-8ced-9697ae04e117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b69098f-3f67-4783-8157-57c456ac6c90",
        "cursor": {
          "ref": "4178241a-3a27-49bd-be03-d68b4265bed6",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "54bc76fc-6e45-4e89-94a9-a026838eea06"
        },
        "item": {
          "id": "5b69098f-3f67-4783-8157-57c456ac6c90",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ef526d89-b92d-4c6c-bcb9-3c52cc6bbd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf756ee-24fd-4818-ad6b-7d1ef4d063dd",
        "cursor": {
          "ref": "1f844486-19c0-49b5-94ed-d3fb2afd391d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f18d1c18-0986-4b46-aed4-a99bf3f66249"
        },
        "item": {
          "id": "7bf756ee-24fd-4818-ad6b-7d1ef4d063dd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "af656658-ba00-4059-ba29-2c06191dd802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b2fb0c-54bb-4e3b-8683-c0d937940c00",
        "cursor": {
          "ref": "5ad43f47-ec8b-4f88-908e-daa8e7f84dc3",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e85e9e00-3dc7-485e-ad1a-aff9578b01c7"
        },
        "item": {
          "id": "63b2fb0c-54bb-4e3b-8683-c0d937940c00",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3781487e-30de-424d-b2eb-87320cc0a2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2f9ec6-cc63-40eb-a022-07fd1c3d4f51",
        "cursor": {
          "ref": "94d46674-1dd6-4632-97a1-25e88e81e8e6",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b6cd7a2a-4cd2-4d2a-9647-9178e6795a0a"
        },
        "item": {
          "id": "ab2f9ec6-cc63-40eb-a022-07fd1c3d4f51",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2c2e6eda-bfb5-4c16-a9a6-8de30aea316a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade9f953-1970-4983-9cd3-57e7afed10f8",
        "cursor": {
          "ref": "6a23e8df-bf07-4660-ae2c-6075f23a9199",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "33fbf490-6a2f-4383-9d4a-2330e4632e41"
        },
        "item": {
          "id": "ade9f953-1970-4983-9cd3-57e7afed10f8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9c2b6f2f-486f-4cbb-987a-3bae45d79d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7c2ae8-9ab8-4967-8129-233972a99e7b",
        "cursor": {
          "ref": "859199fd-24af-414b-bf70-f3b4211efdc4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "86fd575c-2ba5-48da-8355-8e932b0f08cb"
        },
        "item": {
          "id": "ae7c2ae8-9ab8-4967-8129-233972a99e7b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9faae823-d5f3-4d5b-a97a-fb76c88296de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cf4f60-ca81-45f6-a301-3c9c7ad1b928",
        "cursor": {
          "ref": "fb1cec65-cb99-4d80-97d3-f19293b6c9d9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "793908af-4193-48fd-ad96-93b913b9c671"
        },
        "item": {
          "id": "e0cf4f60-ca81-45f6-a301-3c9c7ad1b928",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "916da834-62e1-485c-84cf-3d837b53ced8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacb371e-111d-4ed3-823e-ff62c71d80bd",
        "cursor": {
          "ref": "fd08de5e-d919-49d1-864f-73c8f1dfb5b8",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1659d37d-4527-4ce8-8049-db5c16fddc78"
        },
        "item": {
          "id": "dacb371e-111d-4ed3-823e-ff62c71d80bd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "52a6b191-c7ab-4192-b870-48561f758133",
          "status": "OK",
          "code": 200,
          "responseTime": 127,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe3c24e-5af6-435b-8ef7-0c6c48b62249",
        "cursor": {
          "ref": "d7f7dfc0-9cf6-420f-835d-bee94f509da3",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bbe5f92a-246a-4164-b036-afc58975da69"
        },
        "item": {
          "id": "fbe3c24e-5af6-435b-8ef7-0c6c48b62249",
          "name": "credentials_verify"
        },
        "response": {
          "id": "60f2fcc3-206c-40b0-ab17-6cf2d494c0eb",
          "status": "OK",
          "code": 200,
          "responseTime": 1704,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3aeee1-d037-4159-8011-fa8f933be5e8",
        "cursor": {
          "ref": "92e34cd2-8e0a-40c6-b221-2d9ba105afad",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a54623d0-e5d1-4102-bb87-fe81aa91c43e"
        },
        "item": {
          "id": "1b3aeee1-d037-4159-8011-fa8f933be5e8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "66a886c6-9510-48bd-bf5b-500b3ca26161",
          "status": "OK",
          "code": 200,
          "responseTime": 1499,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "657fff64-8548-464a-bbb2-b9bdc09d8369",
        "cursor": {
          "ref": "3d5da505-3b0d-49dc-8b95-976930691897",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "899ea8b6-575d-4df8-8a6c-801a89b34ae6"
        },
        "item": {
          "id": "657fff64-8548-464a-bbb2-b9bdc09d8369",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "deb72b2c-5f18-411a-88fd-98f6a04eec2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657fff64-8548-464a-bbb2-b9bdc09d8369",
        "cursor": {
          "ref": "3d5da505-3b0d-49dc-8b95-976930691897",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "899ea8b6-575d-4df8-8a6c-801a89b34ae6"
        },
        "item": {
          "id": "657fff64-8548-464a-bbb2-b9bdc09d8369",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "deb72b2c-5f18-411a-88fd-98f6a04eec2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5921967d-3c3d-434a-87c2-c14d4c294dbe",
        "cursor": {
          "ref": "878f6b68-eea5-4874-846f-7c98121733b2",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d559f190-8281-4d0e-aa74-2863f6a3487b"
        },
        "item": {
          "id": "5921967d-3c3d-434a-87c2-c14d4c294dbe",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2922d894-3633-4b6c-8108-ceb8891475b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0364c9c3-13e6-4891-a956-6e2fd2104748",
        "cursor": {
          "ref": "219b3980-8513-44f1-a779-252d6c004127",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "62846b77-d5e2-4724-b67d-cdbcc8d7180b"
        },
        "item": {
          "id": "0364c9c3-13e6-4891-a956-6e2fd2104748",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "afe447f8-8d51-4f81-ad4d-3bf764690a4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}