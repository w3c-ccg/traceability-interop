{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1ccc2d77-4977-476a-a5bf-1588c7910b3c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "065d8fcd-6cd9-46a3-9865-f9b40784902e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74626bcb-751e-4739-a965-e89df3568041",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "458d828e-7e5a-4f05-b9ef-1001897244c1"
                }
              }
            ]
          },
          {
            "id": "4bd0b7c6-065a-48b7-a246-9331243b202a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed720a0e-dec1-470f-938a-a1b0ae75124d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "25bd7b47-5875-43aa-aef8-187183a20d6a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4dca2a3d-df7b-45a4-aee2-b3301b05a3a5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ce09fdbd-c052-4951-9715-4cabb9cd59fe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "74d478e5-dad4-494c-9bc1-5dc4d1a7a790",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "771b5252-a981-4bb4-a5d1-e31fe02a7d70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c222bd74-5b2c-468c-a3a6-cd76e991ba6f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36b04b54-0e95-4817-bb0e-b4788af0504c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea7f165d-cf6a-49ef-bfe8-e221ed0f8f97"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0d66b7e9-6ffc-46f3-a563-371cdf721918",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "915aba7e-b78f-4763-9ee8-8dd0a8dcd85c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95c80f88-c7b9-466e-8557-820a6155c86a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9d6b59dc-2eb3-4641-91ea-341144506c76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6833284-22f3-4c8b-8d12-c28212e629e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "840748a6-d5cc-45d5-9a97-728ff75eb9ed"
            }
          }
        ]
      },
      {
        "id": "2b3d0f54-ca40-409c-b506-65aa3b18ee04",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "34ca5ebb-92f5-405d-aa38-8a0e69210ef4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59fc94be-19e7-4fcc-bd7f-a0dce3b7caab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5babfcd9-8cf9-4cfa-9bf5-c862953970c5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585666c9-d3c5-4188-be5a-c45beebd0127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "247d4e75-8b52-48cb-a0f0-a96fae2d22be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98c00af-f47f-4add-8852-b85fb3c1278b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681e80cc-dc30-48f6-aedf-02182b2ed338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59e4519e-dac6-470a-abcd-1aba110b39cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7a507d-82c4-43fb-9e58-a5c4db7e13d9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb27f6a-0a83-4c27-8861-2ce55898efdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "930245a6-0b20-4ba6-a012-b14551d1b5a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ddd9d053-d728-4063-89cc-6ea3e77fa75f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b271a26d-2530-4fab-892a-4946d4bba043",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98dc845-79ea-4e38-82ea-37197d883c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7f62a2f-5ff0-4fc3-a73d-8385e45a49a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781d516e-badd-4afd-be42-b2748f999e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2417b3e5-6dc0-40db-81d7-29dc8b1592c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7d97eee2-5d36-4906-8446-56764daa4a44",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bedab8d7-448b-4845-95ca-b86734225a6f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "500e9f4c-4687-4717-800f-b1c809a1f7b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "320f84a3-f571-46dd-86d2-9fe15171f23f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "687a9da1-97db-4d0c-9d08-dc1804529da1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cf3debe0-c6d3-49a2-aea1-f934e5594909"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0d3fd5f-c8c5-4f2f-b8bd-2094c7624322",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "697e4cd7-461c-4129-8daf-18f0218bb35e"
            }
          }
        ]
      },
      {
        "id": "deece67c-cdaa-4139-b91f-9d82b4792825",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b08a8397-1614-4373-824f-b0fdbbb88da8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02e19815-4016-4d9c-987e-49c72dd0967a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1a07329e-5f27-4cd5-89bb-633305ba829e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d954be0c-bd6f-4451-bd9c-d4aa408e63ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd31cc06-33b8-4291-aa61-0924ab6b4247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcf1a99-e146-47a6-8892-16bf60526dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd5968c2-be57-4b18-af02-f95ed333780b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd65e852-21d1-42fe-9357-6dfb3dbce22e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de76b2e-6837-49e7-afe2-5d762a6d2d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a9a168-d9e2-4b13-be51-922ab532300d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61caa23a-dd9e-4946-a638-524af9a74d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7d46d03-f300-4d63-9419-8b84234a8357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3903f5-52a0-455b-930b-e94ca155cfce",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c01a67-1c0c-41ae-b924-eb8140b8149d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99663656-42c7-4cd8-a1bc-951dcc90763d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2e2170-dd93-4b77-b210-0e387728b8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9eb64738-07ce-4fe3-bb05-00b852904f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20f3ab9-015f-4195-a9af-d8d8f476a51d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495f95e8-2e03-4e46-9c2f-8a8781a96c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42b42e1-f1d7-49de-b071-8e57559659d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8b5301-66b0-47c1-b029-7184678cf1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a9c66af-eeac-4d2f-8fbe-f12b1bda2a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a8a597-8785-4be8-b0ff-40f9c687cac6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a972b47d-f1c8-406a-898c-72cdb9e4dd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b65297-ff8d-4308-b3e5-f58f5c19f11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70a9488-412c-49c6-98fc-3c62ce4c3912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "328aa553-ec84-41f2-b3d8-8e3a56d920f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed053fc7-eea4-47b5-95b0-11fe633d8252",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d57c25f-5225-4824-b57c-c1c984a2858c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e3d95d-a8ac-42a4-ad36-75123f75e3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c050b68a-e21e-4461-bb4b-d42029b462fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0ae057b-5dc6-4eea-bf33-0abef134747b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be45435-e626-4bc2-a6b8-de88dfc16856",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f89661-7ca7-4b4b-851a-5855b3a06377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81e719d-b3eb-4c8a-8b09-08b1ad52ef6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edfc7f5-bb1a-4ebd-bd94-2d4c4ef619bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5a48bdd-201c-48bd-a978-09c441090d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c09041c-7daf-4b7f-bb41-d03cba7c385f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50de0bf-c51d-4a53-aa2a-ec1229573d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f174d0cd-f58c-436b-a3de-13a3dfd91197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4eee0a-755a-479c-8056-162dbbcec9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ed1db46-9046-48d0-be80-6472860a3755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d570d7d9-bd56-467e-af1c-f57d3ebb039c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18372e27-167d-46f3-bac9-1145ab2311d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86114d5d-59d6-4f07-9b86-aff3f0476bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9196a96-e36f-4837-a57d-2853e42c75a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4e58efc-66c5-4dd4-9e5f-0e2209632147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a34262-746c-4c27-b120-2a045b41b645",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8b55ad-4922-4194-a48c-07c4fb176dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429d79fd-8c7e-48d6-b3a4-51118ddf0dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474d6047-006b-4320-9e81-999f71534fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba1ed9f2-c5fe-4cab-992a-4ff209cae739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a759ad-d909-4b16-9e85-be50ce61db23",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b1b124-8c0f-4089-b16f-d9052513b854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dabf8eb-57d3-4dca-b34e-ccd3c69f7631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b50d23d-aec6-4cc2-ac2a-538e3acafd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa036655-2415-45e6-9f26-e079d57e1f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd49a7c-25a4-4c3d-b6f3-fabdea8e9486",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff567a0c-5b73-42fc-ae28-c751b62764d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd857d1-c052-4572-a053-35139e018cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0172e2-cd6e-4197-a0ff-0162600b3880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deff1b1a-d00e-49a1-ba75-c847c7b12e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e39c75-eaec-45a9-afcb-51802da412b5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40e1b68-0c5d-49ab-bbf5-01662c13e4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b2661a-1286-472d-a5f6-93e4675c61e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13667cd7-e2be-4019-9f03-df9d993141ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c937cad9-0d50-4bfc-8ad0-afe6a010bb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fadcc7-212f-4a16-9a5d-63824b655683",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8984ee35-56cf-43d0-82d4-709e352f48ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04cd4be-29d0-41f6-a59b-7c2dc2012e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140c5392-9879-41dd-a61e-fe06483df0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bba442a-7120-4449-8c10-1e3087a194a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757b2ce9-ed94-4e9d-88f8-d63cfacaa6c7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31395bb9-502b-454e-b194-d3e6cd560ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cd9816-3303-4fd6-8895-2d3f44eb82bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e3512b-c126-4662-8d6e-2531bbead361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21ef85d6-f7ac-4fc5-91c6-be5b5ddbf977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30135db-1b22-4f85-bafd-9157001a4c44",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a307de14-91bf-43fc-8da6-617ce7899aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77c27ca-83eb-4470-bba5-3330f8a3746b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c782ef03-587d-4bdc-8ff4-ec68b46f4e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3647dbb7-5093-41ed-9f08-941660afccde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2f4744-9f42-45f8-a2f7-d5957125fdd9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfe63db-57ee-4839-9783-1c9821237c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d6eb40-70a0-4194-a8ed-9cfcd1a79ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1264d855-48f9-498a-bd46-a80edcd227aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ff2844f-7bdb-45d3-b126-ee65a5dd0c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a312c57c-16fb-4315-a8d2-fab43080946f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113acee7-d621-4894-9eff-8de7f67adb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493974b7-4c55-4e25-bfd5-c216837bdc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4794932-e040-4c0e-9a9f-acc6508d505a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a897212-8afb-4611-b04b-a14f21946505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c07ce5e-3c90-493a-a670-1b0224360220",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861b2d65-b3b9-4511-8ec5-fcecbd83a93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ca9c1c-dcfd-4819-a30d-bd63b9f2e392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f628a14-457f-41a3-a270-11ba6fa63384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46e5d174-d014-4dca-b35b-f8f32f8bcd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7442eb54-cf63-41ef-8997-4115f3f00bc1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0541d3-b424-4ada-97c9-55a689525250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf93271-7815-4e4b-8d72-b20df7f2d3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bcb946-c584-47ad-bd08-6c53cdff9fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7029856-7faf-40ea-917b-bc849d6099ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28575b5-3200-4913-9e4f-8d326abe698a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b411414-11c0-42e0-8390-87554457840d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66869db-125d-48ba-86d3-3755d3524bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b18be7-1dfc-40a3-999a-72f41ae62d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c26bfd79-f916-406a-930e-00bd0f89f297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b33ebd-c949-4481-9555-deedb0dfd3d1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26555a4c-5e3b-4a82-b072-851e6d3425b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89287d2d-43bf-45d4-b4a7-22adfe047838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb0d0ab-4476-4713-afa4-d1553a38788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c48369-911c-4453-bc50-e4aaa4bf26eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aaf6b9e-4f55-4710-adfb-c3eba19dd9eb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee636eea-b778-495f-8159-0c67db195aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900d18e0-a232-453c-8bca-da55ecee6b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99193d6-26ce-4bd5-9312-95b06457bdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23afd480-f101-49cf-951e-c9055030d099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567a3e6a-e81c-48bb-bd3c-83d65a4df1d0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5982462c-5fa8-4d4e-b251-adffde383755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ef23be-9b47-438c-a800-f7f9d69f81ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58841767-7bd0-46fa-8596-41660da86866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8223bae8-c7a4-42ab-a013-7d1ea4b1e7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce8f8e4-1d51-4c56-8ade-6b0fdda55067",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768e4304-110d-4f27-8232-f4062f658bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4f22e0-e273-4711-a2e0-40a7ba3ddd24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be8d845-56f5-4e48-ba1c-c795aadf192d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "137c7e4f-fcbd-473e-9476-ef76b60aef4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a8969a-e53e-4412-8088-2d091655c68d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b00fbc0-85a3-42d1-b0ef-1399ff1dc227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb19e654-d51d-42ed-86db-03344f5c7f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef63d7a0-d8f5-46fe-88bb-e020039680ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf04e535-fb94-45fb-bc72-cffe5cfc3ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c6670a-b0e7-402e-a882-caab2f591617",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10bbec9-4962-4ee1-9597-d6028b92746f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830b0e3f-0971-4d17-81b7-00027853b5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909771b1-93c4-4d2f-bd64-6f90566099e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d97c4d-27e1-4d84-bca3-32bcbf8a6614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2cf602-8c9d-45ec-a31e-1db4b8d00971",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4f462e-2448-48a5-85cd-3712617fe784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d78eb0-f5bf-4422-9761-4fe9e0f2c801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1120480-1a58-4ecf-91af-5831d0318ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab5d1ce-2468-49dd-a04e-eb12bf41e78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e20dfd1-1139-46a4-8ba8-e43e589ac31b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b003f6-58e4-44e6-a0b2-030064de2e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179606b5-f640-4aca-b464-9b5f3bd1372d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470fee78-cd06-4cf2-a407-18a15643efb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fa5300-29c3-42e5-b716-b38f1aaa2c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99dd5e3-e392-4d33-87ef-6ea60026a014",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ce8916-8a14-4328-92b5-e7140b408a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb5753f-442c-49e3-8591-78e3b046016b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e347f54-2d0f-499b-84a5-548b172e1f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "65f30d9e-b41c-4b80-8448-6e4defba4905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91ee3ff-0872-4336-a266-9dc0369a2bb3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d377fc2-5564-4255-8a45-022fb0e3a1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c5d7a6-a338-4ffd-a9ed-5ec59d21e6af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab261f3-28fb-4340-8080-9f73c676ef44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06f39673-f36b-4f50-b031-db2072a8d514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb30fba5-a808-4de5-b396-68a64a028e46",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0da8025-11d8-4471-b10b-11dfa6f7a7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d064d44-01f9-476c-8924-c9dfa1e90ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf91dbe1-49c1-4cca-a205-9e7afa40004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f79bce7d-a71f-4fe4-a295-15d6abfe5a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab659753-c122-4a89-a6eb-b2476abc66e4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb18198-8897-45fb-8c6f-6dce9b8cfea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6b9f57-b05b-4d89-ad44-4cb8976636de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dd6f74-94dc-42d8-a4c2-cb867b555702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aadb0cc3-67b1-40de-a5f6-92778a64b616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70075b8f-b3a8-4756-b9ea-19a026967481",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe0ed5e-2fd8-4091-af67-b02bcbed0206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4faaa223-1602-4d70-9444-b79f69667a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b47077f-c722-4fc1-a7e4-6f46e58514d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93bd2226-9304-4ea8-9505-6d4fdb1d8387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f8d768-7071-4a54-abb2-42b004f54d2d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d571816-44a0-4161-b026-6aceeae93222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b085fe9f-a495-4db7-a2ba-2110fdbeab34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b580fa6-51d8-4cf0-8dba-faf5cd2d9a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "37b9a478-feb5-43c2-a460-d9b65c7db6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68deb8cb-eb8e-4d1c-82b3-aaf95dd678c2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac74e1dd-f6ae-4f1d-b40b-b78492a86a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "569cc88f-7ea2-46d4-9cf4-25ffab7abd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bcd907-b4c9-481c-9687-16164def0df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25cebddc-6789-4911-a2a2-94834890f823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a6a30e-8e2b-4c5d-9741-4cd5a5e4a4fc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dcc95e-c749-4a39-8158-b4b543395456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311dd657-ed76-44ee-b05b-03235f45efe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f389facf-f4af-4625-9f8e-8b45a98446d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c94301eb-2add-4e6b-b8f2-47edb89ba376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999fe984-fb75-4203-aa64-f16fcf56f55b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4500d39-4464-4daf-bf48-3a31cb565667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4692f50-df4a-4085-8faa-6d594dfeb62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3733afec-64de-471f-8dbb-cc897cd0dd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6ff18b-fd2e-4bd6-abca-8de29e1535f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fe1b66-fbc0-47af-803f-8edb7c689f6c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac3f33f-f3bc-43f9-936e-768158f35045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10398e5e-17f4-41bc-879c-0f1e37885780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7071a68-b704-4875-afa4-9fcce62aae4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "51ee16e5-d78d-4127-8dc0-bdc0c599391f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdcd571-7d52-4fed-adc1-55bd0d03af1c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ea2d92-d3ce-4a28-837f-959372266371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392cf6a2-43f8-4113-936b-acbd10a2f30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76242337-fe25-4988-ba7e-2ac46773cb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "592aff2f-0404-4142-9381-4e19f4186029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0221d438-28c0-445c-8215-9306caaf4c53",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a73706-8b0b-4721-962e-5e4c07827756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d0a88f-4615-4b35-adc5-e7b3120e298c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4cbc11-647c-4158-bfd8-239e9e96078a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c720193-88dc-4c2d-80fc-e66498799d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945a4dfb-0155-4699-a1ae-9b19996f5ee5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51592c74-7f4e-4204-8847-df8346c4661a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aca5a43-a435-4ded-b9e1-b5b2ce19963e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3162ac8f-88e5-4da8-8cc3-ef8018f008b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0c1577-84fc-408c-ac4b-a81b445ab00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e8da43-d56a-46ac-bcba-d04289ce87aa",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebe59bb-5b9b-4de2-83aa-4373f8dcdc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0915b58-6938-46aa-a6bf-dff78f3e34c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b89e0d0-9635-4afa-9a63-7f352b12b8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ece8e39f-556d-4b6a-88c6-a85920d23d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddb2aff-e232-446d-9b00-986d80411322",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2290e83f-693f-43f8-9193-4a9ec4e47417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0af69d-1b03-433f-bda9-997023226a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7601433-ebba-4296-ae26-7160423144f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "840f1b74-055a-44e2-a132-936feb7ad13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463bff10-5257-40f1-b2d2-95474d02b589",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70532567-a681-40c0-a11f-764277913ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4704d86e-132a-4631-b233-4ea23e9bf073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d02033d-5c4a-498c-9a6a-a98f171d6e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be91b003-441d-4c53-85a7-a96861f8e48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2afc8f-5eae-4673-9f03-b6c8c67f2017",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a4f92f-5820-40fe-8257-fda72ef5f061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ae1476-3ceb-4d4a-86f7-65cbe4d4b57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85e4cbb-dcf5-47eb-9052-58b7f833f348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3211f41f-0507-492b-8c75-d1391532f774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d4ee1d-e1e0-413a-8619-d5c472363b6c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855360c9-18ae-4378-a402-f8fa76dc04eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2a08a9-2cdb-40e5-b02c-0624bd47965c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0e6c9e-6a0c-416a-9657-55032e766ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f620663-153c-46a0-8d85-2ca734c67c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b097c3e-f4b5-4cc3-99c3-2ee968155181",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d223d22-5814-45ee-b694-a34152652fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043fbc73-e17c-4c85-baee-2ebe94a40488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f31613-f131-41dc-8cb4-b53b593bbc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17261aca-0c82-42c5-9163-f2c48e495f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc72f8f-145d-4fe9-9019-66080dfb57bc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d18acb8-f863-4ed7-b5ca-2008368ab068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b11d954-c927-489a-81b0-732e041eb4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fdc169-6066-446c-9927-a3017f31128a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efdc5169-fdb4-4bff-a0ef-774bc8ffdd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6db576-29be-47e3-9aae-a42227860489",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e45475-f68d-47a0-9260-f84ad25dabe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf097e9-061b-4e12-b971-5bd1d549faaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b3a06f-3659-455a-aa17-7782156853b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d535bf15-b439-45eb-b032-5f50929a9922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10a7d4b-2a18-411f-b9f6-23d20eccd795",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6aa6bdc-9147-4fb9-9302-0236ea6b0124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b3953a-e478-4ac7-a40a-8f3422fdbc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb65a7e-1336-453c-9a43-b28bdd5e451c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "73d8d8b2-39b6-47c4-a426-c14f849d6543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efac0bba-ca1f-4d5b-8f16-e4d991bc4077",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef3ffe4-7e98-4848-b3ed-ebd2817f2a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b8158a-c132-49e2-b484-2edddf60cca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcaaa8ca-2820-452d-b13a-af8bf71d81af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3439219c-3f28-47e2-9c4c-db9a3b43a2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ebc533-bb12-4969-befa-b92c9e7847d0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931e97ee-df70-4600-8168-eb1fe67b631a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786109f3-58e4-414f-a18a-0a26d1aa0378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3afa0db-cf35-48aa-abcb-5ac76bb5aa34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4006ab-daa5-4977-9e2c-61a2a2d83cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8b1ded-23a0-4589-b4fc-2e24f04bbaf5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf33ed7-2b2a-465d-899a-c7f5c3822a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23d08c2-9ee2-4e43-8736-4353c5b8c68e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fa34d1-a1da-4de8-b10e-3092250c2146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c2685c-bf10-458a-892b-a61aa6880bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7492d62-2ae0-4f6c-b348-3d7c188b4913",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c565f8-f4be-42d9-9605-dde41c80ad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4176e02d-3eca-47c9-bae1-a394d0282ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b1449e-5019-4505-8c20-67c82cc94686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "981675c9-44f8-49e9-adf7-7aa7696ad87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c1ea0e-565c-41fe-b275-e0b6584e9a45",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5f5b2a-799c-4c8c-8747-1a4c8d2626d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8b6940-3087-426c-9204-0e4703d7a3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e142b97-12fc-4f99-9785-6f781fd2dd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1abb2bc3-877a-4316-8495-531a3195f26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6539d8-2094-458e-a56a-d7827fef8fcc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58919c9-224d-4824-bb2b-49e514eeaeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6928fa-6433-4bd9-a79c-30353d5a3e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b20af8-d332-4703-ae5a-221e1daa19c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6000f379-43b1-4ef9-a6d8-fb91eeced01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a68e69a-e856-43a5-8b3a-d8244008ae73",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd92db29-8a3e-4c99-9b6d-6d1957438b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7888f194-381f-43cf-abab-674fc79bcea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32755083-13df-455c-8e45-71866d829c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "681aff00-8a7f-48ba-b8da-946687b0a0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f4b221-34dc-4485-bd89-1e4d94ec82e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb72db98-582a-4bac-a760-e9c8e4032344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a61fd20-1af7-462e-af63-25023fffb1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839920ea-a0a6-4673-a89c-ccba49169489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "65e297b6-24d3-433c-93d1-397612bafa83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49d0291-fb54-46a9-bdbd-2e499af3ed64",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ad2f43-18ec-4660-a00d-337d7fe03b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e87c07-bb56-471c-bf73-2b8a32279e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6aa38b-420c-47bc-94a7-be5abbd90824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd36c9cb-dded-415c-868b-fc8f1007280f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9d0560-6409-477d-940b-a03bcd0dc07d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77be48e3-57fa-4f29-ac12-1f6936ec1cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecb4714-10c0-45ca-977a-03ba3561ba05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a60652-b403-45cc-b527-6c151f3166fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "20bf74a9-c52f-4209-9b96-f26e2289d792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c26f99-ec69-4571-94f6-b306a913fb58",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4551ed68-f57d-47f5-8eb9-2fe260ef45a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1a09a9-4007-49ee-a1eb-f9c3558d04c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b3d59c-9029-4066-b92d-c652c12d7887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e44fc2c6-7f7e-4b01-8bf6-9d69d7be146d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc685b57-7d27-4e0e-9f04-fb560365daec",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b135691c-1ebf-449b-95cf-15c282cf43a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b66329-eb84-4175-8335-7d643d6a1b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5142dab-7ba1-4387-8c85-97559c9a1401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3053476f-6bbf-4889-a408-0ce6a38fd809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67793ec-55ee-4660-8df9-99034336d7af",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c25e90-d44f-4e18-829b-62336f43891c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dde2ac2-831c-40ba-a28c-34f7e9b6aa87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e6c605-445d-462b-80e9-dcb771d0f8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89713802-a673-4f13-9539-8aa63246609d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19e05e1-d7ff-4836-8e29-992773c5322e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83b5ce5-37ce-4bea-a7af-39775e56930a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e7040c-07c2-42f0-9c11-57ca37aa768b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8dde4b2-7869-4e01-8a1c-f47b431f8cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f032612-8f15-4105-bf60-308108e60b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edd7857-ab3a-465d-9736-85176e6bcc14",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389d6d94-a637-4e76-9a49-176dd1527d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8544ee6-6719-4194-b311-579bbf770189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa3b7d8-5471-49be-b0af-906ade8d803c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12621fa5-0081-4ccc-a83e-66f73553efe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b77073-e829-4258-bfe5-7ac658ff9d49",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5539fba-2ba5-4f10-82b9-db5cb24ffe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601f90b4-30c2-4f6b-92c8-4472c982a8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df2b05a-a868-4f5a-a551-7d6c0f436f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7d22d9-e72f-40b8-9488-9a6348ac5cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ddef8e-36c5-44bf-bee3-967d97b13fb0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828f92b9-ded0-4429-ab1a-1cdd32d22b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb527258-c420-4d12-9e15-877ae4d10fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2643fdaf-f869-4de9-956d-97e6cf00d4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d347c07-a358-4896-82f4-6a1b4d744691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08179c6-a564-4b1c-89e6-1bfe59afe8a1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29869484-cdf0-44b0-aaad-c18c65946394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bf63fb-b630-4e01-81b9-b688d7c6eaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f121baf-5607-4ab9-845f-612432a5ad27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d7cf79-488b-405a-8e65-1764fe2cfab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efee0cf-6b4d-4bb6-8c6e-9538fafdf2f9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ca856f-6e72-4ed4-87e4-07d37780a948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c06978-c142-4b69-8013-ff396c37afeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc92c2e-f94b-41af-a53e-22bae1e25423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea884dd-4708-444d-97f1-00cdf64fafc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2245a11d-bcd5-4768-ab52-ea1dff3ba801",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244eb076-7657-4e51-9d15-4ee2cf05041a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88b6e20-f073-49ee-900e-8cc09e5b7ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58f4fcf-6b5a-4189-9c62-dbfbefa8d3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7808cb-88a4-4c28-b796-e5ff68cac569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c4a8b7-82a4-458b-b591-6b250a25ee7d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a735a60-8fe5-4749-8d2d-37ac21517fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a9f926-25fe-4afa-99a5-1601b6e4e38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5903cee0-4126-4573-9b09-6fd04c2f30dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3309c683-2b36-4b0a-98ae-76887329dc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcda963-5e42-481c-ad02-b3ad66876d29",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5388c4-4ec5-48d9-a3f0-d3751fb87976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf6bf12-566f-48aa-b939-a4b57ccf2d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4483f80b-be84-4d2e-96dd-0022919c0526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "835d7012-e9d8-4050-b569-eadcd8812351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf8d751-991d-47ac-ac0f-944a80b65c14",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d1f694-1ba3-46ab-bda1-ac2caf6e1492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eed3b83-ab92-4493-8be6-a7c095cb0dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efecb22c-2e4d-4be8-a42b-8dbb7fc9e2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "664ee426-e376-4bca-a91d-be5bb7901266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e62b82-2ff0-43a7-b23f-8b1add2e04a6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c431bdf-6bb6-44af-ad7f-27ed0f1535ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b2c0f8-0e33-4cfc-940a-9665ca05c9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ac4638-d77f-4a50-b3e7-d53b946496aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "634d652a-0092-4614-a9d5-45fc29332864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1e4079-58c2-4544-a766-776eded98843",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cf533d-e0a5-4eb9-bbeb-a56758e18353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49982412-f2bf-45b9-ba55-2a6156d1c378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2526690-27ab-4556-bb06-d99a3a2c48ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad5d260-c499-4e10-897f-780d1e3910b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f44eba-4cde-4052-87fc-652efa5cf5a1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2929e3ff-dca3-4951-b525-d544f977fecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0790231-8413-453d-acf2-ed1f54bedead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf56e5d-bf3f-4317-a727-051765a77f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89f32ef8-8874-4c9e-a2d4-75cf17df1ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bd8cb9-a295-4569-9c4d-220a623e7fd1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efa18b5-51de-4074-a8b9-c696d7c4d011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee789f7-e1d8-4cbb-9333-0533b7344956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18ea3c0-adc8-4e85-bdec-064833e2b6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "292c4c83-f8bc-4f03-8308-6bfe75aa331f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05657058-943b-4517-bcbb-8ad8c4c8328d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560e66ba-33ab-452f-a52b-c5b8fd0ef926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8b1075-6ff3-4e68-b41b-64ab78b69a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cce232-dbeb-46c7-8ae9-f0db444b27ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16d82e44-5824-46cf-bf1f-4052c0a0e7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ee2c68-2f50-4f68-8e6f-388fcc2c91f6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee67f717-db12-4a67-ab3e-81e2f954b3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640f6225-8e84-481d-9a90-9c3180d30d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d689532-a310-463d-ad29-628f18715400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa23c14-08c3-4e51-979d-100ba1507c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257ef5b1-1252-4806-8ee3-e3544c0e6a43",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63161da-4161-462f-8325-f082e45a2a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123372c6-fd46-46cb-b061-2e429537e6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb70aeeb-b8fb-46c3-b41c-640ed67ec10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67bd22e-a94d-48cb-af8b-ea3a79a16f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f115c6b-ecad-48bd-b91c-86ae828a09bc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683dfaab-3e04-4e38-97b9-8cb49a953ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83daac8c-b6f3-4b45-8c47-6a1056fdd129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccf5de2-f270-443e-8154-3d6c69bd67ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9cedbea-3fb4-4bc8-ba71-28c25b6e46e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7263c905-1d4a-43ce-b089-c0b763abd1ac",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0760551-bb91-4fbe-bba7-f9d292e02cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3000a436-83ec-482d-89e1-2200f8e1c2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bae816-f266-44f9-a17a-41ea62ca80fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d03eab5d-22f5-47fc-9173-2d618194725a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062ac24f-c4cc-409f-8ec5-661a63fdbf0f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762bb9a1-cf47-4977-ae0a-bb6529510d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a136be-ce9e-45b3-a632-48fa5e00c9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f088fa5-904f-440d-979e-b6ecbfe96a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67ed210d-c322-4db1-9c1a-67d92c5e0bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfc355b-2ea9-4d86-93ee-1ff8eda3455c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a205bea6-5e2c-4273-87bf-ef9b1c8f2c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828ab36a-21d1-43fa-8e78-4a89b1f5c079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176c52a5-58e4-4eb0-b9c9-3df39226346b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63e592ad-59af-49b5-b939-046e9d7b609f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa3f1c9-01d7-4301-8fc6-9e52c42c8e1c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5453c1b0-01e0-4782-af3f-b68656da72d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f576eac-7ac2-47cc-a3c4-b3c7cfb0aed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dbcc82-2615-4538-b7ac-f931cb87aafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "782aa939-a28e-4591-abfa-5af9055fbd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcb1117-11de-4ccc-8ef2-0ff1cd7fe3df",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1927b5-b32a-4815-ae68-1946a617f4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c87d94-2146-45eb-b24e-35a5ca3c200a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff70981-31c2-4d15-a0ba-58cda5460a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a887849-df90-4f93-8ce1-d43d3836ddf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a394f70-f989-4ad6-a1c0-6c079c51901f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233887dd-610e-480f-b538-388ca8afae04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087160ad-c64f-448c-988c-907da8bd7ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559a5e1e-e01a-453b-9f05-0aa04deaf232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e36e55b5-8f41-4cfe-b936-0d749d9ac478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2b8a9e-543a-402e-93c4-b33e241edee5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec32fc0-a170-41bf-b0ba-fb84bb9c0f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae72615-e9d0-48ab-87c1-a9e5dc1be14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e070d9dc-ede8-49d3-bed0-30c88402be30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f35a18fc-5703-4279-aecd-1c17491a9938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4377cf90-474a-46e0-9188-08caac3cb975",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7569c9-5088-44b8-ba63-97842d2f4000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66518e42-4709-493f-9bbf-b4855ae0a0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907c98de-30cf-418a-bdd0-47438eaa3623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "21304d7c-32bd-407f-b7e4-b4e255aa048b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4521dc6-41df-42d6-8621-e363faef85a6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d17edf2-2c5b-4a68-b9af-b6abba0f417a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fe29aa-c0d9-441e-bd69-13b5001aec2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f57835-fcde-4360-98ca-8e3de3cdc92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e52b7ff3-76bf-4bb0-a7ee-8724b98034e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54963ef6-6c4f-4d05-ac51-c4855aa327f3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9c4794-3ad6-4a6b-a71b-2b6ac6bcd727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4852995c-5ec9-4673-a7f8-11eb730ad108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5236a68b-dfe5-4486-8b47-d14b27064ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e275fe-29af-4d2f-b854-770e3015cd41"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc3de04b-027a-4258-a17e-2c2bca3bb946",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ce1af1d-aeac-4385-ac48-8f96df9089e8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e4f84a-d13b-4b90-9c3f-62bd0180ce98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10474304-4374-4211-b111-da8a6ce7e60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d616da69-777d-4295-9758-9ccb8e1635bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80865f0b-bb6b-4cf6-890c-974f0a2f384c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "106f861d-da0a-4237-8ee9-e389601d7d93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f74ffcdb-3ef9-40e2-92df-db7d5d44562e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eafb970d-060a-4c4c-80c4-112f0a77a2ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3455e5dd-261c-4aef-ae44-7c50d2ffbe90"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff460a84-153f-47de-bc07-00331b6c4adc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "124c2daa-ea01-4c56-8a15-38229913cbb1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a978b15b-efab-42fb-8b35-ee5498c2cf9d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "21c72fe8-bcd6-424a-8894-7109ccd271a8"
                }
              }
            ]
          },
          {
            "id": "4b071f54-1522-44c3-8b9b-6432cd91fd6a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fd7155fb-2cbb-45dc-bd1f-f0c8989c5f04",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "08b84614-ade9-46ae-b9d0-a4dc463d6348",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407f6fa9-cd75-40c3-9d66-5a875e322e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9125f827-f15a-4912-9a5c-2e086b4f4c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ca22b3-1b59-48da-a867-529cc3ae059b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535f7ed3-4da0-487b-8c61-60a62efd22ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "336bb176-a7c5-4a6c-9e42-e8c02859b146",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41bf7b6f-81cc-46df-aa7c-f4e60148d360",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c118310-dbd8-40cf-81c0-550d3c328c24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1855ee7-9769-4407-964f-a34113c9edd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "040538e6-faa7-44a0-b5c2-ddcb924c1ae6"
                    }
                  }
                ]
              },
              {
                "id": "d824fb9a-8ab3-4b8c-a7d2-70e7f50480d2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae1c11a0-7257-4932-84b7-458e2af28315",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6323bbc1-1acf-48ab-b5e2-96d2f7e23b28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95da1ff1-2d4c-4046-9610-849a48f01ca4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "970d9298-668b-4a9f-b5f7-7f6b488d5920"
                    }
                  }
                ]
              },
              {
                "id": "7a039378-a180-4eff-aa86-b5cb8e7f7a41",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1acfe680-1337-45af-9984-477be418613c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82b6602d-e8f3-48fd-b52c-172c5bd6bbf9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8200466-a363-4a5b-87df-44673854e33e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f46af200-2ceb-45b6-9d02-69c718e284e1"
                    }
                  }
                ]
              },
              {
                "id": "2e227fed-f717-432c-8687-c522090015b9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de6c3fed-055b-4142-9f6c-cc719ee81bca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aab51f04-8eb1-4001-ad36-9afaf48cf9ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "394a55c8-9641-4f15-b6be-6e5a53f9863b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b52377c7-da2d-4653-b619-628d44fcf8eb"
                    }
                  }
                ]
              },
              {
                "id": "7d4358ed-c8be-4b47-bc4b-854bb2f2a0f2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6963029c-9716-44ce-81e6-92984500bfbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a0639b9-9fe8-4cb7-b1df-7ae5f6ce2b00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93f227e5-ff93-4dae-9365-3d1e9db8fdd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9c028b33-cd31-4a3c-b00b-e0ca29030513"
                    }
                  }
                ]
              },
              {
                "id": "fba0a7a1-e63c-46c2-b2d8-7d4d8a9512e8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0d9cd3c-fdf5-4858-8e02-51cf089dc2f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "749578e0-a1f9-42ca-923d-1b717b347bbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14bf6afa-2962-4127-ad24-c1268441caa0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8989cd59-becb-47b3-9e18-8896a3e30227"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b2819cc-d14a-4856-8c00-97d2f4780528",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d83b0d0-de1c-47ee-a48e-58156529f352"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ae6ad407-0d59-4110-ae90-1740a2700bfb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "991954d9-7f92-4ad9-8081-9383c61ac140"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "143e0606-4e72-412f-a660-4e3b92adc69e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "54dbc42e-9bf8-4d31-a323-b0bc0c862572"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ab7cc23-3a72-40a2-9b63-a0535ece512c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cad93de3-0698-4669-b4fb-7e7fb0edf7a7"
            }
          }
        ]
      },
      {
        "id": "f12c3095-6794-435c-a633-997af986b12c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0c014d8d-c19d-4a63-8158-d5484ed3e0ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "110f1885-6483-47dd-946b-886c404f7da6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b1d27cc4-34f9-4ecf-80c3-cc6faece639d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b3f012-4a81-4124-9fab-9eb4973cdd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03b6310-e788-496b-a25b-0ef92883b361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f94295-a63e-4d49-862e-333d814ad84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4bddd93-abef-4a67-928b-f84ab4c04bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c314a5-d9a7-4954-a83b-4577fd0f6132",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737155b8-2a99-4719-829f-62c5cca398ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5e5a23-08a8-452f-8dae-883b2026097e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ece3fe-fa8c-40aa-b1da-291287b8abf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7610333-efe6-4e2c-bfd7-7b400b14e1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d698fd28-9960-4fd3-bf47-1c711d8a4aa1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3579a9-bd0b-4322-9f50-18004a6500df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5865a427-3f62-49de-832f-76ecb045cacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d4ab7f-eba5-4ba6-9675-c5e95cb4fd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2c1365-ffc3-4883-95ad-7871c5963ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296cfa6c-e3ca-4846-8dc3-7e0cc5f677f3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653b5355-b60b-4d08-ab18-2bd92d47e27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6112ec8e-a48a-4e23-96d6-d79f3e0e7677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685d5a01-53b4-45ae-9a0f-7663fd389261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e529cd-26aa-4fab-af5a-579362cc02b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8638879-9462-4a8f-84e4-c12350aabcbe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14891fe-bcb3-4383-b8d9-fba012d34dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687046ba-9ecd-4df4-b02e-c024ea63456c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df763217-464e-490b-b6df-9b0f9cb0dc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b13c53-1415-4466-bc53-cf9f35d13d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e107f14-abb7-4628-a1df-1c644d7368b2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57da69f5-05f2-4492-9c41-e2014893c960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad7d6d8-6b8d-45ca-8321-cc78f317d516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3f1064-6613-48b7-938c-1355f6e51211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c5b9d9-6ffe-4eb3-9b6d-01dd6b6da023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432f0e93-38f2-400b-9c34-32db4e1e5a53",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062e733b-6e37-4ac0-9287-8d04abfa2bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1094aa8-5358-4a8c-9d9c-d42cfd346d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ece46c5-9406-44cd-bd7d-93e98ccc8942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c39fc35-792f-43c6-b451-2a62fc2a0155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941d73e4-185a-499e-9854-fe56e4aa98a1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22317290-5d8c-47d3-9db0-51d13450309f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45a416d-ba32-46e3-9e32-4c7d0eb2b1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f0c837-9659-4f57-9882-23ce34cba197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51997d9d-b148-4e01-8865-2eb4fe5b76f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04b4891-104c-4b09-8598-2e8a51bea749",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf25d93-c4fc-4b40-a94a-1dde4e87724c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb0a8ea-086a-4125-84af-435c1c66d60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e1042a-91d0-498f-96e8-56706504717f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e24f32-c4b3-4857-a3bb-2ef2cdddfa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76efd075-8e04-420d-a1b8-4ba490562353",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fa81b0-d1db-40ca-92fc-f745f799a7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9989c72f-20f5-4008-9baf-390d803230d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48910cec-f203-450d-9558-7d4b4c621506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc25abd8-9af5-4ea6-b319-7cf1aeb33b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afef421-3147-4f66-afdb-9c7c738074d0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e7b6f4-ab12-4fe3-a2b0-008f69ba158a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22640cf1-6dc3-48bc-a2bd-980bb85c985a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2270b1d8-34a8-4ec6-b5a9-9a75b99bad14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bf322011-65b1-46a1-a9ff-519f27b9007f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd3dc45-f936-419a-970f-01b0af82698d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d3e76d-af83-4232-947a-ca68597bc741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bf34a5-6606-4978-98ce-e43aa0a9765c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63edac8f-aad8-4e3f-a589-011f996038ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c23f72d5-d3ab-4301-9d64-fe6a2f4a6d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136c2fd7-6c58-4267-979e-e7cf84511223",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad405c5f-6104-4291-99f5-f4f9b0992295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2ab0b9-5b59-4ec8-9ef9-41503d22e2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f010ff6c-c254-47ae-a223-d4165d94f799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcdcc26-d559-4e44-b2f6-a6cf893b54bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62603cfb-1c73-41d6-ae52-22c84056b670",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f511344d-2f1c-4bd2-a29e-48426b0b44da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d4e47f-b06c-4a2f-96ec-331e46afa6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211678b0-67a8-4c90-81c9-3afaf5763472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "99856c96-1530-447a-a81f-7758cf9e6d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da01ce7-15e5-4f3b-9b51-16c409c3df6e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bece52be-eed6-4d93-8135-acf556480455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a8a639-54a3-48b2-b792-6e1034514a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968c333c-1b7d-4ccd-b04b-b2b4ea051a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab70d9ea-d8ed-4353-95c9-44928c9acec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d84b416-fe32-42eb-ba8a-94c079bd2a74",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd7d1a5-3449-4d35-9099-bd4d36795e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d586280d-6123-4fa1-b920-4941496fb094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a13fc96-df5b-4aa3-8dcd-fbf1904d511e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbee81e-3fa2-4af3-a732-216644f981e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cd6d52-6cce-42cd-8f14-ac092d62caec",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ea1b97-7fb2-4451-9aa3-837901d303cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17e305a-4aca-4e09-97dc-57eb2d87f36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ae3e82-55dd-41cf-ac3d-8e1ae4db2b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b25785-dbd6-4858-94e5-d5546f29f6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa4a826-0621-424a-afae-95489e5ab777",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5e1229-b3ac-459d-86b7-e7fab5263bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faabb16c-0843-4719-99f9-96967c9de1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ded7eb-cc28-44a6-bf98-0f05435e6618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c02f6fc9-927e-4099-a967-b96994a2df6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c3a6d1-5060-4e7e-b7ea-2191e12e4b1c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582382ee-19ab-4a23-ae15-e21b0b251448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbd1480-8bf8-4040-b739-8822de19a95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e507d4d7-ef9a-4130-ab88-8c10b0e35379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "042cbb5b-6303-4ed6-b2bf-5d97198f346c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2faf5e0-4077-461f-b090-511ae1f1ceb7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bacc7c-1f45-4ba2-bd28-066ca125da43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53adb81f-fa7f-49cd-94ac-2ff5211bc232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84caaa8-3783-4c69-a6ed-870fa5f91218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e50084e8-7837-46c9-beac-5662fb7a4d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1044cf9-9707-42f2-8b88-23b1b0b088b2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a78c9e9-84a4-4d62-a1de-4b677470c111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e086334c-da27-4861-9aea-6601eee46da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2407ac-cca3-44a2-8a1e-a8834b8a3b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0eedeb-0eac-4699-a749-c044e2f9f42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c73e146-f64b-4c5a-9f02-e0c414535ee7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030d6999-a744-4a03-ba09-068f16552ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410e8d64-1bb3-4e3f-a769-bece100088d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c75dc7-65e9-4f9d-bf28-49e230f3e397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f662a71e-9e2f-4171-8f5c-4ddd65520dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc38758e-0283-41b5-876e-b606a185012a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087b06bf-c2d5-439f-9293-1b2af18da42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c29b55-1f1a-4dea-bbee-29d702d34109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f78cc3-05ca-4aae-98ec-23e57055c40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5447ee4-e4dd-44a2-be3f-12bc6c0f608b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aadc05a-943d-48a2-8b34-7a45f7513336",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53870c92-a169-4c2d-aacd-92c602528b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd8caa3-be31-422c-a731-237b50b1eda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b883dca-0bad-4dcc-94b8-a1a849d13519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97ad49fe-97a3-4b10-8304-a201641246e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d9b331-e3ec-401f-8bba-d02ea4a7f455",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4f3b42-260c-4f7e-a40a-e3f2518ecae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c92a0b7-bdfd-4be7-81e4-3c80913787b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d669a136-6ecf-4cbb-8e3b-ff02598614ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "616e5f1d-0b57-4394-84e2-7c6038503b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80a4a1d-412f-4b9f-a9d0-d6e77a4d36c5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf5a642-8a6e-4d47-a2dc-fac2f93bdc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2cf8ea-f81c-44d3-8b8f-2937c9f8c583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f833295-8fa7-4475-a3f5-7a8088f35590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7733b308-e302-428b-a063-8307a9bb51f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ab921a-3137-4ff7-9c9b-78a18e0f115a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d6356b-01ad-4b27-b3a3-865ee6392275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5960927d-4a8a-462d-90dd-224eea5216a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241c6ff1-3abe-48f7-afb4-d07c20993ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7deeaca7-ae6e-4370-9a41-566641080dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca34d5d-41dd-411c-9a73-8d79d4f53419",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10bfd6a-9e6d-4985-a908-da3ee733843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6b2801-bcfc-4880-8cb2-5734d8491c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48495404-469b-4869-a86d-aca9af7f0495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d17298-68eb-40b5-8e12-b15a681d49e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41b306f-1bbd-4a2e-bf6f-e06d5402c82e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1755a8bc-5ff3-43dd-a651-d157a5c85522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a638432-b93b-43cd-b3a1-a4e3d82e3c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889b6e9d-e8bb-48f5-bcce-c4de42d3f5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d74548f-6c52-4620-a93e-15155267bcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf51acfe-8f10-44e9-a51e-d25609303395",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39911783-a397-4189-bee3-de7c09a3d9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c716d1-be97-428f-b674-3a1296317e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62fa7fe-0db5-4acc-b1d6-1048975f2251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7b98ac-8304-4b72-9954-a85eb38d7df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff08c97-d9aa-423b-a5e0-6d3637d3b685",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416ee183-7699-4bf5-a8c0-e1408a7ec84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f42ad68-47fb-45b8-a86a-7f3b0480b30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a58b94-4dd3-4d58-9407-605ee2dcb1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "019146ff-a047-455e-8627-05fd86305407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4aad9c-ec9e-45ef-ac5a-549155d8e781",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadabaa2-cabd-4465-bdd6-36d7f3cae7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708b6452-8989-46e3-8724-a28aae68b20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790b0ccc-4712-43f3-af71-2e1a31e4f32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c22c744-d2b1-40c8-bc32-3776404e3bab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cac6b7cb-cd99-404f-9a84-54506fee0826",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "991fbbb8-f83c-4639-ae40-0a77ec02c3c7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be389e94-6d79-4832-ab54-e635852c11ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bad66249-a36a-4f6e-8a7c-df984439165f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f925f7-c3fb-416d-89ad-8ff290772341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf644dc0-e11b-4e75-bc1f-98701f84a608"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "711890a5-c9b1-4417-8d0d-0c6f50aa16f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "682b5d13-4f90-4525-9af4-a88ab81ef161"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a792118e-897d-44d8-9d0e-88f8fa52a629",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b52bd6d-ff0b-4a1e-bb7a-e164f41cce09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64678f72-a35d-4515-976c-8cbb7252e33b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b4f30eb7-4812-4bba-be1d-06f605bf7a75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f01749bf-4675-4b95-b4be-ee9a5acca8fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62b00989-6809-42a3-903b-78e15e832577"
            }
          }
        ]
      },
      {
        "id": "2c656e71-6f28-40bb-a90b-e4b7040e26c7",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1627c8ce-0a7c-4daf-af60-c6c9a898ae23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56edb0fc-5afd-43a2-a63b-6e8b9fd49dab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b68e69ab-0b57-4268-b1ad-2ce9d12aa8b0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4da1c84-4113-4457-afa5-5a8e2712e4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290bb5ce-1836-4105-9758-9f57e0574ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8eceec-3967-4286-9e69-b8f15d94e953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "128174cd-16b9-498a-96ca-0baaee1968f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a11c737-2737-43f9-a595-66cdee3e9656",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3836da-feb1-49fb-9c54-153c761e954e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa69793d-9b52-44b3-a5b4-d65e845b8b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c599c7-ee7f-42ea-9128-e3c38d767b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "291851c6-1246-46ae-b587-63a6e0dbf02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb38b83e-671b-4e25-8403-6d750474bb4d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fecd7c-2ee0-4455-a5ad-438ae939204e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d938333-65c3-42a4-af5a-a10e3806dc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8032ca8d-22ca-40c4-98db-576a418a50b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d0970f-3b27-4fa0-8680-c31a774af5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a48c9f-9553-4419-a4b7-bbe0fced0912",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f34a03-51c8-4b69-b664-7cf46c0dcde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e788dd2-4b67-48fb-bbe9-3d5454a21d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab7a795-4a53-4169-a6bc-5d98cef72e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61e35f63-264a-40b5-9311-79c0e887fab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7c643f-69e7-405e-8715-2d1331c911cb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa5e617-984d-4a37-a2c0-da3a7baac559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65f6b4f-048f-400c-98fe-8aef1c6a971b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153c4147-aae4-4128-a6db-5dc9144667ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdd3ee0-773e-428d-ad92-03a6db8426a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ad9e7a-df98-43a4-b607-997b73cb32b0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ce7b65-3763-4a76-9669-4e3e174ad898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08569dd0-787b-413a-bc55-4b6d4bc3dae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5614f517-84a1-4728-88ab-e80bb5146844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fe5cd8-9147-42c9-b3e8-467700dab6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95be3875-0a7f-454f-911a-7c87530c6fe4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27c382c-84ae-4b59-ad8a-c68a101b20c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fc227a-cb59-498a-b8e0-4f9a76ceff77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149050bf-3631-4e64-82c0-bce292909ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0e61bf-2881-41cb-a831-79ecb525a0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471ecde1-01fc-4c1f-9b7a-75c738083b05",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87982fba-ed12-4271-a326-56363b3382d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3567b49-52ac-4d78-9b9b-b9673cf63337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da819d9-2500-4e94-95ff-9795bd33c282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39299a1d-ce8c-44c0-b134-e80a11deb7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8e3d0b-3f58-42da-a8c3-e3d4563b712d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974067b6-f6e5-426e-b6e0-a15079c54d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f54374-42fb-4f02-83ce-6a92c24c3254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc97281-2003-4a76-9489-dd36a7884591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5377903-4c65-45a5-8a00-20936f3d335e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d968df36-ec82-425a-8b40-7ffc1e96fb4b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbf1bb1-b992-41f2-8635-c0843100883c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1f3244-0dac-4860-813e-fe8180aec253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea67619-c30c-475c-82f8-2a1d8f39f50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2db7c7f-d333-4498-93e7-982c29dc3181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a031dbf6-eeca-429c-ba0f-9cce25a2ca35",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c386b40-81e0-479e-81ce-f4c48c4f369c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72249bf-ba8e-4984-83d5-dacbf4f1d33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41873d3-e389-4e4e-ac39-f76e21b253d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3b2adb-1246-4d65-ba37-8937a20f7a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f40de41-5c4a-4c1a-a792-b868f5b200a5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab413468-5fd4-4654-99d0-cc9240c0dd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b6f64a-8b57-4134-abce-5678e2234c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e5a3cb-6ead-4394-b5f0-6e76c4fce4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c89798a0-5102-41af-ab8a-c53e0f6a5e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bd7180-a2b5-4f5b-97d8-20818f934723",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcab963f-327b-499b-b25e-6bde34efac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eac61f7-9371-4425-b3f5-8fb4ae6b5c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334e13cc-c6ef-46b0-ba48-4e731e5e8d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38cfe386-f6e2-481b-8ad3-1ff684a330f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb59df60-2f0f-4680-82d8-623f76a31df8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d06eaf3-b6aa-46e0-8858-2d7dd6b3f29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a3f871-e6be-496a-a054-9ba1cfa51c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ed64fc-1d52-4bf3-8823-563271a01013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee66f22-8084-4d85-aa90-011b36a37465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4550799-4d46-4826-9788-b367c8229fcd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dc448a-4ac6-4555-9649-8d359daf7dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a3b883-8d41-40e9-92b8-9d66294d7f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed253e04-c615-4e51-8438-c668fd75f35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0402ca-b34c-483a-b361-e977032348be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6f1a4c-de5f-47d8-9489-5628f7cafbc3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023f3608-cabb-4be1-b40d-14600ba1374f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d8df32-807f-4d73-a31b-513e16b6e24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ffabb0-2683-4e10-9526-f34877cb557f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ff8e83-bfbd-472d-abc1-39a258bd400a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c0d486-75f4-4521-995d-42835438651a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292c8769-eb27-4330-86e2-20b68efbf077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2e3a8a-635b-4ded-98ce-147153186724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95073ad6-1ce5-4f30-b02f-16cbe348dd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b40a7f7-c274-428a-8933-d77cc975a101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4921b2de-ed13-407e-8853-30a00fd7d58c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c60d54-6e60-4b79-830c-a6679394b36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3226956e-11c3-4f17-a112-980cdd208c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c03a22f-092f-43d7-9b4f-51a648b1d6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8720074a-46b9-4edf-b3e9-cad5ac2db8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e62fef-1be5-48a8-933d-00faa38f1a64",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66013c03-c737-4abd-8acf-5911faf680e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2014c8b6-fd88-452b-9c7e-fd5d19444695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be30ac37-5e92-43d2-8d63-eaec87ec260e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f96b1d7f-6f06-4ba7-92cd-6962207a031c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae59f75-a090-46fb-b387-5b4544cf80b7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdedb85-36cb-4a8e-9bfe-67221fc737bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0659e86-6a59-49c5-babb-dc33d3145873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0173264f-f79d-4b36-bfbd-76710d01a554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af6044b1-cf8d-407c-9f5d-aa3a0b21efe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53373c6-8f52-495d-9960-c9ca0ec05d18",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4143ad07-10a9-4809-b3f7-0ac4f619baec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b0df84-b02b-4c1f-9f9c-2af129c327ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d3c463-b887-461c-989b-9950554be800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c541e05-642c-4285-b7f7-d1ebdf0f734a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ca0723-8147-4873-b0ef-999e16037510",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dbc162-2803-4a2d-9d08-cf3694dcc772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1de505-cc4e-4028-8aa1-a6d4b72907f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079580dd-cb5e-4299-8c0e-a136ad35fdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c435aefd-3920-402f-914c-d93faa8d3b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daef2f40-7727-48ce-8e22-02137dd30c0f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd95fe52-5416-47e0-882c-3059c096b612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6574685a-cbcd-4c3d-b5c3-03a44a4141d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7286c93c-2696-4cdc-b361-9d3655f3e884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e65e2dd-015e-436f-be78-5a015a249989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6578830-9111-4831-a03b-d4217571ce3f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fec3dc0-9d30-4f0c-b651-8b3553b7c42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33355d07-0345-427b-981a-e789112b60ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10713f06-26d4-4873-99b4-8a86b6b74ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf88343-a445-4919-9b99-4700062af947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3198550-4db9-43bd-8ed7-a43896cd1b57",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6c1e2a-1b2b-4a43-80d3-2e5edbed4113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e03cb0-92c6-462d-b577-0303f5bd66d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9a3f40-82be-41d7-af5f-399c3968f490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5de3f86-0c3d-4b4f-bc1c-a65af000f43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12068bb6-b8a0-4a59-8619-7270df4dbc37",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ec7a8a-095d-40a6-aa96-df9903e08418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af62785-2b45-4487-8881-565b1c731b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1ed912-8cc5-48c8-9a1f-aa3e0d636f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aea6d1d9-00ed-42e1-9162-054d1dd5c4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567f3cac-cc61-462b-8823-fb106dd07ac2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27fee05-de26-48a4-a1cd-608546b02af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8410d765-1601-450f-ae59-7e8ca6a29b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf8396f-a60c-47dc-a388-36e54539a81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95929520-66ba-4d4a-999e-071104131f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f70b2bc-9276-4cb5-9969-9eee3f353731",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caf1ea0-e1cd-4056-b261-ace0a7c21f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b90462-641f-4722-a446-a29b4baeac1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935d7b9b-60b7-436b-bc6b-d2b101aa302b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "094ae025-ed9e-4968-b161-70d6df899b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5463a9-6ee1-4474-a0f3-2c8a52cb6654",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a785f7-8bed-4969-ad84-b191461d766e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b615b4-f925-4f84-9fce-5daa4af31210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c105ec-ee2f-4ead-bf2e-e678996893ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58ac826f-8e8d-437b-bfe4-9d5401d9e4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6d067f-5ebb-4a02-9f17-1b654e0241e8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b489f9-4d86-4caf-9f4d-db4d75ede1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70ee6cc-3261-4232-b2f1-032469aebf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b947c47-e5e9-49d8-a9cb-2de801b8b55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "786371fb-5afb-487a-89c2-e1dbdbbd3a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af57371c-0237-4e12-bcfd-d415895d892f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82475d7-4c6d-41e4-bb3a-23c1333fe7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6d4f4c-6041-447e-917e-d47a2a2e04e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc7d863-c169-47c9-9b4a-17dc6c02e91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e942d17-77ce-4b6c-9823-88222cd5ff02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c193adf8-28e1-487b-8ea5-046271e31581",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ce0917-8d96-4fe8-9ba9-2d8a16f6e092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87fd0454-7f4b-4992-9d29-8185ee68ce20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8991fa61-4bf1-43c0-8bee-f44755bf5eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be79061-1f5b-4860-ab89-f278b9ff953c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0643def-d391-4ae0-bf47-c5d2312958d4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb2c8d4-1dce-47d2-98c6-1baf43627d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4d80af-e80a-4f88-88ce-0888a1a83904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db356532-44e9-4c32-bc48-23056c2ed6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1338aa0b-30d1-4409-bcc4-305fbea6b583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150bfa28-26e9-474c-9a9b-43e812943d05",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b391e1e3-4011-4881-a894-904664f764ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee1c417-0fa2-49c4-a0dd-e63db14ae002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37cd59e-fb02-448b-a215-579e4193bd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e151f369-c40a-4dea-b446-684c7e44b0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e14fbbe-eed4-4804-8bff-e68850790fb0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06224c0-8dcd-418e-aebd-d3daba4a55ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a0a45f-1c96-4cf4-88ab-768cc5b2681a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f79686-e5eb-477e-9790-d4f8c1950ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3167394d-9a2d-4cb2-b4a3-812a9ccea7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e66a433-0ac4-4805-a805-b1fe3251f393",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a3873c-2522-4220-8966-2cc21d938838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6243fcd-138a-4b4a-8458-e15927a6c779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e051195-ee81-467f-891b-61315636e1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2c7f85-d229-476d-a48b-01ee7cc91b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce649d1-f6c9-4680-9aef-a3251818b2b7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1a70ec-6bdc-49c2-86a8-c21423861b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6850eea0-66f8-4548-9755-0d8165e5d7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f07178-f4d5-4f80-988c-06dd35446d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b5808c-f00a-4f50-9d4a-cf8010249e53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "40ccf0e5-83ab-4d0d-a0aa-de953d15c911",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a84980f7-ef42-42c1-9a45-018caac57912",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a839de9-d6da-476d-b896-4a4cfe370447",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "59790f3e-28f2-4bb3-a264-b50e14e1dbac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afaa49f-5901-430e-952b-23130fa06c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2a0e283-81ac-40f4-8108-d99bd28f9cd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0408ffb-636f-49ee-964b-4fe509bed523",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8f610d4-d260-47f1-b135-69b4da81c3a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92449d8e-76ad-4826-a38e-dd0e33e67da2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97471a66-e748-4177-bab2-e4efabce2b95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38d83bc8-cb17-48fd-85c7-67dc9a1f6ffe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "af491950-8c7e-4d12-82f0-ac9acbdc6b39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fad0cb91-e6ca-4844-98e9-5c09e049ac17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f36e4c7-35e4-49bc-975b-880b3be3c559"
            }
          }
        ]
      },
      {
        "id": "65ff6402-c92d-4dea-8104-beb085a8aa43",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d3bdc207-3cb1-4722-b774-51d823961bad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb3c0a83-147a-4227-8947-af15808da2d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f2c6f0d7-aad4-4189-97d8-7295e3be8bc1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87630c0-948e-4a49-8e84-4b82903ba001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e2e676-72a4-4514-9dbe-0d5faf625e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f54b38f-64f7-4663-b4b3-8c5c1bd37e59",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47346fe0-5ef0-4cf6-adec-9b67220a3fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153a012b-44ef-4ec2-84a3-29b5490aca32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a05942a-707a-408a-8249-fa567230db4a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3199f7f-1b85-4415-97e7-f8db101fb158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4145e3f-8cd5-46da-842c-4bad7366bd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd65681-7ffd-4018-97b7-ff7deadb4a42",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61068b18-6f43-4888-a73b-e2b18c45efce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f641503-33d1-4ae4-8a30-7daef2c3b53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42e52bb-335f-44bf-97f0-023a208e72cf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad94d55c-b0df-4cb0-9342-a7881153a0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f0caf1-4f52-423c-8b13-2c93e1e62d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8988c1f6-ac89-4481-8a4c-b3968b55555a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cf4e11-8a36-4880-98b3-b0a45fc0d009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87f3ea4-7a69-498f-bd70-c16c72267f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae429a97-7e2f-466f-b069-e83d62259ec2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adc662e-86aa-4672-8436-3b0d71eb9507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd2916e-5b8f-4650-9ad4-15cd0dde67f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a91bdc-eac8-4f62-8dd3-34a3406b8e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0757b45e-5b32-4709-a4db-ca212d411035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d8ac89-c7b3-4096-a7a2-3aa686d40145",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bf4e85-3c44-4f8d-a310-e9338167f708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b87720c-fbbf-4852-832f-8a89f16a4912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d858294-4c15-4a64-ad22-6404d625c86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29300b73-0d62-4202-b590-5774e4f6cfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cdfe64-e166-4454-8373-b2b442a5cad0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26dc40ab-e664-4006-a637-3479aa803480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c394e9f-ad23-458c-bfe7-27b4557085cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f883ec35-1f46-45d1-abfb-a2063d1ecf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc8926a-15d3-4863-bcd8-0d32cee770e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41d6e36-5ff9-4e9a-b09b-d24ea057fff8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e067b5-a204-47f0-90c2-c170251c8765",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fc2f264-10f6-4f02-b159-8201d1d77e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0299c643-859f-45fd-829d-f2fc1b033807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbb497f-32cd-4b53-bbad-f9e0c315e8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2429e9a1-e382-4b00-873c-76f6e095f0d9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a862dfc4-6f5b-4e02-a123-229c9218fcd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52db2e8-100b-4fba-9af3-54259fad0dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c5a10e-a0b8-474b-8112-ce938b82e867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921183da-f652-42e4-b6be-53669ed7247d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd4bb66-bae3-4384-b160-797fcaab3dc3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511f333a-05cf-4f36-b040-ca4bf3de494a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f46e397-c1cd-4c75-a590-bc5466ed8d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a15f998-7a52-4241-9e8d-2d1d24b8f697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a81056f-fc97-477e-8af6-a48d49d13e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7af9f9c-d0a6-46d1-a3a0-b32e056f15a3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b007b6-7508-4280-a51b-627b0abf9bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58baa07e-e386-49d0-8eb4-9e390a608d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa2002e-6df4-4df6-912c-43d8eb6ae861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b483fb-6899-4f77-86bd-29a664e17573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c74520d-a341-4ec9-8242-50642a79332a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a0d8b6-851f-481d-a82e-90ce1a63afba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de8caae-e827-4db4-bedc-7f380a78a1a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c3fb22-a483-438f-ba91-a105a6112fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80706f12-f0ac-48e2-95d7-b0a0f8df83a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec0d730-42ad-4066-9526-e78ecc858531",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2462352c-94c9-44d1-9bc4-615fdd5da74c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c66006-40da-4b94-9e42-23628d8e4a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb21345a-4d64-4c61-863c-7a00b235e8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc5c676-611e-4f6b-afbc-a94955400f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cacf26-a5f5-426e-8a13-0eb6a3a301d9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a9def4-c0b3-4c89-83e3-3a083464ecc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "873b8146-e440-4c11-99d9-9973f9c26f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc67839b-d5f7-411a-9a9a-ba04daa16457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99d9033-c986-490a-b22b-2818dd500f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c124d698-e368-466c-8284-666d4be89e12",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49db54a-b0be-4a83-99d7-8e6b1fe30ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ca046f-78a6-40b7-9a2b-8e102722459e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c6ab2f-95d1-499b-9c45-be24b95110fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9921c51-73db-4e89-8997-eaa7e3f183d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f4d5bd-9817-4f57-8b57-b59d10a8e45e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496f0fcd-0bb2-419b-b992-8cc8d0121d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca59641-f927-458c-9c85-c7748b328cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b48546e-4edf-45cc-9eb8-077865a3e98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da185e6-ef33-45a8-8495-91beab8a6d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4457d264-ec4e-4890-bfa0-ef1922c48f2f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56911c8e-56b5-431a-b33e-b74ade24ea99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345926d5-2192-4c1b-a3cc-9e640ee2c1c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b146b41-7b33-43d1-b701-d7aff72830e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43ede79-c7b2-45dd-ae70-d12df3a854be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db8944d-31fb-431b-a885-363405a3d1ab",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dcc7e0-8630-4902-b447-7c2ea8426e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bfaa2c-874d-4459-abb2-50fc36f6a9d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81eaf474-3014-4b09-a131-3c1c3e21dfc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cabd7a-8d21-4161-b3c0-773b6afb2346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04fe4ed-5fc2-471e-83fe-2df7aa623d6e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6805775-973e-43d9-a609-be8264e9a4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e008ce-dde9-46ce-8dc9-cbc2ba30bff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0398368-8881-4d4b-8808-8d0429589f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32b29c8-3c24-46ef-af00-64f45a5eb7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e338fd23-f91e-4ea1-aab1-78d824f81d05",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b850254f-c7e3-4d4c-beb8-73e50b0a67a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe99fabc-29cc-4f1e-8644-1428b5783031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefcaa3d-fc91-4d33-adb9-abd5092f2c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732db370-479e-4346-b0fd-6f0c2c82773f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6e7d4d-fcd8-4652-b7d8-5d8bb3ac589d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dd0696-687c-4d3d-9311-f893bb1f9c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9fb7a7-e6cf-4f99-af95-11e0ea690e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca3ee25-47e3-4ef1-9222-7cfa423d8a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70587a5e-8808-48fe-af9b-67b28a4c1080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d2bd43-9dc4-4534-a4bf-be54ce8acf0c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd631a1d-4ac9-4b3a-a21b-a7782b54c752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faeca7b2-57c0-4988-b531-94a18a7b7cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933b5c8d-e3f7-4d7b-8c97-8bf1b4e12f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22011b1f-2e6e-44df-9827-de50de2baad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0902a6a-c64f-418a-8408-1b94bf8eae2c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14602b1c-c49a-4332-bedf-36d2ae11bbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0137cb-0ac1-44a2-98a0-bfc44d94e2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b132e41-7ff9-433c-ba5f-4679475fad60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d15403-e1cb-4a2d-b532-75d47c080a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc40a1d-4594-4646-901f-181ccc403c93",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1240d171-2398-44dc-8802-bf1ede422100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc8f7de7-41aa-4d59-8114-5500c5f9c8e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c870f7c8-f552-4ae8-922c-de6f8d58828e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b486dcc7-d883-4982-9144-c4d660eafed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e812a15-357e-46f6-a174-a945fc0f598a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f14ba99-4f10-4f2c-b215-0403aa4484ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508e2056-7412-40a5-859b-7cdd5dc0938a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c691ace1-7ff1-460a-8dce-799934267816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3d4b9c-6345-4eea-9aa5-664cd8774509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f0176e-c839-47bb-bd91-fee9615f6870",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d879358b-6e23-4a53-88db-9477c99b4c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512089c4-87b7-479b-8437-21e9d81677d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42ee518-160b-48f0-9a87-9e4de91ba3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4cc9cec-09f4-4b33-a7db-21418a2c3ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c96630f-c48d-48d6-85e4-e4176265e038",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20e4f04-109a-4a82-ad34-8d6c92ed82bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b11227bf-335e-49b9-900b-7997c6315305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3185e8-3936-477d-ba2d-a0b970b179ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb67925-d305-4e61-a0d1-4c992b01c500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee208dd9-eb69-4e13-ab6a-2f76eac13570",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e44f2b-c2c4-40db-bd25-2bd5d7d8310f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "468130a0-ec28-4826-879c-1a79b76bbe46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b196be-0e29-4e84-a33d-577c3b320dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296f3426-f03e-47a6-a0ed-156715862872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58738e4-721f-4c46-9127-627292a37b02",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac92c198-876e-4306-a924-5da8be5e922c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f02a6c86-1351-4e56-ac94-29f151271d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695120c4-78f7-44fb-9f4d-e0871b913bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbc5389-b3cc-4c2a-b875-545a01c78f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a747544-4461-44e2-a1a4-8e32602b01e5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b572b344-e75b-495c-a8c8-080866d28c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f67cfd6-c66f-415d-95d5-be0696cc08d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5490897-e776-45c4-9158-ccd6a39e6042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2ff144-1dc2-430d-bf6f-e068bab245a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fb0adb-e159-432e-b24b-8a404f624ad3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08df940-090b-4348-9332-f1d398e743ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab06b845-4366-486a-afa1-5cffe3b6dd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1105f4-a3ac-4ee0-9e20-bb5299242057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9abd13f-7d33-4331-a9c5-60bf175dada7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c5a434-11fc-4a03-b3c5-133b0da21321",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea8bf21-9267-4e26-99f8-7add6604434f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043ff3bb-12ff-473b-9fc5-9f7082d467ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c90130-6572-43a2-8817-4a7135e796ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad60311-570b-4692-918a-b7409d61d54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d9120f-80ed-4d37-a4ec-25523d2d9f52",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f4f24d-9b87-42b1-804b-07dd0558b2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383b9a7e-7454-409e-aab0-39347ce3ca96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c622585a-5ee2-48fd-a00e-27bbb74a32aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab8b347-a63d-4d30-8050-7645eff5e71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e438780-4717-47ee-a408-b7fd273c607b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0410e934-31d3-440a-8363-f106e5f9b2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0bbe29-972f-4e71-8525-bf456afd8c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f274afb-10bc-48a1-b346-d7eb8ffb8e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa147f74-53b8-40fb-b11f-ed9e0e82ed78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebfaa44-d154-4a84-a4b0-55735cfa8122",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450e3d47-678c-46c4-bf5f-2e2a64907c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e604f82-c92a-4ea3-91c3-ee035352a8c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7455f176-40bd-4b96-8dc3-e4e593a916ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fe9ec3-56a7-42f3-904e-8d0a80ccb17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efb542f-c704-4371-a308-9e7b0c0c5422",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62c06dd-a435-43a3-9955-3e17a0d0001e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4be1048-4f95-4210-8e5b-7e91e61f445f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608fb2b4-d4c3-49f1-baeb-5c60d7fc3644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a54ae8-8469-4743-a061-10b189072815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99511b08-4d55-479f-afc5-f006ddf3049e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dbadc2-6094-45ed-814c-e6cc0734b39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d31173-0042-4a86-978a-4ab9b23ff9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7055df4e-7783-4bcb-81b1-990afebd4ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4793f72a-f49e-4acd-b689-a123c4ee792c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8f97a3-4da1-4210-9171-04095d96bc34",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2679e49-34d3-4f24-a79b-4c9dea3f8aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5e295a-62a5-400f-96f7-e6b608bf90a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59ed2b6-998e-411d-b49f-c7aa1ef15af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a12730d-e563-48b3-bca6-32dac01b9816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb188cb-9b3d-43da-be3e-8e5eadb11c8a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661dfefb-5878-46b2-9f8a-5bf454a6fbe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6565d50-7615-4e94-bb33-e8b128fc804a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9be3fa3-1d08-4b01-ac30-f1ffdeea56b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aed663d-f512-40b5-ad15-c10564bc9f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5bbbab-dff0-4a57-a971-f8f4e8094e36",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e7edec-a8ca-472a-aee2-18188ec8710a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719e6483-85f4-46a7-9555-bc2f00c45069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0bd46e-f5f0-4029-a370-69da28b3383e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f539ae-f71d-4b18-ad95-075137f4a61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf834450-bc94-4b06-8adb-02edf3a202b2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c64944-8435-4f0b-83fe-71ebb7169597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08bfa74-7f80-4200-a05f-6aa0dc4a561b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40525828-2822-47bb-9519-b7d5fb770f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6540e95-acd6-48f0-890b-b1f77ea0b4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcef542-478a-441a-996e-739e45b4b775",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0e07aa-739d-43ce-bdec-3a18956e1140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c9d524-a715-47ff-aba2-2b7f64f0d4a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3c9660-3f93-494b-bd05-26dd7ff47d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1cd1eb-8d5f-420d-827e-27c2d5d2f89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2982a9b4-f565-4359-b6e3-80ab039a8c1d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d242a995-9208-4aa0-bcce-a8094e5e12aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990e79c9-8a4e-4cd7-88b1-02951d950abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f7c594-d168-481d-bd5d-91c35fadad81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6422c45-43ce-4ee0-ab2d-cae9879daaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cf8319-6ce6-480b-8aee-71a4effbed83",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f285e2-c55e-41fa-9c45-63d4d3601be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba73933b-475b-45b8-920b-ac9ac13b56a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a838ac-8db4-458d-a0dd-6cde6b17c8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20296485-cc04-4ebf-8ff0-a929f9556a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a350f76-cb28-475e-b48d-601541403a7f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c852aff9-76bf-42f7-940c-67f91b35d265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd6b4c7-5c94-4686-9f13-2d5ccd76be0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33960406-c67e-47f4-9297-94becd4779c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c72009-f300-4026-853a-6fa519e4d847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffb83b7-a0dc-4985-b567-273872784c58",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f7895e-33e1-45d7-8e03-7c4547012570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075e4c3d-2d08-4c6c-91a7-1194dec89672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194da498-8fd9-4d2b-b52c-e7b95cc6c523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0f48db-0eb7-4bde-9aa2-61afdd7382ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b3de66-ee14-4c42-94b2-8bb2a7ede7cf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74c2222-b361-406c-b29a-c31ef5339fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed57236-45d7-4f50-8ed5-3607171aa08a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a0bee1-a20b-4f65-b652-c37f1f0c2dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e4e678-83da-4c55-bd8d-845cbfa8c644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc21162-aa4a-4c14-8b3e-ccb7b7c158a1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d80712-6824-4bb0-83d4-e4315c937ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084c04b5-cf27-4038-bebf-df2128d1f30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6387c821-ff90-4374-8ab4-44832e43fe89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5741f159-acf3-437a-9d7e-6bb268f185b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71706bd4-d225-45e9-bfee-addbf9902416",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c868b5e-4759-4c05-967f-d0ff5edfa97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc75a0b7-f36c-402f-af79-2c28557c3cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bfedb4-17fb-40f3-aa6e-ce917e136049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb51c05-012a-4e67-beb6-80e021399799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cee200f-b0c5-4f30-9eec-578224f66091",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b987f42-1866-4ffc-a77c-ef1331785410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2b2f58-b464-4e37-bf28-b35a946b25c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4943f30f-a60e-41c7-b1b7-8f89dfd26332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d0b11d-e7a3-4c71-a722-edbb3a3af53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ebbd7c-27aa-462c-aa26-8dd25dc41ff0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed632059-fc11-4caa-8165-8a06fbcf3cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96cedde-cd62-42ca-9642-eeff910a086a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6796020b-c113-40cb-b40c-ea4f04934268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0de7a2-8f04-4e23-835a-c913d650e6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043f77da-70a9-4033-81df-eb4da8c0c29f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f74a30c-5734-4e0d-b8bd-1e120d1e4ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb33778-e851-465f-80bc-5075623dd5c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2af575a-0895-446f-8558-945048de689a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762faf19-2c47-4f6f-89ae-7fd6f8dc3aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52809f8d-0b49-49c9-b3a8-be7b65a67adb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e57468a-65b9-4b1d-bfb3-ae19ace19739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ae0f2e-b522-4b27-9dad-7a169526e8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1da66fb-58b8-4e77-aa42-4ae45eb4f400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abdbf819-eef3-423a-bc15-f830827d27d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9476d370-e08e-4e28-a107-57d656fe05ca",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ed8a56-246d-481d-841c-07932f5ec7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8d6180-7b48-4ad5-a2aa-518ad17dff44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1441d3a-08cb-4e93-8d48-397d4d66c7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e10d4e8-eba0-49a7-95ad-6d9743353d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e37fde-2632-433a-aadf-80afae1ee050",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00235654-c0f0-4b96-b5a5-5b992afb4b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda9b1ba-c4b5-4d4a-b34d-7a408a2493af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ede1c2-4a78-49ea-9b40-241d570f833f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c1a777-39cb-4edb-9fed-99dff0bcbc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7548b3-c0c6-4316-b89c-539430ea1676",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9ae186-92b1-47b7-a628-e6f7d7cbe111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07207f9e-8884-4eec-b9f5-afeb6e3cf2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe98756-9f93-4ad4-9a2b-db8ba88917ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93866589-c62e-41e0-b077-0c220cddcd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c988a7-17de-4436-92a0-cb7314c3c235",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97aec164-3334-4578-882a-a2a2361c55cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a46b45-d97f-47d2-a60f-b113ab69e5be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f81dd6-e7c9-45de-b60a-df6bbcf3b41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fa32b8-e6a5-4240-bb11-b5d759c54bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b77f59b-3601-439d-b94f-769a6184f984",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7fb129-20d8-4385-bd52-d0e802c49ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680a3af8-2ff6-45c6-ae5f-5c4d2c135d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c3a11b-e4f6-43b1-b2fe-e35991fbbbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2b4fb6-c580-4a1a-aaa0-a52d7ceebb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4d6eec-e095-4f3e-b639-3503bbcdc66c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b036b4-eac0-4eb5-bb12-e12883328b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18bb3d5b-ae8f-49b2-ad05-fe471a38f15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0995d6-09ac-4adb-bba3-2a1e74082a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84741114-70c9-43d3-a5d2-0fb3170d34bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36aa68fd-99e9-437b-810e-1afbdeeab523",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4670e0-5e8c-457d-b110-44932623b68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fea50f1-9370-4c07-a69f-df20e266dd0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ad6358-69d1-4ea8-882d-93912f570810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4444ec61-0ae1-458b-a0fd-96eb35f21f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b370212-0b09-4d39-9c01-2c91f9e16aaf",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a180cf-4f8a-4ebd-a443-db9dc0168081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a4cb6d-734b-4418-8e57-3d5bdf14c058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4db65e-a6c1-492d-96c2-c6c3e77abf01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8a024c-0a37-4521-afbe-784266ef055a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853b1a84-83c7-48a5-8baf-2af3f3ef5021",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1845aba3-6836-470b-af51-50762936847c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8ee687a-ed30-4d08-b3e0-8c4592c57aa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccc4aa5-b338-4802-87e2-e79138fb4797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b37a5f-6648-45e7-b995-18d4309cdfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c9413c-e7c9-4d34-bae1-c798417881d2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7cacc1-ec0b-43b4-87ac-b611bb3eb92a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d60c3e5d-b869-446e-b84d-e57ab8c154e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682fbe94-3a7a-4087-8693-4d6104584b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5f9352-358e-444b-bf4b-a1b159960bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02843fe2-f09a-4f6b-b0fa-e2f44ec5d6b4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f183a745-dc77-4ed7-a141-d787e493612b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f164423a-7336-43a1-ba6b-92c135ff3afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c5ce51-79f9-472f-9162-0db331634385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c025482-2b81-484b-bfd5-35b1f22a8deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc536b9-de79-418a-9487-7dc33195f9e4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfc9876-8b89-4704-8965-c9e19de29406",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e6a247-19f6-4648-a51d-994739045636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685c007d-1a1f-4e11-b8aa-10d78242c1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6da989-6b67-4b99-9dc9-5a9340a40b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42195d80-d153-4e17-8bb1-777e72ed7b4b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b52bc3-009e-45c5-97ce-f89e9f5f828e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c0cd98e-7c9f-4c98-acc5-3a34bc52212b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4c3983-e95a-4db7-8214-0e2735842b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e678a8f-50c6-4cb9-8e28-a6c977b07d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0acdad0-20eb-44dc-99c5-a017a222600a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c79fe9-e375-412a-823c-8b4fddd83636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b71f6219-cfd5-4d53-9cfd-f3bc7aae27e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18192c18-6dc9-4188-880a-8e1b60885d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6815a526-745e-4afc-8d13-f69d21d2b019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaa0e0d-e36d-48bb-b614-8199f02a71cf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1596729-c5bc-4505-b628-f1bb94a01a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a9b44e8-f077-489c-a442-b893c4719f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f353254c-f009-426f-b0ec-5a0b42f27030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86c6f37-1e8f-478b-9a8c-7261f9c31708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87803870-ffb5-4b51-90a9-2f4ca7ff17ef",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb027de-a4bd-45a8-ae73-427d437154fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1961d3b0-8644-4523-b40f-5a548932e9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5081e73c-2868-4333-b6ab-116cdedd38a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e018414-bd16-42dd-81a3-647c159634a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8abb16e-a102-4107-bee3-f1a850bad920",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dccf4a4-acb3-4e3f-ad7b-cd4e7b497193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4231b0ad-af6b-4517-ad67-54d1a0e0c70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3774a611-d0f1-4f3b-8829-1c065137d6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19996a78-78d6-48eb-8ed6-580425f6f2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c88db1-36db-4a8f-987f-523a8a355949",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1201fa33-ee00-4e0a-b68a-ff3d78858a31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a4214c2-f9ff-4670-9f19-c35c80aeccb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d07814-5481-4b67-9258-97a622d4e29c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e5ecbd-56c0-4fbd-8287-e957335452b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08a1cb5-dfdf-422b-8b8b-d573dc262fed",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0b4377-ba45-4366-ac40-b2304e94293f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f9972eb-3f86-4b98-b87c-9687b81adfb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f29ddd-087c-4434-8a9d-1164d7b59121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07b6f8b-f394-43e7-98f1-1f1b1b2d48c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521ac8b5-d9e3-426d-b5d0-fd8d1e517dd5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577fa8b4-1564-4a3f-9288-7204a9bb46cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f0b8ec3-cdc6-4dde-b885-67543c656301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cf6912-5c96-41c1-9043-4e631a95d184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ff59ff-792a-4da2-b0b5-d5c4e0dce5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cec572-2e49-4f1c-8595-807ff31a4d98",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8826251f-9461-4346-8ed7-8b801c0f463f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "116c90f1-d8ad-4ade-bdfd-adc697dc0548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125373b0-d634-430c-9947-68591216f2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831a7866-7a9f-4393-9eb1-c32506b77ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f46c1f-4e19-4b22-af06-694e294ee293",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c1e37e-4939-4400-84db-9577c4caf31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7058b1cf-45a9-4164-8462-7ad6a5208563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafd4cda-bf6a-4a1e-b388-f10488521386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd10123-2417-43a1-bc11-e8a34fb77be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc230850-d2ad-4c27-bb5e-a8b5499ee3a0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa7cb48-347c-472f-9a40-1c492df045f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab1abd03-f35a-4012-9777-0fa0c6ffd28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98221d29-25c7-4b33-9d4c-dacd034f6391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ac691b-6c8e-4203-8bb7-4f494f09529f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a59446-b89b-45f7-a36b-1baca9b33fbb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02ee6e6-eaf4-4854-a361-a9ceae6873f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a52fead-4448-407f-bf0b-e9bae80dbb39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df03e2b4-3a75-42b2-bde6-f287f33ffa8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bcb561d-79cc-4e73-b228-94382dbe71d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fab8d6-2d67-45d1-8006-dd64487b1ce4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71cd9bc-7c92-490f-b2a6-56110a593a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb30cf86-5e92-4263-81bd-91103285c275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4227d119-8982-4bc8-868c-34d6110bc8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788070ed-bfd4-41c0-bd55-243144eb25ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df3b02f-6452-4cfe-aae7-11d53540972e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24090c6f-7b50-46e4-9002-5237ac34dd92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "916d7b65-98e8-4ec4-b6de-2cd6837154a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7117fd5-3d0f-4659-bc96-b7f2a1d0b9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a593fbb-277c-4a28-a374-64dc05b1333c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038ef060-340f-4086-8fed-a61f9fb3da69",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbcac90-255c-4b0e-a625-329f644fc1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e9c4ffd-d0dd-4b3d-9432-1f280816ec6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a6b485-58e4-4105-9df8-d12fd8c2c6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e38388-13b5-4fdc-b3a6-d1ae64424962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e831f3f8-c2a7-40ab-8a2b-1491d822b131",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d451c0f4-caeb-4008-9fb3-84fab6295855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3eb573-6bfb-4933-86ba-592093d77fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf2d319-7e86-4956-9d6a-b3110ec81c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208e62c8-20a9-4f7f-84e9-a4c1bf117785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23bbc83-886e-4e4d-b980-9eb77c766ee7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfac4c74-ea91-4a2d-b19a-b7fc9560f465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e04f56f-1ee5-48f2-8f85-a0af807f8eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a7e255-b8d0-45d1-805b-b08772becfc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010c8482-9418-429c-b042-df0b5f8f35a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a2848f-9334-4128-8298-f8804c9028c2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b579f9f8-ae6c-4d2f-9c05-318aa761b008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b27cf2-55fb-4dfc-be52-ff06e576724d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9420ca-ed57-430f-8a9b-c82c16c4ce94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfac6e0a-b3b2-40db-9751-c01c7e9be2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba6acb0-e290-40ba-83ac-95ff6e60c51b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c01761c-7b20-47c5-84c3-1d5adbfb2ccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42d6d118-8f25-42cb-9adc-fcaa2e09b288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcf9ccc-e581-4973-8dd7-f577b30d60d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9050868-4e8b-465c-a7fa-c55cce0be2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30c1e66-9bb2-43d5-a28e-55bc296c653c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53e2352-7ef3-4990-9007-092e7e96b081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94b0d470-3b90-49e3-a129-53ac55223468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6ddf7a-1ddd-4fb5-b841-ec74f8b9605b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83a5975-c4cf-462f-b206-915cbcb4a83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189f2bf7-96ac-4321-b3e4-e14fc5aaaf36",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcae7140-c2f7-4143-904c-4e118e3fbad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3ae3f6-2148-47dc-a6c3-3e3d05ca5a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c5d665-cd41-4c56-abab-1ff3324e14e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6d4348-ee5b-4065-9efe-c009c21d6edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d51b5e-a358-42d2-a071-7ed522020ff5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3c2b95-f009-4836-9d17-6e9adbd7f8f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af6cb908-ab8f-4362-b195-b2d6939d20cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb1beda-c707-4b62-b987-664f13f4b7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6aafc2-31e4-454f-b1f3-4b7facd2f1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630bf1dc-48ff-419c-9c3c-d1b55b501e96",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc30020-13df-4843-9d3e-a1ddee949308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c955ba9f-147a-44cf-a77a-746852dac8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a744ddb-333e-4039-9238-dce7bc57af80",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ee71a3-92dd-486e-90cf-19e84b80c0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63167ef2-53b1-4511-8345-5d6473e89ee6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23c64f3-36bf-44a8-99ac-6e2251a4c78f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d924dc3d-0fa6-4a89-80e6-99e1f5222f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adb7220-d833-432c-802b-1cec1c0636b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c5bd30-4182-47c6-ae92-46fb9af1b876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e112ee-db6a-4c5e-896f-4fef500ba2d8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e77a50-cbbc-4166-9544-212b45ce5137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4e8314a-daa9-4547-b86f-8449e27feb4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3962b9-3770-45b7-9e04-c4fbe5c737df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163bff85-7257-4bcd-9980-586c5dfa5a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4dc623e-b1fb-410c-9069-e2fa21928ef1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85791d2-9237-4944-84bb-eb9317a3d537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9680f0f0-9170-4e46-92cd-d5a6fda4c8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a74aa7-4620-4215-ab02-d0bff877dd70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2165e52a-61d3-419c-8ee5-cca15376a21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5ae72f-d11a-4fb1-b8f0-47a0e54ed51a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8ac70b-f1e2-4290-b248-7acbd6a83f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f80ecb8-fbd6-4b18-92f0-584f75f18e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16ff4f6-a200-4d3a-a3b1-ba7d536b16e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0509f0d-aa95-4dab-a33d-ba656503d3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e32807-799f-44f8-bf7a-24166cf78101",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ba8c1d-b240-45dd-a065-1d53282f6e1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ba09448-9557-4a27-97e4-2258961b3d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0844e5a-874f-4ab8-8fc6-b833a400a0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c6b76b-793e-4b24-acbb-38054beb9249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fce3f7-fa58-456a-b97e-b088ecca0b83",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebdbe27-73d0-4982-8269-5d1b02349436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d08f22f-00c7-4717-8e7b-07c1ff38415f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf911a0a-21d5-438a-bf3d-df90aa57fd46",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0ea886-67b1-4911-86af-949af90952e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c7ee93-e4fe-47fb-adcc-170849061016",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19df5dad-982e-410d-8326-21519f114bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6fa93a3-a065-4149-b38c-a389a653767e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de655b80-9b63-446d-adf0-3fc7508172e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bf3695-91db-4127-bdd4-269a35c6accd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f41833b0-9074-4fc8-92a9-349d4cc6d5b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5be6b16-9804-49d8-a6e1-4a3627a1405c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb9b09d2-0696-4341-adbb-20555085ca5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ff154e9-f05c-410b-8c7a-8ce9d7cff636"
                    }
                  }
                ]
              },
              {
                "id": "7916c0d3-d6d1-4682-9819-7882f59026b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b67366b-f1e7-478d-ae2a-e65aa3388be7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f35f32f-de08-4c9d-80db-70c9358ba29c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0a0eb5a8-ac44-4d3d-bfd8-9659cebefaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f20a54-d9bd-4361-a816-e5087d7a112b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "334db9c2-ce98-4db4-9bff-d26663560804"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fc804af-0754-455b-9813-2546083635e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91faf84d-ad74-4b3a-b46f-820959111938"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65d7e143-8970-4d98-b632-9e73d7f92018",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f090524-d6ce-48b8-989c-2c899c2f4ed9"
                    }
                  }
                ]
              },
              {
                "id": "5f34dfa3-4ecf-4818-8db3-62503c6daa58",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7c095b69-7d60-4a5e-acdd-b09438123302",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb9e01b-01cf-4212-8a99-77df49d607f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "81f52270-b4e2-4e13-87a2-a2dbb3ac8983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2f21dc-9800-4177-8bfc-d2c7b737b399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c1cf8b-ba7f-46b5-88aa-c003f7e6aefc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d7737847-32f6-456b-a2fe-a776ce5357b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c18943e-5714-46b1-a931-c7c81aae742c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef3f935c-3da5-43cf-b580-779baf512d2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4291946d-5349-47fc-bfe8-bc56942a3451"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5243f0d0-3c10-420c-b76d-1a7f88d4c1b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed91fd3d-d848-49c4-9027-b49d4ee744eb"
                    }
                  }
                ]
              },
              {
                "id": "36b75391-5c61-4ba1-8ad5-6214dcdf8ce1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad38a565-632a-477f-9ca4-554ec0ffd448",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fb0157fa-e313-4eb2-9f9c-bac1cebcde0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be531c15-ec7b-47d9-9f18-3c2224f2cf1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b426aa8-7d8e-4ddc-9630-ea69a2b2274b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77be1a36-e0c4-48db-8117-d59bc51f8e24",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e573bedb-ba84-491c-b4a7-5abb02105da4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c97c7532-c791-4046-a46b-d52acba69764",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbbc9e41-2343-436d-8f03-4c83babfe44b"
            }
          }
        ]
      },
      {
        "id": "420b1097-6965-4b70-8d96-420e38bc6e13",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f2ee3907-38cf-4dd5-9c04-6433d9ca7fa5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "534e2428-6ca9-41c3-a772-91c939a2e1cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78711b77-0445-4fc2-8db1-4c5bdcc2e88a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db1b6b3-feb1-43da-814e-29ef85a2dbd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "edbb1573-aa41-4536-a2c1-7c9271074097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dec74d-b427-4ac1-967d-99b5e562ecb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b45e49f8-07d6-4260-b406-3c9582a14e78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2afce55-9684-46b7-aa0a-44f03abf7ada",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e2f3689-20f7-4121-bf47-c6828810f370"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1404b7e-177e-4460-9379-9836d390c8a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7943c2d4-ffeb-4a02-b844-aecb67af118f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa23901e-72a5-48cc-b00d-189b6acda4be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ed49c8cc-801e-4c4b-b991-92a316cd757c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cd9d302-51b9-4b87-9d65-bacb49f7f0d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b38143ee-05d4-4973-81b5-dbf1a537e3ac"
            }
          }
        ]
      },
      {
        "id": "6380769e-78e5-4532-b0d4-d70856c8515e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0893a555-014a-44e8-af99-720680dfd3f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90811d32-07fc-487b-adb5-4d626c200675",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15029f55-1908-4363-b946-5607df4ae939",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21702c3a-f70d-422a-b081-34e15e2346b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6409497b-92d4-4e7d-9a92-d99110606c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f71159-4b3a-4f27-afc1-8dd6929a80ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f4093c4-0b2e-41e1-93a5-fd929a48e32f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6a36ff2-49bc-4e45-b0f5-50eed776486b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e38817d-7e0a-40c7-bed8-0db6b80927bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aacfbea3-1086-48de-911a-51e4677ed912",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ffeb945-afe7-4b11-b0e1-a87db703cdf4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "406e9682-6e98-4450-89c2-ad654f152f7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70301729-8bc0-4b4a-ab2c-6f8cacfd9a5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2fbaf9d-85bb-4f99-a794-93e996308c41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76ab9dfb-7b47-4b1a-836f-aa8005625cb1"
            }
          }
        ]
      },
      {
        "id": "14abbee9-ee19-42f7-b53a-fd7973ba58ea",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1560c711-7df0-4687-a4ef-cd7a5b665da8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75a410dd-b9fc-46b6-91c0-28bad4d47153",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0a38fd9-5d56-4d1b-8754-5b80db4386c0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30f212c-880a-4e6d-9482-df004eca1c57",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7a62490-086e-4bd5-a208-7e5f39810db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54744bd-cc8a-4919-b3b3-33051587173a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e524165f-6ab1-45a3-a0ae-8f0fab8638e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a651403b-f11f-4fff-9d96-732728b13bf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a2a07b1-e6e2-4926-9c01-0d903e1726ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "644d20b0-363f-446d-a2f7-20f69362de02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84ae0e36-20c7-4b5c-8064-b3c5219ec1ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55812e31-b8f1-484f-829e-3b9fe3bbfa49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5983380f-f778-4e06-ab43-89a3415f0ad1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "504a5d47-c236-4607-82b6-fa84c3f14a25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce482317-fc22-47a1-ae1d-84bedee69bcf"
            }
          }
        ]
      },
      {
        "id": "2946e613-8da0-4824-9c34-770ac0acad90",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efbf8edd-6de5-4e2d-80bd-8af85b97d2b5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89ab1a5a-f5f8-469f-abd7-b1374a8aea1e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c50a2e9d-3e76-487f-bbca-c81c4937326b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b969101f-e9a6-4c87-9846-9c75d671bc23",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea1985e5-31b6-4dfa-8579-e58710e8f851",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.761403508771933,
      "responseMin": 5,
      "responseMax": 248,
      "responseSd": 16.773807426282897,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701304551612,
      "completed": 1701304563810
    },
    "executions": [
      {
        "id": "065d8fcd-6cd9-46a3-9865-f9b40784902e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "01c923bd-c31d-4ee7-bb74-b41b0c5cdbfb",
          "httpRequestId": "fa5c2240-95cc-4f9e-8f5b-9429765790fb"
        },
        "item": {
          "id": "065d8fcd-6cd9-46a3-9865-f9b40784902e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "748e7ffc-d6fe-4b5f-88fc-7340eb3d2c3d",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "4bd0b7c6-065a-48b7-a246-9331243b202a",
        "cursor": {
          "ref": "e583a1a3-b8b3-4878-940a-56ce547a610f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "38897d18-02e1-456e-86ab-0c7ab6fbb2b7"
        },
        "item": {
          "id": "4bd0b7c6-065a-48b7-a246-9331243b202a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8b8277d5-da0b-416a-9c52-ce545ce69e73",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "74d478e5-dad4-494c-9bc1-5dc4d1a7a790",
        "cursor": {
          "ref": "93d9c2cd-bd00-4d4b-b8e1-0a14ece4d6ca",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c7f2ba22-847f-4b60-a615-75d6efd962cd"
        },
        "item": {
          "id": "74d478e5-dad4-494c-9bc1-5dc4d1a7a790",
          "name": "did_json"
        },
        "response": {
          "id": "73e9faf8-1554-4677-ba7b-5c717a758338",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5babfcd9-8cf9-4cfa-9bf5-c862953970c5",
        "cursor": {
          "ref": "f50cea11-a435-478d-826f-cdbf720f6886",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7e13954-512f-4249-b964-d04924536f5b"
        },
        "item": {
          "id": "5babfcd9-8cf9-4cfa-9bf5-c862953970c5",
          "name": "did:invalid"
        },
        "response": {
          "id": "d691fcd1-fa02-4e8b-a7bd-3eda9169f38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5babfcd9-8cf9-4cfa-9bf5-c862953970c5",
        "cursor": {
          "ref": "f50cea11-a435-478d-826f-cdbf720f6886",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7e13954-512f-4249-b964-d04924536f5b"
        },
        "item": {
          "id": "5babfcd9-8cf9-4cfa-9bf5-c862953970c5",
          "name": "did:invalid"
        },
        "response": {
          "id": "d691fcd1-fa02-4e8b-a7bd-3eda9169f38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98c00af-f47f-4add-8852-b85fb3c1278b",
        "cursor": {
          "ref": "2741aa6f-eca5-44f7-9a41-37b1cc1761e0",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a264b3d2-7702-4f7b-90ba-89dadf494d23"
        },
        "item": {
          "id": "a98c00af-f47f-4add-8852-b85fb3c1278b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cd4f3475-088d-4d63-a4f2-7c30d4cc6be6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7a507d-82c4-43fb-9e58-a5c4db7e13d9",
        "cursor": {
          "ref": "6d8831fd-6c83-4b5b-9f82-f45f1fa33300",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a0059c98-4d7e-407a-ad15-442e8db569ae"
        },
        "item": {
          "id": "2d7a507d-82c4-43fb-9e58-a5c4db7e13d9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "785142e6-2026-473d-9bb9-2872438d79a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b271a26d-2530-4fab-892a-4946d4bba043",
        "cursor": {
          "ref": "fa03ab00-7572-4851-81d1-1c11a1bd88a6",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9e501def-e0e7-4201-8985-a321282a7700"
        },
        "item": {
          "id": "b271a26d-2530-4fab-892a-4946d4bba043",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2b33bd00-11ce-46d0-bdfb-3987ec19f59d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedab8d7-448b-4845-95ca-b86734225a6f",
        "cursor": {
          "ref": "1bd0b660-49f4-4631-b9a7-021d44d73656",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dff4138f-c7f8-4c41-a1ca-27791945b1de"
        },
        "item": {
          "id": "bedab8d7-448b-4845-95ca-b86734225a6f",
          "name": "identifiers"
        },
        "response": {
          "id": "a7f77c1a-6dd0-469c-99e4-fe116c92fec9",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a07329e-5f27-4cd5-89bb-633305ba829e",
        "cursor": {
          "ref": "10b95241-5095-4376-b703-aa566e9a75af",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f27464a5-e665-4848-8ff8-99af5de8b016"
        },
        "item": {
          "id": "1a07329e-5f27-4cd5-89bb-633305ba829e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "907b3c5c-18f4-422b-98ae-aaa08c462c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd65e852-21d1-42fe-9357-6dfb3dbce22e",
        "cursor": {
          "ref": "cce81ad4-f8b0-46f2-b63c-17857f690a39",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d70895cd-1c1d-40dd-b73b-c0c68eba219d"
        },
        "item": {
          "id": "fd65e852-21d1-42fe-9357-6dfb3dbce22e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ec6e6885-87a1-45e0-863c-1016badccd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3903f5-52a0-455b-930b-e94ca155cfce",
        "cursor": {
          "ref": "3a32aa6d-e9d2-4343-9c33-efad460f1b66",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4d7c0d99-b3b2-4fe5-acbb-a56f1da175f0"
        },
        "item": {
          "id": "ba3903f5-52a0-455b-930b-e94ca155cfce",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3e38a5b8-d2b2-4d8a-a7c1-249f0d36a29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20f3ab9-015f-4195-a9af-d8d8f476a51d",
        "cursor": {
          "ref": "ca60c60e-ef35-4874-b271-ce1f4ef8270f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a641bd01-b4a0-4c4d-8d08-ecf5129826a8"
        },
        "item": {
          "id": "b20f3ab9-015f-4195-a9af-d8d8f476a51d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f746335f-531b-480f-ac28-15eb01fc0949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a8a597-8785-4be8-b0ff-40f9c687cac6",
        "cursor": {
          "ref": "fd324b10-f0b7-4b3d-b457-e5d33dbae4f9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cca324cf-7696-4bcc-8a35-837abb3307e2"
        },
        "item": {
          "id": "56a8a597-8785-4be8-b0ff-40f9c687cac6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "70463325-c0be-4dcd-a3e0-1454868b856c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed053fc7-eea4-47b5-95b0-11fe633d8252",
        "cursor": {
          "ref": "47659d49-9b84-4e04-b8b9-a6f54e94440b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "502ad133-6704-47b0-89f7-cbe482d58fc7"
        },
        "item": {
          "id": "ed053fc7-eea4-47b5-95b0-11fe633d8252",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0b97abf0-5ed3-42af-8eee-1753bcc308af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be45435-e626-4bc2-a6b8-de88dfc16856",
        "cursor": {
          "ref": "065a796f-cf33-4eed-a506-074386294b74",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7ac4de80-f370-4013-8058-fd7b13f48f92"
        },
        "item": {
          "id": "7be45435-e626-4bc2-a6b8-de88dfc16856",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7ebb0ea9-2e21-4ff5-9e3c-5991c1d5ddc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c09041c-7daf-4b7f-bb41-d03cba7c385f",
        "cursor": {
          "ref": "7529320f-b508-4a8b-8ee6-4a546aea13cc",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3bc5c22a-c364-4688-9ac3-9a78554b079c"
        },
        "item": {
          "id": "3c09041c-7daf-4b7f-bb41-d03cba7c385f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7630a4ce-a1ee-4b6a-a0e7-43c4849da2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d570d7d9-bd56-467e-af1c-f57d3ebb039c",
        "cursor": {
          "ref": "404bfbb6-a5e2-4a08-8b32-e198deb1a638",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2becbbe5-ff0e-400c-afbd-7e020d1e0a71"
        },
        "item": {
          "id": "d570d7d9-bd56-467e-af1c-f57d3ebb039c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cf0a726d-f40f-4d92-b1d8-550c586c530b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a34262-746c-4c27-b120-2a045b41b645",
        "cursor": {
          "ref": "0caf6778-a423-45bc-864e-5ae71d7e0b4a",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5bdf6ca5-c790-454d-bc17-a6e1e3f08fb7"
        },
        "item": {
          "id": "06a34262-746c-4c27-b120-2a045b41b645",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b6c4684d-ca61-411d-9588-7fe3d622a641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a759ad-d909-4b16-9e85-be50ce61db23",
        "cursor": {
          "ref": "70723c9a-7f03-4501-954b-0adf219d5baa",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0c969016-d5b3-42d8-90be-bbd5743d79da"
        },
        "item": {
          "id": "62a759ad-d909-4b16-9e85-be50ce61db23",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "39d4eb57-c78b-423f-8378-418d4d01cd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd49a7c-25a4-4c3d-b6f3-fabdea8e9486",
        "cursor": {
          "ref": "d3039aa0-c01f-49be-8529-732073521f70",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "33cd2ad1-207a-4b80-8c10-c439d2d4b588"
        },
        "item": {
          "id": "5dd49a7c-25a4-4c3d-b6f3-fabdea8e9486",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f991ee92-485c-4769-85bb-84ad903b03ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e39c75-eaec-45a9-afcb-51802da412b5",
        "cursor": {
          "ref": "9c61f332-1802-43bb-b224-0420505c77e6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fbedc82f-80db-44b1-8686-34ea275a73ae"
        },
        "item": {
          "id": "13e39c75-eaec-45a9-afcb-51802da412b5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8f643a4a-950d-431b-973c-726e8d456a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fadcc7-212f-4a16-9a5d-63824b655683",
        "cursor": {
          "ref": "d9675ac4-1aae-46de-b5c2-dc9827cb4925",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ad358458-f253-448f-b4a1-c327b2bce071"
        },
        "item": {
          "id": "b3fadcc7-212f-4a16-9a5d-63824b655683",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2b118577-d0c2-4cbf-ace9-06a2e1556808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757b2ce9-ed94-4e9d-88f8-d63cfacaa6c7",
        "cursor": {
          "ref": "66e41a1e-04c4-4bf0-a385-e8aca7026eef",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4b9c0f37-d667-43ec-ae75-cbc947a0b071"
        },
        "item": {
          "id": "757b2ce9-ed94-4e9d-88f8-d63cfacaa6c7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8dfd8ffc-4cf8-4d96-a9b4-3166e981b247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30135db-1b22-4f85-bafd-9157001a4c44",
        "cursor": {
          "ref": "fb89e30b-b72b-47a7-9089-2f60763f65cd",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5c486f71-15b9-4849-a97e-c793145f4421"
        },
        "item": {
          "id": "c30135db-1b22-4f85-bafd-9157001a4c44",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f5b12edf-8899-47bd-943d-3053a706732e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2f4744-9f42-45f8-a2f7-d5957125fdd9",
        "cursor": {
          "ref": "f1e43847-029c-4f35-a127-bc2292c9da0d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9f3fca67-f8a7-48ae-9b38-565bbe7fd49d"
        },
        "item": {
          "id": "2f2f4744-9f42-45f8-a2f7-d5957125fdd9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b4b30320-0f10-4495-941a-0258f05c7ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a312c57c-16fb-4315-a8d2-fab43080946f",
        "cursor": {
          "ref": "5586a645-6271-42a3-86f5-8e0c69871a31",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bcbe0553-5547-47a8-8e69-9219dacff26e"
        },
        "item": {
          "id": "a312c57c-16fb-4315-a8d2-fab43080946f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6508ac79-ed58-4d7a-9854-c44e91d46d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c07ce5e-3c90-493a-a670-1b0224360220",
        "cursor": {
          "ref": "892c8d36-0500-4d79-b0b7-58b3091b47a6",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f9316618-8df1-4c41-badb-be962a3ef1ac"
        },
        "item": {
          "id": "0c07ce5e-3c90-493a-a670-1b0224360220",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "314e3785-6e92-4759-b3c4-21c5dea91e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7442eb54-cf63-41ef-8997-4115f3f00bc1",
        "cursor": {
          "ref": "2d5042f3-1a7e-4ed4-9813-d1b55903556b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "df7e336f-b69b-418f-b67f-c7e697959f6a"
        },
        "item": {
          "id": "7442eb54-cf63-41ef-8997-4115f3f00bc1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "52b25085-dcbc-4970-84c9-f5c9d283be27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28575b5-3200-4913-9e4f-8d326abe698a",
        "cursor": {
          "ref": "9bd99bcf-c0ba-4c58-abd3-78bb047d56de",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e3058953-bf84-4e67-8112-42c53f4a44c1"
        },
        "item": {
          "id": "e28575b5-3200-4913-9e4f-8d326abe698a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e2fe35ee-ff3d-405d-9cbb-19abe4cf9111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b33ebd-c949-4481-9555-deedb0dfd3d1",
        "cursor": {
          "ref": "75f97539-7220-4fb5-aa0f-1966ed2fc699",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ff259ea6-03ac-4b77-b837-fc672e7d86dd"
        },
        "item": {
          "id": "c9b33ebd-c949-4481-9555-deedb0dfd3d1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "436e6480-d625-4aa4-a8d2-895b7ff2318f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaf6b9e-4f55-4710-adfb-c3eba19dd9eb",
        "cursor": {
          "ref": "4448b19a-b4e9-4c05-89e2-e78d65cb92b0",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f42eb7c2-ab8d-4e6a-8e88-c7b0c1e7383a"
        },
        "item": {
          "id": "9aaf6b9e-4f55-4710-adfb-c3eba19dd9eb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e7d2c8f5-342c-4731-9445-0c17841c4340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567a3e6a-e81c-48bb-bd3c-83d65a4df1d0",
        "cursor": {
          "ref": "19972641-87b4-42a3-bdbf-33c49ec44fc2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d1511079-0b9d-4f53-bc6a-f9cf40d2a871"
        },
        "item": {
          "id": "567a3e6a-e81c-48bb-bd3c-83d65a4df1d0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "10989824-68f1-4e9d-add9-0e5e63652c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce8f8e4-1d51-4c56-8ade-6b0fdda55067",
        "cursor": {
          "ref": "3ea08e5e-fbcf-49b4-b0dd-952c385cf6ca",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3af9e75a-e29d-4c53-aa97-237390b6895b"
        },
        "item": {
          "id": "0ce8f8e4-1d51-4c56-8ade-6b0fdda55067",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b13943e3-f7e3-46a9-82c4-07b2cb32a002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a8969a-e53e-4412-8088-2d091655c68d",
        "cursor": {
          "ref": "93303021-6f72-4861-94cd-2e5893b35eae",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c9588581-0ce5-4a97-aaab-b42ccad45adf"
        },
        "item": {
          "id": "56a8969a-e53e-4412-8088-2d091655c68d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c8301b9a-9f11-4b22-a4da-fc8d18e6632d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c6670a-b0e7-402e-a882-caab2f591617",
        "cursor": {
          "ref": "daa053d1-cacb-4e43-8e06-d5bda2dfcdf4",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "697195b5-cf4f-4948-9f8f-0e57206c9e57"
        },
        "item": {
          "id": "d2c6670a-b0e7-402e-a882-caab2f591617",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dddc6959-2947-4e6d-9481-445c37c26ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2cf602-8c9d-45ec-a31e-1db4b8d00971",
        "cursor": {
          "ref": "20024efa-1eaa-4dca-9326-618ae5a118ea",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "13a532f8-f408-4191-9eb3-af75c98dbdca"
        },
        "item": {
          "id": "ad2cf602-8c9d-45ec-a31e-1db4b8d00971",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "67b06daf-c599-446d-a371-a5c1875febe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e20dfd1-1139-46a4-8ba8-e43e589ac31b",
        "cursor": {
          "ref": "29cf2a56-19f8-48d6-b441-adbc39cd2f10",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "11c6d123-8cc8-40e1-9104-f9dd11b05f99"
        },
        "item": {
          "id": "0e20dfd1-1139-46a4-8ba8-e43e589ac31b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ffcabf98-21a4-45f3-97d0-20fa95ed8661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99dd5e3-e392-4d33-87ef-6ea60026a014",
        "cursor": {
          "ref": "24fd8add-e446-4693-b7eb-7e62ee3cdbee",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6ac7149f-e23b-41e1-9a12-8d94433c3feb"
        },
        "item": {
          "id": "a99dd5e3-e392-4d33-87ef-6ea60026a014",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6baa8752-fb24-4933-acec-fb7e2c8bafe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91ee3ff-0872-4336-a266-9dc0369a2bb3",
        "cursor": {
          "ref": "7f5243ad-ca67-4aac-ac26-5e79d97c0914",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5cfc517f-309e-43d5-aec4-0d0fe730d235"
        },
        "item": {
          "id": "f91ee3ff-0872-4336-a266-9dc0369a2bb3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a2fe113e-90ac-44e4-93d5-4c2eb8bf6fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb30fba5-a808-4de5-b396-68a64a028e46",
        "cursor": {
          "ref": "c924a52f-9b6f-40ab-9a10-2347804356a3",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "546d1ed5-f335-4828-a4c5-e7c2dcd4812e"
        },
        "item": {
          "id": "cb30fba5-a808-4de5-b396-68a64a028e46",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "dfabcca7-e25a-468b-9190-f61dc5acf3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab659753-c122-4a89-a6eb-b2476abc66e4",
        "cursor": {
          "ref": "09699e84-1c43-4703-b191-a3aa7231a5f0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "36e2c125-b97d-4338-8ac3-39d676bb8b5f"
        },
        "item": {
          "id": "ab659753-c122-4a89-a6eb-b2476abc66e4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "550982b6-99b3-4d9f-a675-8b716de3ada2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70075b8f-b3a8-4756-b9ea-19a026967481",
        "cursor": {
          "ref": "9b6ecd1c-7bfb-461b-8e96-5c79d3ce918f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "56bd5b95-006b-4d39-88c0-547e72519264"
        },
        "item": {
          "id": "70075b8f-b3a8-4756-b9ea-19a026967481",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7db9d660-549c-44fa-9ebb-6b99598209d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f8d768-7071-4a54-abb2-42b004f54d2d",
        "cursor": {
          "ref": "cc032b7b-b0ed-4218-a618-c7d7cb54800d",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2969325d-a357-4d33-b188-c0bf3591740e"
        },
        "item": {
          "id": "42f8d768-7071-4a54-abb2-42b004f54d2d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "909bdec5-c8c7-4fa8-9986-0a2f6d5d3746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68deb8cb-eb8e-4d1c-82b3-aaf95dd678c2",
        "cursor": {
          "ref": "c4243947-415a-4e06-85d4-d0abeb1eee80",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "49da4d7d-3fd4-44fe-a2ad-ca245556c976"
        },
        "item": {
          "id": "68deb8cb-eb8e-4d1c-82b3-aaf95dd678c2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ed0da7fa-8d8f-48d2-a3d4-7d321326ed3a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a6a30e-8e2b-4c5d-9741-4cd5a5e4a4fc",
        "cursor": {
          "ref": "a6c19ea0-0102-4210-975e-c6007f691789",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6fcfe879-c1e1-48b3-9e16-d2c9678d6dcc"
        },
        "item": {
          "id": "e5a6a30e-8e2b-4c5d-9741-4cd5a5e4a4fc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "96f2342b-4048-4f5a-bf2c-e574b3b3eb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999fe984-fb75-4203-aa64-f16fcf56f55b",
        "cursor": {
          "ref": "c417ccbc-57eb-4a16-b29a-b00c32566a1d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "180f431c-27cb-4215-95d7-435f5fc8b9c6"
        },
        "item": {
          "id": "999fe984-fb75-4203-aa64-f16fcf56f55b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d6120757-9a52-4baf-a461-7685dad2fa9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fe1b66-fbc0-47af-803f-8edb7c689f6c",
        "cursor": {
          "ref": "612637d8-149e-4cd7-ba45-ba93323c8cd8",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "65705f08-1bbf-41e4-8d00-92b32cf3f3eb"
        },
        "item": {
          "id": "38fe1b66-fbc0-47af-803f-8edb7c689f6c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "15e36436-1fb3-4f27-af88-e11dd3e44b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdcd571-7d52-4fed-adc1-55bd0d03af1c",
        "cursor": {
          "ref": "84f7ada5-6252-4e74-aa64-9db156d2a481",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9c60cc0b-4336-4d44-8b89-439ea55e6674"
        },
        "item": {
          "id": "3bdcd571-7d52-4fed-adc1-55bd0d03af1c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bd683a35-4508-41cb-a780-bf6b15a1f2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0221d438-28c0-445c-8215-9306caaf4c53",
        "cursor": {
          "ref": "c15798cf-3bcd-4f7d-9b34-7206f67c698e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5fbd4f32-0721-43b8-bd7c-a1279e212fb0"
        },
        "item": {
          "id": "0221d438-28c0-445c-8215-9306caaf4c53",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "475b7ac3-6b88-4fc6-a7f8-93a33d883dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945a4dfb-0155-4699-a1ae-9b19996f5ee5",
        "cursor": {
          "ref": "2c099df6-e9fa-4392-bfad-ec9ecd8b6b0e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a6bc8b1c-3bb0-41a2-8b73-57a26248d4c9"
        },
        "item": {
          "id": "945a4dfb-0155-4699-a1ae-9b19996f5ee5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ceca630b-11eb-4ae8-a0bb-c69efd3c1261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e8da43-d56a-46ac-bcba-d04289ce87aa",
        "cursor": {
          "ref": "7a4fd4b0-4b57-46b9-a62d-afedd5948b86",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9ebefc17-b676-4567-b0ea-e16e00ac4dfc"
        },
        "item": {
          "id": "58e8da43-d56a-46ac-bcba-d04289ce87aa",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "114afec5-32b4-47f2-8d94-ebc9a225cdeb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddb2aff-e232-446d-9b00-986d80411322",
        "cursor": {
          "ref": "bc07db49-3682-4cd6-9ac6-abda684746dc",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bc28e64e-d9b2-4898-bdfc-f459b4e25b85"
        },
        "item": {
          "id": "8ddb2aff-e232-446d-9b00-986d80411322",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f506648b-8144-4b69-92ef-90564717a472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463bff10-5257-40f1-b2d2-95474d02b589",
        "cursor": {
          "ref": "97981f66-d3bc-4db8-92d2-2c55062aa36b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4ff3f6f3-fe97-497a-8460-902dfe14191e"
        },
        "item": {
          "id": "463bff10-5257-40f1-b2d2-95474d02b589",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "711e442e-f93b-433e-9de9-b9514bbd692b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2afc8f-5eae-4673-9f03-b6c8c67f2017",
        "cursor": {
          "ref": "db5f4020-9b3d-427a-9307-1fdee66ecb54",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d1000a26-d077-478d-bd04-87fdc0f1174e"
        },
        "item": {
          "id": "2e2afc8f-5eae-4673-9f03-b6c8c67f2017",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "90407c1d-5d45-482f-8d51-a7c669ea2942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d4ee1d-e1e0-413a-8619-d5c472363b6c",
        "cursor": {
          "ref": "3def954c-ace7-45f6-9567-b6be68193816",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c7f143c3-4e8e-4d87-af2d-9a4f2e55d802"
        },
        "item": {
          "id": "17d4ee1d-e1e0-413a-8619-d5c472363b6c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "943888f3-de86-47f1-9fc4-0fe4050a045d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b097c3e-f4b5-4cc3-99c3-2ee968155181",
        "cursor": {
          "ref": "9465afda-774f-4327-85c4-e80403166402",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7b73affc-c4e8-49e9-99b7-1f37eb6efb55"
        },
        "item": {
          "id": "4b097c3e-f4b5-4cc3-99c3-2ee968155181",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e6dc4592-10fd-49cd-aa3b-4603c6759b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc72f8f-145d-4fe9-9019-66080dfb57bc",
        "cursor": {
          "ref": "05eeb1de-ae7e-4b64-b84e-51ce1e6d9b2f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6bca15f5-ab57-46c5-811e-04001a5decc0"
        },
        "item": {
          "id": "2dc72f8f-145d-4fe9-9019-66080dfb57bc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d7e0f65f-987e-463a-9c14-17510f92737e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6db576-29be-47e3-9aae-a42227860489",
        "cursor": {
          "ref": "6288259a-5e64-403e-a720-536cf7757f76",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "08668365-f053-40b2-8037-ea0ab9211cfb"
        },
        "item": {
          "id": "8d6db576-29be-47e3-9aae-a42227860489",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "160c4b5b-7d35-4884-b0cd-d22db3cce26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10a7d4b-2a18-411f-b9f6-23d20eccd795",
        "cursor": {
          "ref": "6ef68ecc-f85b-4c48-a410-b549960d19cd",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "576fde79-aaf9-4af4-b0e5-32dbf51f65ed"
        },
        "item": {
          "id": "f10a7d4b-2a18-411f-b9f6-23d20eccd795",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fc905b38-0d96-435a-866f-3f52fc96e9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efac0bba-ca1f-4d5b-8f16-e4d991bc4077",
        "cursor": {
          "ref": "b06ca59a-2ce4-42b7-af58-5409a7c14683",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ac34fd2e-f299-4395-beea-e69883f3e431"
        },
        "item": {
          "id": "efac0bba-ca1f-4d5b-8f16-e4d991bc4077",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2b42a4b1-c81a-4744-8cfb-323e96b28151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ebc533-bb12-4969-befa-b92c9e7847d0",
        "cursor": {
          "ref": "82b2b475-498c-4c8a-96a1-6689ef5886e3",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b9cfbecd-8b56-4df5-884c-654e8a58c798"
        },
        "item": {
          "id": "95ebc533-bb12-4969-befa-b92c9e7847d0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0454c2d6-b57e-44de-aef4-eb551a57f0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8b1ded-23a0-4589-b4fc-2e24f04bbaf5",
        "cursor": {
          "ref": "d51f4d5d-157b-4827-971d-dce43eb8f7bc",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "365b4961-ab90-43d1-bcb1-03ab9141be31"
        },
        "item": {
          "id": "fd8b1ded-23a0-4589-b4fc-2e24f04bbaf5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cdbeaff2-81d0-4ac6-9f07-f3c8ecec126a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7492d62-2ae0-4f6c-b348-3d7c188b4913",
        "cursor": {
          "ref": "8c2faf36-a37e-40bd-8e07-dfb92b59a4e8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8e3e20fa-67b5-47ea-9be6-24ee0f398d8b"
        },
        "item": {
          "id": "a7492d62-2ae0-4f6c-b348-3d7c188b4913",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "687b2a10-13fa-4c6c-b67c-08bc6eeecd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c1ea0e-565c-41fe-b275-e0b6584e9a45",
        "cursor": {
          "ref": "8833efd3-bc19-491d-ae95-eca0ab41278d",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3db4c1bf-b034-4005-b982-167617fa3a70"
        },
        "item": {
          "id": "43c1ea0e-565c-41fe-b275-e0b6584e9a45",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "49f00a4d-e466-495b-8b68-3e4c87c087eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6539d8-2094-458e-a56a-d7827fef8fcc",
        "cursor": {
          "ref": "dc931bd7-5291-488e-8f76-dc623bb925e9",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "21cb8128-c352-40b2-9567-750ff1bc3bd3"
        },
        "item": {
          "id": "ef6539d8-2094-458e-a56a-d7827fef8fcc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8a9bf001-acbe-4607-a3b3-936073afa544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a68e69a-e856-43a5-8b3a-d8244008ae73",
        "cursor": {
          "ref": "f2f7d4cc-b78a-444a-b9d6-62760394d5a1",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "eaca3dc0-8bf6-467e-9714-301d42168e8d"
        },
        "item": {
          "id": "5a68e69a-e856-43a5-8b3a-d8244008ae73",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "73eac11a-9643-4a0f-b0b7-4c540dad173e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f4b221-34dc-4485-bd89-1e4d94ec82e7",
        "cursor": {
          "ref": "2ba9353c-ef89-4ba5-96de-d512c0d3c6ad",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4818b671-5e7e-4658-bddf-4a0368cdcde1"
        },
        "item": {
          "id": "01f4b221-34dc-4485-bd89-1e4d94ec82e7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "76ca5eea-8611-4a7d-bf15-a600ae007fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49d0291-fb54-46a9-bdbd-2e499af3ed64",
        "cursor": {
          "ref": "4257cfa5-8356-4924-a9c5-9a1c1d802b20",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7009ec8b-e406-4ef0-908e-c420a8a33a22"
        },
        "item": {
          "id": "a49d0291-fb54-46a9-bdbd-2e499af3ed64",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "510f6dd6-6fdf-4e37-b6d2-f6967868b870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9d0560-6409-477d-940b-a03bcd0dc07d",
        "cursor": {
          "ref": "e57812c1-1e45-4e53-9a7c-2da826accc61",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "357deb4c-c856-4215-9a15-a9481424ba31"
        },
        "item": {
          "id": "fa9d0560-6409-477d-940b-a03bcd0dc07d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9f701f44-1b01-44ad-a9e8-c84a3ec64af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c26f99-ec69-4571-94f6-b306a913fb58",
        "cursor": {
          "ref": "cee2666c-e05d-43f3-bd30-e61682a2b825",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1238ce84-e597-4d02-a46c-c78ac24de466"
        },
        "item": {
          "id": "67c26f99-ec69-4571-94f6-b306a913fb58",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5dd54e72-4308-4512-b67e-2a8ea9fb7ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc685b57-7d27-4e0e-9f04-fb560365daec",
        "cursor": {
          "ref": "ea50b04c-0e7a-4560-8ad1-6a0967259fbe",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1b6b172d-00a4-4c88-b270-e30b83a400e8"
        },
        "item": {
          "id": "cc685b57-7d27-4e0e-9f04-fb560365daec",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4623557e-b541-4b29-bbb2-19ccb7d889f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67793ec-55ee-4660-8df9-99034336d7af",
        "cursor": {
          "ref": "b0c4e24e-6dd8-4870-bdf2-15470547307e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d2d2cee5-95f1-41a2-b3f1-4234cfb84f88"
        },
        "item": {
          "id": "f67793ec-55ee-4660-8df9-99034336d7af",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f511ca5d-4b0b-40d1-979c-d95d254d0f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19e05e1-d7ff-4836-8e29-992773c5322e",
        "cursor": {
          "ref": "1bdc108f-fff9-4b89-8360-aaf8ed8921ad",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2234a97f-7f02-462a-aa71-580138304261"
        },
        "item": {
          "id": "f19e05e1-d7ff-4836-8e29-992773c5322e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e31a4856-a3f5-4cfe-8e16-cf269ec6c442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edd7857-ab3a-465d-9736-85176e6bcc14",
        "cursor": {
          "ref": "5da3ed2c-1d77-4981-912d-184c546991a6",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "08364305-4411-4498-b6ab-d0d4cb768e82"
        },
        "item": {
          "id": "3edd7857-ab3a-465d-9736-85176e6bcc14",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "aa57327b-e25d-40dd-83ef-75639e1ecec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b77073-e829-4258-bfe5-7ac658ff9d49",
        "cursor": {
          "ref": "4b902f9f-a4b8-4695-afef-a6635b416d20",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bf362c35-1198-491e-9d0b-b5af8b27b7b6"
        },
        "item": {
          "id": "a0b77073-e829-4258-bfe5-7ac658ff9d49",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fce04684-3418-4f1d-a82e-7e0b5111dded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ddef8e-36c5-44bf-bee3-967d97b13fb0",
        "cursor": {
          "ref": "52a118af-b09f-4995-8b8d-da0c4c990fce",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ffa0be59-de23-48ad-822b-aca9d0182ba0"
        },
        "item": {
          "id": "28ddef8e-36c5-44bf-bee3-967d97b13fb0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8ae2b42e-3bd2-46ed-950c-fab196f5b004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08179c6-a564-4b1c-89e6-1bfe59afe8a1",
        "cursor": {
          "ref": "4c75bfb7-ce7d-4769-b165-8225da03089e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a684f21a-499a-41d2-83cb-f928aca61750"
        },
        "item": {
          "id": "e08179c6-a564-4b1c-89e6-1bfe59afe8a1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "45b2a9ec-35e8-49e5-ae4b-881637cd6c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efee0cf-6b4d-4bb6-8c6e-9538fafdf2f9",
        "cursor": {
          "ref": "860ef453-e776-430c-b765-1ce14b036ff5",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a986c061-efdf-4805-b653-4e4cccfcbb64"
        },
        "item": {
          "id": "0efee0cf-6b4d-4bb6-8c6e-9538fafdf2f9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8212bbe8-a270-4515-b8f5-1c9aee8645ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2245a11d-bcd5-4768-ab52-ea1dff3ba801",
        "cursor": {
          "ref": "e0b9e4a5-6437-454d-99b4-80c0168a4854",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a07b0ca2-77a2-4bec-b7d4-4fc62eaa0306"
        },
        "item": {
          "id": "2245a11d-bcd5-4768-ab52-ea1dff3ba801",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "24176fb8-689d-4eff-8a33-013b0ad6eb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c4a8b7-82a4-458b-b591-6b250a25ee7d",
        "cursor": {
          "ref": "af97e4a6-b26d-4ccc-a76c-9cacde0df335",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0048e05f-0bf6-428e-9980-61940451a574"
        },
        "item": {
          "id": "d9c4a8b7-82a4-458b-b591-6b250a25ee7d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4394bc9b-53a3-49a8-94b9-058355d8725e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcda963-5e42-481c-ad02-b3ad66876d29",
        "cursor": {
          "ref": "224f80c5-0a6d-45bd-ad3d-95c59639c3d5",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2ba2ea00-5f7d-4216-98de-236eff2dbd95"
        },
        "item": {
          "id": "9bcda963-5e42-481c-ad02-b3ad66876d29",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5adfceda-114c-49fb-95fb-86178d019c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf8d751-991d-47ac-ac0f-944a80b65c14",
        "cursor": {
          "ref": "a88cc905-d6ec-467c-ae3b-8a6aade3995e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f57453c3-cda0-444f-956c-84c47d6e054c"
        },
        "item": {
          "id": "caf8d751-991d-47ac-ac0f-944a80b65c14",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "300be240-0e17-49f2-8694-fe83385f2bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e62b82-2ff0-43a7-b23f-8b1add2e04a6",
        "cursor": {
          "ref": "53897315-1c9e-40b7-acd4-5bef1c634e10",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4ec73d9e-90bf-431d-a483-fe4685fa74a4"
        },
        "item": {
          "id": "f0e62b82-2ff0-43a7-b23f-8b1add2e04a6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dbea6abb-50ee-4179-b5d7-aa31a62798d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1e4079-58c2-4544-a766-776eded98843",
        "cursor": {
          "ref": "3d71298d-8065-41f4-afa4-0fea7cb5350c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "aab07cd1-72be-4125-8a7e-58b6d2a3b574"
        },
        "item": {
          "id": "2b1e4079-58c2-4544-a766-776eded98843",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1ebff95b-0893-45b2-aa35-5aa918f10c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f44eba-4cde-4052-87fc-652efa5cf5a1",
        "cursor": {
          "ref": "cac1b622-91ab-48d0-8566-9badc5a00b0d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "09eaaec0-dbeb-471a-b0bc-f9d8243efa6a"
        },
        "item": {
          "id": "a0f44eba-4cde-4052-87fc-652efa5cf5a1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "627f084b-ad9e-49e1-8dab-0f65a5d4ff80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bd8cb9-a295-4569-9c4d-220a623e7fd1",
        "cursor": {
          "ref": "97513a2e-9f09-430a-b35b-6c890f580341",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "50dfd414-ddc0-4672-995e-b8eeb89f19ea"
        },
        "item": {
          "id": "e4bd8cb9-a295-4569-9c4d-220a623e7fd1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "196fa411-2d38-495f-b208-015f9e5257ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05657058-943b-4517-bcbb-8ad8c4c8328d",
        "cursor": {
          "ref": "bbdd0977-0834-4567-a3e7-2ca3adc43e93",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e6c82db2-fb55-4d88-b2e2-cc11fd418130"
        },
        "item": {
          "id": "05657058-943b-4517-bcbb-8ad8c4c8328d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "37eb1b47-1952-4fae-a50d-f097474840a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ee2c68-2f50-4f68-8e6f-388fcc2c91f6",
        "cursor": {
          "ref": "03172579-4130-48b7-ac5f-f4ce9f942515",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "34cac6d4-3637-414e-9de2-b058de020a6c"
        },
        "item": {
          "id": "08ee2c68-2f50-4f68-8e6f-388fcc2c91f6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6fa98ec7-f892-4a04-a815-f9530ddaa9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257ef5b1-1252-4806-8ee3-e3544c0e6a43",
        "cursor": {
          "ref": "27bc9929-6afb-41bb-bea4-5d3e31550864",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2694e77b-f6bf-4082-8380-0710210a1086"
        },
        "item": {
          "id": "257ef5b1-1252-4806-8ee3-e3544c0e6a43",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ffb2e929-8bdd-421a-a0ac-89a8280d7c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f115c6b-ecad-48bd-b91c-86ae828a09bc",
        "cursor": {
          "ref": "6fda9b8e-c1b0-4c13-a7ad-411ef06b33eb",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2828a957-7804-4107-aa66-c8351bb6b5f5"
        },
        "item": {
          "id": "8f115c6b-ecad-48bd-b91c-86ae828a09bc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "88aa8177-5fa5-4216-9a85-239b65dd6c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7263c905-1d4a-43ce-b089-c0b763abd1ac",
        "cursor": {
          "ref": "2063f8ad-8ad5-46b7-a516-c90de0ab5835",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b3777eca-0d6b-43dd-b74e-3e74d91ef537"
        },
        "item": {
          "id": "7263c905-1d4a-43ce-b089-c0b763abd1ac",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "038eeddc-41f5-4f8d-888f-7506bbf9e62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062ac24f-c4cc-409f-8ec5-661a63fdbf0f",
        "cursor": {
          "ref": "47ac199d-fa07-48ab-9997-134374a01e1f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c1ee5a16-29f9-4c2b-a1cc-c305f24a9aab"
        },
        "item": {
          "id": "062ac24f-c4cc-409f-8ec5-661a63fdbf0f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0efab3da-7775-4b17-a987-bbc81b650a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfc355b-2ea9-4d86-93ee-1ff8eda3455c",
        "cursor": {
          "ref": "b1b7793c-3569-49e2-8e05-d25ed49d6b1d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8bb8ccac-d7ac-4606-a6a3-9de120518b33"
        },
        "item": {
          "id": "ddfc355b-2ea9-4d86-93ee-1ff8eda3455c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0cf3fff2-11fe-4418-8d4e-01cd93ca7f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa3f1c9-01d7-4301-8fc6-9e52c42c8e1c",
        "cursor": {
          "ref": "1286e601-aeda-4d09-b29d-0641cee30817",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d80d6feb-97a8-4497-89e9-978398c40e6b"
        },
        "item": {
          "id": "faa3f1c9-01d7-4301-8fc6-9e52c42c8e1c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "66ccbc30-538b-49b8-a47d-5bb57b3c0d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcb1117-11de-4ccc-8ef2-0ff1cd7fe3df",
        "cursor": {
          "ref": "78165d6e-30ed-4e37-93cd-99b7ff0e5a4a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "68dffa3f-1824-470d-aec3-a1e9b8376edc"
        },
        "item": {
          "id": "ddcb1117-11de-4ccc-8ef2-0ff1cd7fe3df",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6608cfb1-675b-4a35-a622-fc412d3f8030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a394f70-f989-4ad6-a1c0-6c079c51901f",
        "cursor": {
          "ref": "8503a9d3-f737-4d90-926d-bcee10ae8cbb",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c7a4e534-798f-419d-8577-6dfb0a61e1bf"
        },
        "item": {
          "id": "5a394f70-f989-4ad6-a1c0-6c079c51901f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4c56e55f-4fed-42cf-ac11-4e0bed6e6acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2b8a9e-543a-402e-93c4-b33e241edee5",
        "cursor": {
          "ref": "2b81130a-6703-4617-bd34-ca6d1d98378f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cc5c52f1-06a1-48ad-8083-ff5c8e2938cd"
        },
        "item": {
          "id": "fb2b8a9e-543a-402e-93c4-b33e241edee5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f6442aec-e48c-4756-aae8-b4c343d725b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4377cf90-474a-46e0-9188-08caac3cb975",
        "cursor": {
          "ref": "4153eaee-1459-489c-a73b-859e6ae06d61",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "819e20bd-701d-4a1b-8966-6440fd9d5d0b"
        },
        "item": {
          "id": "4377cf90-474a-46e0-9188-08caac3cb975",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9f9982f6-36ab-46cc-a4d2-f03f80ff1fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4521dc6-41df-42d6-8621-e363faef85a6",
        "cursor": {
          "ref": "0b070d20-a720-4e5b-a2f8-7780dae26624",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e66e4fa1-bc12-4324-833d-2a11eb129d83"
        },
        "item": {
          "id": "b4521dc6-41df-42d6-8621-e363faef85a6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "acbadeef-b900-4722-abcb-6a55a8605faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54963ef6-6c4f-4d05-ac51-c4855aa327f3",
        "cursor": {
          "ref": "7a2067ee-454a-46be-95a0-d7db73e03bb1",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "245294b9-e7cf-44ea-8168-5de6b1a13967"
        },
        "item": {
          "id": "54963ef6-6c4f-4d05-ac51-c4855aa327f3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "568e65fe-24e2-4bde-a5de-60d21a3553fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce1af1d-aeac-4385-ac48-8f96df9089e8",
        "cursor": {
          "ref": "9777f62f-b007-4931-8ce1-7f75e7b87156",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "361f07fd-e1a6-42ed-94b7-b2c6314b9388"
        },
        "item": {
          "id": "8ce1af1d-aeac-4385-ac48-8f96df9089e8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9e1aef00-b7b7-49d0-932f-14331b190fa8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b84614-ade9-46ae-b9d0-a4dc463d6348",
        "cursor": {
          "ref": "9556f338-b2ca-423d-8548-474698a6ff01",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "395f8cae-6c7f-4b80-ae62-fc07a1fddf7c"
        },
        "item": {
          "id": "08b84614-ade9-46ae-b9d0-a4dc463d6348",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8eba1a7e-8af6-474b-bac3-d4650934d0ad",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336bb176-a7c5-4a6c-9e42-e8c02859b146",
        "cursor": {
          "ref": "866f1463-3e98-4bcd-a01b-96ef0d9ce31e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b6f5c74f-ae9d-464a-a7cd-cdf1d9c79aa7"
        },
        "item": {
          "id": "336bb176-a7c5-4a6c-9e42-e8c02859b146",
          "name": "credentials_issue"
        },
        "response": {
          "id": "27ad23e0-1241-4dfe-a5bb-a8cf839944a7",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d824fb9a-8ab3-4b8c-a7d2-70e7f50480d2",
        "cursor": {
          "ref": "04299aa4-76f9-403a-94d6-be412fcb4117",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d4508ac8-fa35-45ce-85a2-2c718636186b"
        },
        "item": {
          "id": "d824fb9a-8ab3-4b8c-a7d2-70e7f50480d2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "68e2f199-c275-414a-b1bc-8a9a23105254",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a039378-a180-4eff-aa86-b5cb8e7f7a41",
        "cursor": {
          "ref": "ba0e420f-168a-44a1-aa61-466b438e5e89",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "43272139-2d2b-42c5-9afa-272a1d61ef10"
        },
        "item": {
          "id": "7a039378-a180-4eff-aa86-b5cb8e7f7a41",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d40eb1bd-8ff9-4f81-b18d-49f025324389",
          "status": "Created",
          "code": 201,
          "responseTime": 46,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e227fed-f717-432c-8687-c522090015b9",
        "cursor": {
          "ref": "79b64431-6a5b-4d9b-a8ff-03ab230ece39",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "523f741e-caf9-40b7-a4ab-36951301036b"
        },
        "item": {
          "id": "2e227fed-f717-432c-8687-c522090015b9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1a3e65b7-b253-4190-a904-28c1133a43cf",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4358ed-c8be-4b47-bc4b-854bb2f2a0f2",
        "cursor": {
          "ref": "12f8f354-d224-49a4-a7c1-479a6ac7552d",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bdfef4de-d8f2-4834-8eb3-b606f406bada"
        },
        "item": {
          "id": "7d4358ed-c8be-4b47-bc4b-854bb2f2a0f2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d7315982-075b-4906-b202-c85ffe62da06",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba0a7a1-e63c-46c2-b2d8-7d4d8a9512e8",
        "cursor": {
          "ref": "27c2880e-1252-4d53-b4cf-4221a7dd0e70",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "44e46b1b-9fb9-4e7a-9d65-ba87abfb46cd"
        },
        "item": {
          "id": "fba0a7a1-e63c-46c2-b2d8-7d4d8a9512e8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e2b7f47c-aef9-4919-83fb-6c09a438e785",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d27cc4-34f9-4ecf-80c3-cc6faece639d",
        "cursor": {
          "ref": "d903d0ab-cf4f-43dd-af5c-ffe4990dcee6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "be5d4948-cae4-40d3-86ec-fedf163a5062"
        },
        "item": {
          "id": "b1d27cc4-34f9-4ecf-80c3-cc6faece639d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5838c481-b1a5-4c85-b873-b0e577a4df6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c314a5-d9a7-4954-a83b-4577fd0f6132",
        "cursor": {
          "ref": "14cfc651-ed45-4299-927b-b6ff15e13145",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4c1ab3c8-dcd9-471a-9683-cf9ba181d65e"
        },
        "item": {
          "id": "e2c314a5-d9a7-4954-a83b-4577fd0f6132",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c7b1d356-f1de-453f-84b6-bbd9b03e380e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d698fd28-9960-4fd3-bf47-1c711d8a4aa1",
        "cursor": {
          "ref": "635348a7-0cb6-4fc3-b992-65690c1c8192",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4840c100-1434-44e5-9e66-41c81a153d4b"
        },
        "item": {
          "id": "d698fd28-9960-4fd3-bf47-1c711d8a4aa1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7a8b8bf2-bf84-4239-99e5-308470954c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296cfa6c-e3ca-4846-8dc3-7e0cc5f677f3",
        "cursor": {
          "ref": "d9742d52-936d-4804-a98c-de1cfd165d63",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7ded397e-ffa4-40dc-b461-d86e5a99fe9e"
        },
        "item": {
          "id": "296cfa6c-e3ca-4846-8dc3-7e0cc5f677f3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a76e9993-eb51-47c9-8b0c-d4b45da52f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8638879-9462-4a8f-84e4-c12350aabcbe",
        "cursor": {
          "ref": "1855b597-1164-4425-87a3-757131f63b0b",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ead338d9-ba3a-4936-9eef-bc3da38e3a68"
        },
        "item": {
          "id": "c8638879-9462-4a8f-84e4-c12350aabcbe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5262bed2-719b-4c36-8999-fd060640ffae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e107f14-abb7-4628-a1df-1c644d7368b2",
        "cursor": {
          "ref": "e31a60aa-cbb7-49b4-b278-5d276efd14d1",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7e161f16-3d0d-4102-8c0a-748a32058946"
        },
        "item": {
          "id": "7e107f14-abb7-4628-a1df-1c644d7368b2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b51aa3f7-9807-47f0-aada-ef0a470bb8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432f0e93-38f2-400b-9c34-32db4e1e5a53",
        "cursor": {
          "ref": "f4579520-a8ce-4e24-b987-eedc12874b5c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fb038c83-cb31-44a2-ac06-20894bd7e09a"
        },
        "item": {
          "id": "432f0e93-38f2-400b-9c34-32db4e1e5a53",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c595200e-3a24-45c6-a922-fb905bd9fe10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941d73e4-185a-499e-9854-fe56e4aa98a1",
        "cursor": {
          "ref": "b390be0c-2e9c-4b96-a598-5ec4d1c592ce",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1a74e5ff-a18a-4145-a157-6cd67bb0a5d9"
        },
        "item": {
          "id": "941d73e4-185a-499e-9854-fe56e4aa98a1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bb013976-df92-4343-9ec7-2cb89ab31b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04b4891-104c-4b09-8598-2e8a51bea749",
        "cursor": {
          "ref": "81145f06-a418-4907-9778-1db9ef009fba",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1cf36dc8-bba0-46fa-a937-6e439db8c731"
        },
        "item": {
          "id": "c04b4891-104c-4b09-8598-2e8a51bea749",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ec95d133-6d32-4d2d-bee6-57cb0a9a5375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76efd075-8e04-420d-a1b8-4ba490562353",
        "cursor": {
          "ref": "b20f7455-2be5-4322-80fe-d89e87a40741",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "08068e35-6193-4cd1-b91a-1698fc5367eb"
        },
        "item": {
          "id": "76efd075-8e04-420d-a1b8-4ba490562353",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d47bba55-02aa-47f1-b301-0bf19c04198a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afef421-3147-4f66-afdb-9c7c738074d0",
        "cursor": {
          "ref": "7ad04d6c-9b33-4a1d-9287-708235a8d64a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dd65a852-0573-43af-b337-1a810c544a63"
        },
        "item": {
          "id": "4afef421-3147-4f66-afdb-9c7c738074d0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "72cd8c0e-4fc3-4586-b5bf-a1c25c934630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd3dc45-f936-419a-970f-01b0af82698d",
        "cursor": {
          "ref": "cca5f51b-617b-4c5b-a7af-1f4cac954ee8",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "59deb175-4502-4684-91c3-fc833b8d23ba"
        },
        "item": {
          "id": "7cd3dc45-f936-419a-970f-01b0af82698d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3713dae9-956b-45aa-b48b-47c7404de099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136c2fd7-6c58-4267-979e-e7cf84511223",
        "cursor": {
          "ref": "8834eced-24a2-42c9-ab4b-6cb70a1dced2",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a8d919b7-e95b-4bdb-b637-828d57fa36f4"
        },
        "item": {
          "id": "136c2fd7-6c58-4267-979e-e7cf84511223",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "caf4a7d5-fa13-459f-87fa-c8d68fbdee9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62603cfb-1c73-41d6-ae52-22c84056b670",
        "cursor": {
          "ref": "fd274f06-818c-4deb-9050-aa7fe84e018d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8f031e19-ec0e-450a-b5ed-c02a24df8c19"
        },
        "item": {
          "id": "62603cfb-1c73-41d6-ae52-22c84056b670",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "167c8046-f3d5-40d8-96a8-dd9e9bef1e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da01ce7-15e5-4f3b-9b51-16c409c3df6e",
        "cursor": {
          "ref": "1932a2c5-1167-486b-a765-e572417c89bb",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f6f2ef72-d730-41cc-9597-0dadc58c7092"
        },
        "item": {
          "id": "3da01ce7-15e5-4f3b-9b51-16c409c3df6e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "eda13034-9f0e-4167-956a-7c1d5f30a852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d84b416-fe32-42eb-ba8a-94c079bd2a74",
        "cursor": {
          "ref": "2b798f15-a610-415b-b8f3-c548454a8fc5",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "47177e6e-615c-408d-a4bf-3b06d0c50a0b"
        },
        "item": {
          "id": "2d84b416-fe32-42eb-ba8a-94c079bd2a74",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ba5ab200-3bac-46d8-9149-a7c468246969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cd6d52-6cce-42cd-8f14-ac092d62caec",
        "cursor": {
          "ref": "e807324f-29a6-4b55-982d-ce95796cfbdb",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "10caa2d6-d47f-49c2-9fc4-36ed4fa18970"
        },
        "item": {
          "id": "40cd6d52-6cce-42cd-8f14-ac092d62caec",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "03d66e64-9c98-4ee4-97ac-409d39a2c542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa4a826-0621-424a-afae-95489e5ab777",
        "cursor": {
          "ref": "4aba60bb-0018-422e-b119-67e3ee9c63d8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "739d0840-d8c0-46a1-9f43-cbc547af7845"
        },
        "item": {
          "id": "efa4a826-0621-424a-afae-95489e5ab777",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ad49e00f-3ac0-476c-b548-5c53c7c8fa15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c3a6d1-5060-4e7e-b7ea-2191e12e4b1c",
        "cursor": {
          "ref": "e7554b57-ff4f-432c-bd28-57b6a36e1609",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e14b4b54-dbf5-415c-aec3-9a2b9bce6f9d"
        },
        "item": {
          "id": "24c3a6d1-5060-4e7e-b7ea-2191e12e4b1c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0c01275d-29e4-4f59-9df1-b5817fb6e253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2faf5e0-4077-461f-b090-511ae1f1ceb7",
        "cursor": {
          "ref": "07f92f20-614a-4c80-bbf0-8cd415a9166b",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "222d90ac-0263-494b-8421-f7caff9529a1"
        },
        "item": {
          "id": "a2faf5e0-4077-461f-b090-511ae1f1ceb7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6e938282-132c-4cfa-bc6f-bfc9ec24f28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1044cf9-9707-42f2-8b88-23b1b0b088b2",
        "cursor": {
          "ref": "ec3cb0bf-a1ff-46cf-a99a-8d9bb82e8441",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "69387f08-b82d-459f-b7e4-9b61e1fe4122"
        },
        "item": {
          "id": "a1044cf9-9707-42f2-8b88-23b1b0b088b2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "917bbc4a-42cb-4f33-9b6f-0e26af77e5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c73e146-f64b-4c5a-9f02-e0c414535ee7",
        "cursor": {
          "ref": "218a474d-6c36-43f6-8be7-7e0bfa44465c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9069b789-c1eb-4881-a792-d92679e0cf7e"
        },
        "item": {
          "id": "2c73e146-f64b-4c5a-9f02-e0c414535ee7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3c8c9bac-05b3-4401-831c-7c0e58e40fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc38758e-0283-41b5-876e-b606a185012a",
        "cursor": {
          "ref": "b5020220-8e92-4703-9dbb-d53967bc34c1",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "928a76a8-20ac-409f-bcf7-36dd0b32da81"
        },
        "item": {
          "id": "dc38758e-0283-41b5-876e-b606a185012a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4b2a086b-1907-40bb-b657-cf3003f7440f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aadc05a-943d-48a2-8b34-7a45f7513336",
        "cursor": {
          "ref": "44392b3a-ca5d-436a-8fe8-40d7cb12f2d9",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e9e5ddd3-6e20-40f2-a8c2-0995ef0ed1e7"
        },
        "item": {
          "id": "5aadc05a-943d-48a2-8b34-7a45f7513336",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5735790d-fa86-4272-947e-a9cfe5f7c22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d9b331-e3ec-401f-8bba-d02ea4a7f455",
        "cursor": {
          "ref": "baa8c251-c8e3-4d33-8e9d-e39e2333a780",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "16b347c5-a8f0-4372-85d9-40be7ed4ebaf"
        },
        "item": {
          "id": "a5d9b331-e3ec-401f-8bba-d02ea4a7f455",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4c9ce923-07c6-4600-a74d-2ca70917f6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80a4a1d-412f-4b9f-a9d0-d6e77a4d36c5",
        "cursor": {
          "ref": "ca136316-1655-49ea-83ab-9b831f156c00",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fb0ac5ff-67a4-4d88-b9fc-27b41614c721"
        },
        "item": {
          "id": "f80a4a1d-412f-4b9f-a9d0-d6e77a4d36c5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "83d6f21c-4e47-4f9a-9b5c-51f49d140861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ab921a-3137-4ff7-9c9b-78a18e0f115a",
        "cursor": {
          "ref": "0766df15-4194-45c4-8630-f65a46c76041",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8bfc67d4-636d-4d1b-a756-9323e731021f"
        },
        "item": {
          "id": "d3ab921a-3137-4ff7-9c9b-78a18e0f115a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1b8147bd-5bdb-4010-9686-13eb262bac1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca34d5d-41dd-411c-9a73-8d79d4f53419",
        "cursor": {
          "ref": "fb77dda2-e246-427d-9194-5f85c79720be",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b6083da6-eece-4d21-9267-1c108b3a9972"
        },
        "item": {
          "id": "aca34d5d-41dd-411c-9a73-8d79d4f53419",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8401a7e8-c7b3-4a3e-a873-729a56260b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41b306f-1bbd-4a2e-bf6f-e06d5402c82e",
        "cursor": {
          "ref": "d2994259-595e-4ce4-b718-efc5e4e6ca91",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "989eb55d-45eb-476f-a8ff-1616d02ef903"
        },
        "item": {
          "id": "b41b306f-1bbd-4a2e-bf6f-e06d5402c82e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "06b2f3a4-449c-405f-8ac6-543cd9a8212e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf51acfe-8f10-44e9-a51e-d25609303395",
        "cursor": {
          "ref": "9ed00a1b-269e-48b4-9891-810fcb18d6bb",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b8d8f7c3-3260-4fec-9455-31a1f7f6549d"
        },
        "item": {
          "id": "cf51acfe-8f10-44e9-a51e-d25609303395",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c88b927f-e102-4b55-ada6-a74ffa30c53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff08c97-d9aa-423b-a5e0-6d3637d3b685",
        "cursor": {
          "ref": "e0797475-eb6e-4d16-be98-a1d0e569bf3b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cbb9324f-2f49-44db-b3a1-0c25e864f3a7"
        },
        "item": {
          "id": "8ff08c97-d9aa-423b-a5e0-6d3637d3b685",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d041bce2-7939-4fff-8242-fca3d2a82b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4aad9c-ec9e-45ef-ac5a-549155d8e781",
        "cursor": {
          "ref": "2b33f9b7-4f73-4274-b086-6f76b9b3c2f4",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "94312d66-b48f-467e-a582-501c270b7928"
        },
        "item": {
          "id": "1c4aad9c-ec9e-45ef-ac5a-549155d8e781",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0513548d-d13c-4131-a081-206a6bb4850a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991fbbb8-f83c-4639-ae40-0a77ec02c3c7",
        "cursor": {
          "ref": "1013499e-2c93-488a-873d-d0de5dfb3fd3",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ffb9021d-b694-4877-a697-33e25aaaaf42"
        },
        "item": {
          "id": "991fbbb8-f83c-4639-ae40-0a77ec02c3c7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "86de9324-8868-4bfb-807e-717633d51416",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68e69ab-0b57-4268-b1ad-2ce9d12aa8b0",
        "cursor": {
          "ref": "1b9ccc95-b70d-45c1-9f05-27130e45b1b3",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0f581df7-62f5-466e-b49e-a4100d10e4cb"
        },
        "item": {
          "id": "b68e69ab-0b57-4268-b1ad-2ce9d12aa8b0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0ad7cdfd-79ef-438a-95b6-e374c8c4b7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a11c737-2737-43f9-a595-66cdee3e9656",
        "cursor": {
          "ref": "c4dec6fe-68a4-44c6-af21-5cc917e7af42",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b3f0f2e4-6ed2-4e58-a64f-c0bc69ee3555"
        },
        "item": {
          "id": "9a11c737-2737-43f9-a595-66cdee3e9656",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4d495fce-bf93-482b-9b53-06b961c2fb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb38b83e-671b-4e25-8403-6d750474bb4d",
        "cursor": {
          "ref": "dd7f4134-e06a-4095-9df4-6d3756dd8858",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a0688834-d1e6-4b36-87d7-8e452021399e"
        },
        "item": {
          "id": "eb38b83e-671b-4e25-8403-6d750474bb4d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "73312203-d334-4dea-8235-9137892db3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a48c9f-9553-4419-a4b7-bbe0fced0912",
        "cursor": {
          "ref": "0e5d6a56-0caf-4f21-abac-cad85d4bb287",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2c147c50-8bee-4f90-994e-d1aa537cf27f"
        },
        "item": {
          "id": "03a48c9f-9553-4419-a4b7-bbe0fced0912",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bb2a0899-726d-4635-aa0e-bc5bf2285537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7c643f-69e7-405e-8715-2d1331c911cb",
        "cursor": {
          "ref": "e64edc8d-0ecd-41ca-aebf-5e93ce293f27",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a8e4ee17-09c6-4fe0-9414-a75e1fe74931"
        },
        "item": {
          "id": "6d7c643f-69e7-405e-8715-2d1331c911cb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dabd19ba-e098-4c5f-be97-4ab808ad502f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ad9e7a-df98-43a4-b607-997b73cb32b0",
        "cursor": {
          "ref": "b2bb2d6d-5954-46ee-b1c8-b885f968e050",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "afe8da95-05db-4cfc-a84f-fa964e4b7678"
        },
        "item": {
          "id": "73ad9e7a-df98-43a4-b607-997b73cb32b0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f427d6eb-63f7-44d2-9ac3-8dbd814857cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95be3875-0a7f-454f-911a-7c87530c6fe4",
        "cursor": {
          "ref": "d5e7dad9-19d3-49de-b59e-d6f2be65c531",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8f6e1ff6-1264-4f83-aa6b-358d29bd4018"
        },
        "item": {
          "id": "95be3875-0a7f-454f-911a-7c87530c6fe4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "31e113c5-eedf-441d-bb15-3dde34f1e4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471ecde1-01fc-4c1f-9b7a-75c738083b05",
        "cursor": {
          "ref": "b80f6c90-357b-4453-99d1-96056293c59e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "888099d3-793b-4ea6-a61e-40985ab592ea"
        },
        "item": {
          "id": "471ecde1-01fc-4c1f-9b7a-75c738083b05",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "82846faa-e07c-4ad7-a9df-21e665dbcbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8e3d0b-3f58-42da-a8c3-e3d4563b712d",
        "cursor": {
          "ref": "3bab0521-0554-4d43-9ee0-79a6be5181a0",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a48aab83-c134-4957-b9fe-e38f135810aa"
        },
        "item": {
          "id": "bb8e3d0b-3f58-42da-a8c3-e3d4563b712d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a5dc6da2-61f4-4140-a81c-3629a6ab1bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d968df36-ec82-425a-8b40-7ffc1e96fb4b",
        "cursor": {
          "ref": "7e1259c5-a93f-4632-84f9-6f916dc12aae",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "78613564-16ed-4f27-94d7-1f007ec22b9b"
        },
        "item": {
          "id": "d968df36-ec82-425a-8b40-7ffc1e96fb4b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7680528e-2cfe-460f-a58a-4eb78bbe8b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a031dbf6-eeca-429c-ba0f-9cce25a2ca35",
        "cursor": {
          "ref": "e5dd1cf6-e0ac-45ec-9c16-8d89f22faa71",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5a990fb8-3813-40ff-9674-8ec1e9136a90"
        },
        "item": {
          "id": "a031dbf6-eeca-429c-ba0f-9cce25a2ca35",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a0703e69-9f41-46b1-9dfd-c52022bc26e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f40de41-5c4a-4c1a-a792-b868f5b200a5",
        "cursor": {
          "ref": "b698e001-d860-47d3-b00b-735a1e8bfbeb",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7335c72b-1ac8-41d3-900b-c49f3a9d3130"
        },
        "item": {
          "id": "3f40de41-5c4a-4c1a-a792-b868f5b200a5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "233b474f-91af-4e30-98c9-70d2631122d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bd7180-a2b5-4f5b-97d8-20818f934723",
        "cursor": {
          "ref": "838caaca-d231-4652-ad75-ec088d97a30a",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "56e9502c-f4ae-4c29-9986-a171f86ec39e"
        },
        "item": {
          "id": "f1bd7180-a2b5-4f5b-97d8-20818f934723",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2f1d6d97-0b67-4495-a2a1-aafbdc42efb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb59df60-2f0f-4680-82d8-623f76a31df8",
        "cursor": {
          "ref": "ce9751ab-4021-4b23-9f50-43e4350e0239",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1559822a-2d39-4c3b-9ee8-4a4da54604e1"
        },
        "item": {
          "id": "bb59df60-2f0f-4680-82d8-623f76a31df8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a72169c4-3e1b-4366-a53a-feceb95a23a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4550799-4d46-4826-9788-b367c8229fcd",
        "cursor": {
          "ref": "f2ceae1c-7075-4d74-8e79-249a71a9230d",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b9cb9daf-c031-47e7-8429-ba7cda7de3dc"
        },
        "item": {
          "id": "e4550799-4d46-4826-9788-b367c8229fcd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7f8ef1e9-a8c4-4dad-bb01-34f340a062c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6f1a4c-de5f-47d8-9489-5628f7cafbc3",
        "cursor": {
          "ref": "de20837f-5c64-4754-b08d-3863ca881ee5",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6c74db9a-311c-4c7a-aec7-344e7d61c366"
        },
        "item": {
          "id": "5d6f1a4c-de5f-47d8-9489-5628f7cafbc3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "28bb6938-974f-4b95-8ae4-e8a6a2f05650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c0d486-75f4-4521-995d-42835438651a",
        "cursor": {
          "ref": "95ac5799-062c-402b-8f1a-0da5135ab978",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "98f7d0a8-4aad-4dc1-a071-be7efb4f26de"
        },
        "item": {
          "id": "f3c0d486-75f4-4521-995d-42835438651a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d9065e0b-2187-4223-829a-438b8f08bd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4921b2de-ed13-407e-8853-30a00fd7d58c",
        "cursor": {
          "ref": "dc4b4e4b-3bbb-49ad-aebf-1dfffcd4627d",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cfcbe21e-943e-4f4d-9394-1653c833ffc3"
        },
        "item": {
          "id": "4921b2de-ed13-407e-8853-30a00fd7d58c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c74271dc-5511-4ca6-b08d-57d6cbffe787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e62fef-1be5-48a8-933d-00faa38f1a64",
        "cursor": {
          "ref": "61586f1d-f336-4cac-8956-009ac37e0ace",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "310828ab-65f4-4180-9d7c-84bb89ad41b5"
        },
        "item": {
          "id": "e7e62fef-1be5-48a8-933d-00faa38f1a64",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9b8dd397-4212-415e-98a9-3bd22d9d2435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae59f75-a090-46fb-b387-5b4544cf80b7",
        "cursor": {
          "ref": "abb013ff-6c5a-4b05-8cbc-370eab08e768",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "aacef4da-210f-4c2f-8b62-6b2e6cd75fab"
        },
        "item": {
          "id": "6ae59f75-a090-46fb-b387-5b4544cf80b7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "871cc717-cf3d-4b69-ab91-c0eb7255fe86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53373c6-8f52-495d-9960-c9ca0ec05d18",
        "cursor": {
          "ref": "ec244f78-0934-4786-8fd9-6515be424f29",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d17f87eb-fe95-400d-8c70-5bdb8cb0caa1"
        },
        "item": {
          "id": "a53373c6-8f52-495d-9960-c9ca0ec05d18",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6efee23e-0f5d-4d5a-a6eb-8377fc1c99b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ca0723-8147-4873-b0ef-999e16037510",
        "cursor": {
          "ref": "c762a088-74fd-449f-a29a-1e9b37bddac9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "31877d1b-b1c4-4f87-8fb9-9e700ee121e3"
        },
        "item": {
          "id": "d8ca0723-8147-4873-b0ef-999e16037510",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "72462f31-4113-4d95-9f04-5047c7919c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daef2f40-7727-48ce-8e22-02137dd30c0f",
        "cursor": {
          "ref": "af6f1476-9b58-44be-aaf5-1ba152b82de5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f4210f38-e21d-474a-8251-ff0477439f28"
        },
        "item": {
          "id": "daef2f40-7727-48ce-8e22-02137dd30c0f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1e012f49-255c-42b9-bef8-edf72bf8af8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6578830-9111-4831-a03b-d4217571ce3f",
        "cursor": {
          "ref": "a88f5265-535d-4ea9-a14e-f8a5a4f5c430",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f5ba7d0e-6db6-4ac1-a6c6-812ab5647939"
        },
        "item": {
          "id": "f6578830-9111-4831-a03b-d4217571ce3f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6ee54e00-3d4e-4020-86e0-bef4faaca9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3198550-4db9-43bd-8ed7-a43896cd1b57",
        "cursor": {
          "ref": "97d30dce-9a62-4c5b-8fa3-48e5550b8bd0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0530ce23-7d2c-4fa9-a6c8-6d5321dfca6b"
        },
        "item": {
          "id": "d3198550-4db9-43bd-8ed7-a43896cd1b57",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "224d898e-b2de-4b29-ba4b-67aecb4f964f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12068bb6-b8a0-4a59-8619-7270df4dbc37",
        "cursor": {
          "ref": "ec83af3b-2514-4e64-93f7-6052c71c7ca2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9542c98b-e770-4ac0-ab20-a7984e965bb4"
        },
        "item": {
          "id": "12068bb6-b8a0-4a59-8619-7270df4dbc37",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "41fcb461-b3d8-4182-825a-0fd60b4a9936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567f3cac-cc61-462b-8823-fb106dd07ac2",
        "cursor": {
          "ref": "19e66e98-5d13-4a3f-9cfa-96700d795bfd",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9f70b0c6-886d-49ee-8428-74b045e9e3c0"
        },
        "item": {
          "id": "567f3cac-cc61-462b-8823-fb106dd07ac2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3baa33b8-c6c7-4d9f-a2d1-aa935c466f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f70b2bc-9276-4cb5-9969-9eee3f353731",
        "cursor": {
          "ref": "edf40c16-46b8-4ef6-84bd-6a653a89c4dd",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "02166eb5-c51f-4132-a5b5-a47e6f6e2d80"
        },
        "item": {
          "id": "6f70b2bc-9276-4cb5-9969-9eee3f353731",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0473b585-53d6-4690-a092-4401a678552e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5463a9-6ee1-4474-a0f3-2c8a52cb6654",
        "cursor": {
          "ref": "270e5614-5f21-4b78-893d-6975c0bf34e2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fb501d8b-1c19-4150-8937-9cf64254ad5c"
        },
        "item": {
          "id": "bd5463a9-6ee1-4474-a0f3-2c8a52cb6654",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "92b2a5c2-85a7-4856-ac06-7910247d8605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6d067f-5ebb-4a02-9f17-1b654e0241e8",
        "cursor": {
          "ref": "081fa888-5910-4868-96ba-e77575f2a6a3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0d063c80-c7ab-412a-ba03-3b9b03fc7569"
        },
        "item": {
          "id": "2e6d067f-5ebb-4a02-9f17-1b654e0241e8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0cb55241-bfe4-4eae-a5f9-8ad257a4424a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af57371c-0237-4e12-bcfd-d415895d892f",
        "cursor": {
          "ref": "80e27927-74ce-47fa-bcef-eca09bd0dbc5",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7218f056-bb87-4991-91d2-b40b0126d41b"
        },
        "item": {
          "id": "af57371c-0237-4e12-bcfd-d415895d892f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0040f338-6243-4b77-8c4e-002ea477a60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c193adf8-28e1-487b-8ea5-046271e31581",
        "cursor": {
          "ref": "ed9c9913-bf96-422e-a9cd-add665eecc23",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a75d609b-2d7c-4ed2-a798-e25fcf09f8e7"
        },
        "item": {
          "id": "c193adf8-28e1-487b-8ea5-046271e31581",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "93ffe01e-7940-4d2f-917d-c778514133b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0643def-d391-4ae0-bf47-c5d2312958d4",
        "cursor": {
          "ref": "8c73cdd7-ff45-497a-a680-32f03b6ddcec",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e9cadee5-78df-42e5-9609-5966798f8f99"
        },
        "item": {
          "id": "d0643def-d391-4ae0-bf47-c5d2312958d4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9eb80215-ba8a-404a-a0a9-b64d17e8e85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150bfa28-26e9-474c-9a9b-43e812943d05",
        "cursor": {
          "ref": "df730415-b458-49e8-af62-5eb0c1e0839a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "770810e9-b45b-4c27-a612-22d46c014ccc"
        },
        "item": {
          "id": "150bfa28-26e9-474c-9a9b-43e812943d05",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "eb5ea239-a8a5-4f41-8bc5-3c0194079d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e14fbbe-eed4-4804-8bff-e68850790fb0",
        "cursor": {
          "ref": "0bf30680-671b-4d25-b1e4-a66704693067",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fc5e6571-be83-460a-8b49-4f8330ab2a90"
        },
        "item": {
          "id": "7e14fbbe-eed4-4804-8bff-e68850790fb0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "babd9209-4f8d-4a1d-ac80-f2a972296844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e66a433-0ac4-4805-a805-b1fe3251f393",
        "cursor": {
          "ref": "29e025b6-15cd-408a-b222-5a4983e70af7",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "996e00c9-e86b-41c1-a399-207860dbcf6f"
        },
        "item": {
          "id": "5e66a433-0ac4-4805-a805-b1fe3251f393",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "03d069ac-a363-4f63-b7b6-f4828507a23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce649d1-f6c9-4680-9aef-a3251818b2b7",
        "cursor": {
          "ref": "323804bc-72f5-4a87-8ac7-341612f22666",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5609648e-f440-4251-9298-a4bb8d0ddaa6"
        },
        "item": {
          "id": "cce649d1-f6c9-4680-9aef-a3251818b2b7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e360f88b-2d0e-48c9-ab7e-f799d2ed1e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84980f7-ef42-42c1-9a45-018caac57912",
        "cursor": {
          "ref": "4534f1a6-25a1-4756-9dc5-55acd7633d24",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ad08f5d8-dc50-408f-bb27-44f50d71b453"
        },
        "item": {
          "id": "a84980f7-ef42-42c1-9a45-018caac57912",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "85b9ffa0-78ef-4323-be3e-e6afc3d96526",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c6f0d7-aad4-4189-97d8-7295e3be8bc1",
        "cursor": {
          "ref": "aa5f0389-cf53-4015-97eb-2ab80191a92e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fa19ebbe-b518-48c6-88dd-ac31118eb8f9"
        },
        "item": {
          "id": "f2c6f0d7-aad4-4189-97d8-7295e3be8bc1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4baccf0f-7b0b-4dcb-a1ce-b24461152f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f54b38f-64f7-4663-b4b3-8c5c1bd37e59",
        "cursor": {
          "ref": "9c013189-0b7c-4e52-a3d3-980dbeb51e7c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "868bd1ca-c558-411c-aaeb-b578c6c63d37"
        },
        "item": {
          "id": "9f54b38f-64f7-4663-b4b3-8c5c1bd37e59",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9ddfad4b-f11e-4390-a052-3021e80b50a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a05942a-707a-408a-8249-fa567230db4a",
        "cursor": {
          "ref": "fdc03273-43b7-43ee-bd59-d6b061a81128",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9a3af96c-c0cd-429c-9b5e-a26861e25531"
        },
        "item": {
          "id": "2a05942a-707a-408a-8249-fa567230db4a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "41028b1b-97b6-42d5-b406-330cd978c9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd65681-7ffd-4018-97b7-ff7deadb4a42",
        "cursor": {
          "ref": "2212bf33-6dbd-41e2-b7d6-36174a93217f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "388f0f61-4346-469e-99b3-f7ceea5267f9"
        },
        "item": {
          "id": "1dd65681-7ffd-4018-97b7-ff7deadb4a42",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c0cb4c16-a275-4f7b-88e9-514f4e9a9199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42e52bb-335f-44bf-97f0-023a208e72cf",
        "cursor": {
          "ref": "02806d1b-df81-4115-9d98-8808bfca7bf4",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ce0e304e-0100-4527-bb80-aab367eef2e0"
        },
        "item": {
          "id": "c42e52bb-335f-44bf-97f0-023a208e72cf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "629f264d-bf08-4845-8d75-ed58389e2156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8988c1f6-ac89-4481-8a4c-b3968b55555a",
        "cursor": {
          "ref": "35da58ec-247b-47dd-8ada-cfd0d48a893f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9231589b-42af-4cca-9de6-af63dfd8163f"
        },
        "item": {
          "id": "8988c1f6-ac89-4481-8a4c-b3968b55555a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "44d6053e-5dcd-427a-9ca7-9a948e8e46b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae429a97-7e2f-466f-b069-e83d62259ec2",
        "cursor": {
          "ref": "0acb0df3-3b8c-4112-90b5-2bb228528564",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9ccb8d3c-b8cd-4afa-8003-b186961ce3b6"
        },
        "item": {
          "id": "ae429a97-7e2f-466f-b069-e83d62259ec2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f6e23b62-7fb8-4b5a-b934-36d4463d772e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d8ac89-c7b3-4096-a7a2-3aa686d40145",
        "cursor": {
          "ref": "aa57af14-6c00-461d-b8b9-8d95dcc4c907",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8ddfb5b8-d6e2-4099-8780-d4a715c7a287"
        },
        "item": {
          "id": "30d8ac89-c7b3-4096-a7a2-3aa686d40145",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "18ee38c4-11ed-4359-8ef8-b259e4c62f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cdfe64-e166-4454-8373-b2b442a5cad0",
        "cursor": {
          "ref": "b92bf001-5f19-4cb1-9176-89b1dc041cd0",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "540cdedb-ed1b-4840-afe7-d08f0aeac0a1"
        },
        "item": {
          "id": "f2cdfe64-e166-4454-8373-b2b442a5cad0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6b901b90-f98b-4115-9426-66af3a814cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41d6e36-5ff9-4e9a-b09b-d24ea057fff8",
        "cursor": {
          "ref": "72e19ae4-1b80-453d-a6f8-2bd96ba29a3f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f5360266-9c7e-498b-9f96-8d3062ba3420"
        },
        "item": {
          "id": "a41d6e36-5ff9-4e9a-b09b-d24ea057fff8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f6f0cdb4-f634-48cb-946a-5a314d3dcd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2429e9a1-e382-4b00-873c-76f6e095f0d9",
        "cursor": {
          "ref": "d910c6aa-9e4f-4a58-9b89-2c92bf5c760c",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "833fda7d-5029-4506-baa1-964feafe5fce"
        },
        "item": {
          "id": "2429e9a1-e382-4b00-873c-76f6e095f0d9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7ab0623a-4efb-409e-91bc-fa38a23cbaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd4bb66-bae3-4384-b160-797fcaab3dc3",
        "cursor": {
          "ref": "389b879a-fd6f-404e-bb7b-3e577c739d64",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "df84c3a9-b58a-41e5-b9fe-e0f0be659952"
        },
        "item": {
          "id": "7cd4bb66-bae3-4384-b160-797fcaab3dc3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bb47e69f-8721-4605-a321-38cdffdf675d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7af9f9c-d0a6-46d1-a3a0-b32e056f15a3",
        "cursor": {
          "ref": "fdffa17e-9579-49dc-9940-5e484c648bda",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6173eeed-b4bb-4163-926a-9be2a7709869"
        },
        "item": {
          "id": "f7af9f9c-d0a6-46d1-a3a0-b32e056f15a3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e3a44aa5-bda4-4e85-87db-4be2657e8861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c74520d-a341-4ec9-8242-50642a79332a",
        "cursor": {
          "ref": "c8f1d4b9-e1f7-4d19-8d5b-9ed7388e6be1",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "10577ae1-8493-453d-9dc9-9421e4d6b0d9"
        },
        "item": {
          "id": "1c74520d-a341-4ec9-8242-50642a79332a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2e549065-804c-4920-84c5-33fb7c16d15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec0d730-42ad-4066-9526-e78ecc858531",
        "cursor": {
          "ref": "1c7aedac-1554-4a37-87ca-0c1df9a48057",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9d165584-8947-4b76-9ce6-912a70c850d8"
        },
        "item": {
          "id": "1ec0d730-42ad-4066-9526-e78ecc858531",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bfefe94b-c2a8-4f4e-b05e-2c59a771234e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cacf26-a5f5-426e-8a13-0eb6a3a301d9",
        "cursor": {
          "ref": "554eaa27-ee2d-4f89-a5be-a4eb8a71ac64",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9906faba-0c03-4cc2-b480-42adfe317c19"
        },
        "item": {
          "id": "e6cacf26-a5f5-426e-8a13-0eb6a3a301d9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "753a0acb-d749-49f3-aa43-1eda73467214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c124d698-e368-466c-8284-666d4be89e12",
        "cursor": {
          "ref": "6995ead1-3766-45c1-b76a-ea239ac7f4d0",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f06d460f-b6df-4aef-b438-11af9d84e685"
        },
        "item": {
          "id": "c124d698-e368-466c-8284-666d4be89e12",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a2e91a32-e046-4fd8-990e-b379d358a4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f4d5bd-9817-4f57-8b57-b59d10a8e45e",
        "cursor": {
          "ref": "1743cd2e-e4a8-4b1b-bb66-dfb796f05509",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4ff81204-e50f-411c-812d-7e3ae3c40481"
        },
        "item": {
          "id": "64f4d5bd-9817-4f57-8b57-b59d10a8e45e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "96e1c5ad-ee35-49bc-957a-ec970e58651d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4457d264-ec4e-4890-bfa0-ef1922c48f2f",
        "cursor": {
          "ref": "b273c203-f056-458b-8bdb-e44beed540ce",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e2311311-fef4-4c6b-ac8b-49e0f6d8e47d"
        },
        "item": {
          "id": "4457d264-ec4e-4890-bfa0-ef1922c48f2f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fa3b93f7-f32e-4c52-8db5-20487495162f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db8944d-31fb-431b-a885-363405a3d1ab",
        "cursor": {
          "ref": "c1820d19-2742-483d-965d-b7b02344bc3c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "54d7193a-b4d2-4509-b133-398c88ac7a72"
        },
        "item": {
          "id": "4db8944d-31fb-431b-a885-363405a3d1ab",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d09b21a4-3f96-498f-a626-27cb51243509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04fe4ed-5fc2-471e-83fe-2df7aa623d6e",
        "cursor": {
          "ref": "b2d9a58c-d297-45ab-ae5d-8b7c7604848d",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "029d869d-50d3-4b05-b794-7768ff4931ae"
        },
        "item": {
          "id": "e04fe4ed-5fc2-471e-83fe-2df7aa623d6e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d9eb8c1a-ddff-4a95-9647-6a8a915c818e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e338fd23-f91e-4ea1-aab1-78d824f81d05",
        "cursor": {
          "ref": "a210cc8f-4c9b-4cc3-86d4-f7706171ce8d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a94c5d09-0867-40bf-8698-6188ff0a0c2f"
        },
        "item": {
          "id": "e338fd23-f91e-4ea1-aab1-78d824f81d05",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "db26aa5b-6fc1-4a89-bac0-7b32f7f44260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6e7d4d-fcd8-4652-b7d8-5d8bb3ac589d",
        "cursor": {
          "ref": "67c5e559-060b-4157-9f1a-2b805caaeabd",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "65384e26-0a3a-4413-b9ff-d3c6e34455f7"
        },
        "item": {
          "id": "dd6e7d4d-fcd8-4652-b7d8-5d8bb3ac589d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bec8fed4-d150-40b0-9ec7-c008f000a25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d2bd43-9dc4-4534-a4bf-be54ce8acf0c",
        "cursor": {
          "ref": "060dc257-3271-4152-9c56-e73e50a6ae21",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a4d8e51f-1ef2-449d-b39e-401b0136f4e1"
        },
        "item": {
          "id": "33d2bd43-9dc4-4534-a4bf-be54ce8acf0c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7691d737-b43a-4dc0-92b6-cc395a2c26bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0902a6a-c64f-418a-8408-1b94bf8eae2c",
        "cursor": {
          "ref": "54fff71a-ce16-465d-9fc3-ad8e54dee7c2",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6c5759bf-6042-4ecc-aae6-b0dd87741738"
        },
        "item": {
          "id": "b0902a6a-c64f-418a-8408-1b94bf8eae2c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "765f4bd7-7132-4890-a2b7-069b1c6721af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc40a1d-4594-4646-901f-181ccc403c93",
        "cursor": {
          "ref": "eff31ee9-f776-487e-8073-9be11748a017",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "479048cc-f100-4526-938d-0ed61f7de1c6"
        },
        "item": {
          "id": "9bc40a1d-4594-4646-901f-181ccc403c93",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3cfeb440-0a08-4549-92db-89c942426b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e812a15-357e-46f6-a174-a945fc0f598a",
        "cursor": {
          "ref": "eb4ffec5-3bf1-4dcb-91dc-7f8fca3fe1bf",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ad46db64-6f36-4e61-89bb-74dd8a66a4b2"
        },
        "item": {
          "id": "7e812a15-357e-46f6-a174-a945fc0f598a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4f83a56b-14ac-442f-8864-1158b3b38c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f0176e-c839-47bb-bd91-fee9615f6870",
        "cursor": {
          "ref": "bc99c822-e390-453a-8933-5cedb9a73864",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "267e4fc8-a18a-4e2c-a215-121d51174663"
        },
        "item": {
          "id": "b4f0176e-c839-47bb-bd91-fee9615f6870",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f6abe209-753d-43db-907c-b4f571f63ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c96630f-c48d-48d6-85e4-e4176265e038",
        "cursor": {
          "ref": "330cb6b7-4da8-4ee4-ae49-1a071d4c5631",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "82d24c78-4303-45cf-a6f0-34c6b7de2ef6"
        },
        "item": {
          "id": "6c96630f-c48d-48d6-85e4-e4176265e038",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cde71983-f343-4d1a-81db-07c553dc396b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee208dd9-eb69-4e13-ab6a-2f76eac13570",
        "cursor": {
          "ref": "31b58ea8-0ca7-428c-9bd2-19fd6e4dad0d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "37bf9f59-f242-4863-89ab-5103bbbe9dd8"
        },
        "item": {
          "id": "ee208dd9-eb69-4e13-ab6a-2f76eac13570",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5a9f692f-6d33-449f-bca0-16f97e6ffc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58738e4-721f-4c46-9127-627292a37b02",
        "cursor": {
          "ref": "9072e461-c9af-4552-834e-6280c91feff7",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "14e1e910-53f2-46cb-8558-95c8bec31b4f"
        },
        "item": {
          "id": "c58738e4-721f-4c46-9127-627292a37b02",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6b63db59-b224-4cc4-bc87-9a7da75a1f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a747544-4461-44e2-a1a4-8e32602b01e5",
        "cursor": {
          "ref": "1b17044f-0cc9-40c9-8ae2-216eaa3de524",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a5576825-31c5-43f7-a6d5-62ff9a1404ea"
        },
        "item": {
          "id": "2a747544-4461-44e2-a1a4-8e32602b01e5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6f29aefe-40b5-46c5-8ae6-27b6948e5e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fb0adb-e159-432e-b24b-8a404f624ad3",
        "cursor": {
          "ref": "66d0017e-e461-432c-86a9-dc9d26816c6a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3b94b232-05a5-43b0-b5a3-8ef7fb7d5d47"
        },
        "item": {
          "id": "17fb0adb-e159-432e-b24b-8a404f624ad3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8f1a0597-6c6e-455c-ae3b-e241b861d1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c5a434-11fc-4a03-b3c5-133b0da21321",
        "cursor": {
          "ref": "ea0d936e-35d8-472c-9685-3198e30bc5d5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e6ef5531-9c28-47ac-9308-ef405b358fbe"
        },
        "item": {
          "id": "10c5a434-11fc-4a03-b3c5-133b0da21321",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b1635af8-98d5-4fc3-bffe-7c7e6671598c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d9120f-80ed-4d37-a4ec-25523d2d9f52",
        "cursor": {
          "ref": "ec68935c-c21f-4cca-bf3a-7383b6a9c9c0",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8570ec48-ad38-4a36-94de-b5479332f035"
        },
        "item": {
          "id": "39d9120f-80ed-4d37-a4ec-25523d2d9f52",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5b197881-60a6-4438-96f6-51186d8bdc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e438780-4717-47ee-a408-b7fd273c607b",
        "cursor": {
          "ref": "ed597fe3-cc90-4d28-8a41-ccf32ce2bf28",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5fcf684d-6a25-4168-a33c-50e56d7029d3"
        },
        "item": {
          "id": "5e438780-4717-47ee-a408-b7fd273c607b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d9c9638c-dd81-44b8-b818-e2cfcf0db40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebfaa44-d154-4a84-a4b0-55735cfa8122",
        "cursor": {
          "ref": "619f887b-c852-491e-8abb-d0de6f94ad83",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6f1e4c86-80b6-464d-a411-6a1d9bdb86b2"
        },
        "item": {
          "id": "bebfaa44-d154-4a84-a4b0-55735cfa8122",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "248b22d5-0463-42fd-9c1f-23b931229552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efb542f-c704-4371-a308-9e7b0c0c5422",
        "cursor": {
          "ref": "5d531b93-b46e-4d6e-ae9e-4350c9196fe3",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6e04a5e4-2aa3-4768-94ac-c42debdd761f"
        },
        "item": {
          "id": "7efb542f-c704-4371-a308-9e7b0c0c5422",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3df26629-4524-4106-98f8-6a749c283196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99511b08-4d55-479f-afc5-f006ddf3049e",
        "cursor": {
          "ref": "5da46521-4417-4d32-a0fa-fda1a2f3c021",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1244fba2-319e-4e04-bfc5-5cb25636ebf9"
        },
        "item": {
          "id": "99511b08-4d55-479f-afc5-f006ddf3049e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2681a7d0-0800-4ce1-aeb3-43dd2ee23152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8f97a3-4da1-4210-9171-04095d96bc34",
        "cursor": {
          "ref": "70d7182f-2990-494d-9deb-79556a5bfbf1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "25445d1f-fcc3-430e-a78d-2c8d78b682bd"
        },
        "item": {
          "id": "fc8f97a3-4da1-4210-9171-04095d96bc34",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "29f36c90-7b2f-40f5-9217-66eefec430e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb188cb-9b3d-43da-be3e-8e5eadb11c8a",
        "cursor": {
          "ref": "abcd12d3-37a6-4492-969f-6e68d3234570",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dfd9976a-9e20-4412-b995-564a371c865f"
        },
        "item": {
          "id": "abb188cb-9b3d-43da-be3e-8e5eadb11c8a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "76db462a-edb6-47d1-8e40-fa900a47e548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5bbbab-dff0-4a57-a971-f8f4e8094e36",
        "cursor": {
          "ref": "4ae7fb00-3497-4ed3-8a12-edc42a18f384",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9a8c17ae-6fea-45c5-9627-0485006e521c"
        },
        "item": {
          "id": "9e5bbbab-dff0-4a57-a971-f8f4e8094e36",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f9a51539-891e-40fe-b07a-2278d0d8a4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf834450-bc94-4b06-8adb-02edf3a202b2",
        "cursor": {
          "ref": "056500c6-eb36-40b9-89bd-d0404e078db7",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0b51af9d-891b-4d5a-91ef-5aed4c845d95"
        },
        "item": {
          "id": "bf834450-bc94-4b06-8adb-02edf3a202b2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f4eebd9f-f679-407f-a82e-6c19602ac9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcef542-478a-441a-996e-739e45b4b775",
        "cursor": {
          "ref": "fe88ff5e-8b2d-404e-94c5-c19d001b3843",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e80abbb2-2183-45ef-a054-6d7322b2696e"
        },
        "item": {
          "id": "bbcef542-478a-441a-996e-739e45b4b775",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "249e724e-6704-490e-920d-5fe0afe74947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2982a9b4-f565-4359-b6e3-80ab039a8c1d",
        "cursor": {
          "ref": "5152c80b-c074-44a9-bd75-1af43f4f1a10",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a8ee89fd-5d98-4c49-b701-aae2583bbbe1"
        },
        "item": {
          "id": "2982a9b4-f565-4359-b6e3-80ab039a8c1d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8b7de699-1931-4963-b424-32e7c817614d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cf8319-6ce6-480b-8aee-71a4effbed83",
        "cursor": {
          "ref": "0aae7977-7c8e-461b-96f0-7829497df27c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "35a7fb14-e484-4821-bc4d-c12f1f940e79"
        },
        "item": {
          "id": "84cf8319-6ce6-480b-8aee-71a4effbed83",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ce1c0a63-22a2-49b2-8a62-4e9c935b053d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a350f76-cb28-475e-b48d-601541403a7f",
        "cursor": {
          "ref": "602f8aa1-4494-460d-9d2d-dc97183a6afb",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "061f5b5b-05c3-43ae-821c-a99f092c3219"
        },
        "item": {
          "id": "5a350f76-cb28-475e-b48d-601541403a7f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cf2123f0-bbd0-47fc-ae17-58d38a7fbbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffb83b7-a0dc-4985-b567-273872784c58",
        "cursor": {
          "ref": "da2b341a-98f9-4f60-877b-8bfa28ec7e7e",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0243cc82-776a-4c11-96d6-6b79cb29782d"
        },
        "item": {
          "id": "dffb83b7-a0dc-4985-b567-273872784c58",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ec452686-605a-4058-b69d-60882363a344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b3de66-ee14-4c42-94b2-8bb2a7ede7cf",
        "cursor": {
          "ref": "198fe309-e9bc-4f63-b8cf-0f5967835142",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d98d8944-b369-46c2-b8a1-a114583e4e5c"
        },
        "item": {
          "id": "45b3de66-ee14-4c42-94b2-8bb2a7ede7cf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a9b56fb0-9926-406f-92f6-bdb35b68abe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc21162-aa4a-4c14-8b3e-ccb7b7c158a1",
        "cursor": {
          "ref": "001447be-5a37-4833-a122-ed3d23243328",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a05c9958-3bbe-440d-98b8-1f45fc05608e"
        },
        "item": {
          "id": "1bc21162-aa4a-4c14-8b3e-ccb7b7c158a1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "58f553ae-b485-45ca-8f11-7db6ce35d17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71706bd4-d225-45e9-bfee-addbf9902416",
        "cursor": {
          "ref": "92924cca-3a57-4f3f-8cd5-bb5aea0b1b45",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a478f6f9-8fb8-43b9-ae59-04e606639c5a"
        },
        "item": {
          "id": "71706bd4-d225-45e9-bfee-addbf9902416",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5ea2af6e-fcaa-4035-b7d1-58505971004c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cee200f-b0c5-4f30-9eec-578224f66091",
        "cursor": {
          "ref": "b381ec1e-8f2d-42a9-a0af-a763232c262d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d8f8e872-9f24-44b2-b32f-277c8a181e9d"
        },
        "item": {
          "id": "5cee200f-b0c5-4f30-9eec-578224f66091",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3fe4d485-4e0f-4d20-b509-2c66f5a7f5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ebbd7c-27aa-462c-aa26-8dd25dc41ff0",
        "cursor": {
          "ref": "f3e19f20-e07d-457f-a663-ad109ae2bb25",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6281d02a-9091-47ff-99a6-807e73fd33a6"
        },
        "item": {
          "id": "06ebbd7c-27aa-462c-aa26-8dd25dc41ff0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "72cbf9e3-2e66-4046-a02c-9ddf554517c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043f77da-70a9-4033-81df-eb4da8c0c29f",
        "cursor": {
          "ref": "8847ebc0-a1ca-4098-8dcb-55e184d5fb1e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "94d3ec39-3f92-49bd-95b0-5635d9a403b5"
        },
        "item": {
          "id": "043f77da-70a9-4033-81df-eb4da8c0c29f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b7c76d4c-7884-4782-91de-57a34de39dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52809f8d-0b49-49c9-b3a8-be7b65a67adb",
        "cursor": {
          "ref": "9181bfa3-2792-424e-92ec-44dfb7c8bfe3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "41996b93-85be-4704-931c-b8a2dac3b79d"
        },
        "item": {
          "id": "52809f8d-0b49-49c9-b3a8-be7b65a67adb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "37ec0817-00bc-41be-b6ad-604f7fbfdc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9476d370-e08e-4e28-a107-57d656fe05ca",
        "cursor": {
          "ref": "7569e285-ebf1-440d-b99b-cbe6d4de5dcb",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4f56cafc-6c6a-4cef-8ed6-643ce21f9a3a"
        },
        "item": {
          "id": "9476d370-e08e-4e28-a107-57d656fe05ca",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "958bb624-6653-4f5f-9e53-d56782f25014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e37fde-2632-433a-aadf-80afae1ee050",
        "cursor": {
          "ref": "671b609e-3675-4851-8e8a-0af2dd833060",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c37e380a-a2ad-43de-a7b6-2ce595303154"
        },
        "item": {
          "id": "90e37fde-2632-433a-aadf-80afae1ee050",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "27e1c23a-522b-477c-a2e6-ab997d0cdff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7548b3-c0c6-4316-b89c-539430ea1676",
        "cursor": {
          "ref": "829c87a1-06d9-492f-b608-771295ad16ae",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dbf1b9cc-ebf4-4bcd-9069-67eb1a520a33"
        },
        "item": {
          "id": "bc7548b3-c0c6-4316-b89c-539430ea1676",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0c9ed0f2-84ca-4fda-9550-ec8ccf2bca17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c988a7-17de-4436-92a0-cb7314c3c235",
        "cursor": {
          "ref": "e903dc81-4926-4609-8124-66e3f4bc8d5f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3d297bc6-e3da-4edb-9ece-105b58be72b2"
        },
        "item": {
          "id": "68c988a7-17de-4436-92a0-cb7314c3c235",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e03909a3-d6f1-432c-94d8-47d32cb051c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b77f59b-3601-439d-b94f-769a6184f984",
        "cursor": {
          "ref": "becc8a18-6df2-4631-b74e-c3cb713b6128",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ebacd261-accc-4a98-98d6-0097f99967f6"
        },
        "item": {
          "id": "7b77f59b-3601-439d-b94f-769a6184f984",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "63876d36-883b-4196-b724-a5aeed17a21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4d6eec-e095-4f3e-b639-3503bbcdc66c",
        "cursor": {
          "ref": "7d400740-1d26-4f17-9e4a-c3130595bbd6",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "51451bc0-d02d-4b15-8e80-dc05ce176810"
        },
        "item": {
          "id": "7a4d6eec-e095-4f3e-b639-3503bbcdc66c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "15822279-d67c-45cf-b9ac-3db64e941057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36aa68fd-99e9-437b-810e-1afbdeeab523",
        "cursor": {
          "ref": "c3953e5b-4ab1-47ea-a396-53203405be6e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "33ae0f87-ab08-4828-ba25-fd256c64e1df"
        },
        "item": {
          "id": "36aa68fd-99e9-437b-810e-1afbdeeab523",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e7048171-cead-45cc-b814-5f73fc26cac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b370212-0b09-4d39-9c01-2c91f9e16aaf",
        "cursor": {
          "ref": "656001d1-3a80-4f02-97cd-15191f77e552",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "742a26b8-617f-4519-9cd8-36e89020da98"
        },
        "item": {
          "id": "0b370212-0b09-4d39-9c01-2c91f9e16aaf",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5df55572-b13c-4568-a899-b8cf8d84824f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853b1a84-83c7-48a5-8baf-2af3f3ef5021",
        "cursor": {
          "ref": "abc1f87f-3d18-44cc-9286-52a2dbb3ddd0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b1c9f72a-cf28-4fb3-9186-e80f4c2d50cd"
        },
        "item": {
          "id": "853b1a84-83c7-48a5-8baf-2af3f3ef5021",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "51116cb7-c7b3-4b04-9268-c0e8f49fe9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c9413c-e7c9-4d34-bae1-c798417881d2",
        "cursor": {
          "ref": "bd7a7f3b-783d-4d6d-90d9-f988b8cd3b65",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3cd8e3b5-63e1-4711-a717-87233c3d4298"
        },
        "item": {
          "id": "63c9413c-e7c9-4d34-bae1-c798417881d2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "27fb539d-3e2f-47ac-88ae-4ad8d11a2596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02843fe2-f09a-4f6b-b0fa-e2f44ec5d6b4",
        "cursor": {
          "ref": "0b751b0c-1cee-44a6-85e9-8f9526d31213",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "33725eec-65c4-4b1c-907d-d7c2c953a374"
        },
        "item": {
          "id": "02843fe2-f09a-4f6b-b0fa-e2f44ec5d6b4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1cc56760-33dd-445e-8bd7-4b70aa814361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc536b9-de79-418a-9487-7dc33195f9e4",
        "cursor": {
          "ref": "7d6ebad3-3728-4315-bd2a-a0604c563217",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c382d661-c9bd-456b-af5e-dd91c5ee4fb1"
        },
        "item": {
          "id": "0cc536b9-de79-418a-9487-7dc33195f9e4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c5767f93-d0b3-4589-b871-6291d55a96fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42195d80-d153-4e17-8bb1-777e72ed7b4b",
        "cursor": {
          "ref": "e5499531-52a8-457c-ba09-1fcd01fa9626",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c9aef638-0411-4d02-9d78-ad7e981bf8d0"
        },
        "item": {
          "id": "42195d80-d153-4e17-8bb1-777e72ed7b4b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a46ac933-9d63-47b9-adcb-519a65c3036e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0acdad0-20eb-44dc-99c5-a017a222600a",
        "cursor": {
          "ref": "3647738f-cd4c-4cb3-9457-4cb946194369",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cc9a7f1c-1cfa-4b03-9aeb-dcd3d8b68d9d"
        },
        "item": {
          "id": "c0acdad0-20eb-44dc-99c5-a017a222600a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fade7266-6087-4303-9765-7914fbeccb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaa0e0d-e36d-48bb-b614-8199f02a71cf",
        "cursor": {
          "ref": "3c40a23c-df5b-43a7-b463-12076b8ef3aa",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "48acdae2-8586-4380-8002-3f46597ab71f"
        },
        "item": {
          "id": "acaa0e0d-e36d-48bb-b614-8199f02a71cf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f9aa7f22-c05e-4ff8-af8f-2903bdbe7273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87803870-ffb5-4b51-90a9-2f4ca7ff17ef",
        "cursor": {
          "ref": "1e1a38f0-99b2-43fa-be43-57bf7050d9ab",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9eff4aa8-231e-46d2-96c1-3eb5e7eef7ec"
        },
        "item": {
          "id": "87803870-ffb5-4b51-90a9-2f4ca7ff17ef",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "504bb606-1d5b-4af7-8ddd-5b139db6a37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8abb16e-a102-4107-bee3-f1a850bad920",
        "cursor": {
          "ref": "501bd7d8-1a62-47b4-8153-566984125c98",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "97753f66-d369-47b0-b934-8bbd202ead02"
        },
        "item": {
          "id": "f8abb16e-a102-4107-bee3-f1a850bad920",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "76454e3f-497c-4fcc-8db2-098bc5d38219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c88db1-36db-4a8f-987f-523a8a355949",
        "cursor": {
          "ref": "644de72a-9f2a-4c64-9eb1-7c7f37f0443d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0bdedfcd-ca88-4cd1-851d-15c9398d7147"
        },
        "item": {
          "id": "a0c88db1-36db-4a8f-987f-523a8a355949",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d38e3468-68a6-49b0-8a45-0f1b637e1694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08a1cb5-dfdf-422b-8b8b-d573dc262fed",
        "cursor": {
          "ref": "80752ce0-745c-4a9c-bd86-78d0d1b188ef",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7630d74b-6abc-4ea0-a38e-187d758b5e5f"
        },
        "item": {
          "id": "d08a1cb5-dfdf-422b-8b8b-d573dc262fed",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b3ca1f1e-64af-4319-ac4e-d48eee3bca3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521ac8b5-d9e3-426d-b5d0-fd8d1e517dd5",
        "cursor": {
          "ref": "8115a83d-30c0-40e5-9a5e-09f3a2c6d680",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b986ea37-f485-4b26-ad75-c2af40f6cce3"
        },
        "item": {
          "id": "521ac8b5-d9e3-426d-b5d0-fd8d1e517dd5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cbdfd635-00c8-4313-bc58-2f4417d6c19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cec572-2e49-4f1c-8595-807ff31a4d98",
        "cursor": {
          "ref": "40227dcc-e02e-462e-9ead-1c1626b83749",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "51960c65-4004-472b-8789-6d9f7d39b070"
        },
        "item": {
          "id": "64cec572-2e49-4f1c-8595-807ff31a4d98",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "858ca753-b838-4e17-a7df-a3e5dd2ef330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f46c1f-4e19-4b22-af06-694e294ee293",
        "cursor": {
          "ref": "6a18ff82-d2b3-4cd9-818f-8a75984265ba",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fb1e959f-0a55-4e30-b5bf-32534bfc8d64"
        },
        "item": {
          "id": "b8f46c1f-4e19-4b22-af06-694e294ee293",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8400c276-0327-4338-a9ce-953eb1c0165a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc230850-d2ad-4c27-bb5e-a8b5499ee3a0",
        "cursor": {
          "ref": "d7ad162c-aacf-47bb-9ab2-6045e5c628c5",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bcfdd95d-e428-406f-959e-dea6a181a375"
        },
        "item": {
          "id": "fc230850-d2ad-4c27-bb5e-a8b5499ee3a0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "570f8e2f-e8db-4ce2-8722-11bda3d16772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a59446-b89b-45f7-a36b-1baca9b33fbb",
        "cursor": {
          "ref": "9911cb07-b9c1-47c0-a94c-6ba6e1b1336f",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7809cf19-68c9-4176-b582-d242771fde5d"
        },
        "item": {
          "id": "57a59446-b89b-45f7-a36b-1baca9b33fbb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "34fd0d0c-2cc4-4b3e-9eb2-aee988e8806e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fab8d6-2d67-45d1-8006-dd64487b1ce4",
        "cursor": {
          "ref": "d8712b45-247b-429c-b8b2-baee4282edb7",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "08d32387-1679-49e9-a54e-067c0abc1e68"
        },
        "item": {
          "id": "46fab8d6-2d67-45d1-8006-dd64487b1ce4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3ade0a77-0a59-4265-ad11-e77b19487e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df3b02f-6452-4cfe-aae7-11d53540972e",
        "cursor": {
          "ref": "23051b1c-3fb2-4693-945d-b32e37ee62d3",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7b252c79-8cbf-4a65-aec8-8448cd16fc38"
        },
        "item": {
          "id": "9df3b02f-6452-4cfe-aae7-11d53540972e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3eea5a61-476a-4734-a4ec-2466f694d083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038ef060-340f-4086-8fed-a61f9fb3da69",
        "cursor": {
          "ref": "a8de69ca-35ec-425a-99c4-35e8413cb5d9",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "36c8f403-5d4f-4ef7-88eb-2ce8da96f8ad"
        },
        "item": {
          "id": "038ef060-340f-4086-8fed-a61f9fb3da69",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c2e43fbe-e549-4ba9-9439-cb8e5454d607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e831f3f8-c2a7-40ab-8a2b-1491d822b131",
        "cursor": {
          "ref": "d3594e06-feee-44eb-92d6-56c4e72cd605",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e212d9b5-3bef-4c89-9cca-b65ae8061d9e"
        },
        "item": {
          "id": "e831f3f8-c2a7-40ab-8a2b-1491d822b131",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "00ced317-c02b-42ff-bb92-133e70981395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23bbc83-886e-4e4d-b980-9eb77c766ee7",
        "cursor": {
          "ref": "853c893d-d033-426c-ac29-337f5e7e0e6c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e296d789-c07c-4bcc-82ba-ad60fd77e225"
        },
        "item": {
          "id": "c23bbc83-886e-4e4d-b980-9eb77c766ee7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "152a6e46-2b83-4a39-8653-1f9b7d5127e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a2848f-9334-4128-8298-f8804c9028c2",
        "cursor": {
          "ref": "b7d0c526-4416-4266-98ce-ba2206e98002",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "65a3e846-db31-402f-a81b-cb85c75ce5bc"
        },
        "item": {
          "id": "f9a2848f-9334-4128-8298-f8804c9028c2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b2437c49-06b6-4bc2-88f0-83b9231719ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba6acb0-e290-40ba-83ac-95ff6e60c51b",
        "cursor": {
          "ref": "762c76de-ece5-4192-8a12-5c4c861ee4e5",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7143f81f-7b28-4959-9906-7061e1095d10"
        },
        "item": {
          "id": "fba6acb0-e290-40ba-83ac-95ff6e60c51b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c0caeecd-deff-4185-90d1-79669337f757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30c1e66-9bb2-43d5-a28e-55bc296c653c",
        "cursor": {
          "ref": "4aae8369-9f73-4caa-bdd7-52c1b929a971",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c9bd2bdc-e28e-4332-ab25-2e394fbcaec4"
        },
        "item": {
          "id": "b30c1e66-9bb2-43d5-a28e-55bc296c653c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e6fdba9b-cde6-4024-853f-e35bf060cd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189f2bf7-96ac-4321-b3e4-e14fc5aaaf36",
        "cursor": {
          "ref": "943e76cd-3590-40b0-a84b-6e41bb89d1c1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "46e53e97-b658-45f1-b98d-bfac1282ebb6"
        },
        "item": {
          "id": "189f2bf7-96ac-4321-b3e4-e14fc5aaaf36",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a2734416-d9cd-4c00-bf5c-46e00a62be12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d51b5e-a358-42d2-a071-7ed522020ff5",
        "cursor": {
          "ref": "4df1e917-8e5b-4c91-aa24-a911ae1a1ac4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6b4f1d2f-2922-47eb-9b12-2a7ecd83da49"
        },
        "item": {
          "id": "c3d51b5e-a358-42d2-a071-7ed522020ff5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "658a9674-c9b7-4c2a-b3d7-5c399bea5f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630bf1dc-48ff-419c-9c3c-d1b55b501e96",
        "cursor": {
          "ref": "084c3a39-2dab-4cf6-ab73-e01cc83899dd",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "47f3710f-4b64-4815-a13a-1123ba749f0c"
        },
        "item": {
          "id": "630bf1dc-48ff-419c-9c3c-d1b55b501e96",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "09e6839e-e4c6-4994-af11-f0d83f9f1328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63167ef2-53b1-4511-8345-5d6473e89ee6",
        "cursor": {
          "ref": "6ed55360-9575-4844-83e6-bbe439239fee",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b5316c20-79a1-43f8-88d3-5d5f21f648fd"
        },
        "item": {
          "id": "63167ef2-53b1-4511-8345-5d6473e89ee6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1a0990ec-a7dc-4cfb-ad54-691571c8c02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e112ee-db6a-4c5e-896f-4fef500ba2d8",
        "cursor": {
          "ref": "f8bc3588-2dff-4edb-8531-1bbe5bbd5d96",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1ed1cc0b-ca9b-47db-a8dd-33e11cec1dc1"
        },
        "item": {
          "id": "d2e112ee-db6a-4c5e-896f-4fef500ba2d8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6e767988-cac0-4339-8a50-b1f9fe59583d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4dc623e-b1fb-410c-9069-e2fa21928ef1",
        "cursor": {
          "ref": "c4d48eee-2e33-4d5e-8233-aed1508bed36",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b05880f9-e2ce-4e2c-bbb0-fb8e0b978ad8"
        },
        "item": {
          "id": "f4dc623e-b1fb-410c-9069-e2fa21928ef1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ee35efc4-4ad0-49bb-8844-109670e7b3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5ae72f-d11a-4fb1-b8f0-47a0e54ed51a",
        "cursor": {
          "ref": "e4bbc572-21d4-4446-980e-3c90c1e7bb70",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ab36bb88-bdec-4ebb-bf52-fdb09dcf98f1"
        },
        "item": {
          "id": "ca5ae72f-d11a-4fb1-b8f0-47a0e54ed51a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "97998270-fa69-4e6f-8cb7-dc06e5acfb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e32807-799f-44f8-bf7a-24166cf78101",
        "cursor": {
          "ref": "400bd3bd-439a-4233-82cf-ab730bbd253f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c7c4e570-ec04-435c-918d-da29aca4f647"
        },
        "item": {
          "id": "c0e32807-799f-44f8-bf7a-24166cf78101",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c83e2f47-0f02-4b2f-8569-dc2f7a8d2790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fce3f7-fa58-456a-b97e-b088ecca0b83",
        "cursor": {
          "ref": "9cecf9b7-31aa-4b1a-93a0-4e1abb0a9a5d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a9baf2ea-354c-4135-8cfa-dbc3d83ae514"
        },
        "item": {
          "id": "18fce3f7-fa58-456a-b97e-b088ecca0b83",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "26357ca8-9352-44f6-a3be-f51f45947015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c7ee93-e4fe-47fb-adcc-170849061016",
        "cursor": {
          "ref": "007185e8-61ae-435f-8d45-0c318d6f9f4e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1ca9a222-f5f3-475b-a099-1944e7c4362d"
        },
        "item": {
          "id": "e3c7ee93-e4fe-47fb-adcc-170849061016",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b15fd80a-2a49-44da-974b-ba1c62ee8bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b67366b-f1e7-478d-ae2a-e65aa3388be7",
        "cursor": {
          "ref": "cd82919a-9230-477a-b446-57b15fee6fda",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2bc5a40f-4478-4a11-a781-2cc5a9bf31c8"
        },
        "item": {
          "id": "2b67366b-f1e7-478d-ae2a-e65aa3388be7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bef2a706-d278-48db-9f6d-aad95ec9838e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c095b69-7d60-4a5e-acdd-b09438123302",
        "cursor": {
          "ref": "8660e525-1927-48ea-af61-d9098e0be6ab",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "18d4fd44-9c2c-4c90-9e9f-8878d04342f5"
        },
        "item": {
          "id": "7c095b69-7d60-4a5e-acdd-b09438123302",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b7aa95c6-6689-495b-9b20-dbd4b57dabda",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c18943e-5714-46b1-a931-c7c81aae742c",
        "cursor": {
          "ref": "dda1ef31-6125-4770-88b4-fc694bb02411",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c7f6a758-2b46-48ac-b585-626811e6af3c"
        },
        "item": {
          "id": "1c18943e-5714-46b1-a931-c7c81aae742c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d8ffea7e-4d25-45ca-88ae-ce7a053e4aee",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b75391-5c61-4ba1-8ad5-6214dcdf8ce1",
        "cursor": {
          "ref": "082db391-c04c-4265-9629-e77bf417d764",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4b1bd343-0f75-43cc-a827-3968c4a9fd37"
        },
        "item": {
          "id": "36b75391-5c61-4ba1-8ad5-6214dcdf8ce1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ad3c5edb-89b0-46a0-bee0-e096a1086eda",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "78711b77-0445-4fc2-8db1-4c5bdcc2e88a",
        "cursor": {
          "ref": "b1f343ed-6314-49d8-8b90-fd574b339f50",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6c8564cb-6671-44e0-a26b-ef8bd2edeab0"
        },
        "item": {
          "id": "78711b77-0445-4fc2-8db1-4c5bdcc2e88a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f9fff8e5-5225-469a-b0ca-98e06af71841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78711b77-0445-4fc2-8db1-4c5bdcc2e88a",
        "cursor": {
          "ref": "b1f343ed-6314-49d8-8b90-fd574b339f50",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6c8564cb-6671-44e0-a26b-ef8bd2edeab0"
        },
        "item": {
          "id": "78711b77-0445-4fc2-8db1-4c5bdcc2e88a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f9fff8e5-5225-469a-b0ca-98e06af71841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15029f55-1908-4363-b946-5607df4ae939",
        "cursor": {
          "ref": "bce6581a-90f3-4cf8-a5e4-d978c10acd8d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "feccd4ba-b0ae-4513-a314-faa69f1385a9"
        },
        "item": {
          "id": "15029f55-1908-4363-b946-5607df4ae939",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a2363abe-f611-4d38-b17a-614d05f077f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a38fd9-5d56-4d1b-8754-5b80db4386c0",
        "cursor": {
          "ref": "e6304a9b-99b9-4f79-8534-7483dcc82610",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "150ab130-a0a3-40c3-abcc-57c59da37d19"
        },
        "item": {
          "id": "d0a38fd9-5d56-4d1b-8754-5b80db4386c0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c74446c2-c805-4039-ab8a-12ef9df28e89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}