{
  "collection": {
    "info": {
      "_postman_id": "c0814470-0c07-43ad-9ed4-2ad4b125c937",
      "name": "Workflow Instance Join",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "47133eff-c561-4883-998c-6af9016ff29e",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_1_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_1_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_1_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_1_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "154601ba-3772-4e51-bd0a-9da4f9cf8081",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_1_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_1_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "dde870c7-3e4b-4c33-bf8a-bf7d6bf4ddab"
            }
          }
        ]
      },
      {
        "id": "44c36f16-e9f5-4b98-b34b-d4785f6b396c",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_2_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_2_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_2_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_2_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "47386cbc-44bf-4ada-b6e7-6bb2025737d8",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_2_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_2_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "ac9feab1-e2bf-4dbf-a791-9fcaad99fe2f"
            }
          }
        ]
      },
      {
        "id": "4313cadd-ed4c-4929-9b1f-69ee9b09f200",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_3_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_3_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_3_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_3_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "bb0205e8-0494-4771-a073-bc2fe64fd58c",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_3_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_3_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "e5ef8356-8f9a-44bb-8875-f49b5f288de6"
            }
          }
        ]
      },
      {
        "id": "1484d100-988e-4470-a0c5-8b7b75421405",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_1_DID_WEB}}"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "739ec9cd-4522-472c-9310-49df0c398191",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_1_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_1_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Importer has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_1_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Importer has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_1_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "4568b02b-dee7-4a52-9341-82c2c0a7e3f6"
            }
          }
        ]
      },
      {
        "id": "1e864bc2-b37b-4b66-8b82-bb31d4d36056",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_2_DID_WEB}}"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8ffc02ff-96d9-481f-846c-11a7f8f8430e",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_2_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_2_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Freight Forwarder has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_2_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Freight Forwarder has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_2_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "0961a478-635c-49cc-b49f-805cbee45732"
            }
          }
        ]
      },
      {
        "id": "9b937ca9-e85e-4863-8614-f57a9e70a7f3",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_3_DID_WEB}}"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c6d987cb-b457-4648-a201-366206383ed6",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_3_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_3_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Customs has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_3_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Customs has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_3_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "48d58e84-a90b-4772-b9ce-d57852a60c56"
            }
          }
        ]
      },
      {
        "id": "a71a19df-1c25-4ad1-b24a-cf5d6b171d33",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\",\n            \"CommercialInvoiceCertificate\"\n        ],\n        \"name\": \"Commercial Invoice Certificate\",\n        \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n        \"issuer\": {\n            \"id\": \"{{org_1_holder}}\",\n            \"type\": [\n                \"Organization\"\n            ],\n            \"address\": {\n                \"type\": [\n                    \"PostalAddress\"\n                ],\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": [\n                \"Invoice\"\n            ],\n            \"portOfEntry\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"destinationCountry\": \"MEX\",\n            \"purchaseDate\": \"2021-02-21\",\n            \"seller\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                    \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                    \"addressLocality\": \"Tsubame-shi\",\n                    \"addressRegion\": \"Niigata-ken\",\n                    \"postalCode\": \"959-0215\",\n                    \"addressCountry\": \"Japan\"\n                }\n            },\n            \"buyer\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"shipToParty\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"itemsShipped\": [\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"unitCode\": \"lbs\",\n                            \"value\": \"16500\"\n                        }\n                    },\n                    \"itemCount\": 5,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"82500\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 5200,\n                        \"priceCurrency\": \"USD\"\n                    }\n                },\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"value\": \"12680\",\n                            \"unitCode\": \"lbs\"\n                        }\n                    },\n                    \"itemCount\": 20,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"253600\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 4400,\n                        \"priceCurrency\": \"USD\"\n                    }\n                }\n            ],\n            \"totalWeight\": {\n                \"type\": \"QuantitativeValue\",\n                \"value\": \"336100\",\n                \"unitCode\": \"lbs\"\n            },\n            \"totalPaymentDue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 9600,\n                \"priceCurrency\": \"USD\"\n            }\n        }\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7b118259-9353-42bf-9fe1-4ad5989df5de",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Proforma Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      const {verifiableCredential} = pm.response.json();",
                "      pm.collectionVariables.set('importers_proforma_invoice_vc', JSON.stringify(verifiableCredential));",
                "  });"
              ],
              "_lastExecutionId": "8fa539f4-ecf2-485e-854c-8f221c785e74"
            }
          }
        ]
      },
      {
        "id": "2e286def-b7a3-45aa-9249-b46f9ab1413c",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3d37ca5a-933c-403e-9271-0b9948849ea1",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "e836f700-0061-4d22-8706-98b1b99ac8df"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "d2875e12-29af-4892-bb0e-7935f809c76f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e8567eb-d919-49fe-9dd0-fa175e0c16ab"
            }
          }
        ]
      },
      {
        "id": "4ea44e2e-01f2-4e89-a5b8-c55e7ef90988",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_proforma_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4919cf96-0a46-460d-800b-96b5581605c9",
              "type": "text/javascript",
              "exec": [
                "const {verifiablePresentation} = pm.response.json();",
                "pm.collectionVariables.set(\"importers_proforma_invoice_presented_to_customs\", JSON.stringify(verifiablePresentation));",
                "",
                "pm.test(\"Importer VP of Proforma Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "218623e5-19d8-42de-af25-99143c31efdd"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "2959dd75-5bca-42ec-bc89-c402e8f00261",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "093e0d0d-7cfa-4f53-beed-db0b3cd4cc34"
            }
          }
        ]
      },
      {
        "id": "adcde25f-f4b7-447c-b1d5-09bc991476c7",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_proforma_invoice_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6272cb4b-a9e2-463f-9f37-a668191fc624",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Proforma Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Proforma Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "5da717d1-a709-4436-b69b-39f841be2c26"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "a2dfd147-604e-4cea-b68e-6f48e82486f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d8c3340-2bac-4e32-bc38-ae5d1f90e214"
            }
          }
        ]
      },
      {
        "id": "8ad2848b-8b4c-4271-b4e1-20cd418786ae",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{importers_proforma_invoice_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fcce0d10-f40f-4757-8f1e-b047a82ac874",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Proforma Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"importers_proforma_invoice_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.collectionVariables.set(\"customs_first_workflow_instance_id\", workflowInstances[0]);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "9ada251c-8374-4424-bda6-7bea48c8ca30"
            }
          }
        ]
      },
      {
        "id": "41c79eb3-8374-4b0a-8637-c55db658a707",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"did:key:z6MkmbqKc6KncFZUbVJwUppttTkiMAtnVJ5wzC5oVBWci3pc\",\n        \"type\": [\n            \"VerifiableCredential\",\n            \"HouseBillOfLadingCertificate\"\n        ],\n        \"name\": \"House Bill Of Lading\",\n        \"issuanceDate\": \"2022-03-04T13:40:00Z\",\n        \"issuer\": {\n            \"type\": \"Organization\",\n            \"id\": \"{{org_2_holder}}\",\n            \"name\": \"World Forward, Inc.\",\n            \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"MCL Multi Container Line LTD.\",\n                \"streetAddress\": \"Well Fung Ind Centre\",\n                \"addressLocality\": \"Kwai Chung\",\n                \"addressRegion\": \"Hong Kong\",\n                \"addressCountry\": \"Hong Kong\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": \"HouseBillOfLading\",\n            \"billOfLadingNumber\": \"FF873363210A\",\n            \"bookingNumber\": [\n                \"FF873363210\"\n            ],\n            \"shipper\": {\n                \"type\": \"Organization\",\n                \"name\": \"Espresso Italiano Co.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"Via Vico Ferrovia 5\",\n                    \"addressLocality\": \"Goro\",\n                    \"addressRegion\": \"Ferrara\",\n                    \"postalCode\": \"44020\",\n                    \"addressCountry\": \"IT\"\n                },\n                \"email\": \"sales@espresso-italiano.example.com\",\n                \"phoneNumber\": \"+39 0351 9067195\"\n            },\n            \"consignee\": {\n                \"type\": \"Organization\",\n                \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                \"description\": \"Coffee Machine Imports\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"3934 Spinnaker Lane\",\n                    \"addressLocality\": \"Joliet\",\n                    \"addressRegion\": \"Illinois\",\n                    \"postalCode\": \"60432\",\n                    \"addressCountry\": \"US\"\n                }\n            },\n            \"notifyParty\": [\n                {\n                    \"type\": \"Organization\",\n                    \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                    \"description\": \"Coffee Machine Imports\",\n                    \"address\": {\n                        \"type\": \"PostalAddress\",\n                        \"streetAddress\": \"3934 Spinnaker Lane\",\n                        \"addressLocality\": \"Joliet\",\n                        \"addressRegion\": \"Illinois\",\n                        \"postalCode\": \"60432\",\n                        \"addressCountry\": \"US\"\n                    }\n                }\n            ],\n            \"carrier\": {\n                \"type\": \"Organization\",\n                \"id\": \"did:key:z6MktHQo3fRRohk44dsbE76CuiTpBmyMWq2VVjvV6aBSeE3U\",\n                \"name\": \"World Forward, Inc.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"organizationName\": \"MCL Multi Container Line LTD.\",\n                    \"streetAddress\": \"Well Fung Ind Centre\",\n                    \"addressLocality\": \"Kwai Chung\",\n                    \"addressRegion\": \"Hong Kong\",\n                    \"addressCountry\": \"Hong Kong\"\n                }\n            },\n            \"mainCarriageTransportMovement\": {\n                \"type\": \"Transport\",\n                \"vesselNumber\": \"MS Seven Seas\",\n                \"voyageNumber\": \"Atl-W0425\"\n            },\n            \"portOfLoading\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"ITMIL\"\n            },\n            \"portOfDischarge\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"totalNumberOfPackages\": 2200,\n            \"transportEquipmentQuantity\": 2,\n            \"includedConsignmentItems\": [\n                {\n                    \"marksAndNumbers\": \"Espresso Italiano\",\n                    \"commodity\": {\n                        \"type\": \"Commodity\",\n                        \"commodityCode\": \"851671\",\n                        \"commodityCodeType\": \"HS\"\n                    },\n                    \"packageQuantity\": 220,\n                    \"netWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1460\"\n                    },\n                    \"grossWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1590\"\n                    },\n                    \"grossVolume\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"85\",\n                        \"unitCode\": \"cmb\"\n                    }\n                }\n            ],\n            \"freightAndCharges\": {\n                \"type\": \"ServiceCharge\",\n                \"chargeCode\": \"basicFreight\",\n                \"paymentTerm\": \"collect\",\n                \"chargeText\": \"Negotiated ocean freight\",\n                \"rate\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 225,\n                    \"priceCurrency\": \"USD\"\n                },\n                \"calculationBasis\": \"Per container\",\n                \"appliedAmount\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 450,\n                    \"priceCurrency\": \"USD\"\n                }\n            },\n            \"declaredValue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 24000,\n                \"priceCurrency\": \"USD\"\n            },\n            \"termsAndConditions\": \"https://terms-of-shipment.freightforwarder.example.com\"\n        }\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fc0024db-7501-4119-b58b-9a8d3a2d89f6",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"House Bill of Lading VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      const {verifiableCredential} = pm.response.json();",
                "      pm.collectionVariables.set('freight_forwarders_hbol_vc', JSON.stringify(verifiableCredential));",
                "  });"
              ],
              "_lastExecutionId": "1e7ce0fe-fa12-4162-bbda-20381149d7d1"
            }
          }
        ]
      },
      {
        "id": "a505180c-b26a-4578-95bc-60d6d1ba091b",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3ef222a2-4126-4899-abe6-9aa6dfe8606c",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "2f51c550-e1b9-4a0c-a313-d736f234d962"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "1a537469-e3a5-4d7c-981e-e0dfa724b987",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6aa9010d-7c8d-40e9-a8be-5f4198200620"
            }
          }
        ]
      },
      {
        "id": "ca5d60e2-3158-48ad-9194-04f4e321815c",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{freight_forwarders_hbol_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "56f94ec2-b615-4ab6-a47d-877fb201045f",
              "type": "text/javascript",
              "exec": [
                "const {verifiablePresentation} = pm.response.json();",
                "pm.collectionVariables.set(\"freight_forwarders_house_bill_presented_to_customs\", JSON.stringify(verifiablePresentation));",
                "",
                "pm.test(\"Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "e9d96e86-d960-4786-9e62-bb43d34b560b"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "49151bb3-df06-405b-a2ff-eb4df1d90835",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bd135d5-4090-44eb-9ba3-adf1c001b0b4"
            }
          }
        ]
      },
      {
        "id": "bb81aaa7-5956-43d7-85de-954f72577167",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_house_bill_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d612a474-91e6-400a-8565-e01be6b1e5fd",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented House Bill of Lading to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"House Bill of Lading VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "cff3fbee-08b3-4af3-bddb-05aa915bcd6e"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "ead8aeff-3024-4318-929c-8d7edc33eae7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8590b49e-8c79-4a04-a5f3-bac2f871be53"
            }
          }
        ]
      },
      {
        "id": "9980d15e-686d-41da-99a5-76edd0998a69",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_house_bill_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7622c657-f5ad-4803-b905-db56de400b29",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies House Bill of Lading\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"freight_forwarders_house_bill_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.collectionVariables.set(\"customs_second_workflow_instance_id\", workflowInstances[0]);",
                "});",
                ""
              ],
              "_lastExecutionId": "2b50af0e-537f-4409-abe8-75a54e0de1d0"
            }
          }
        ]
      },
      {
        "id": "afa3e912-d6ba-4388-88b2-8dcdb6122fc1",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": \n      {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\",\n      \"https://w3id.org/traceability/v1\"\n    ],\n    \"id\": \"did:key:z6MkhNsCYEQQWJdyAbfaMZHz4UG6UZoQUGot7z7tBNsbz1JG\",\n    \"type\": [\n      \"VerifiableCredential\",\n      \"CommercialInvoiceCertificate\"\n    ],\n    \"name\": \"Commercial Invoice Certificate\",\n    \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n    \"issuer\": {\n      \"id\": \"{{org_1_holder}}\",\n      \"type\": [\n        \"Organization\"\n      ],\n      \"address\": {\n        \"type\": [\n          \"PostalAddress\"\n        ],\n        \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n        \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n        \"addressLocality\": \"Tsubame-shi\",\n        \"addressRegion\": \"Niigata-ken\",\n        \"postalCode\": \"959-0215\",\n        \"addressCountry\": \"Japan\"\n      }\n    },\n    \"credentialSubject\": {\n      \"type\": [\n        \"Invoice\"\n      ],\n      \"portOfEntry\": {\n        \"type\": \"Place\",\n        \"unLocode\": \"USLGB\"\n      },\n      \"destinationCountry\": \"MEX\",\n      \"purchaseDate\": \"2021-02-21\",\n      \"seller\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n          \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n          \"addressLocality\": \"Tsubame-shi\",\n          \"addressRegion\": \"Niigata-ken\",\n          \"postalCode\": \"959-0215\",\n          \"addressCountry\": \"Japan\"\n        }\n      },\n      \"buyer\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"shipToParty\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"itemsShipped\": [\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"unitCode\": \"lbs\",\n              \"value\": \"16500\"\n            }\n          },\n          \"itemCount\": 5,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"82500\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 5200,\n            \"priceCurrency\": \"USD\"\n          }\n        },\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"value\": \"12680\",\n              \"unitCode\": \"lbs\"\n            }\n          },\n          \"itemCount\": 20,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"253600\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 4400,\n            \"priceCurrency\": \"USD\"\n          }\n        }\n      ],\n      \"totalWeight\": {\n        \"type\": \"QuantitativeValue\",\n        \"value\": \"336100\",\n        \"unitCode\": \"lbs\"\n      },\n      \"totalPaymentDue\": {\n        \"type\": \"PriceSpecification\",\n        \"price\": 9600,\n        \"priceCurrency\": \"USD\"\n      }\n    }\n  },\n  \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7bd94358-501f-47cf-881d-70e82b12b5e8",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Commercial Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      const {verifiableCredential} = pm.response.json();",
                "      pm.collectionVariables.set('importers_commercial_invoice_vc', JSON.stringify(verifiableCredential));",
                "  });"
              ],
              "_lastExecutionId": "93436106-2054-4944-bc78-b08fa22bc35d"
            }
          }
        ]
      },
      {
        "id": "6ebc7248-324c-4ef0-8f88-f180d125a8cd",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3eea4380-3b68-4d64-b6a2-0c823d7a3d55",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_2_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_2_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Freight Forwarder\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "1346ac5c-2b93-45af-95b6-2fdccfa16801"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "fdb8f12c-dfc1-4c53-81f6-91f59133c561",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bc2321a-f4c1-405b-9634-6638937c1bf8"
            }
          }
        ]
      },
      {
        "id": "f16ca597-5603-4f34-ac54-95617f8753e9",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_2_domain}}\",\n        \"challenge\": \"{{org_2_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "100ccdac-e80a-47fd-a1db-6b90ffac85c4",
              "type": "text/javascript",
              "exec": [
                "const {verifiablePresentation} = pm.response.json();",
                "pm.collectionVariables.set(\"importers_presentation_of_ci_to_freight_forwarder\", JSON.stringify(verifiablePresentation));",
                "",
                "pm.test(\"Importer VP of Commercial Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "1bb93553-95db-42cc-906d-28f1f67c28f9"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "33290468-0792-4653-9f09-ade54401f428",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63c33a5d-c4c0-498d-b4a3-3a202a6db32d"
            }
          }
        ]
      },
      {
        "id": "be0d7fbb-0bc2-4439-a84d-ac30cf8b8e03",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_presentation_of_ci_to_freight_forwarder}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b2bdd25f-8d90-4f21-a00d-3825a2f38d16",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "00eb3bea-fe28-4ec0-bfea-65946ff9861d"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "d473dd26-9b56-4d4b-aff5-8632bbdcb15e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f387aa98-f31c-444f-a8a9-f5e9799fc37f"
            }
          }
        ]
      },
      {
        "id": "2b39cbef-7df4-4ead-a751-f6f844ca64d8",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "23fa91e3-f106-4513-aea8-75a4405ac5a1",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "d463291d-1995-499f-b4de-7e72871b6ba2"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "a6e771b6-1f36-43af-9d00-198867dbd660",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d250dcf6-7af3-42e5-b7de-ca911b4941ef"
            }
          }
        ]
      },
      {
        "id": "5692d37a-bbe6-4e05-84ac-fdd6a32a461d",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\", \n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3c1ce9c0-a814-4df4-8627-fdb79723bb73",
              "type": "text/javascript",
              "exec": [
                "const {verifiablePresentation} = pm.response.json();",
                "pm.collectionVariables.set(\"freight_forwarders_presentation_of_ci_to_customs\", JSON.stringify(verifiablePresentation));",
                "",
                "pm.test(\"Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "763e035d-3717-4346-975b-457d76bb1dda"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "ea69fcd6-9394-4b82-b714-5493c790006a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38808aa2-6112-4c1a-b602-26f68631bc47"
            }
          }
        ]
      },
      {
        "id": "f3be7e4a-502f-4f05-9e0e-484b2bfac1a1",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_presentation_of_ci_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ce93b245-7714-4819-9ebb-3d3ca1bafa06",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "5b16a654-7896-490d-87a7-e213d989d726"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "613691c2-6ef6-4982-a963-12c080daf5e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ae6bb5f-4398-4332-8034-90807e2036ba"
            }
          }
        ]
      },
      {
        "id": "d80cb42f-e7e4-41ba-be91-187dfe0900f9",
        "name": "Join Workflow Graphs",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_presentation_of_ci_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4bd24853-8db9-4ac5-a535-5abb08ab42da",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Commercial Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"freight_forwarders_presentation_of_ci_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs checks known workflow instance ids and join the workflows\", function () {",
                "    pm.expect(workflowInstances[0]).to.eql(pm.collectionVariables.get(\"customs_first_workflow_instance_id\"));",
                "    pm.expect(workflowInstances[1]).to.eql(pm.collectionVariables.get(\"customs_second_workflow_instance_id\"));",
                "});",
                ""
              ],
              "_lastExecutionId": "9e7be75c-ad70-4755-85ae-0576ad3aad6a"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 36,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 37,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 3699.625,
      "responseMin": 77,
      "responseMax": 10186,
      "responseSd": 3666.1014467289815,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679706207923,
      "completed": 1679706297330
    },
    "executions": [
      {
        "id": "47133eff-c561-4883-998c-6af9016ff29e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 24,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fdd36699-84d2-41ed-9ff6-91322d679b91",
          "httpRequestId": "aa250e6f-7f35-42f0-ba43-c243fba84864"
        },
        "item": {
          "id": "47133eff-c561-4883-998c-6af9016ff29e",
          "name": "Get Access Token"
        },
        "response": {
          "id": "d9e8abd2-40e5-4c94-bf79-e9b4b44be34d",
          "status": "OK",
          "code": 200,
          "responseTime": 826,
          "responseSize": 1050
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_1_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c36f16-e9f5-4b98-b34b-d4785f6b396c",
        "cursor": {
          "ref": "4d6a4fad-502f-4748-9871-e165a9772b78",
          "length": 24,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5d7a9349-8d67-49b1-8a02-b5d04953b0e3"
        },
        "item": {
          "id": "44c36f16-e9f5-4b98-b34b-d4785f6b396c",
          "name": "Get Access Token"
        },
        "response": {
          "id": "b416d646-5bf5-4907-a89f-9e6adab9c545",
          "status": "OK",
          "code": 200,
          "responseTime": 282,
          "responseSize": 1050
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_2_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "4313cadd-ed4c-4929-9b1f-69ee9b09f200",
        "cursor": {
          "ref": "b09c790d-f2bb-428b-89a8-2c5062b6671e",
          "length": 24,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "022e10dc-80a1-49bf-ad06-1265f9a8ee56"
        },
        "item": {
          "id": "4313cadd-ed4c-4929-9b1f-69ee9b09f200",
          "name": "Get Access Token"
        },
        "response": {
          "id": "cf0a2ae9-98bc-4143-86ff-fc8c3d050178",
          "status": "OK",
          "code": 200,
          "responseTime": 513,
          "responseSize": 1050
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_3_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "1484d100-988e-4470-a0c5-8b7b75421405",
        "cursor": {
          "ref": "b708062a-a588-4fc0-bb52-7934a6769100",
          "length": 24,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "599e8809-9e93-4300-87fd-e4ab97f6b997"
        },
        "item": {
          "id": "1484d100-988e-4470-a0c5-8b7b75421405",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "066041f4-fa7a-463b-8c6d-60d39e0ca008",
          "status": "OK",
          "code": 200,
          "responseTime": 2080,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Importer has holder DID",
            "skipped": false
          },
          {
            "assertion": "Importer has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e864bc2-b37b-4b66-8b82-bb31d4d36056",
        "cursor": {
          "ref": "ce21c908-f042-451d-8510-757c3de6e846",
          "length": 24,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cf347747-7d7f-4587-b7d7-1ba521695169"
        },
        "item": {
          "id": "1e864bc2-b37b-4b66-8b82-bb31d4d36056",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "ea055ba0-78ba-49d6-8205-ddc64fbd7fe3",
          "status": "OK",
          "code": 200,
          "responseTime": 2746,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has holder DID",
            "skipped": false
          },
          {
            "assertion": "Freight Forwarder has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b937ca9-e85e-4863-8614-f57a9e70a7f3",
        "cursor": {
          "ref": "41fa1ffe-5e20-4542-a76d-9bf708104ef8",
          "length": 24,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "206e9ccb-aba8-4a35-97df-7d532677b18e"
        },
        "item": {
          "id": "9b937ca9-e85e-4863-8614-f57a9e70a7f3",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "c6e74c72-6b50-4a88-87e8-3a5805506d2c",
          "status": "OK",
          "code": 200,
          "responseTime": 2191,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Customs has holder DID",
            "skipped": false
          },
          {
            "assertion": "Customs has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71a19df-1c25-4ad1-b24a-cf5d6b171d33",
        "cursor": {
          "ref": "c5fce2c2-fe6b-4ae8-8088-2821be6511a0",
          "length": 24,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "53bb4ea8-5064-45aa-9822-96d97115e7bc"
        },
        "item": {
          "id": "a71a19df-1c25-4ad1-b24a-cf5d6b171d33",
          "name": "Issue Credential"
        },
        "response": {
          "id": "2489b0d2-bc08-4460-a319-f89260d4bb47",
          "status": "Created",
          "code": 201,
          "responseTime": 7087,
          "responseSize": 3440
        },
        "assertions": [
          {
            "assertion": "Proforma Invoice VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e286def-b7a3-45aa-9249-b46f9ab1413c",
        "cursor": {
          "ref": "2d38e05d-70ba-4d3c-a89a-53b65152d494",
          "length": 24,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9b83c96d-5b63-4ebe-a576-a49da97f329b"
        },
        "item": {
          "id": "2e286def-b7a3-45aa-9249-b46f9ab1413c",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "1e747b7f-b953-483d-9b11-315a197e899e",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea44e2e-01f2-4e89-a5b8-c55e7ef90988",
        "cursor": {
          "ref": "cbe761fd-011a-48ba-99ef-65568f7f5b85",
          "length": 24,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3aaf78c3-387d-492a-9363-44430016d8dc"
        },
        "item": {
          "id": "4ea44e2e-01f2-4e89-a5b8-c55e7ef90988",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "915ccf1c-e0a1-4da6-afe2-4f7f76d21c1c",
          "status": "Created",
          "code": 201,
          "responseTime": 6612,
          "responseSize": 4272
        },
        "assertions": [
          {
            "assertion": "Importer VP of Proforma Invoice with workflow instance 'instance_1' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcde25f-f4b7-447c-b1d5-09bc991476c7",
        "cursor": {
          "ref": "4e6de812-cee3-4365-8c83-8bf3836717b8",
          "length": 24,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c2c71790-ee31-4099-bd24-39239edb6048"
        },
        "item": {
          "id": "adcde25f-f4b7-447c-b1d5-09bc991476c7",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "4fe4e83b-f418-424d-b769-29cdfcf406f8",
          "status": "OK",
          "code": 200,
          "responseTime": 625,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Proforma Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Proforma Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad2848b-8b4c-4271-b4e1-20cd418786ae",
        "cursor": {
          "ref": "d9bb3de7-7326-47e5-835f-d11cee0794c4",
          "length": 24,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2d1be178-86fc-44fe-83cb-dd3979547876"
        },
        "item": {
          "id": "8ad2848b-8b4c-4271-b4e1-20cd418786ae",
          "name": "Verify Credential"
        },
        "response": {
          "id": "f45bf00b-bdbc-405b-ac02-d71a7ef58f2a",
          "status": "OK",
          "code": 200,
          "responseTime": 10186,
          "responseSize": 3018
        },
        "assertions": [
          {
            "assertion": "Customs verifies Proforma Invoice",
            "skipped": false
          },
          {
            "assertion": "Customs stores first workflow instance id: instance_1",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c79eb3-8374-4b0a-8637-c55db658a707",
        "cursor": {
          "ref": "06a97263-5a59-420f-bc34-067af84cda48",
          "length": 24,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0936d23d-70ac-40de-b71a-fc6d63ea33c3"
        },
        "item": {
          "id": "41c79eb3-8374-4b0a-8637-c55db658a707",
          "name": "Issue Credential"
        },
        "response": {
          "id": "1a90c9eb-54d4-4cba-8c24-78e614f7dca6",
          "status": "Created",
          "code": 201,
          "responseTime": 9417,
          "responseSize": 3564
        },
        "assertions": [
          {
            "assertion": "House Bill of Lading VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "a505180c-b26a-4578-95bc-60d6d1ba091b",
        "cursor": {
          "ref": "ddc9de52-cfd0-48e8-9905-06b5aa3a72af",
          "length": 24,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e85b6b43-2c3f-4069-96f4-4bdb29a9f0f6"
        },
        "item": {
          "id": "a505180c-b26a-4578-95bc-60d6d1ba091b",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "836e156c-7228-4652-ba79-4531564c360f",
          "status": "OK",
          "code": 200,
          "responseTime": 153,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5d60e2-3158-48ad-9194-04f4e321815c",
        "cursor": {
          "ref": "b5bcfb04-6278-4356-86f5-a8db4566c0c9",
          "length": 24,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c3246571-3656-4679-a385-1dea5dbaecc1"
        },
        "item": {
          "id": "ca5d60e2-3158-48ad-9194-04f4e321815c",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "d82a7e58-c995-45ef-9e1f-a62a47b86170",
          "status": "Created",
          "code": 201,
          "responseTime": 9405,
          "responseSize": 4396
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb81aaa7-5956-43d7-85de-954f72577167",
        "cursor": {
          "ref": "c671e626-acca-45d3-90e2-d5c90ff64876",
          "length": 24,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b86ae928-f6f0-43f3-a509-2573a02d4a77"
        },
        "item": {
          "id": "bb81aaa7-5956-43d7-85de-954f72577167",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "00d64527-9c1d-48d9-bc47-d36aa13f0f7d",
          "status": "OK",
          "code": 200,
          "responseTime": 501,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented House Bill of Lading to Customs",
            "skipped": false
          },
          {
            "assertion": "House Bill of Lading VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9980d15e-686d-41da-99a5-76edd0998a69",
        "cursor": {
          "ref": "684ca339-9be5-470b-8cf6-9bfbbd7f5ef6",
          "length": 24,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "71302adf-f339-4b03-b8d7-ea72f59ff1e9"
        },
        "item": {
          "id": "9980d15e-686d-41da-99a5-76edd0998a69",
          "name": "Verify Credential"
        },
        "response": {
          "id": "4b8d2c92-1e8b-400d-b6b7-1ba87def922c",
          "status": "OK",
          "code": 200,
          "responseTime": 8756,
          "responseSize": 3092
        },
        "assertions": [
          {
            "assertion": "Customs verifies House Bill of Lading",
            "skipped": false
          },
          {
            "assertion": "Customs stores first workflow instance id: instance_2",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa3e912-d6ba-4388-88b2-8dcdb6122fc1",
        "cursor": {
          "ref": "6c938678-6667-435f-9fef-86d0d4e204d7",
          "length": 24,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0c911fa2-fb18-4c44-acfe-7950bfa016fc"
        },
        "item": {
          "id": "afa3e912-d6ba-4388-88b2-8dcdb6122fc1",
          "name": "Issue Credential"
        },
        "response": {
          "id": "6b423993-c884-4008-bd70-0ad43c235fa4",
          "status": "Created",
          "code": 201,
          "responseTime": 5119,
          "responseSize": 3504
        },
        "assertions": [
          {
            "assertion": "Commercial Invoice VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebc7248-324c-4ef0-8f88-f180d125a8cd",
        "cursor": {
          "ref": "ecef49a4-41dd-42c2-8e65-8d69a93b4522",
          "length": 24,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f876bc4c-0fd4-4a7c-9a09-ddbf58cac46b"
        },
        "item": {
          "id": "6ebc7248-324c-4ef0-8f88-f180d125a8cd",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "1d785d51-8b21-40f9-9de8-927e98bce016",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Freight Forwarder",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16ca597-5603-4f34-ac54-95617f8753e9",
        "cursor": {
          "ref": "123eeaae-3b82-47af-863c-6bc841d27209",
          "length": 24,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "86b4c33f-b6b8-4bd2-88cd-03526badaeae"
        },
        "item": {
          "id": "f16ca597-5603-4f34-ac54-95617f8753e9",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "ec40760a-25ab-4ab5-8ead-0d18a1a0b6f6",
          "status": "Created",
          "code": 201,
          "responseTime": 6401,
          "responseSize": 4336
        },
        "assertions": [
          {
            "assertion": "Importer VP of Commercial Invoice with workflow instance 'instance_1' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0d7fbb-0bc2-4439-a84d-ac30cf8b8e03",
        "cursor": {
          "ref": "691b00b9-8ea8-4817-bc0c-ed5b8a047a0b",
          "length": 24,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "20b29ca6-29b4-4856-9033-91a5ca941e2c"
        },
        "item": {
          "id": "be0d7fbb-0bc2-4439-a84d-ac30cf8b8e03",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "7b162f25-d24d-43f7-97dc-361df13fe5ac",
          "status": "OK",
          "code": 200,
          "responseTime": 373,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Commercial Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b39cbef-7df4-4ead-a751-f6f844ca64d8",
        "cursor": {
          "ref": "c24341e4-1174-4d3e-b323-64e70091b9cc",
          "length": 24,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "970d2613-138f-4e03-b31a-82e7f40e7ec8"
        },
        "item": {
          "id": "2b39cbef-7df4-4ead-a751-f6f844ca64d8",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "bfea7cd2-eb85-4d2b-b066-81865710e2ff",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "5692d37a-bbe6-4e05-84ac-fdd6a32a461d",
        "cursor": {
          "ref": "5ebbf176-3cf9-44a5-af8f-1ae9b3c10aa6",
          "length": 24,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4dff2b34-ceac-440f-ada4-425383608b8e"
        },
        "item": {
          "id": "5692d37a-bbe6-4e05-84ac-fdd6a32a461d",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "97d3f2d1-67fe-4199-9fa5-84733c42f5f4",
          "status": "Created",
          "code": 201,
          "responseTime": 6341,
          "responseSize": 4349
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3be7e4a-502f-4f05-9e0e-484b2bfac1a1",
        "cursor": {
          "ref": "2d61bfae-19b2-440f-a1a7-cc59da9410cc",
          "length": 24,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "26c53eb2-7eef-443c-8d54-0de890261fe4"
        },
        "item": {
          "id": "f3be7e4a-502f-4f05-9e0e-484b2bfac1a1",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "cecc086e-6f21-48a0-b05d-319fdfe4df40",
          "status": "OK",
          "code": 200,
          "responseTime": 358,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented Commercial Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80cb42f-e7e4-41ba-be91-187dfe0900f9",
        "cursor": {
          "ref": "6b7e6b12-5628-484e-bc73-31316fc9fddf",
          "length": 24,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "aca1d799-bb36-4d8a-952e-e927828cf069"
        },
        "item": {
          "id": "d80cb42f-e7e4-41ba-be91-187dfe0900f9",
          "name": "Join Workflow Graphs"
        },
        "response": {
          "id": "d2df52a2-d8bd-4d71-b635-43f12d41f76a",
          "status": "OK",
          "code": 200,
          "responseTime": 8575,
          "responseSize": 3092
        },
        "assertions": [
          {
            "assertion": "Customs verifies Commercial Invoice",
            "skipped": false
          },
          {
            "assertion": "Customs checks known workflow instance ids and join the workflows",
            "skipped": false
          }
        ]
      }
    ]
  }
}