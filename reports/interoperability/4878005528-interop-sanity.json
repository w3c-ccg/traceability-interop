{
  "collection": {
    "info": {
      "_postman_id": "5f758c01-00c0-41e7-acb7-d2e6a9b36116",
      "name": "Test Report Demo",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ef5ced81-fb8d-40c4-abf0-6d4fe69497ef",
        "name": "Discover API Configuration",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "identifiers",
              "did:web:api.did.actor:api"
            ],
            "host": [
              "api",
              "did",
              "actor"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "bae8a76e-b1fd-418f-9631-6a5070b33eda",
              "type": "text/javascript",
              "exec": [
                "const jsonResponse = pm.response.json();",
                "",
                "pm.test(\"The DID Document MUST contain 'assertionMethod' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.assertionMethod).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.assertionMethod[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"issuer_did_url\", jsonResponse.didDocument.assertionMethod[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'authentication' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.authentication).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.authentication[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"holder_did_url\", jsonResponse.didDocument.authentication[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'service'\", function () {",
                "    pm.expect(jsonResponse.didDocument.service).to.be.an(\"array\");",
                "    pm.environment.set(\"traceability_api_root\", jsonResponse.didDocument.service[0].serviceEndpoint);",
                "});"
              ],
              "_lastExecutionId": "211c00d2-3801-4211-9161-d71c3b754173"
            }
          }
        ]
      },
      {
        "id": "cf3f9606-f351-4333-b291-9b7cc55906f2",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"credential\": {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\"\n    ],\n    \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n    \"type\": [\n      \"VerifiableCredential\"\n    ],\n    \"issuer\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\",\n    \"issuanceDate\": \"{{$isoTimestamp}}\",\n    \"credentialSubject\": {\n        \"id\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\"\n    }\n  },\n  \"options\": {\n    \"type\": \"Ed25519Signature2018\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65014047-ade8-483b-946b-f723573c3781",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df3c3da2-1f5a-4f95-83d0-b25c9546da56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "923682cb-34c1-42bc-8823-2216ebe10605",
              "type": "text/javascript",
              "exec": [
                "const {verifiableCredential} = pm.response.json();",
                "",
                "pm.test(\"The Verifiable Credential MUST have a 'proof'\", function () {",
                "    pm.expect(verifiableCredential.proof).to.be.an(\"object\");",
                "    pm.environment.set(\"verifiable_credential\", JSON.stringify(verifiableCredential));",
                "});",
                ""
              ],
              "_lastExecutionId": "dda848ec-b72d-4469-ae30-8d4a5f1eaa23"
            }
          }
        ]
      },
      {
        "id": "4af8120d-eeb9-4afe-881c-2bbcc1a5d417",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "verify"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiableCredential\": {{verifiable_credential}}\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "995256f3-0543-4003-ba34-c0a5062c6d13",
              "type": "text/javascript",
              "exec": [
                "const verification = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have been verified\", function () {",
                "    pm.expect(verification.verified).to.eql(true);",
                "});",
                ""
              ],
              "_lastExecutionId": "6112ce0e-c9d1-41cc-9fea-624fdf39b505"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 2435.3333333333335,
      "responseMin": 260,
      "responseMax": 5402,
      "responseSd": 2172.5096598685636,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683162139807,
      "completed": 1683162147205
    },
    "executions": [
      {
        "id": "ef5ced81-fb8d-40c4-abf0-6d4fe69497ef",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4b9f0867-6d32-4c12-8294-2c42a5b32bbd",
          "httpRequestId": "d08a2a10-276f-4bbb-98c4-9e93f8974921"
        },
        "item": {
          "id": "ef5ced81-fb8d-40c4-abf0-6d4fe69497ef",
          "name": "Discover API Configuration"
        },
        "response": {
          "id": "64668cdc-44ba-4a29-98c4-426f2f395cbf",
          "status": "OK",
          "code": 200,
          "responseTime": 5402,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "The DID Document MUST contain 'assertionMethod' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'authentication' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'service'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3f9606-f351-4333-b291-9b7cc55906f2",
        "cursor": {
          "ref": "5e961dc3-0c82-4052-ad72-ea1036b57756",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e8d5278a-e282-4c2f-b66e-52ad6ca74be5"
        },
        "item": {
          "id": "cf3f9606-f351-4333-b291-9b7cc55906f2",
          "name": "Issue Credential"
        },
        "response": {
          "id": "52cd481c-ebfa-4d19-952e-55f7e99f1d57",
          "status": "Created",
          "code": 201,
          "responseTime": 1644,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have a 'proof'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af8120d-eeb9-4afe-881c-2bbcc1a5d417",
        "cursor": {
          "ref": "4cc9289f-55ac-498d-8d6a-fba292fc56f4",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "832ab741-1b1e-4ee8-970f-ecc9a4965666"
        },
        "item": {
          "id": "4af8120d-eeb9-4afe-881c-2bbcc1a5d417",
          "name": "Verify Credential"
        },
        "response": {
          "id": "be3d2cfd-4a16-4e16-94bf-9195305cfc72",
          "status": "OK",
          "code": 200,
          "responseTime": 260,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have been verified",
            "skipped": false
          }
        ]
      }
    ]
  }
}