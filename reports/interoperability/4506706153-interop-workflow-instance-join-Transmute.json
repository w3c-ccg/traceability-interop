{
  "collection": {
    "info": {
      "_postman_id": "c0814470-0c07-43ad-9ed4-2ad4b125c937",
      "name": "Workflow Instance Join",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e65eb2e6-16b3-4480-82aa-2891085020e6",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_1_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_1_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_1_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_1_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "07ab3cd9-d8f4-451f-9065-b0e0a0e63bd9",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_1_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_1_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "686e1e5a-0d76-4806-bba3-652354532bb1"
            }
          }
        ]
      },
      {
        "id": "9030c90e-4893-4b02-9692-aac866d60cf3",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_2_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_2_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_2_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_2_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "abe37152-6e77-4bed-86c9-2cacb8d64ced",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_2_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_2_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "f34f395c-cbac-4df0-a3e9-2ddf8300e4e6"
            }
          }
        ]
      },
      {
        "id": "da96b786-4df4-45ce-bdc7-27ebdf2621d2",
        "name": "Get Access Token",
        "request": {
          "url": {
            "host": [
              "{{ORG_3_TOKEN_ENDPOINT}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "audience",
                "value": "{{ORG_3_TOKEN_AUDIENCE}}"
              },
              {
                "key": "client_id",
                "value": "{{ORG_3_CLIENT_ID}}"
              },
              {
                "key": "client_secret",
                "value": "{{ORG_3_CLIENT_SECRET}}"
              },
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "scope",
                "value": "resolve:dids issue:credentials prove:presentations verify:presentations"
              }
            ]
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9baa81f6-1ab6-476a-8ead-2074a7cc3dcf",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Importer application has access token\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"`org_3_access_token` persisted to collectionVariables\", function() {",
                "    const { access_token } = pm.response.json()",
                "    pm.collectionVariables.set(\"org_3_access_token\", access_token);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "7664ddee-c557-4554-9a28-29870f55eade"
            }
          }
        ]
      },
      {
        "id": "1518d6af-223c-42bb-a457-9de1f941d8bf",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_1_DID_WEB}}"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4abf9a92-2748-489a-a500-fee5996c3e81",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_1_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_1_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Importer has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_1_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Importer has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_1_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "10200c22-30a5-4954-8afb-ffc2e8012ddb"
            }
          }
        ]
      },
      {
        "id": "432aaf18-99a6-4217-9089-df6f4bce39fb",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_2_DID_WEB}}"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4dc9e4c7-0686-4b5e-bcac-2efcec74e05a",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_2_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_2_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Freight Forwarder has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_2_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Freight Forwarder has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_2_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "35df95de-b449-48d7-870c-dde1436482e6"
            }
          }
        ]
      },
      {
        "id": "7863e4fd-65c2-4b09-a3d8-1588a89ad122",
        "name": "Get Organization DIDs",
        "request": {
          "url": {
            "path": [
              "identifiers",
              "{{ORG_3_DID_WEB}}"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "883d4556-26b2-47f9-a66d-fd77c2283791",
              "type": "text/javascript",
              "exec": [
                "const { didDocument } = pm.response.json()",
                "pm.collectionVariables.set(\"org_3_holder\", didDocument.id);",
                "pm.collectionVariables.set(\"org_3_tenant_url\", didDocument.service[0].serviceEndpoint);",
                "",
                "pm.test(\"Customs has holder DID\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_3_holder\")).to.not.be.undefined;",
                "});",
                "",
                "pm.test(\"Customs has service endpoint\", function () {",
                "     pm.expect(pm.collectionVariables.get(\"org_3_tenant_url\")).to.not.be.undefined;",
                "});"
              ],
              "_lastExecutionId": "92d82aa8-c508-4aa5-bff4-9b3b00bdc011"
            }
          }
        ]
      },
      {
        "id": "bf59b830-f456-4acd-a62b-6a7c621b139d",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\",\n            \"CommercialInvoiceCertificate\"\n        ],\n        \"name\": \"Commercial Invoice Certificate\",\n        \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n        \"issuer\": {\n            \"id\": \"{{org_1_holder}}\",\n            \"type\": [\n                \"Organization\"\n            ],\n            \"address\": {\n                \"type\": [\n                    \"PostalAddress\"\n                ],\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": [\n                \"Invoice\"\n            ],\n            \"portOfEntry\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"destinationCountry\": \"MEX\",\n            \"purchaseDate\": \"2021-02-21\",\n            \"seller\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                    \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                    \"addressLocality\": \"Tsubame-shi\",\n                    \"addressRegion\": \"Niigata-ken\",\n                    \"postalCode\": \"959-0215\",\n                    \"addressCountry\": \"Japan\"\n                }\n            },\n            \"buyer\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"shipToParty\": {\n                \"type\": [\n                    \"Organization\"\n                ],\n                \"address\": {\n                    \"type\": [\n                        \"PostalAddress\"\n                    ],\n                    \"organizationName\": \"Generic Motors of America\",\n                    \"streetAddress\": \"12 Generic Motors Dr\",\n                    \"addressLocality\": \"Detroit\",\n                    \"addressRegion\": \"Michigain\",\n                    \"postalCode\": \"48232-5170\",\n                    \"addressCountry\": \"USA\"\n                }\n            },\n            \"itemsShipped\": [\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"unitCode\": \"lbs\",\n                            \"value\": \"16500\"\n                        }\n                    },\n                    \"itemCount\": 5,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"82500\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 5200,\n                        \"priceCurrency\": \"USD\"\n                    }\n                },\n                {\n                    \"type\": \"TradeLineItem\",\n                    \"product\": {\n                        \"manufacturer\": {\n                            \"type\": \"Organization\",\n                            \"address\": {\n                                \"type\": \"PostalAddress\",\n                                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                                \"addressLocality\": \"Tsubame-shi\",\n                                \"addressRegion\": \"Niigata-ken\",\n                                \"postalCode\": \"959-0215\",\n                                \"addressCountry\": \"Japan\"\n                            }\n                        },\n                        \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n                        \"weight\": {\n                            \"type\": \"QuantitativeValue\",\n                            \"value\": \"12680\",\n                            \"unitCode\": \"lbs\"\n                        }\n                    },\n                    \"itemCount\": 20,\n                    \"tradeLineItemWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"253600\",\n                        \"unitCode\": \"lbs\"\n                    },\n                    \"priceSpecification\": {\n                        \"type\": \"PriceSpecification\",\n                        \"price\": 4400,\n                        \"priceCurrency\": \"USD\"\n                    }\n                }\n            ],\n            \"totalWeight\": {\n                \"type\": \"QuantitativeValue\",\n                \"value\": \"336100\",\n                \"unitCode\": \"lbs\"\n            },\n            \"totalPaymentDue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 9600,\n                \"priceCurrency\": \"USD\"\n            }\n        }\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5ad6beae-dae0-4dff-b00d-f92421700dc5",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Proforma Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      const {verifiableCredential} = pm.response.json();",
                "      pm.collectionVariables.set('importers_proforma_invoice_vc', JSON.stringify(verifiableCredential));",
                "  });"
              ],
              "_lastExecutionId": "7fc24f3b-d8bb-45bb-bc71-8ac9a369a1c1"
            }
          }
        ]
      },
      {
        "id": "f1bf1e98-3b87-4dfc-b8d2-45d0bf6404af",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "cf280f9e-8d8c-47da-9f68-e7d78e8b49f4",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "f1917ff7-cd0e-4bf8-bcf9-e48621ad8244"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "c79b21d7-01ee-4dff-b578-e0f5b4a08f82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13fd111d-1b8c-4638-87dc-35dae6f33ee4"
            }
          }
        ]
      },
      {
        "id": "e30f2ab3-fa14-44f0-8d77-d89a8691e33e",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_proforma_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5b880e4c-1b4e-47fe-9b7f-4971636912f2",
              "type": "text/javascript",
              "exec": [
                "const {verifiablePresentation} = pm.response.json();",
                "pm.collectionVariables.set(\"importers_proforma_invoice_presented_to_customs\", JSON.stringify(verifiablePresentation));",
                "",
                "pm.test(\"Importer VP of Proforma Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "9ae164f9-de52-4347-a32f-d559b0fa7695"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "b855cd29-ae88-4aa0-a10a-81c0ae499a1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "292717a2-af8a-42c8-88c1-8ebc43b31531"
            }
          }
        ]
      },
      {
        "id": "561bb98a-3869-43d9-882f-a2106bab0c8e",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_proforma_invoice_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f3942a2a-191b-4a13-a370-d57421a089ac",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Proforma Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Proforma Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "42804e66-6eb5-43b8-bb5b-301ccc3e27c1"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "73bd81f4-4e00-47ce-86fc-3c206542b7cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b780e37a-4d66-4e7d-bde4-cb04227443e2"
            }
          }
        ]
      },
      {
        "id": "6df7f8ae-fbac-4300-a2ca-518923e86e96",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{importers_proforma_invoice_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "757ff427-00f2-41fb-9841-d38ae6cb1486",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Proforma Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"importers_proforma_invoice_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.collectionVariables.set(\"customs_first_workflow_instance_id\", workflowInstances[0]);",
                "});",
                "",
                ""
              ],
              "_lastExecutionId": "85f4c1da-fd48-4330-9220-214e3d48769e"
            }
          }
        ]
      },
      {
        "id": "608ed895-60a5-4f34-bf39-d4a8e4f6bf73",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"did:key:z6MkmbqKc6KncFZUbVJwUppttTkiMAtnVJ5wzC5oVBWci3pc\",\n        \"type\": [\n            \"VerifiableCredential\",\n            \"HouseBillOfLadingCertificate\"\n        ],\n        \"name\": \"House Bill Of Lading\",\n        \"issuanceDate\": \"2022-03-04T13:40:00Z\",\n        \"issuer\": {\n            \"type\": \"Organization\",\n            \"id\": \"{{org_2_holder}}\",\n            \"name\": \"World Forward, Inc.\",\n            \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"MCL Multi Container Line LTD.\",\n                \"streetAddress\": \"Well Fung Ind Centre\",\n                \"addressLocality\": \"Kwai Chung\",\n                \"addressRegion\": \"Hong Kong\",\n                \"addressCountry\": \"Hong Kong\"\n            }\n        },\n        \"credentialSubject\": {\n            \"type\": \"HouseBillOfLading\",\n            \"billOfLadingNumber\": \"FF873363210A\",\n            \"bookingNumber\": [\n                \"FF873363210\"\n            ],\n            \"shipper\": {\n                \"type\": \"Organization\",\n                \"name\": \"Espresso Italiano Co.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"Via Vico Ferrovia 5\",\n                    \"addressLocality\": \"Goro\",\n                    \"addressRegion\": \"Ferrara\",\n                    \"postalCode\": \"44020\",\n                    \"addressCountry\": \"IT\"\n                },\n                \"email\": \"sales@espresso-italiano.example.com\",\n                \"phoneNumber\": \"+39 0351 9067195\"\n            },\n            \"consignee\": {\n                \"type\": \"Organization\",\n                \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                \"description\": \"Coffee Machine Imports\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"streetAddress\": \"3934 Spinnaker Lane\",\n                    \"addressLocality\": \"Joliet\",\n                    \"addressRegion\": \"Illinois\",\n                    \"postalCode\": \"60432\",\n                    \"addressCountry\": \"US\"\n                }\n            },\n            \"notifyParty\": [\n                {\n                    \"type\": \"Organization\",\n                    \"name\": \"Prosumer Coffee Supplies, Ltd.\",\n                    \"description\": \"Coffee Machine Imports\",\n                    \"address\": {\n                        \"type\": \"PostalAddress\",\n                        \"streetAddress\": \"3934 Spinnaker Lane\",\n                        \"addressLocality\": \"Joliet\",\n                        \"addressRegion\": \"Illinois\",\n                        \"postalCode\": \"60432\",\n                        \"addressCountry\": \"US\"\n                    }\n                }\n            ],\n            \"carrier\": {\n                \"type\": \"Organization\",\n                \"id\": \"did:key:z6MktHQo3fRRohk44dsbE76CuiTpBmyMWq2VVjvV6aBSeE3U\",\n                \"name\": \"World Forward, Inc.\",\n                \"address\": {\n                    \"type\": \"PostalAddress\",\n                    \"organizationName\": \"MCL Multi Container Line LTD.\",\n                    \"streetAddress\": \"Well Fung Ind Centre\",\n                    \"addressLocality\": \"Kwai Chung\",\n                    \"addressRegion\": \"Hong Kong\",\n                    \"addressCountry\": \"Hong Kong\"\n                }\n            },\n            \"mainCarriageTransportMovement\": {\n                \"type\": \"Transport\",\n                \"vesselNumber\": \"MS Seven Seas\",\n                \"voyageNumber\": \"Atl-W0425\"\n            },\n            \"portOfLoading\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"ITMIL\"\n            },\n            \"portOfDischarge\": {\n                \"type\": \"Place\",\n                \"unLocode\": \"USLGB\"\n            },\n            \"totalNumberOfPackages\": 2200,\n            \"transportEquipmentQuantity\": 2,\n            \"includedConsignmentItems\": [\n                {\n                    \"marksAndNumbers\": \"Espresso Italiano\",\n                    \"commodity\": {\n                        \"type\": \"Commodity\",\n                        \"commodityCode\": \"851671\",\n                        \"commodityCodeType\": \"HS\"\n                    },\n                    \"packageQuantity\": 220,\n                    \"netWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1460\"\n                    },\n                    \"grossWeight\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"unitCode\": \"kg\",\n                        \"value\": \"1590\"\n                    },\n                    \"grossVolume\": {\n                        \"type\": \"QuantitativeValue\",\n                        \"value\": \"85\",\n                        \"unitCode\": \"cmb\"\n                    }\n                }\n            ],\n            \"freightAndCharges\": {\n                \"type\": \"ServiceCharge\",\n                \"chargeCode\": \"basicFreight\",\n                \"paymentTerm\": \"collect\",\n                \"chargeText\": \"Negotiated ocean freight\",\n                \"rate\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 225,\n                    \"priceCurrency\": \"USD\"\n                },\n                \"calculationBasis\": \"Per container\",\n                \"appliedAmount\": {\n                    \"type\": \"PriceSpecification\",\n                    \"price\": 450,\n                    \"priceCurrency\": \"USD\"\n                }\n            },\n            \"declaredValue\": {\n                \"type\": \"PriceSpecification\",\n                \"price\": 24000,\n                \"priceCurrency\": \"USD\"\n            },\n            \"termsAndConditions\": \"https://terms-of-shipment.freightforwarder.example.com\"\n        }\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a2271348-e12b-427f-b224-04fdb33fc7e2",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"House Bill of Lading VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      const {verifiableCredential} = pm.response.json();",
                "      pm.collectionVariables.set('freight_forwarders_hbol_vc', JSON.stringify(verifiableCredential));",
                "  });"
              ],
              "_lastExecutionId": "e8730736-2fdd-458c-8686-4420b6e49a4a"
            }
          }
        ]
      },
      {
        "id": "737b3a68-6a06-426c-8351-81bcdd13b3e9",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "cc06931e-ce60-4ce3-9354-b84c0c2119a4",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "69b957b4-3ef9-499e-8057-6dd0941c924a"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "b51cff59-c597-4647-9739-2652b26db312",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bb28b0f-4d47-482e-a393-ac2ae7526eab"
            }
          }
        ]
      },
      {
        "id": "b325976c-baee-461b-8a13-a74d2893d900",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{freight_forwarders_hbol_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ae9703da-de15-4c80-ab08-6960c41b7717",
              "type": "text/javascript",
              "exec": [
                "const {verifiablePresentation} = pm.response.json();",
                "pm.collectionVariables.set(\"freight_forwarders_house_bill_presented_to_customs\", JSON.stringify(verifiablePresentation));",
                "",
                "pm.test(\"Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "e563bb3a-d821-4a32-b387-9a68b3a81cda"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "f19e1ee7-7eac-4669-a22c-6764a10e66d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7270cd3-ddb5-4d7a-8510-5eb5d84e845f"
            }
          }
        ]
      },
      {
        "id": "dc41fae6-507e-4e4b-bf68-5bdc78468db4",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_house_bill_presented_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "93134ce9-df45-4ed6-8743-adf6d66dc7f5",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented House Bill of Lading to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"House Bill of Lading VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "b69b242f-410e-469f-b04f-1feb1cacb278"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "2a5de27f-b9f1-422d-a72e-0ef77d2a77f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb9edb96-18ae-4cc5-b64e-16ad3f9bb519"
            }
          }
        ]
      },
      {
        "id": "82c1122c-9e64-4eab-bef5-5fdd80090f8d",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_house_bill_presented_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "dbe307ce-4bb5-447e-b6db-5a71bc3cf002",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies House Bill of Lading\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"freight_forwarders_house_bill_presented_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs stores first workflow instance id: \" + workflowInstances[0], function () {",
                "    pm.collectionVariables.set(\"customs_second_workflow_instance_id\", workflowInstances[0]);",
                "});",
                ""
              ],
              "_lastExecutionId": "d48205cd-f48a-4194-830f-893d150385b2"
            }
          }
        ]
      },
      {
        "id": "20788115-61f5-4936-873a-5cb8a72892c4",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"credential\": \n      {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\",\n      \"https://w3id.org/traceability/v1\"\n    ],\n    \"id\": \"did:key:z6MkhNsCYEQQWJdyAbfaMZHz4UG6UZoQUGot7z7tBNsbz1JG\",\n    \"type\": [\n      \"VerifiableCredential\",\n      \"CommercialInvoiceCertificate\"\n    ],\n    \"name\": \"Commercial Invoice Certificate\",\n    \"issuanceDate\": \"2022-02-23T11:55:00Z\",\n    \"issuer\": {\n      \"id\": \"{{org_1_holder}}\",\n      \"type\": [\n        \"Organization\"\n      ],\n      \"address\": {\n        \"type\": [\n          \"PostalAddress\"\n        ],\n        \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n        \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n        \"addressLocality\": \"Tsubame-shi\",\n        \"addressRegion\": \"Niigata-ken\",\n        \"postalCode\": \"959-0215\",\n        \"addressCountry\": \"Japan\"\n      }\n    },\n    \"credentialSubject\": {\n      \"type\": [\n        \"Invoice\"\n      ],\n      \"portOfEntry\": {\n        \"type\": \"Place\",\n        \"unLocode\": \"USLGB\"\n      },\n      \"destinationCountry\": \"MEX\",\n      \"purchaseDate\": \"2021-02-21\",\n      \"seller\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n          \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n          \"addressLocality\": \"Tsubame-shi\",\n          \"addressRegion\": \"Niigata-ken\",\n          \"postalCode\": \"959-0215\",\n          \"addressCountry\": \"Japan\"\n        }\n      },\n      \"buyer\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"shipToParty\": {\n        \"type\": [\n          \"Organization\"\n        ],\n        \"address\": {\n          \"type\": [\n            \"PostalAddress\"\n          ],\n          \"organizationName\": \"Generic Motors of America\",\n          \"streetAddress\": \"12 Generic Motors Dr\",\n          \"addressLocality\": \"Detroit\",\n          \"addressRegion\": \"Michigain\",\n          \"postalCode\": \"48232-5170\",\n          \"addressCountry\": \"USA\"\n        }\n      },\n      \"itemsShipped\": [\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"UNS S30400 chromium-nickel stainless steel rolls.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"unitCode\": \"lbs\",\n              \"value\": \"16500\"\n            }\n          },\n          \"itemCount\": 5,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"82500\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 5200,\n            \"priceCurrency\": \"USD\"\n          }\n        },\n        {\n          \"type\": \"TradeLineItem\",\n          \"product\": {\n            \"manufacturer\": {\n              \"type\": \"Organization\",\n              \"address\": {\n                \"type\": \"PostalAddress\",\n                \"organizationName\": \"Aishi Metal Shinzo Co., Ltd.\",\n                \"streetAddress\": \"1651, Shimonakano, Yoshida\",\n                \"addressLocality\": \"Tsubame-shi\",\n                \"addressRegion\": \"Niigata-ken\",\n                \"postalCode\": \"959-0215\",\n                \"addressCountry\": \"Japan\"\n              }\n            },\n            \"description\": \"Galvalannealed ASTM A-653 zinc-iron alloy-coated steel sheets.\",\n            \"weight\": {\n              \"type\": \"QuantitativeValue\",\n              \"value\": \"12680\",\n              \"unitCode\": \"lbs\"\n            }\n          },\n          \"itemCount\": 20,\n          \"tradeLineItemWeight\": {\n            \"type\": \"QuantitativeValue\",\n            \"value\": \"253600\",\n            \"unitCode\": \"lbs\"\n          },\n          \"priceSpecification\": {\n            \"type\": \"PriceSpecification\",\n            \"price\": 4400,\n            \"priceCurrency\": \"USD\"\n          }\n        }\n      ],\n      \"totalWeight\": {\n        \"type\": \"QuantitativeValue\",\n        \"value\": \"336100\",\n        \"unitCode\": \"lbs\"\n      },\n      \"totalPaymentDue\": {\n        \"type\": \"PriceSpecification\",\n        \"price\": 9600,\n        \"priceCurrency\": \"USD\"\n      }\n    }\n  },\n  \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f1becdec-adfb-4d80-bfce-6d8f3a9f891a",
              "type": "text/javascript",
              "exec": [
                "  pm.test(\"Commercial Invoice VC issued\", function () {",
                "      pm.response.to.have.status(201);",
                "      const {verifiableCredential} = pm.response.json();",
                "      pm.collectionVariables.set('importers_commercial_invoice_vc', JSON.stringify(verifiableCredential));",
                "  });"
              ],
              "_lastExecutionId": "a5ca8448-38a7-473b-9572-fa8736f4c715"
            }
          }
        ]
      },
      {
        "id": "522f4f82-0f43-454f-bd5b-32955d67da1b",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6e015fb2-80c7-4651-bc87-0c9f15048d1d",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_2_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_2_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Importer has authenticated to Freight Forwarder\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "db6534c6-d387-4cab-9a1c-2cd14c9f73dc"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "44710863-01ac-4752-8085-7f1eac4d7d4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aae97122-462c-438b-9061-f375359d34e4"
            }
          }
        ]
      },
      {
        "id": "1805899e-af4d-4d88-9e05-8c1221b3d740",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_1_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_1_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_2_domain}}\",\n        \"challenge\": \"{{org_2_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_1_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a001aee1-9ab9-460c-aa6f-ecdc4e189a1b",
              "type": "text/javascript",
              "exec": [
                "const {verifiablePresentation} = pm.response.json();",
                "pm.collectionVariables.set(\"importers_presentation_of_ci_to_freight_forwarder\", JSON.stringify(verifiablePresentation));",
                "",
                "pm.test(\"Importer VP of Commercial Invoice with workflow instance 'instance_1' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "aa0b6606-6a00-4059-8e71-5fd2c724beca"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "3061941b-98a1-48a0-9ef2-71fd20efcf70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e33a025b-d34c-4143-ad2f-027025259fa4"
            }
          }
        ]
      },
      {
        "id": "09d1a312-886d-48ea-952b-e1adba175881",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_2_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{importers_presentation_of_ci_to_freight_forwarder}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "eb0ccf59-f611-4915-bd48-acfd9a479993",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Importer has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "567281cb-d4ae-420a-8766-a720e0bc016d"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "999333e0-14db-4d91-9878-bbdb934289d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca28f532-47ee-4b9f-a757-e02a7893c199"
            }
          }
        ]
      },
      {
        "id": "8b41cc71-63cc-48d7-8bcd-221a4dd13757",
        "name": "Initiate Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "available"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": [\n        {\n          \"type\": [\n            \"VerifiableCredential\"\n          ],\n          \"reason\": \"We want to present credentials.\"\n        }\n      ]\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "57a3daea-77e8-458a-8067-32d4a362d90d",
              "type": "text/javascript",
              "exec": [
                "const responseJson = pm.response.json();",
                "pm.collectionVariables.set(\"org_3_domain\", responseJson.domain);",
                "pm.collectionVariables.set(\"org_3_challenge\", responseJson.challenge);",
                "",
                "pm.test(\"Freight Forwarder has authenticated to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "b090519b-94c2-478f-b54b-fb78d3710351"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "96e1fd79-5727-4fdb-9ab1-9f7f6fe0999f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd6527c0-7dee-402f-9ca5-d4359ffc484b"
            }
          }
        ]
      },
      {
        "id": "ed960c30-8cad-4874-9d91-71d94f0ffe20",
        "name": "Sign Presentation",
        "request": {
          "url": {
            "path": [
              "presentations",
              "prove"
            ],
            "host": [
              "{{ORG_2_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiablePresentation\",\n            \"TraceablePresentation\"\n        ],\n        \"workflow\": {\n            \"instance\": [\n                \"instance_1\", \n                \"instance_2\"\n            ],\n            \"definition\": [\n                \"definition_1\"\n            ]\n        },\n        \"holder\": \"{{org_2_holder}}\",\n        \"verifiableCredential\": [\n            {{importers_commercial_invoice_vc}}\n        ]\n    },\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_2_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7c0d7dfa-1260-4ea9-9737-44bc4d414615",
              "type": "text/javascript",
              "exec": [
                "const {verifiablePresentation} = pm.response.json();",
                "pm.collectionVariables.set(\"freight_forwarders_presentation_of_ci_to_customs\", JSON.stringify(verifiablePresentation));",
                "",
                "pm.test(\"Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "b20432c4-7ba4-4c5b-bf4b-04c538b5c444"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "947cc42e-8048-462f-8093-cd25aa91d989",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60cae23e-6b1f-4d38-b834-9201216ebd10"
            }
          }
        ]
      },
      {
        "id": "ff7a9157-6a21-4a66-bc58-a385d5e65ab2",
        "name": "Complete Exchange",
        "request": {
          "url": {
            "path": [
              "presentations",
              "submissions"
            ],
            "host": [
              "{{org_3_tenant_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{freight_forwarders_presentation_of_ci_to_customs}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "09aa32c1-2029-4bc6-8aee-eec642d4e7ef",
              "type": "text/javascript",
              "exec": [
                "",
                "// The expected response code for a \"Verify Presentation\" request is",
                "// `200 Success`.",
                "pm.test(\"Freight Forwarder has successfully presented Commercial Invoice to Customs\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "// Response should confirm the presentation is verified.",
                "pm.test(\"Commercial Invoice VP verification returned 'true'\", function() {",
                "    const { verified } = pm.response.json()",
                "    pm.expect(verified).to.be.true;",
                "});"
              ],
              "_lastExecutionId": "47f4f9fd-8c78-4e24-9507-f5515cffff20"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "b416137b-e82f-4537-88ed-4cf537616b54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ee250e2-8b8f-4b77-9db1-c388c670be35"
            }
          }
        ]
      },
      {
        "id": "dfab6013-2a2a-45a1-aadc-5af67f87cf0e",
        "name": "Join Workflow Graphs",
        "request": {
          "url": {
            "path": [
              "presentations",
              "verify"
            ],
            "host": [
              "{{ORG_3_BASE_URL}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiablePresentation\": {{freight_forwarders_presentation_of_ci_to_customs}},\n    \"options\": {\n        \"domain\": \"{{org_3_domain}}\",\n        \"challenge\": \"{{org_3_challenge}}\"\n    }\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{org_3_access_token}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9e800095-1967-46e8-8f19-ebab1f8c6abe",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Customs verifies Commercial Invoice\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "var workflowInstances = JSON.parse(pm.collectionVariables.get(\"freight_forwarders_presentation_of_ci_to_customs\")).workflow.instance",
                "",
                "pm.test(\"Customs checks known workflow instance ids and join the workflows\", function () {",
                "    pm.expect(workflowInstances[0]).to.eql(pm.collectionVariables.get(\"customs_first_workflow_instance_id\"));",
                "    pm.expect(workflowInstances[1]).to.eql(pm.collectionVariables.get(\"customs_second_workflow_instance_id\"));",
                "});",
                ""
              ],
              "_lastExecutionId": "9babcd91-50dc-47b1-9798-578483616956"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 36,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 37,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 3607.4166666666665,
      "responseMin": 98,
      "responseMax": 12097,
      "responseSd": 3854.929775805117,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679619958845,
      "completed": 1679620046068
    },
    "executions": [
      {
        "id": "e65eb2e6-16b3-4480-82aa-2891085020e6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 24,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "96926ebc-805b-4ac8-a2f2-c80f45a4ecb1",
          "httpRequestId": "9e838f71-dfd1-4140-a3d9-feacccbb6dbf"
        },
        "item": {
          "id": "e65eb2e6-16b3-4480-82aa-2891085020e6",
          "name": "Get Access Token"
        },
        "response": {
          "id": "2e285f12-01da-434d-ab45-c84e5531f973",
          "status": "OK",
          "code": 200,
          "responseTime": 682,
          "responseSize": 1050
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_1_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "9030c90e-4893-4b02-9692-aac866d60cf3",
        "cursor": {
          "ref": "51b93660-6635-4d6b-9a62-d56502711448",
          "length": 24,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2177ae7f-052c-4124-a8be-6a9a077a8646"
        },
        "item": {
          "id": "9030c90e-4893-4b02-9692-aac866d60cf3",
          "name": "Get Access Token"
        },
        "response": {
          "id": "7290b0ad-e7a8-4eb8-9220-3b015c7f2120",
          "status": "OK",
          "code": 200,
          "responseTime": 477,
          "responseSize": 1050
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_2_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "da96b786-4df4-45ce-bdc7-27ebdf2621d2",
        "cursor": {
          "ref": "0875e206-c733-42ea-883d-edca118e8d7e",
          "length": 24,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "acec5a34-2c6a-466a-8509-e41a4250469d"
        },
        "item": {
          "id": "da96b786-4df4-45ce-bdc7-27ebdf2621d2",
          "name": "Get Access Token"
        },
        "response": {
          "id": "dafd6e15-6ff8-435b-b434-12e70cfd1f2c",
          "status": "OK",
          "code": 200,
          "responseTime": 289,
          "responseSize": 1050
        },
        "assertions": [
          {
            "assertion": "Importer application has access token",
            "skipped": false
          },
          {
            "assertion": "`org_3_access_token` persisted to collectionVariables",
            "skipped": false
          }
        ]
      },
      {
        "id": "1518d6af-223c-42bb-a457-9de1f941d8bf",
        "cursor": {
          "ref": "6ab4d51f-6ea0-4b9c-9ad8-8bf06b26bf0c",
          "length": 24,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5e2e48c3-1d46-4058-8ce6-0735c4fe1da5"
        },
        "item": {
          "id": "1518d6af-223c-42bb-a457-9de1f941d8bf",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "318b2b5e-8f34-4069-8d12-7144d05002d9",
          "status": "OK",
          "code": 200,
          "responseTime": 1699,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Importer has holder DID",
            "skipped": false
          },
          {
            "assertion": "Importer has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "432aaf18-99a6-4217-9089-df6f4bce39fb",
        "cursor": {
          "ref": "edc97ba3-8830-4f14-802f-0a4a01b00c1b",
          "length": 24,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bb05391d-6571-41b5-a52f-cbc0c7d1cb09"
        },
        "item": {
          "id": "432aaf18-99a6-4217-9089-df6f4bce39fb",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "7c2cdad5-0a76-4cbe-b540-46debe3a34b1",
          "status": "OK",
          "code": 200,
          "responseTime": 1101,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has holder DID",
            "skipped": false
          },
          {
            "assertion": "Freight Forwarder has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "7863e4fd-65c2-4b09-a3d8-1588a89ad122",
        "cursor": {
          "ref": "7507693e-c6b4-42dd-b1c6-25f9da7e6947",
          "length": 24,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "be6fcea5-3771-4cde-bc15-5ae422c18400"
        },
        "item": {
          "id": "7863e4fd-65c2-4b09-a3d8-1588a89ad122",
          "name": "Get Organization DIDs"
        },
        "response": {
          "id": "2d8ef895-556b-4a37-b2c4-4d5f25c24846",
          "status": "OK",
          "code": 200,
          "responseTime": 1212,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "Customs has holder DID",
            "skipped": false
          },
          {
            "assertion": "Customs has service endpoint",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf59b830-f456-4acd-a62b-6a7c621b139d",
        "cursor": {
          "ref": "7e2d0316-febe-4e81-858f-be81c1da7a03",
          "length": 24,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6737da9d-396d-48b4-8e05-3711b069dd5e"
        },
        "item": {
          "id": "bf59b830-f456-4acd-a62b-6a7c621b139d",
          "name": "Issue Credential"
        },
        "response": {
          "id": "efc9eca4-bebc-42a8-b80a-9d51cc62098c",
          "status": "Created",
          "code": 201,
          "responseTime": 7146,
          "responseSize": 3440
        },
        "assertions": [
          {
            "assertion": "Proforma Invoice VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bf1e98-3b87-4dfc-b8d2-45d0bf6404af",
        "cursor": {
          "ref": "b45fbdc9-b10f-47d4-8c28-07ca6fd8ae0d",
          "length": 24,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9d6b169f-9dc8-48c9-8e35-a62346c9ebf4"
        },
        "item": {
          "id": "f1bf1e98-3b87-4dfc-b8d2-45d0bf6404af",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "e1f88b43-997b-4711-8f22-02621a732b81",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30f2ab3-fa14-44f0-8d77-d89a8691e33e",
        "cursor": {
          "ref": "937dc97c-3f9a-4dca-af43-a4020294ea03",
          "length": 24,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f5f739ae-3d61-4b07-b129-12387aa65ba5"
        },
        "item": {
          "id": "e30f2ab3-fa14-44f0-8d77-d89a8691e33e",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "3f8fbfab-50bb-4fd8-b206-4b759a645b56",
          "status": "Created",
          "code": 201,
          "responseTime": 6434,
          "responseSize": 4272
        },
        "assertions": [
          {
            "assertion": "Importer VP of Proforma Invoice with workflow instance 'instance_1' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "561bb98a-3869-43d9-882f-a2106bab0c8e",
        "cursor": {
          "ref": "6adecf14-dda5-4657-b362-58f3019920e5",
          "length": 24,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d2518892-bdf7-47a0-bce1-5d6c11a7fa4b"
        },
        "item": {
          "id": "561bb98a-3869-43d9-882f-a2106bab0c8e",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "9a863ac9-8757-4ee4-908b-96d18b1a33c6",
          "status": "OK",
          "code": 200,
          "responseTime": 446,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Proforma Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Proforma Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df7f8ae-fbac-4300-a2ca-518923e86e96",
        "cursor": {
          "ref": "fc8d37a9-056c-4414-bbe9-e4a89e8db160",
          "length": 24,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a7630fc0-6541-4e15-82e8-c3d6bcfb043d"
        },
        "item": {
          "id": "6df7f8ae-fbac-4300-a2ca-518923e86e96",
          "name": "Verify Credential"
        },
        "response": {
          "id": "f0956b5e-85ac-40af-b0fb-7c8b8714804a",
          "status": "OK",
          "code": 200,
          "responseTime": 8652,
          "responseSize": 3018
        },
        "assertions": [
          {
            "assertion": "Customs verifies Proforma Invoice",
            "skipped": false
          },
          {
            "assertion": "Customs stores first workflow instance id: instance_1",
            "skipped": false
          }
        ]
      },
      {
        "id": "608ed895-60a5-4f34-bf39-d4a8e4f6bf73",
        "cursor": {
          "ref": "c38d6484-93d2-4cd9-84d1-2c650645a061",
          "length": 24,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1373ad85-4449-4a44-a888-bfd292748a08"
        },
        "item": {
          "id": "608ed895-60a5-4f34-bf39-d4a8e4f6bf73",
          "name": "Issue Credential"
        },
        "response": {
          "id": "18d15330-6fc5-426a-899f-8785a27165b7",
          "status": "Created",
          "code": 201,
          "responseTime": 4664,
          "responseSize": 3564
        },
        "assertions": [
          {
            "assertion": "House Bill of Lading VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "737b3a68-6a06-426c-8351-81bcdd13b3e9",
        "cursor": {
          "ref": "0bcfcb0f-9877-4cf7-b430-3c8d2d0d7c00",
          "length": 24,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0984e213-07e5-4a3a-8c05-c308ea393cc8"
        },
        "item": {
          "id": "737b3a68-6a06-426c-8351-81bcdd13b3e9",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "e04754b2-adfe-4a6e-ace2-d2d63c8fac1f",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "b325976c-baee-461b-8a13-a74d2893d900",
        "cursor": {
          "ref": "514ea4e4-04cd-4253-aad0-8007400d731a",
          "length": 24,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "eb663859-46d8-41f3-bc02-c6ded79302aa"
        },
        "item": {
          "id": "b325976c-baee-461b-8a13-a74d2893d900",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "9482def5-808f-4d82-9847-0efac857d3b0",
          "status": "Created",
          "code": 201,
          "responseTime": 6209,
          "responseSize": 4396
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of House Bill of Lading with workflow instance 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc41fae6-507e-4e4b-bf68-5bdc78468db4",
        "cursor": {
          "ref": "c7a7d201-0059-4ae6-96fe-967e2c98e35a",
          "length": 24,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "248d3b61-b0ee-449e-aafc-9ed84720d31d"
        },
        "item": {
          "id": "dc41fae6-507e-4e4b-bf68-5bdc78468db4",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "92119e5d-753b-4277-b43e-e105faa1f6b0",
          "status": "OK",
          "code": 200,
          "responseTime": 499,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented House Bill of Lading to Customs",
            "skipped": false
          },
          {
            "assertion": "House Bill of Lading VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c1122c-9e64-4eab-bef5-5fdd80090f8d",
        "cursor": {
          "ref": "3fa875e8-d1ec-43a2-b01b-eef12ccd3a2a",
          "length": 24,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "367ca04f-05cf-4082-8c7c-784ad56549aa"
        },
        "item": {
          "id": "82c1122c-9e64-4eab-bef5-5fdd80090f8d",
          "name": "Verify Credential"
        },
        "response": {
          "id": "5e3ef842-7187-4c05-9ee8-92398252d7dc",
          "status": "OK",
          "code": 200,
          "responseTime": 12097,
          "responseSize": 3092
        },
        "assertions": [
          {
            "assertion": "Customs verifies House Bill of Lading",
            "skipped": false
          },
          {
            "assertion": "Customs stores first workflow instance id: instance_2",
            "skipped": false
          }
        ]
      },
      {
        "id": "20788115-61f5-4936-873a-5cb8a72892c4",
        "cursor": {
          "ref": "d20c7913-8be0-4ee6-aff2-c4502a97bbb7",
          "length": 24,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "159f7932-6a53-443d-ae6a-600b8f5efea6"
        },
        "item": {
          "id": "20788115-61f5-4936-873a-5cb8a72892c4",
          "name": "Issue Credential"
        },
        "response": {
          "id": "44a86ee5-470b-4512-8fa3-9807d38a969f",
          "status": "Created",
          "code": 201,
          "responseTime": 8070,
          "responseSize": 3504
        },
        "assertions": [
          {
            "assertion": "Commercial Invoice VC issued",
            "skipped": false
          }
        ]
      },
      {
        "id": "522f4f82-0f43-454f-bd5b-32955d67da1b",
        "cursor": {
          "ref": "4bddd721-b4de-472e-a140-9774d8df3982",
          "length": 24,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4c9e6569-3059-41f5-aa45-f024ff9743d6"
        },
        "item": {
          "id": "522f4f82-0f43-454f-bd5b-32955d67da1b",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "d4c920ca-2cbe-4d96-9670-f77c8159a681",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Importer has authenticated to Freight Forwarder",
            "skipped": false
          }
        ]
      },
      {
        "id": "1805899e-af4d-4d88-9e05-8c1221b3d740",
        "cursor": {
          "ref": "402c8e01-5ddc-44b7-ba0a-a3bd3cb7a63d",
          "length": 24,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6a3516e7-a6d7-41c4-9ee2-58b07ef01548"
        },
        "item": {
          "id": "1805899e-af4d-4d88-9e05-8c1221b3d740",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "e9f8a79c-219c-42d4-98b5-9296a5626f4c",
          "status": "Created",
          "code": 201,
          "responseTime": 6262,
          "responseSize": 4336
        },
        "assertions": [
          {
            "assertion": "Importer VP of Commercial Invoice with workflow instance 'instance_1' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d1a312-886d-48ea-952b-e1adba175881",
        "cursor": {
          "ref": "5ef45541-7793-44f9-a12b-34c81987721e",
          "length": 24,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "09d1e9ca-588c-48d9-937d-5a0acaf8f413"
        },
        "item": {
          "id": "09d1a312-886d-48ea-952b-e1adba175881",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "76b615ed-daed-4797-85c6-4e468f49a778",
          "status": "OK",
          "code": 200,
          "responseTime": 731,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Importer has successfully presented Commercial Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b41cc71-63cc-48d7-8bcd-221a4dd13757",
        "cursor": {
          "ref": "a7d86e03-55ee-4a28-b0b1-e8a97a9c1898",
          "length": 24,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3868ec10-3919-485f-bad2-ec4a24467ea8"
        },
        "item": {
          "id": "8b41cc71-63cc-48d7-8bcd-221a4dd13757",
          "name": "Initiate Exchange"
        },
        "response": {
          "id": "f20a0566-fe52-409d-a9a9-8e8e14d98a37",
          "status": "OK",
          "code": 200,
          "responseTime": 142,
          "responseSize": 234
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has authenticated to Customs",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed960c30-8cad-4874-9d91-71d94f0ffe20",
        "cursor": {
          "ref": "191ca595-9f3c-4ce6-aab4-42d23233552b",
          "length": 24,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "98870920-6308-49eb-8eab-ca3df801efde"
        },
        "item": {
          "id": "ed960c30-8cad-4874-9d91-71d94f0ffe20",
          "name": "Sign Presentation"
        },
        "response": {
          "id": "7a6229d1-6e21-41ef-a809-a625f30dfaa6",
          "status": "Created",
          "code": 201,
          "responseTime": 10448,
          "responseSize": 4349
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder VP of Commercial Invoice with workflow instances 'instance_1' and 'instance_2' proved",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7a9157-6a21-4a66-bc58-a385d5e65ab2",
        "cursor": {
          "ref": "c70a1717-0cd3-416b-ad2b-bff73f05c8ac",
          "length": 24,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9ea9d7c8-1bcf-40b1-9ffd-bb0f0a8cda08"
        },
        "item": {
          "id": "ff7a9157-6a21-4a66-bc58-a385d5e65ab2",
          "name": "Complete Exchange"
        },
        "response": {
          "id": "cf315e75-916d-42f1-8aa9-011eb91773d1",
          "status": "OK",
          "code": 200,
          "responseTime": 397,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "Freight Forwarder has successfully presented Commercial Invoice to Customs",
            "skipped": false
          },
          {
            "assertion": "Commercial Invoice VP verification returned 'true'",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfab6013-2a2a-45a1-aadc-5af67f87cf0e",
        "cursor": {
          "ref": "df985e90-76be-4dfd-9286-c766973d69dc",
          "length": 24,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f6dad027-8a88-47d0-bfd4-7106f4386d24"
        },
        "item": {
          "id": "dfab6013-2a2a-45a1-aadc-5af67f87cf0e",
          "name": "Join Workflow Graphs"
        },
        "response": {
          "id": "27772951-da32-425d-a93c-fe02c5465a4a",
          "status": "OK",
          "code": 200,
          "responseTime": 8601,
          "responseSize": 3092
        },
        "assertions": [
          {
            "assertion": "Customs verifies Commercial Invoice",
            "skipped": false
          },
          {
            "assertion": "Customs checks known workflow instance ids and join the workflows",
            "skipped": false
          }
        ]
      }
    ]
  }
}