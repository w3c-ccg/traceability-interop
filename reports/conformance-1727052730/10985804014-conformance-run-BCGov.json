{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4fce99bb-5ebc-47b7-b634-e1920531611a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4873661c-018a-4f17-ad91-785aad1854ba",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05f92027-ff9a-4145-b990-a83b9f8a30ba",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4b415342-7132-405f-aa5b-b9bc3402dd80"
                }
              }
            ]
          },
          {
            "id": "bebdaa4e-8d8f-4e7d-82a9-aeab93e05ac7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3437c68-f876-4442-8aa1-acede2a8c6df",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "898ca1a8-e0fb-4135-8d0f-a44a52871708"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "580405d8-c00b-4dda-afdb-bdb8f4628ebc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "49e30561-c5a8-4424-9db8-e11d54ad01b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3c89ace-56ee-492f-bfbf-782ae49c2e7c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6981154-b656-4e40-879b-b4db70f0a5bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d655335-f804-4dcd-97e1-47994360e7b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7f05281-5e10-4452-b667-ca7c99902cf3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3effc1f9-d9be-414c-9ca1-e31588144e37"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b099a6b1-7f79-4521-b19c-135fc2b2689c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ef1e361-466e-4675-a22a-fe288e1e7ec6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5f1f989-7ba0-43d4-8572-126c4da7d27a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f2960b92-af2d-4496-bbbc-defbeb5f1c19"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5d8a6b7-2b06-4ce0-ad99-c4ae524b7d68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55f6e378-eda4-425d-acbf-112de65728e5"
            }
          }
        ]
      },
      {
        "id": "dac27ad9-0ae2-4785-bb8e-926a69458abf",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5a947a60-c930-4adc-a11f-9feb98582d1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf6ae69b-4022-4a33-91db-2827b713b099",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "26e3065f-1019-4556-9330-8d84da26ae1d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c2d854-4051-4e04-87b9-507db51a8c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71db7ac6-bc8c-4dec-8dbc-d48b8957eea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092a6c70-bfaa-4ab6-89d5-8b1daa12aa0d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8183eb-b64e-4979-ad11-b0c340359924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e612ffa-1cb3-4dba-b29c-5188c119674c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442636e3-63cd-4c7b-8a4d-f6dc38b8db89",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871f7420-0f6b-4898-b921-702bb234258c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a3b0166-0a7a-40c6-8daf-3c262b5d002d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "24c4bf35-2043-4010-a9da-07bd2900980e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e40ce318-3b13-4cd7-9bf5-5850f4213452",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37027356-41f0-4f22-86d3-a5b6050cbc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72d7b693-bfac-4d9a-b04b-540fcc2b100b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21362c80-cca1-4ac6-b67d-28004bc2b4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00d0d79-5545-4101-9c27-4eace25d6acc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "99aac344-2d8f-4d83-b84a-9198f083c99a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d050741f-d8d8-4a1f-8fd7-6e3af3c69354",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a333f76-4bb7-45b8-b537-e826932130fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5360f4c2-2ec0-4e64-8db7-655933145458"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9bc597c-a359-4c96-83ca-118549b16ed9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2ef54bf5-2b3c-400e-9a09-1f2716854c31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a856315-621a-4e90-9090-ad0cbfec7d07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3ce28ca-130f-4c3f-a67a-6e01f6b035e0"
            }
          }
        ]
      },
      {
        "id": "53d54fdd-6948-424b-ad83-b86be0ba9949",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3dca6b99-d352-4cd0-b0bc-d8e710896873",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42ef4ef2-2582-4c40-ac39-b21a5be63255",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "92ae75d0-bb83-4007-be60-b1a029d8383c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86307676-f146-4c3d-b9f4-765fa0e203e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb3a303-e5dc-4206-9cc3-2cde4f6b28b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a078e3e4-4418-4aa7-830b-a336ab87c8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c91bdc30-9b14-4b5b-b758-72640dd7f5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e62d88-df68-43de-9e7d-f395bd7cae33",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94e3265-ca5e-4f23-8cfb-a1ebb6a4c320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb5414c-9310-4dda-b23f-54a652de5285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7d9a96-7911-4636-91a9-589b6cdd23ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fe81e0a-fa80-411e-81bf-c5ec527274fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e37517-bc6d-4e65-859c-210fa8a12bb2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed54a3b-8d9d-4c2f-a957-2127a7df5a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39b0949-09cd-4436-aa68-4fa0c0af406f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2f4151-1d14-44ea-ab8b-0ef370696ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4912ab6-d7eb-4df1-a358-1cc8d3d42902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ffd525-8633-4f85-a26f-dd12bf98a2ba",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90144e3d-ae95-43d2-ab49-b45bb776b13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955c896e-27f6-4d75-9fad-542c555e6b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47639fbd-0a83-4b4d-b0d7-9a40fd5c1ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "579e23ba-139a-4b4c-a4a0-d181a3404d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197493f3-a579-4439-b959-5a9014856b76",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbf3a69-2acd-4596-b123-2140aaef7839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e926c2a1-7719-4ecd-8e04-cfb7c719de5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caebdab1-1af4-4b1b-a4d4-0f7fd5258094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0221f41-cbbc-4782-9889-09d96818a2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8777fe46-e5d3-460c-8268-208661bacd01",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e8fb4b-c8d3-4e4e-a3a5-238593db4011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4293b520-79d8-49c4-acb6-9b34c34863e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0406c5a9-5409-491e-85d9-c61bc1756a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6acdb716-0f62-4a60-b185-ecbec4f65677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b133bd8-f932-4069-97b6-7141d596b38d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961cc581-668f-4e69-b3e0-e4c88bf0a5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937574d4-df27-418e-92ab-d75777aad12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4d2f4d-dc14-4a2a-bc58-d7b676162fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ed83c07-af7a-4a45-86cd-41ecafa2a259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad099c6-0305-4fc7-afe6-bc3879603776",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67227672-60f6-45e0-bab3-4e43f3b806c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcce9710-dbf9-4ad8-8519-df38cb881c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bdcb2e-8967-498f-b4c3-0057bf6562ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "401999ee-3318-496d-9b29-a0edb47a5cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f77978e-3fcd-4057-ba37-8c1b8c326664",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903c378c-ed49-40db-97a0-5d4b3af20f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a1d772-d9f2-47d5-9b11-84bd5368d322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e1d8fd-eb7c-4ad7-bb3f-3251f9039415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8932b0d4-526a-4a4b-8669-271aa79b9525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b795a7-e6d2-4833-8925-331a2ec00c05",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83603ab5-cde5-4493-abd8-6b09bd9ccd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ba1863-6307-4319-be15-f9dd6509aed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ade702-045f-4ff1-9dee-1105dc5c2802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f81ed6a-75e2-40fb-a1db-68529d18d251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db95aed2-cbdb-458d-9698-def34b36b014",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df04dea1-5f37-4a4f-9b67-fe707598152f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19e6de1-6536-4ab0-bba4-69a49fa84632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd659bf0-35bb-4206-a372-8e5de55d5e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1eb4628b-d90f-4acc-b038-168a48707f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40460936-ed4a-4a22-a086-c5122aabf0fa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9602dd3f-a680-4c84-8e0e-de888753a649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac2c59e-7eba-498b-972b-1e416bc468cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89050edd-164d-4d80-9724-35921d45943e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f58ac67-777e-4f66-9f7f-ade0b5af9cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d49ee4-5b71-4064-923a-a1e5d583b433",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48041f6b-b112-4fb3-b901-c6d35125ca5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49462d57-1723-420b-a786-4df79681e5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7964b53-2999-4b3e-9d3e-01bb7bd45bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c6e7a5b-43b5-4b34-9712-7912cc79b227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfde0d8-947e-43ff-84cd-d14a09481c24",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdb58fd-3394-4c9e-8cc9-4632536e75fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d6753c-c874-49da-9e4f-82b24f64ddff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e57977-14fc-49fd-8c45-4c899a247df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf2d6742-6519-494f-b356-7721170973b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db94bd0f-2f8e-4dc9-9031-a8ecc3357254",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ade3af7-2774-416c-bcb4-6dd1d9561cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d9143a-51c1-4d8a-9fc2-2875c794e5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fe0d8d-ed70-4f76-b079-578fff6759e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "266df0c4-65cb-4cc0-9559-3e39c6cf5ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bd0051-7a95-42e5-ab37-a7578a800d2d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3218d5-4d50-4ecd-9f74-51eabab7cca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a418a224-a557-46a6-814f-d7864f8b1d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bdac78-41e4-472a-801e-59f44c318a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f200161-b043-4a86-bf5d-06df69e17cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679bea55-fbe8-4bec-82ee-33473728594f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e8711b-2134-4170-bb67-84444d3fc465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e075f6-e8c1-4fe8-8c68-ca323bdad3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2af4af-be25-4020-af36-dca335bc3a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "836dc784-7fcc-48f2-9d08-39bc0a4dcb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da8c71f-8194-41a6-b832-1cb9600560b1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36eab23-511b-435c-a2b1-df607039c4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a568e77-9e39-4a46-9e02-d41458a98144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd7695e-db6a-45a4-b5ca-d72a0a9e0d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aac6ee28-c654-4c91-a04c-6f01b1f438b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f69440c-de81-426e-adfc-e33e4520b032",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b26d03c-b733-45ea-815a-f067da395a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab95ba66-1d79-424b-8a30-5324beee9fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee6baf0-8131-4c5c-a685-d409ccc0af04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbcfdee-8374-4e05-a690-ce54c62fda65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6943ef-3920-4638-9d87-eebe56aafb26",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99115d4e-41f2-40ab-b018-dd6e8e1c015c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7c0d1c-512f-47be-97f4-4e552107aa87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4b928b-caf5-4e6e-9801-4c891766b20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d264b046-db59-4d96-b3fc-ba1af660c4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4554bbf4-47a5-4404-9e34-380704e2c072",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2677a8-358e-451e-8ace-dcbc22f3ef02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1776df59-292f-4306-bbc0-a94c38098486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829d4ce8-fa9d-4388-990f-ef666b92c69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d064dab3-0b37-4d3d-90ca-ff78030f954a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b417abb3-8967-4f8a-9f77-54ad32c5a018",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbf993e-712a-45d8-adf0-20bed2f412aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daa20f0-0f08-400a-86a1-400194e87e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c282b48c-b2db-4683-924b-45c48e049c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe70215-f0c0-4fa4-a037-9fecaf5bd07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50582ff-bfbb-4c44-9b92-c11282bf3651",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2428aef6-1b94-435b-b6e5-a2dd0786b9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90b157b-4442-4052-8dbe-e35fe22c31d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365cc16b-554d-4774-ae74-908297d05327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92633975-f769-4487-9a51-f8a201db4b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bd36a3-b2df-4ce2-afbf-04aa8720ba88",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d08d8e-3563-427f-9fd2-73c616a1d520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885fb53f-0ada-47ee-b783-7ced3ae66a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c95b93-cb05-4d17-a84b-a5242b050941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4ec006-3423-40b8-982e-ccb86a1de8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8905666-ed58-4515-ae1f-a3e5bb36c73a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3690db-49df-40e0-99df-49844091f391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20b5fd9-11d8-4334-ac30-7f09601a087f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c9c186-b4cb-48c1-b0e6-a0bb5edd5560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "248fb046-69e1-4e50-ae6b-173a8e32f303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ac7883-7c42-482d-b16a-d9209d2e5933",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a2a59b-e959-4b2c-9a37-653e6c9a3333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643f073e-3e01-4751-9c78-9f873449f3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100e168a-9d63-4a9d-b017-1b11f979fb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7de7019-42a6-4d93-9313-b71e9ed4f908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e8e522-48a6-4647-9316-48964883f20c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c62110-6cb5-43b6-9ab0-fb62d0a0f85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33065940-b597-47cf-b6b0-01510bc764dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85915066-05cc-4cd5-b536-1962df4fab7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa0ad7f-654c-4f7c-9854-c38f072e72aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163362a3-0fff-4618-9a4e-0b30c883d9e8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761f776b-c80a-4dc4-86dd-6051d6a04b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1380102-c030-4257-8548-fd80b37ace53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695f0e5c-7e5d-4ea8-8890-5661e89abeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c48c1563-eb71-440f-8921-97059c848d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ec20e0-dfc7-443a-9e36-0c46653e1f8e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f800645-02a7-4236-b26e-696e747da194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9ab33b-163c-4450-819e-7d75f8b2db4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88a35e8-414c-48dd-8dc5-5f723d3eb1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1fab07e-9c86-4d4e-a417-fe067419c54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1d030a-b37b-4659-a4d5-84947f1f39e7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa75bece-6dbf-4e37-adf0-4c019bd4af58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ca7bba-3e59-49ae-a354-3d777c0ca130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ecbf9d-c568-46ec-9e4e-086a91251c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "de27b688-930e-4920-89c6-85bf28f0433f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756a2a3a-304c-459b-b0fb-c83a0bb3daf5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ed6e49-d7ab-483c-85ac-495f10e71b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be22537-f507-4611-99aa-8e153022dc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a812fb38-0588-493b-857f-e6c65e259b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc8034a-07bc-4feb-9e8d-30c034ab3743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3633d0cf-82ed-437e-a550-0d3f0ddd39aa",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd67d2e4-c2f7-484c-9675-1bc6380b4bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e102784-1789-4155-9a50-9f6d625c432b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e29e9e-9d06-46c5-9bb9-e26fd55c08d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bce0ec3d-932b-4e79-a648-cc9dd7b95269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0781ccba-b41c-460e-bef6-924f0188ba9e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77de789b-860d-46db-9dc7-9d6730d34929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78206df0-9759-418a-99b4-522e0ac7eb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb093bf1-d5b9-481d-85f6-a306a0e4745c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4eb5c35-c778-49d7-93aa-1ffd51d8a65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca82508-b656-482f-9de7-8d6c4ca1eedc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523434cd-5f15-47c3-be42-ce3333190ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9cf37a-4c1f-48dc-813c-f2edb1483ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08591856-e882-4518-be0f-55cb0b543ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1091653-64c0-47eb-800b-b4a889682266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eff56d4-2e82-4164-a5a3-8e9e3aee75eb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666f8e35-ec99-4d8f-bf68-0ad7eb81cb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d4b7d7-a8a6-4226-b02f-9ee29950d2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18987f75-bf8d-48dd-8774-b8371214b852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8edee405-3430-4988-9d8c-bf96665a2675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06c6d87-068c-4b28-8fb7-c840ae4e6144",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08154f60-38ff-4ea2-b3db-002793a12f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19a27d6e-8545-4519-8108-cd07b35274a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a930c9ba-7f02-4699-84a9-acd32f0a9c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9e76b6-fabe-4316-9bd8-42d8d4c79408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f18c58-9105-4219-acec-e6b1cb4aea5d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3998eeee-dc71-4647-a4b1-4ecbea91af38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2bb385-0156-44f2-bad9-07387a80cf42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e873f8d-506c-433f-8db7-1c7f4bc43de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a705466b-9e7d-4155-84f4-d76dc8e8d3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755bc052-d6bc-4d72-acff-38f512ff7e79",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7f1e81-be71-491d-bec7-933ec2e46583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03e2beb-dea1-494e-b8a3-727448747f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5819b86-7174-4fde-8d98-4043996e4acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f012c88a-5a12-4439-bfea-ec1af8d6711e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1c83a7-2a4c-4bd8-92a1-53fa617551c1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea5b9ca-c6ce-4419-97f2-d0b5cbed552a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b76a74c-62be-4d8c-849c-b2c5c0544ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17668f9b-ae8a-427a-862d-c1f9513409f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "782326fe-1a64-4e3f-ad45-09913f5ca4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31510bcb-9536-4fdb-ae18-d498cdd26bbb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f955de-8ed0-4613-a66a-ca2a4049806e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f686887-65d1-47fd-bbc1-e8c808c37cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cd4601-ff6f-49c5-bd87-1ec39bcb1705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01ce3062-a5f8-4f61-9408-50d3d12c9110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d09afd1-59c6-43ad-ae2c-07341b19209f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a338e6c5-3b24-467f-ace4-9644c6958a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132cf016-5183-4173-8e58-660a2289a4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e0c395-9fd7-4712-95ba-63b5e044b87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bac38199-0ab6-4433-842d-bfa173770015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d659e8-14ee-466a-9118-4fe28c4e4275",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781034a8-b220-4aa9-ae41-db8a3c1e3033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bf4c2d-fbd5-4c7d-9655-7a9b7de71a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056faf05-24b4-4474-9314-26474f494f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8e156ec4-6b5b-43a9-ad8b-253e30333e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91128094-017b-4956-8f14-acf69301099a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493923e6-3603-427a-b390-1145432d59a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270e09eb-a62b-4ce1-bea3-85bc3aa7a683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da47185e-8cd8-499b-93a6-ddf0ea5c512c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c62515fb-9cbb-4043-b422-c6886978c433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7101f601-94df-459d-a1e0-49709e13582e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ef0f6a-3396-468f-8eea-cb3b22f94f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b78dad-266d-4849-87b6-9da1a900597f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d631560f-6615-4d37-bca8-e17e6562572b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "72eb69ee-1be7-4ad1-a368-634a0c514afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e804246b-28b3-46a9-9f2e-8dd4374d9ec1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0667d1-5d6e-4611-89cb-7499b6b4fcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e4a432-5dbe-473e-8365-64a2f3c107bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dc9d80-1278-422c-bc4e-734472699c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce75931-879e-41d3-a83f-5bd00d4ba4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75704646-4af2-4e86-91ff-2754c337aee1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75735961-6107-411e-b3fb-a15160cafb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ca03f4-7e2b-47cb-a4cb-5dc9c040e96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c60dd1-7479-4048-ad24-847e2e77fbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7af3188c-7be5-4f78-a0d1-54ee839717a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c42cd72-fe12-4495-85ea-c738260fcc54",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6840fe7e-1b84-464e-9f4b-5783227a8243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3f0a79-6fbf-499d-9fcc-05519aea1545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ef6c8e-ba18-4e26-aacc-5c22afd83ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c87df40-2584-48b9-8bc6-623e90cceff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a367098-c9af-4891-9386-6a55d9fd7414",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49806da3-9732-47fc-b710-f4392220a85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786538cc-1705-4e74-baba-ffe68ac24c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a201c91c-9df5-47c0-8517-f392cd621b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1deb2d41-00b8-40cc-9b26-3d43980c0672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b597a539-551b-4ce3-83aa-19a6334620f0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbedf81-5fd9-4d56-acb3-1780f15cc53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa6519a-dd3c-44b3-922d-8be3f4bb2572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e957b1-7e0d-49c7-8758-0d9d3e0f8854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d94089-9f5f-49be-a0eb-f410db25d47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5beaec02-4c8e-4052-910d-56b27c152754",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26096e8f-cf3a-435d-b987-e392373f541a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16d7b4d-2cf5-4154-be44-e622f00c31ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59525eee-926e-4902-9f29-834bb4f69c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1072abf5-088d-4d99-9852-1d67b9b3fbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35bc517-4878-4804-adbe-41f65c78f8c8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc5dc9c-9049-49bb-8796-dc4ec5ac9ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57a5905-fa6a-433b-9a56-5cf644333723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7859527f-f408-4622-92ea-4e410909bca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb467a3-3b55-4330-a2fc-87d570f31dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8b601e-5bda-4ddc-9920-5ca569ab0e6c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72689db1-423d-4488-8dab-edfe5887992f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84716a32-075a-4bd7-86af-6eaad34b5fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a382c32b-2114-43f2-9618-20736649e82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f40103e3-867e-4ae8-9f4b-c5f6c7817aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0b6279-fda1-4466-b525-ba552a032675",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dabd410-8480-48f5-bc92-de411f5743fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056444e6-50f1-483e-9608-aedeac270bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fbaade-e736-4135-934f-dd994cffe40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a64ad68-f028-4120-8f09-06450a5697e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e500ba1d-ef3d-4e7c-8147-9875a3a3ed47",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0085f7-6292-4a24-b79b-240a4eeec3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d5d729-ae78-45b8-ae64-aa36fc9c6777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8318098-f50d-42ce-afa5-bfe16a45e5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82f345ff-b94e-4218-9ca3-dd4642b3855e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70560a54-4916-458f-9726-b13201cafcee",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824d5f0e-be4c-4596-9308-9b742ee051cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48766132-1494-477e-a58e-2178af98b425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c844162a-6b10-4367-88cc-cf55556d0844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b36ed09-4df7-48d0-bd86-d793ab6d2a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18ca07a-46bb-457a-a6e1-c865b76fe6b0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3ebcab-a5e5-4c24-a5bc-82b7711bee3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94ae462-0538-4856-9085-87bb3ebb6dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825aeece-098b-4244-a880-bea0c4753574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9e9179-95c1-42fc-9e9c-9c57e7e2c659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d913e28a-0d93-4458-ba1f-e01e1db5dcea",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b668a637-332f-480f-80d7-028bd44d556d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd705208-0f67-401a-9ca3-ae73f6f076e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcdc57b-5dda-463d-a686-63a63c6515ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a73038-e24b-4580-86fb-f90551f54c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a040356e-4678-43b3-9284-151e1b1104ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdca1ccd-3946-4614-86ff-597fb651c05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4347229b-301e-489f-a4b2-30410d01451d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a5bc2d-e10f-4455-b2d3-ac38b8a7f9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "727c69b4-187a-47f4-ad13-a7577eac46b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc726f6a-23e1-4b0d-b91b-02099d8a87bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6dd89a-02dd-4b71-b0ac-4e2022d1c897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed22d8f7-f329-4850-b033-efd73333bfed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714399d4-b5de-4d1b-a442-5e3510775f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "57b0ba9c-53e5-4b9d-8300-aa4f12dc92ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7430e01-d265-4f73-a0fe-4dbfd38b0189",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5a6d1c-cea4-4c06-b3d0-624c21071acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f19032a-caa0-4093-bebc-8a34bc859423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c3eecd-5225-4201-9788-35351fbf7364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "24aaf007-8e8b-4aa2-9a57-f2e2b3146e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8c36d7-e1cf-4f40-b06f-4e3360d5380c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebe5f70-d386-4370-a3ab-9acbce60ac68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c527b34-cf3b-4099-a180-87a799f0f280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f528713b-647a-4576-a803-3a0c20d25f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9620374-6512-4b07-ad2d-b81f104cde57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba1c757-c646-483c-a0d3-f40909c9f0b3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe48347e-f2db-4422-9507-f0d160c763d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c54a16a-192c-49e9-9793-da943e4efa9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a147bd5-3ffa-4442-a5a5-fef04bb12ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb4d44f-01c6-487a-9297-362774a38758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872ca506-c632-4a9a-9d16-cbaa864ac9ab",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5d69b1-d366-4ba6-b0b1-10ce179be822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0519316-3197-41c3-bf29-5256d4f17c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a10bf1-505d-46ba-8c9f-6a5ede348a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "60ff629d-487e-4eb7-968c-ba92a8244dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929f2705-3ba6-4761-8fa0-e8dca008b811",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd362412-cd25-4a0b-bed8-57a609dc44c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adba0f6-765c-4886-9bc5-9a9ffda62699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa240b4-b102-4f2e-a639-fa726580ce91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea11cd7-6f63-453e-b494-f0b76d8258c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42d67fd-2ce6-473d-b077-ce306e15c572",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6492c2ef-6c77-42eb-8e18-50cd32086a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f06438-b49d-4fd4-8967-58fdf45f5205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afdb9a7-ea5a-483d-8350-cfdd69fa5f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0c4e62-44a4-47ea-baab-fd0a49664147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c0a9ee-0fb4-42ff-9a0a-bbf3c4ae149e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5029f83-2f47-412b-aa55-e082083abd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf90c27-890d-46e6-b36b-f6657b2c479d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a57350e-2d80-47c8-b717-bc7935d4b132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3e255f-0e04-4869-96c8-c103a9160e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241337c9-1964-4195-b3b7-c992e0da140f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6b6a36-167f-48b3-b04a-f19f63d5659c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c2ae3a-9cb0-46b1-948a-3968b29eca08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8363dfcf-7ad0-4b73-9f49-1f82364b302d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1a0da8-6052-476c-b29a-49b2e7620f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a537acc-018d-4f1a-bd25-79453cab0b5a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650b97f1-6218-452c-b1e3-2a7c3d67ca6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ecfcf6e-164b-40d0-bedf-b5d3cbc85679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da12b6bc-d932-4a58-858e-dc288e997948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "574c28c1-7d37-4eae-b380-2a44a7233734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca6d73a-2475-41ba-8201-db14b15d4777",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af160dde-e1c9-4f10-9466-cf74f55a293e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032a2ac9-996d-443c-be7b-4d43b1023969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9f278d-1fea-4268-9a47-486c2a4a7593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d63aa4e-2603-4dd2-a524-233d6f5437c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8c4695-cf6c-4af4-8a5f-f191e7f12036",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe511528-5c9b-4495-828e-baf7a1308c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a6ac69-873a-4656-b458-3eb5500560a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dee9098-7dfa-4b24-abdc-d4105d17d3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "516dfdf6-e9a4-43cb-959c-3fd5b28b1c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed43c7ee-c11f-4185-9c23-21d98d8f9aef",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1384a28b-5548-47a9-9295-39e9c1f20caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e3083b-8eb5-4835-803b-654ca8f5fc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d68c123-e70a-4be7-84d8-ea8e23d49f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5075bf-b2aa-42bf-88f9-1388dea149e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6413b7-243a-4406-bc96-1131732e4645",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cd6514-036c-4676-8c46-0728f4ab07fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65d929a-6a90-4650-b6c6-6bf29c3692ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89174b5e-a0ba-49b5-89f3-0152587dc3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8db75b-b766-4ace-9005-7439d94c5688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d72a0b-b205-46d3-9c5a-19d75441de2a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47db735-a04b-4a52-8f43-5dede3de50fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1020d046-c564-4d93-b47d-1cc0da8abc5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376a1889-2500-4b52-9c37-cd14f14bd832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6403bd1e-b2d0-4a0d-93c5-73da847d78c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cd1d1f-b74e-4eec-a24b-9d58b7bcfbac",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87355e21-4953-4975-a3b5-8ddaa301ba1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc72fdfa-f6eb-4a17-b82d-ee5d7b2a1cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8480552-4031-416b-91a3-98ffc05b30dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50e4dae2-da2c-4e34-8163-e08510e92323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c044679e-c9d8-4625-bb76-59b5a557f7af",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f873f395-5e97-4fa7-9199-70fd9639e700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7cf1190-8ea0-47be-aaa8-e04a03e3ace4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39a0d2f-5c58-43b4-aa49-9de8cf80277e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59bc3d4f-aaa7-438f-8c4e-fe17d86bf739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d067ef2-e469-43c3-879b-51c41fdadd33",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67eb1d24-2767-4930-b3e9-d712214140e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6865960d-0bd9-4ec2-ae36-d94757e863a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cc06f7-1e8b-49a9-9361-2f35f37b885f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01019307-cf33-407f-aa5e-bd7c9b7b0f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8a397f-8c87-43c2-8290-682e96f3126c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0342bde4-4b59-4a44-a7a9-817c5056e24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff8758f-7fa0-4ab2-b211-9b4440e3c6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273280a2-8e6f-48c2-8e74-28bf93778c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd38975-ccaf-4afa-bc7a-c3b21db2fc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f60b37-1244-4a08-9746-838e2bdde17d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c502d14-6bb9-48a8-87c1-06478b0e1b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e91e6d-d4f9-4a7f-ad26-79f04413742a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f27aae7-cadc-49d5-87d5-9202dad84c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d12ec427-cc3d-4c86-919b-fe52ffba2180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd4050d-14f5-497b-a77a-3df5eef9a15e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2c315f-f7ce-4823-8e5b-2d9809d9b978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315c545b-d101-44d9-8af2-e9f42feb7737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7166ef-e352-4b5e-8c9a-9ed3a3cb34f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da518d8d-bf3d-47a6-bce5-7039d15e4411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62dd08b-1f0e-4a46-8693-956f29ae02aa",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0826509e-e8c8-4a09-a773-11a59166b73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721a17c4-a4a8-4d0d-b58c-25a855dcd40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9343a2b5-b6fa-48f6-be5b-693b6f1e35a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4105e4-a6bb-4490-8334-807193a6fa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ec0ed1-1de5-4a36-b477-daee1a2690f2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a33a0e-a31b-4146-94d4-933fe17d967e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea066ba-3116-48dd-8139-6c3c60ab96c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82be302f-86db-41b9-b17e-3f2ddc8537e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30de89fa-ea6e-4e0c-a618-9cc7002db982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f8dc4c-2c09-4ea0-baf7-ed4de651d373",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee33e43-70d0-4c54-94e0-3ba6396483e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9681d9c3-3bdb-4666-8c84-ceb02c574678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095b38f3-ff2e-4b3c-8cb2-4c7f30c0dd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb168706-97a1-4c8b-b34a-c8b1c20073ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ace8594-4a09-446b-abb7-9682beda99e9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed412b17-a684-4067-a98c-ee8b2d6ff744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d737716-286e-410b-8200-1f312359bbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19c0f9f-9f42-4655-aa30-04db3be68e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35a0e028-e8d8-455a-be31-3c03adfe6aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec092fe-d165-48fe-9ad7-72416794342c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6aa88b-5761-4645-b1a9-5501f51a955a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9181bd00-10b2-4aca-8520-45c6b59922bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a7cfa8-cd53-4431-a127-6c0e671e5cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b926007-669c-4c69-8412-4ccc25c0c6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77cd5b5-67da-43e3-89c8-2adf3b9af852",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7b8a00-62c2-4e61-82d9-c93c742ef3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a6e7fb-d6c9-47b3-8281-9be88700e911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65860c1e-73dd-44fe-a8bf-d5ecc9c3bdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02c20f09-241f-45aa-8403-785a4ef6f08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfd5062-3eed-4e59-8fcd-e65513d212a1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a84ff9-a1d2-4025-ae21-30b58e223a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6c07c1-f05a-42fb-960f-6a83faf0ba90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b35341-4dc8-424b-96fb-42320a404b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fce98f8-5d43-4e3d-a8e8-5a5aa26e02d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7724d6-8df6-489f-8e20-67dee4c81ffc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3582ffa3-ea53-49cc-af70-e4227272a2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31c4ee4-0f5e-44af-a50d-38671eda4935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fe9386-956a-41d3-afa6-b6dedb670108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "be5b475e-92a8-4830-a29c-f2f86402028d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b698e3-ed5c-4b02-8e2c-a6a83811ac50",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7792aa30-4e02-4c67-8527-28ce0fcf8954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc92d04-7fbb-4104-938a-e43600c408ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1144d04b-99ef-49cb-8ff2-c47f1067842c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "82049f33-7e55-4b12-96d8-3f0dba3c83df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05143ea-56a6-4b98-81dd-7b3a83cd96cc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f7fbec-3e2f-4dc6-bf65-954b160c6bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b32083-1fb1-4a5f-8f3a-97bbb6a44660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6bf239-4531-4315-a709-f3f8d14db8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0289ce0-15e6-44d3-8251-56ef310b0d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b140cb7-192c-4927-9f11-776fdd774865",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70dbb28-ffaa-4384-a22d-c32194ef3e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e944e5-7810-411f-afa2-dee4ddf7ad0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e562a7-08b1-4ee4-bc51-23918f6ab908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "285f41ba-92a6-45a6-8cbb-2125347134e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89629dbe-c753-4509-8464-fa7d5af761f0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146d9944-12e2-44a4-850b-ec8bfb04edee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d47ecc-1a96-4c8b-baef-431bd5034c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829698bb-1e7c-440f-9052-bbc4c8e1d250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "736bcb1b-0fae-468f-82e4-5126f8eba8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9260c479-a68c-4917-bc10-3c557522f520",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23454d8c-1396-40b0-82d7-566ce357446a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "04db4652-3a22-4669-bfd7-64fa4062ab4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c227680a-6398-4f93-9853-ff33b5b5b5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b594d9a-d726-4bbc-859b-65ae0f5beab4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8636bd3b-6207-43c0-b928-7967674fcab8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "accac9cd-188d-4c5c-bd1e-03b051f8aa4e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b9a911-859f-4043-a2d2-fd9bfc06b3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2250f20-ce8d-4cd6-9c60-04caca6f5d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd724f31-53d6-463f-9e6b-5d0eae3d3c90",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "039f39e6-c2fe-4f70-844d-7ab15eeef661"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a57509d-bdc3-4e40-bc87-7840bff0d369",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea4b1ed1-379d-44f1-ac1f-b52e5f2547a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3aeeae7-6efa-4773-8595-b6dfa3929a4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f85a6134-1a4a-4532-9c40-51b89448387d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6e5c809-1728-4e6d-8b22-25abb8f55ee9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54a86871-b52b-4c8e-8aea-a7b01714895f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "969254fc-6d75-4473-afa4-41a10f91826d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "904edd52-6aad-4456-9cb2-ca34edb4d133"
                }
              }
            ]
          },
          {
            "id": "346707c6-5a3d-400f-a155-fc4450b2a48c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62fcdac3-689b-45df-9ae2-cdf12d7d31c3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "de6aa6df-10cd-48c0-9b0e-45c1be831696",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692d4b45-fd6b-45ce-b888-8af5b2e9fbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2d53ad24-4207-4f93-b7d9-8134e62f6c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0675d70a-e675-4c0b-bda4-b61e766801aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b63bddf-383d-4d3a-ad3d-ff906a7143f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "716d65c4-f646-416b-9370-b4026dbe9728",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d507d587-5b9e-4606-ba35-5def180c9257",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad116b6f-3f6c-40d9-8a9b-54e35db9cbd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4e79831-b469-460c-959b-2e4b673df4bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de5da5df-f851-4ead-b9db-112deeeb6a6f"
                    }
                  }
                ]
              },
              {
                "id": "e6ccde5c-233c-4a1a-8afe-d46d9f3a9ea6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ebff5a0-a6b4-4735-9a38-2a1440db9595",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "268ba07f-b51d-4c8f-b374-d5f1af225434"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78894a1f-073f-4cb8-984c-36ca64627e51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab7987eb-02df-4ba0-8064-562f0f4c9e74"
                    }
                  }
                ]
              },
              {
                "id": "85bba6c7-9091-41ae-871a-5275366ac3e7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e0d19b2-ab69-43bf-9af5-2c7f30216a6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a5ab838-0fcf-4100-afbd-ff1e456df688"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6ad6e81-26e8-418a-b0b2-afcdd224c429",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8653ab88-e12e-4b66-a84d-6206ab49b8e3"
                    }
                  }
                ]
              },
              {
                "id": "afa9a744-3a49-4df9-9153-54c515fa2e31",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d72cea3-b675-469b-852e-4f860f906283",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e912c88b-9c5e-42ad-a2f4-4ff23f6e01a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da4fbd55-4fb9-4057-9245-78d38dfb84de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "def9b551-0d47-4e7e-934f-fe7a8e020237"
                    }
                  }
                ]
              },
              {
                "id": "65fa97d3-1510-4c8d-b020-f7a2507d04d9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "708cf39a-4fb6-433a-83e8-b9ad10a0ffb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13a5d202-eaca-47ab-8485-1b15c5cf74d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d1db48f-3df1-4324-9787-647cb47687b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cec9dd60-5177-47d7-874c-802bbaa17c87"
                    }
                  }
                ]
              },
              {
                "id": "7aa8b8ee-24b5-4919-8cd3-396582450619",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93f92827-d922-47ec-ae13-2210dbcd8d0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9005f8f1-dd28-48e2-8e69-a3f745b579ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2f3732c-47d9-40f2-95fc-971f3f043523",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c72161c8-4d0b-47a1-936d-7265243107d4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bda4f3e9-f8d2-4a84-8f25-3fcbb56f6703",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e92185bc-06a5-43fb-a239-be3879d3e273"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "757099fd-f5e1-460d-9baa-b38e3ae8ff35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c529b29-0eef-4ae2-8af4-6546547edeea"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "baa08f6e-1145-4240-a5b1-9c96a8a6ce71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c6a30a1a-3ba3-4334-bc0e-e3aa44a80683"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c509bb3-cfa5-4eed-bf5c-b6dad32e99f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d338e57f-6f99-490d-8c12-1edecc26e0a7"
            }
          }
        ]
      },
      {
        "id": "d5ea12e6-5182-4d91-b736-5e37fcdfd55b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8cdd6ed6-47be-4bea-9d92-8ab1016d31ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e8dcbbd-18fc-4c24-be8c-4b8bea6905b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "978d88c4-fcf0-4007-958c-51e3ecf14504",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70afcb72-a073-4774-9a2e-1d2c6e4ba0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ffa0ab-221a-48da-89c8-cc3c43e4cb38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c025fc-8484-4a32-8fb1-9c13c7b009c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fca868e-cfe3-41e0-9b19-3557ccb86747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352ba6e5-8240-4bce-997e-2cf32e20fb13",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970f0a73-72ca-4215-a01a-8dc2b4775b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585113c0-6c72-4b1c-b0ac-ad7c4c034bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25539d5-4158-4441-a42d-1b9fb634c3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb03dde3-7d49-49bf-b506-12193f4d0d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db29fc3e-6595-4e38-9230-a542c448ced0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2e05c4-c19d-48ed-904c-0efab7b1c1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233d042b-5f64-4862-85dd-2edf929fadef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fa92bd-1970-416d-a567-45b894350583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "661c70df-9a79-4ccb-a118-918fe6bd492c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8986fc-bb24-46ec-8b7a-3cf3e9a5be02",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd11d105-6153-45c5-9a16-799863b201da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d449378b-8b5c-43dd-98c9-14742d457e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51625af3-d2c4-4dcd-b044-ca2efbc4c56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5261c5-f888-425c-9716-17481fefc4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381bbe94-649b-4928-8ca2-148bb1e0c435",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e6b5a5-ca8d-452f-9eae-d2af0adb21c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543ae3e5-b053-4c94-863d-a3b64caf13b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb175a86-92a6-405c-8d27-89737a8229db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4cee339-d2a5-43a9-a577-b766f83830cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a635ed-5e7c-4c9d-9dae-757bfef6eb9c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d7a039-938d-408b-8c0e-6d59523db218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63895ecf-984f-48e1-bb19-bf906549ec64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f489bb9-cef6-4aa1-b4cf-45d1c5bf42ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e38159e-6df1-4203-b494-fb64139b8b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134cd713-a3cf-4b2c-b142-e763c2f0871a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4cfd4b-0611-48df-90a8-3e6d1ce133e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedf161b-bc3c-4abd-949e-61cf32e78279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389bc951-8ce9-4239-8f59-b0b76c7e0db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0eaaa84-c201-4cd8-a71c-f6acd74e2aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f944eaf0-dab2-4cbf-b741-5979d2ecc302",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355514d9-aa64-4372-83a8-b58e6f4e9eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84a334a-8319-4494-b260-d2a1e8bfd7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cec8252-ba2c-42fb-94a8-5770420eb850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff2da8c-b2a6-4b33-8fea-ef9f3791a25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdd4505-e866-4509-bc0e-00a57fea1a8a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c162a02-df09-4322-baaa-46d2c3ea3d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cac778b-54b3-489f-a8a5-5f4a595c345f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b26be0-adce-4010-bbef-c6ba0fa5329c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29d62b67-3029-4bfe-bd90-f9c748054cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ce19b0-6a4e-45f8-a3ba-5686c62596f1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84df2c8-f27c-4cec-9fb7-a205643a1f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcc3b8a-0476-4acd-8ac2-a9b5cbf372a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb56241-795c-4b69-b3a7-f36febfdce1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4574b2-bd72-4fec-b77c-0bd86cbf7634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d901e3-b9f2-4b24-ae32-a74cd4246b70",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c798465f-e27c-4570-9aaa-2b929c28df76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11d1cd4-67aa-4363-b4ba-f69010a56348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507860b9-e7f2-43c0-93a5-1a08f6e5200e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "65e92eed-9dc0-4084-99a9-c95d6764cb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6084671d-1ff5-40c7-bd17-8b9debad02e7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c25465-b702-4f3a-a3db-ef1b5e27cd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27266a8-c237-4998-9682-a18c51cf7ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d2e621-3db2-491d-873a-925ac75c70c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1884a2c0-8090-4ea5-b90d-4b852bd8e2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc95cad-85d6-4c18-b705-aaf731915551",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd0e2fd-078c-46a0-837d-49b95b4e4f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f29efd-dda7-410c-9006-e7028294e662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8704ca-3a21-4af6-ae5e-c122d98e10a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2629b2-808c-4244-aa44-9d6e86805c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d276c936-38a0-43bb-a7aa-c6833db6204b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4825f4-61b6-42f4-9fbf-e19199f9ccf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf30f197-93ac-42e3-9c47-d44b0c893f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f671549-d52c-4f25-8d79-d87ef7930056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e02658a0-27c5-469b-b5d2-daf74689f6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ba70f6-82c4-4a7b-9217-867d261a1e49",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923044a8-10d9-440a-a253-f8cb548e99c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d620aa7-64c9-4ba8-a40d-f1497cb4a25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7705dda0-f9ce-4489-850b-a81ce6c39df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef2b4f6-cbda-48aa-90a0-3d30c10dd492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69e6cb8-e1e0-44a1-8d4f-fd7fc9c52d64",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650c6b0c-05c4-42cf-9f2f-e8107e69953b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639bfd70-da0b-4764-9198-52a2d96fb827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c128ee8-b30b-4264-9761-ac7fc5a92cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea485272-405a-4661-bc65-aa0751096778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b74db9-aa02-4098-9010-7de77128570a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f4fba9-44a3-49be-b136-5b0365584651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b1e3e4-3859-4a75-9719-36f91e98ee7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee3bbde-d402-416a-917a-5d137bfeffe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f7ae32-8d2c-4f9e-a0e2-387429d4a465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0d34cd-22cb-4190-a749-02491f1917d4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2e044c-9233-49b1-baaa-bbdc70ce42f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83b2111-5755-4b31-a34b-d21db7298c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee726968-d234-451b-a972-83bd98cd0f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a811bf55-5674-4f8c-bafd-6ea776297751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc9900a-dff2-4512-ae7a-e42f19e46497",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66055210-c1a3-45f8-b902-e262481dfdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbf3397-bc63-448d-b55c-f55a771f646a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12bf1e2-ef25-4740-a35b-120fc6f7dbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89d1db96-a7a8-4733-a017-eaebffa42e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f23b143-e7c4-430f-88ff-0faa13b1b9bf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d3f78b-f255-410d-aa06-18f5276d874d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82782c2-42ed-4ed1-82fb-683cd1bd9ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480d8d8f-2dfd-495b-89f9-6385d908eb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c345ae0-e392-4b39-8f27-15f35697fe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f38205d-c316-4bdf-ba60-e2014694f7a1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19af51d8-9229-4e98-b541-0ab349ba79f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b5113d-0974-48df-a92c-8ea574e5ca1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b48cb80-911c-4f92-800b-d08a8a9c5d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c58b10-c095-45d0-80a1-154157e2842e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fa1f39-5fbe-465a-8292-7e7b140706fa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba9648e-c663-4fc0-a5f1-a10706f8502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57611cf-dfa0-46e9-8363-7472fe43b7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60deea4-9f57-47a1-aa1d-ff69aaa4114e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06e74140-6ccf-4dba-ba83-342b08a75df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbb9f59-dd60-4e78-9d21-5549810915b6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d99096-1f59-4006-812e-92528c4b4d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a95702-61f0-4c84-b0d6-d4dad0565279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cd7a4f-466f-4986-a0b9-201a4dd27497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36c85d51-947b-4f9e-b789-a89fca621bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdfa69e-5bd7-4f2e-84ea-58efc112ce02",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad30c46-b280-40c7-9cf2-10e34695f043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47214ba-0e18-4e65-a207-c57f13d74f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7db25a8-ede3-489f-b8bb-ebd5c014af8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a7c273-59ba-4e24-b0bd-4637201f514f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84c17fa-fd81-4b6c-a334-8f8de5f4cc55",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d969fb-a5b5-4938-8ecb-d1e5c8e765e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6a5044-814d-48a0-a35d-f2d9f3642819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3fc592-0023-46d5-89c0-d02608078669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08f35710-d625-453f-8e87-975a3b0d382c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f1918e-e293-4b4d-ae78-3789c55d829b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ce3345-ca31-4ab7-b175-6439d3b7ad62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900b441f-c688-4ebe-b10d-ca3e298350fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b95a51-da88-43a1-a595-57ce7c8d710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aff1856-18ce-43f1-be7b-711c53a6164e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d243528-a250-4338-bf4c-5959082441b6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cf4f15-13b6-4cd2-a0f3-7cc7da01d7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f331b100-a0ca-4c68-bb70-8aa71f1deba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a110cf79-9f0f-41c0-b6eb-3bac5fdbcb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b40e9062-0d0c-439f-9052-ff04280d134a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be0952f-3288-4969-a401-71269ec98c5a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a400588c-bd94-492a-9d11-b2e821149fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d564f899-f8ff-44b2-a04a-8e5682caabe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42599528-e8fe-4a78-ab73-f3605d48d52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c956b8de-bcd0-4b84-b706-2405eccddedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee759020-2cbe-4c0d-a74d-f64b5d03b1f3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4de1afb-8fd4-4d3d-bed3-9f1c69a32f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1356f2c3-7277-450f-9c23-912fd5f05c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcdf838-91cc-41b8-b1d3-5ed330eff9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2632b309-0de8-4f41-bda8-63cf4689ce9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d3c6c3-bc7e-4942-a684-0e5ff7b37432",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ce0c7c-8be0-4dfc-b58a-37fdaede1805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d4387a-34fb-49a9-922c-a171bf2dbd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bfc0cc-fe40-440e-b338-ad6ce2ede387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45e509e3-8e03-4c8b-8430-0564b0096eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cbc4f6-577e-46bf-b21f-77729139c511",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d62424-fc12-4b72-add0-495bdd8ffac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b9ac65-6c22-4387-b183-8b64a3ce6319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282ffd9e-43ab-4ef8-91ad-a4f94f0be7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c45142a9-ec0c-439e-b314-5de1fc16aa92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c69be6-d847-41d1-b727-731c28c5bcb3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7b7b60-00df-4914-a8ac-4a2669cca6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ebf811-3f96-4422-889b-a08f5fa77f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab4061e-6f31-4a15-8fb1-01990b4533d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70819419-ef8d-4e32-af05-1ea428bdbdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2715bbdd-ea59-488f-adec-f68ef10d8dc9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72a45a6-9fe1-4e6f-847f-231f6cf7182b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb173acd-49a1-4e52-9d76-065ea6362e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7c97d9-b6f0-4a4e-9d23-cdf17a9da18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c12b3c6f-f5a1-4c9b-a23f-59c6a0f9f886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e21a4c-b3ae-4376-9374-d5fd748e8e56",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7b1f6d-aec2-4890-82b5-2755566e4cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab424aa-1511-4c15-adcb-704e3835aa72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c38bdc7-b543-4647-91df-b53f6e62238f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b02ed877-0830-4384-bfc5-99b66c3129ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cabdea-556c-4d52-a0f4-651ca007ca9c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb584a54-5b81-40a6-8045-ea2cee079cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f2e437-7b4a-4463-a3fb-23128474baa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a23539-b63f-4262-b672-591a7bcdd76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa7b91d-2f02-4862-ad79-8b282dd5dab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4901251-0cd3-4a27-8324-78526d785fde",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3d0a7e-acbc-4801-90da-16c89202fb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aae8f6a-f4f1-4cc1-abbe-4d65e6d69e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f4481e-0dd6-4fe7-9af9-232966ffc215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7990870d-d423-4fbf-aa9c-bd0a4f026c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a98850-92fd-4b53-9cd4-4e2d84015c23",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39f2024-d885-4ffb-83e7-fbe2614f34b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc96ddb2-d758-42ab-a3f2-f2d668a4281c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9034168f-e0d0-46a9-b694-bc2877b7585a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9224a208-e2f4-4c14-aa1e-e7b97d16b0a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d703bad5-9027-4ba8-9c92-ff1bc4887007",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15c4c088-6094-4c5d-8414-fb1abaf1ef7b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe97eb6-18ef-488d-9704-ef17ae09e134",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e49a0c0e-c3c0-4785-85ab-e8617b9d963e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4639bfe3-373e-4b4b-9e4c-71044b9a2830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71d2dc75-7819-4920-949f-8e1f75f84bf2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1365b0e-b452-4810-8bdf-5ca2fb716979",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50cc6cc6-b2a6-445a-9ef5-0047c2d695c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc574068-0afd-4c65-8d6d-7da822fb040c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f861335-4aff-4bb6-b2ef-79dcb44413f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30f20e28-e788-46a5-8c63-012faad5f238",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50c1feba-4a9c-4422-95dd-1007219777c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "787636ae-532f-41bd-ac92-0e45c0a78652",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a684e92d-0ada-4752-bb66-6ad92a6ef445"
            }
          }
        ]
      },
      {
        "id": "273bfaa3-0570-426a-a10e-89af9d4d7afb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "37d5904f-7737-448b-b5d3-da1bc9969768",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5af26c89-c5d1-4d48-bb93-283bd10f2e2f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3bb111f0-2b92-44ae-a491-28efcab740cc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f4411a-58c1-45a4-9ccf-6ecc1327442e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8ed157-3336-4fef-8c40-47a167485ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b540b63-503f-4948-a9c4-f662dfa42af4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a003b796-a01e-4aaf-b9c0-151dce17d4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1734221a-ddd6-4136-bf6b-af1a95639eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2b6b9a-96c4-45df-8ada-4a0988e69495",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967c214a-ea6c-42d9-9c7c-77dd8b52ed1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf5cc10-0758-4df6-b1b8-ea6dc7075dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f4e2f9-dd51-4f5b-a642-76f06f2e8173",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba8f85d-20e8-43fe-9f35-37f6926e1b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b004598-3cb7-43b1-abea-0d1dc4908cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1af7ecf-20b4-4390-9eff-bc0d146cbdd7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ea2ee9-3588-4100-b58c-83071e0c3b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2016579d-b92a-4ce2-af9c-46f8789a2c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56c5a84-e996-41f0-8edc-0a4316d7405b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e4ee35-17b8-4d92-ae4e-2040d8a6e69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b04cb1-db2a-4bef-9e59-c342c09805d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577dae4f-c845-45bd-8385-211d96ae8637",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d80a4b-142d-49d4-9b4d-b3c5841805e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0887a465-92bf-4e57-9c1a-d6ddea226ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab0bb2f-3051-4a50-9cbb-84aee46b1dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a62d9d-1049-490c-b6cb-1a7e7e595b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d062651-82bf-4e9e-af20-4cb8461c852a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a923698-49af-4fd2-9a13-2ec35ad0096c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40904ec1-92be-4345-b700-92dcceadd147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4bafb8-3109-4122-8157-ce04eb12f910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2c8eeb-ef41-4bfa-af18-c22f7e479be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849d6494-ae84-49d6-b7df-886de6b659ff",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398048eb-3e7a-47cd-aacd-83d8d9f5cf59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8b89ad-c6a3-4cbf-876c-5f5570d8480b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbbdd1a-56e1-4c59-bdd6-52e260ff5c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d78c3eb-55af-4142-8072-250a558bf6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a92acb-dba4-48bf-b8ae-3424f8ecb8bd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a71ebd-a40d-4ed7-ab7a-5cfc860d161b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7072b692-f482-43a2-9832-92ce8c914dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bfe5ee-61f3-48f2-b504-2f088054451f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208c5b6b-820c-41ba-ae44-54a24129dd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1906a384-8799-4290-876b-a8d122d2e908",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f646cc28-adae-40d2-b742-4a478c869dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b911b7af-1bc0-4d6f-a4ca-3596d2d9750c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8752a2ab-06b8-476d-8e8c-7ffbf2fed222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3001cc3e-d39d-4d68-a26d-218e47fc60a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c25dfe-6d6c-4800-8dfb-158dbbda1c83",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c58679a-c6aa-4c68-98b2-8ad77b831ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a3a412-0a1e-4f11-bebc-c33cd7542363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7243a7e9-e2d0-4922-8474-c89454cf2ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267a7119-9710-4436-bb25-d5697a2601dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a53ceb-5d42-47f0-b7f5-3c5ff368d61c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98a4b54-ddb7-4d78-8e90-fe8bc423ab05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06d332f-940e-4a45-b75c-74320522f070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853eaab2-2d72-4979-a453-916e41509d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96292198-0441-4464-a0d5-10649ab13eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9819439e-b71e-4e0c-9332-ea54923038b6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc04ce9d-a73b-4aeb-89c8-c38aa2e41c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e133ac-a000-4f41-bb96-77996638ca4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ca18c5-1c9e-435d-8119-012a7491b2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1073227f-6f76-40cc-948b-43df43ef58ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f887cb1-73d1-4d6c-9e3d-8e313a39662d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d370fd10-5e3f-467d-86da-09426888dc54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "239320f1-ae12-4876-bbf1-ae795d4ebbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21007801-0b7f-4f50-a9c0-55aab6ed2ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c147ed-850b-415a-910a-fd17a24895b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9eedc5-5399-4708-ab3e-116b5e13cd60",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7971d424-2488-4312-80dc-350dd989ec4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd609160-2186-4cf8-8e17-6c56c7db1619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13131e43-619a-4633-9a68-863b27657076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6dd407c-8068-43c5-af60-7d071a58e151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d284881d-d1d0-4dfc-8a9d-11a8144ef939",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26d4c1c-2995-4289-866a-0410b1cf8c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ebf930a-8bc7-46cd-ab68-8f1b0e03ce8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea33a4e5-eea6-41e5-aeab-b383a4ce0241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbf68d7-4628-4abd-8fa5-3bba8a2e794f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7e663c-f135-4a8f-ac00-34299f901190",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c573c00d-688c-4b37-ac44-3d80393a8959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1c806d-c74b-4df7-ac62-9f5254da5c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6a79d9-052f-4532-a18e-838b6769f80e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f13456c-9162-4ac7-a83b-6822bbcffc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4fa1b5-d990-4e78-aad1-ba84628a3cce",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32d41a0-6cba-43ad-a9d3-7114bb4e3157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e53455a-3e08-4bb4-a2b1-b959b6cd6fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7c3afa-7a00-4ad6-8d1f-540add9b2aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c69570e-d1d0-42ec-a34d-837ef0722616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8706fbf1-a56d-4ad1-a1df-27e268ff7aaf",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f97969-d29e-452e-8437-758a078fd724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac3e8fd-36ba-4111-833b-fb325eef658b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471d209d-282f-489d-96b3-16f341ba5d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d8b978-c5a2-45e6-ac00-da16ea62f7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f9ece3-267b-4e9d-bd50-1447d7b7bbca",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709ab361-6424-400e-9993-43bc6d0fc623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e14752-306c-4131-8d1a-0bb9d80b9125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ffcf0d-2f2f-4746-9a40-964b2b9fa1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24aa5d34-1262-4b3b-87ef-b4b1b8afb878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9701a7e3-44c2-47ec-be27-382bccdc7da3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478b86bc-47c6-46ec-a894-06475815a708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8374bc0d-ca34-40f8-844f-759866cb6bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244b1385-7a92-4d2c-a93a-0a20727c7155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb32716-e7aa-40b1-9a8e-047a9b0975a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a38f75-557c-4029-9c73-0c9ed1ab678f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3c2031-43fd-4c44-9396-4135b462895a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dba376-9533-4e16-861d-148bd213ce4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1f521b-98bc-4ee3-a939-5cf13fb216eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f41938d-07ce-4c42-9ec4-748199b612f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642dac31-eaa5-4c0d-a89b-94d1016e4791",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb2b7de-a943-4221-aee9-602f330a1860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29c37a92-9a64-4e3e-b415-6933d9bae1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19d60f5-1ae0-4f33-a17c-ffaa9588a712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1030edf8-cceb-4941-af72-c13fbc9250f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7877f60c-477a-4a5a-bcec-b0abb7a4e1de",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db824ce-bc15-4b25-83d5-0cc21331a0b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "259afc6b-83c7-4fcc-8c8c-eee92bb12cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efb4d06-526f-4ff2-b02f-33353e0a9323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6ee1c1-3735-4060-847f-9f2a13b4cd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1604ddd-3254-4248-907a-a460379774b2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deabd915-9419-404b-b413-05eba442bdd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5f51cf4-c56a-48f7-8f55-e58a566ee532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6367e36-eb39-44b4-a41b-1bb6f318a83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e4078e-6077-48d0-91ad-235ca61bb828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3d7e6a-134d-4c56-b7e5-6c48308c4ddc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb5b449-c096-4ac2-a3d0-bbaf9d6cf743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a78c439c-6b61-41bb-9b6f-23c46e6c82fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647fc5d4-8070-4455-832d-4361f2711d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793e62c6-5d5a-4167-bd5a-9f845697f5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14fa253-d14f-4850-a9b0-5cc08cb523d4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcaf19f-e774-4aab-9c07-ae5d4443977e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acff381d-33f5-4945-84cb-af12e23cfc17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbf399e-3041-4ab9-8800-28faeba834e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0414e081-8b2e-4327-a690-c7fdbfe4df07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab400908-687b-4f08-b544-c03650e3cf4a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48425c0-f391-4d29-93fd-3ab9109838e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d1a349-22d3-4312-82a7-8af8a0147fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd16156-424f-4d01-bf2c-f88702f26c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25053fd7-d6c7-4a5f-865a-676fa15334bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f99337-fef4-4c9d-9933-8fe47f7e8f9c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c89802-d166-41d9-b513-681e9f8e61a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "810dd958-38c9-40ad-83c8-66f9bfd4d98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c2e367-4c6f-4166-94ee-f2ef403e9314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246e7d7a-73fe-4992-8a19-39ca1b6a4ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925461ef-7550-4221-a155-459d555e8504",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125486c3-249a-4af2-baf6-f5457ad850b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d054f6b-9e34-41db-83de-58f7c1265fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5dfb5a-e92a-42c7-886c-13df1e2d379b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4878c0-8ec5-4ca2-8406-79e81dd28c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f99ca85-367d-4ec4-ba22-e0dfc53599f0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332ab118-2871-4551-b025-1468ee8d6383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "966528ec-3277-4555-9ee3-aacab0484da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38eb0b1-5f42-47ee-b249-92bc0f31ac03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5247d24f-6d99-4f5b-9378-3ebb8a2f8079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9871b09-f6c6-46ec-98a7-e6d07a3686ff",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52a913e-6766-45c9-80e8-105a077dea74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b38374d5-27bc-4e20-9d6f-82a30a6ed5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3321de0-2583-4e51-9740-0fe147de6540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d748704f-338a-4746-8aca-1772d2bb445f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869c9d13-8c3c-4342-a159-e72416362d51",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a631870-e9b2-4b20-91b3-898613cc6cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03ec2746-e422-4c20-bcd7-cf262cc420ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de15070-aa21-4cf7-87d9-10d2c2633f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb07b71-5a88-446e-8351-1bd6290e464c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f730c47b-7f9c-4bff-b5c5-be304f825087",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f33d30-d1cc-4431-9539-077327223e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa9e599-d0da-49de-8a8c-5d321c55834c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4d59b8-bab0-46f9-a41f-8c32094bb8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29724324-c818-417d-bc3b-dc177e0adcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e34100e-c66f-4b73-bb71-f2bbdc458f00",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fd8a4c-00d7-4daf-9f76-044c274d9f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ca1a6a-d1c3-46f7-8b9a-63432335f1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0608b14-3b6f-480b-8a42-2ecdadf7c2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea6fb77-0c04-4275-992a-a487017fbe49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f319ece9-268b-4e4c-be17-12ad5f541aad",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18af95d-538c-46c9-9c3c-a4be4be8739c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f377af88-aac6-4161-9806-41deab091208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b148de-cd56-4d4b-8b6a-f922956ecd85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90ac88a-3751-4587-b21f-a21d5c0d1509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64541c18-6265-409e-83fb-9c3e8ab092aa",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0777cf46-21ad-4a28-af79-ec41c6eba0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749af4e6-33c8-4553-b62e-0d789db0a6b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d5251d-ffa6-46f0-b73b-b32a402d2ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f20fdc-62d3-4efc-b665-fcb94eec5e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496124ff-9b12-438e-80f2-cb47209154f8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68f14cc-8117-4f69-913f-ecd58b505663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98988042-a6ae-4abb-8a01-d261ba1a4a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27407118-43f9-4a44-846a-bddde1546a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efa55a3-2ee5-497c-8b0d-da5f108074de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50171f4a-e5aa-44ea-83aa-98b27c835180",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aae3557-e846-4def-9a42-bd617ee0f943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbe0f45-2e8c-48bb-8b1d-08ad916dc1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa9ae28-9bcc-47bc-b853-9a09530c9dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db26d605-e44e-416d-8806-fa91821fcc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071e49f9-114d-424d-b359-7632650479d7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f393af-7e12-455e-90ad-814cfbd7a50a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7293905d-aad9-461d-925c-3c29ff66176b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be66a4cd-be01-4936-96ab-a5a1a162b5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b1132f-8372-48c2-82e2-1216c06b5539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e55c1e3-67bd-417a-b6e1-9a223cc7f772",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc6f358-ac23-46c6-9964-00365d895208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869b27e2-8765-4a2e-b865-ac1490f535f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942ad37c-f127-4b40-91df-ec2676e93446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8953f331-2059-41ff-aa2d-38ed5c13da95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dcfb14-6595-40f1-a5c4-82e9771b92f5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54644b61-96eb-48a9-8be6-51909c920d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62eb5ff-c8df-4fb6-9577-6f48e5bd220e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952bb75f-24e4-45c0-b3b1-6caa7edd35aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a227d07-a049-4726-958c-ae24de029da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4fa495-fa43-4f5d-b187-562fc4902451",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d040ea36-1cef-402c-bd39-28af2b0a2890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabf6506-181d-49bd-a518-5a296df20c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f6296d-9448-42d4-8510-b481c37bb377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c6e7a3-7bde-4ccb-8203-cfb0fbf71d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2745ee2d-0beb-4c5d-9f15-4f9f64e6be8c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9951845d-b914-4c49-91a2-5b544c0a72a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cb775c-1ac4-451c-9881-80d2a85682ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd947832-10a2-44eb-b879-4726678fe8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd40140d-e5a7-44a9-8d2d-ba5b7aa9d014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ac7a36-cab2-4745-b0cf-54db415ace36",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1ce4df-4a7a-4783-b07e-ec737904ca9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318fd232-5c68-4b2e-8c7a-587aba18c59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74b4849-d6d2-4f20-8ffc-8765ebd7e4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a786ac-cf01-409c-a14a-c56b28b9d07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc60eca-8e45-43bf-8470-0fa527bf005a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b46efa-f84c-4d19-946a-7905bb9b886a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1657cfd8-5982-4ef2-a73f-c535578958cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0111e829-a5ce-4f32-bf38-8b7c4d4cf0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6aabaa0-82d1-4c82-9243-b8580b293094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a189ea9-b0f7-4436-8db8-a68a84e6438f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7517dcf1-6b32-4c8f-b19b-ae61ac801613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14226bc0-c4c4-4c44-ad86-5b509a505a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43be1758-69bc-4ebd-955e-7dfe48dda5f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b381e4-3a77-463c-a693-afd6b3cd718c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9496fc53-bedd-47d3-ade3-e0eb7cd04a7c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e484e0c2-fa38-4bdd-83e0-17cebee48234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e871329-4821-4447-9bd2-4621e77ea100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c78129-48ea-4a0d-bc46-6273c555595f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa9453d-d90d-4e58-8305-521c0135480d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af34c80-02ad-4895-ae82-8d21180e3f0a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddb8bd0-c967-4f2b-b8d6-e1a712c9a92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72719c9d-c356-4e80-8118-127930c26b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c504c29-bba5-4bba-991d-f997e35fcd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b3e42b-e052-451b-b5f1-297793085d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646e7d75-f61c-4bf1-8a1b-ffdfda9d7b85",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b255a13-7fe4-42e8-ab3e-3ad23060896b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd06a6b-98a5-4e1d-a133-615f82ca5b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a0caf1-1052-457a-8630-4d353eff11b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0badec50-6490-48a8-8f47-ad59df19cc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbd437b-28da-4150-9712-c141a0ac20bd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c9b46b-b334-4a1d-9140-940fcb6f4dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd991dce-57ba-45bb-af10-882f6a410a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc069882-a9ef-4b4e-bf22-7c0842ca1371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d8501f-0b03-431c-a872-011d9ed50c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576dd369-9268-44d7-8631-d31a6804cea8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5d89a9-ba16-4b0c-8228-b66c7665532d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a262b52d-fae2-46c7-892c-853713484785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a0ff96-ba15-4025-8871-79c7908559ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971da3e7-29e0-4378-85c0-ed157dc5bdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4e6c05-4c2e-4b7b-8061-1e8fe11a62f4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af32ada1-ad1f-43a8-bb59-5f8be31dec8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719a8a43-3afb-4ba9-8e24-4335ae444875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48110074-1977-46a6-9bb9-c19a0f3841c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d257d551-3363-42ac-98f2-13f7c0169676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d54482d-1787-4939-9b3f-1f0e556abf8a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eac351f-8868-4bd3-ab9d-cf5600f11b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6544b0-de4d-40ab-97ac-d696929b5240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cc0709-6d66-4cf0-8fe0-c9a3707092e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13987715-a4a7-4fd3-bae9-b83134ee43ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63acf565-0bd3-4571-ad3a-3dd3441e9f80",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6200ad49-bd34-46c3-9e0d-570a310e0e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb7152e-8bf2-4226-a8e0-c9897247bb4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66caedf-0ce9-4dcf-8050-db93b758f9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4c1748-c614-4508-8b68-d48b6159ca5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494f8e6f-84e8-4e20-90bd-a4174d102ee8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d33eae5-512c-404a-a479-74d630270071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1ab52a-5bc5-4cef-b0e7-803333f558ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6c55d3-0f0f-43cd-95eb-ca7354491634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6e316f-b3ae-4e71-abd1-4a80639880d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59d0137-636f-4efc-9cbb-59c25d5d93de",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee9bd1e-a0b4-49cd-8c92-8a5138469148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e764d1-60c6-4be9-91b6-7fd2b10427b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98f0a93-5b64-426d-948e-5daeb0f2f3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c504202a-f2c2-47b0-b520-c9265316636f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100b8a76-05e7-408e-a2a4-0b69bfd86361",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addd3303-be3f-4f32-815b-7de31bb2dc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e3d161-0a50-478a-aaf0-97d31934f134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4498cc81-fa23-42a5-a560-34d039cbb4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683ec9c6-4484-4b84-83d8-7f61d7424521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90a873c-d5f4-406a-ba54-f7906f752fdd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958fc6ed-3c9e-4f86-a466-2b6b4bbc05a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfc82b7-8ecb-4de6-8c30-1bcab181e079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22266749-87e5-47bf-a686-03465416f95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e930ee6-beb9-4376-bed1-5626cb4ea815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758e44e6-321b-47cc-b96d-627c4c6c6b2b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cad0c9a-8c22-476e-bd86-0e78eb80b3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09c7a9f-b577-4ec2-9f4a-f2a61454580c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156ae85b-ca57-43ec-823b-5c39159d3845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bfccdc-69b5-4155-9e10-04528f214d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ae35f8-d08e-48fe-874a-4de253ef0749",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9c8419-c440-4a46-bf8c-e4e5c1777cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fd7395-b6fb-427b-8c98-6c709395ac22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0da235f-311c-4f71-899e-3ffec57f16de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e6a326-01d2-489e-ae89-f2a2900917e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bf02c1-9ceb-4b1e-953e-6f4a8111c6d7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801d6103-dbcd-427b-a285-cdb43adf452b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2ff44d-ea3b-4e4d-b07c-325383a67a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ffdc0e-e32e-4506-9ef2-a2e91a510953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743ffaab-9e7c-4558-a86b-c7cc379a938d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc56054-a601-4ce4-9e13-0ad607b53847",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f093a9-9961-4ff5-b36a-b405b08ab98b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b904e6-576f-422e-bd8e-968ac22d9336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27112ee7-7608-42e3-beda-906afc776f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ae1370-f3a8-45f1-8f20-ddddf80d9835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b052db-cd44-4cfb-807d-a3027242da45",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae836c2f-06ba-4280-8d85-675c26937b20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b1108b-c6ce-4141-8511-a7061eba1b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1408f327-1ac8-48ab-b91a-0d02b4b5406c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23db986-0d96-43aa-8490-0c64b38a5bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e32ba45-6142-4f56-a314-8073d70f74cf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9604b9a-5f15-41a3-a291-f7dc596986e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "557416ac-158a-4b50-90de-16ebced027e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3c3c24-2bdd-4580-81db-1f4ccd429254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e383a5f-b624-4b72-9174-6f5f8896e88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30ff23d-648f-4fdc-b85d-95139a40f5c6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97255ad0-035b-4368-b8d4-56c255ad9186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34d5f181-5b0c-49c0-8e53-fbb97bd69071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e8aadd-9fb8-4dbc-bbf4-667ae0404909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a66a2ac-7a0f-4dcb-ba5f-77e708159e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbda2dd7-264c-41f8-862f-d9b3e15b6417",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399fc1cb-951c-4fd9-bd46-fc78ff26688a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a9a64b-1c98-4cf4-a8bb-41a12b912d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c28b9b-987a-4b10-8769-1dbc0b85998c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353a258a-83b6-433e-95de-0f5ad8cce006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bdfe04-a869-4dfb-87cb-9dcc79c655f2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53895d1a-0d7b-4618-ab24-d86225a5f620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "315aeaa0-4c19-4abc-a208-ef27f193b5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32800158-623a-486f-9fd2-be6b03ed56ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bdec6b-41ef-4377-8843-745cb668eff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faa836c-45c4-4e98-b043-05c99318bb08",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5220603c-959a-4569-8f0e-00801012ecce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ee3f448-b9db-4647-a2a8-d3e23cb9bd4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3969f08-002a-4f04-ac71-47bbab28f5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f2e1b3-2d18-4f2f-ac30-645b09d78733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f9ecba-f8df-4690-b5a7-e5c89a4d42f8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156728fc-6181-422b-8dc6-7930f9fccae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef2f4b7-3f30-4313-a2b5-504700cc509e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451607b1-9529-4228-b086-6f0e8630662d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4eaa107-91d0-401c-8a0f-85b44d7be3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f065c3-01a8-44a5-b5b5-00ff5fa803fc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad08b094-f197-4b40-8085-daa901c5b9e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e98faab7-d9c0-49d9-b537-4611a7711943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e228ebd-de74-4b6c-9457-39f9a8eff121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6bee49-8ff5-4180-ba83-a6293084a415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4440819f-2c66-4823-bc65-de1df72800e7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3c1edb-dc3f-45ce-9c68-61d3c877f97b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9547b5b1-4aa4-4bef-a364-ef4fa98f1ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b677db07-fd91-4445-9632-76d3bccc9695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42acd11-d2c9-4f58-9f3e-65a550c696f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1c008f-1900-4843-ab61-f3fdbefb48ba",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54544676-04f1-4ddc-ad16-09cd14ded5cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1072ede-b52f-4718-86a7-950385f2ebba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91d2a3a-b981-4f8f-9933-d1abb2dd610d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35de574a-26d2-4aeb-a5fa-540c4f3411d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeab104-aff1-483b-b5dd-fce4a0db513c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6269b94c-0eec-4c9a-b518-4cf0dbcaa520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "068fac41-35d1-476b-b866-8ab49ee8a2fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd061127-5eb9-44d7-af5c-5922b6e5a372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74542dfb-b5f8-479b-825e-ae732b95243c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfd8336-11da-43c8-a5a8-668f024ee79c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdc88fc-8f2c-47f5-8a9a-2152c7efd08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe315072-ad7c-45b1-8c65-4a14a200deea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acdeab7-bcd9-4f86-baaf-e178f8e6f322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32284c21-a943-4cae-8413-65e952a48dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdde132-2b2b-4e26-8bce-15ca152a6abd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe86472e-f87b-420d-ae56-c6b98754b0bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91102d6e-6ffc-4d05-beb8-234242f406be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0065f8-c6ac-4e27-8a0d-8e611ebfa0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2aa60a4-f5b2-461b-a54a-c2a9e0249ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4023ffc-f71e-49eb-9a44-184f4311b359",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3453b5a-0318-43c3-945a-886ab97e90a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77e5e793-ac73-4885-8819-cd226f71646a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a9437d-da46-42eb-8d98-c58f97b0a785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7500e5-5ddf-4b6c-9fb4-626a8d975b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0987ad-6595-4cef-929b-f295efd38395",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cc8fbd-5dc2-4d81-ae3a-c09ce2a5e716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ae5cc0a-4738-4341-b534-dd6c1777e216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcf5781-bbc1-428f-94db-59c613afae18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d16cff-d555-4944-97aa-86418dc0687f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a48b24-30db-47ff-a3ac-533217007236",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c7ce8a-f064-4294-be96-678b5ebfc2fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "379a747d-9f4c-4d92-9bd9-0ee999bf56be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af130a61-bd85-4118-bbaa-9edc18c3a9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f21ec2f-b8cd-4674-bcf2-29d55f69cd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52973546-9355-4ac8-ad22-37cb186d478f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75306f9-5576-45a3-9bb5-a4aac0ffe6cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "751ce0fe-4881-40bc-a6af-002664a8d10e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9e3a98-b012-4e64-9fea-b9c32fa590c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f645524c-94a8-4ac9-a05f-037990b6d198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa8e202-0112-435a-8cfb-f0f150c2db0b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886aaa35-93dc-468f-8b55-bab1d2aaa311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a7adc23-7397-4740-8bce-7c547b00b97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dabaf86-84c7-4555-a2ea-400d210f2a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37529206-2554-4db3-a136-d4c6820e3280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2ac886-d146-4dbe-9035-d6c0d9c1b325",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f423a61d-b304-4e51-a975-92d591fdca9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09568f2a-a234-4ff4-88d4-391ad3bc2211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de02999d-9f84-4eac-be75-9ca8e1ac5d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbc32aa-472e-45b9-892c-d06e5c655951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bb8b42-3a85-49ec-8bf0-069f41aab6ba",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046797c4-ed88-4cb3-b803-62d9cb2484fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa6dc636-f9a6-4d6d-94d7-8e68b8a8fbe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb00eeb2-5d00-498d-a908-b19ca8ff79f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ecdc4f-c329-4ce7-ab61-d0e5c786864d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0e8c2f-6397-40f4-8a08-54fcd2048e8b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073f6c22-90bd-4804-8460-6e284f7beae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "238b2fc8-8cfe-4571-9b45-4ad0f8b6963e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4423b835-7caf-49c9-a56b-ed958eca9ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1ee59d-2aea-4ada-aab9-34fe946972be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85be7383-f268-414f-812c-d785ef849877",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fdca35-9ab2-404e-aab1-80f0d3efcb35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c29e4a2-86b6-4279-b65a-1a20bb70b1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386ce88f-3852-4c6d-b92f-d2eddecf5a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a93c52-ef60-4b52-8559-0ca7127b82f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d1a0fa-d69e-4a77-b989-50935fb9840e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3d929d-e6e4-4c83-9221-6b6cdac1eb41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4db8566d-e19e-4e6b-b1d0-8239157f39f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0556714-731d-4e0c-adf0-c18da41064fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e1f523-29da-425f-916e-ce57b19b9f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8144d808-5afb-4ca0-a589-b33be3ce336a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1770a162-0596-4147-92e5-9143096b157e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03486055-bf60-4460-85cc-5f3a3329e314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d372fa4f-38a8-48be-94d8-7dc151ea8c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ceec9f3-90ec-4a65-8acc-471c14551531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56869da9-4f11-466b-bba6-9dd77144930f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff26704-9c10-4b8a-8f16-416477cfa6b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15b4de16-4136-405e-8578-1f820f9ff818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caae98a4-394b-48f8-8249-5f895d9641ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09a96cc-afff-498c-8f0b-d70b4e5503b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482b684c-1f7b-4093-95d2-ea913c9b6f65",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756ede1d-6fa6-42b4-baee-656d7bed204a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fbd5ef2-f662-433b-917f-9f62fc65ddf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a384c1-b91b-4a06-93b6-4401ca96a080",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1340c511-439d-44be-a81c-13a03b593c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821cc19a-8f19-4748-ab49-2475bfeb7e68",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2890f1f2-342b-401e-8e64-5e4d9fd58d7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05ccd5b4-a1e2-47fe-9bf8-1183fba59a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be61f26-1a1c-4e7f-acb9-8c98f98ac029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b0987b-96be-4d56-b8d8-e6265bb4da9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f991a3a-bdf8-4e97-ba34-bf16fb43d958",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4827d663-a57f-4e88-9766-cda29476c783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e3d92b-06c0-4ea6-a9e1-c58d7be40752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86360572-7203-433d-8eb6-439566055ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cebbf8-2f86-40be-a896-2f17cea1d321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4cbd46-d040-4cd3-a603-767b6bb6f70f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816046f4-60ce-42e9-9936-dcaa6e7bebe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af755bd5-f708-43c9-98b0-01f8a73fc0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdeb09e-a01c-40e0-8ef9-cbb3f472780e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155eb671-762c-4c11-90c8-8b92a8970c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4899b02c-cd86-4680-bd40-be51378ff20d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79025d93-4ad7-4904-8275-69aa3bd09896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45f6935c-5d57-450f-84db-95ef838a07f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a066fb-7440-4adf-8adc-018e9d502e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4148a02-79a9-451b-811c-63647d514bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de27fdc-5bef-495d-9cce-bff79c02774a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9d8daa-c267-46ef-acd6-1380abeb214b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6c7eeb-34d7-4a93-9a92-1d198b0280dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab529aa8-3b12-4fc8-bcd9-71639ba5ff79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceaaa85c-77d5-4f4d-9db9-fe74f2b140a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09988474-38ec-43c8-a570-4965cc50f7ce",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b42a15-8750-4775-9825-50d2df33cab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "653d80a6-8e53-474c-8b48-f97c42690f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fb75f4-aaee-4ecd-be7d-428f89ea7df5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e6120e-d416-4977-8fea-11c977bdaee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62808ffa-c80d-450f-a5ff-2f26424aba5b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331a3979-d5fc-4d49-bf32-4627380a5dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59aa0ef0-a58b-4849-ba0f-56ccc93c8644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f4107f-a9bb-463e-93ec-6e37b8924b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1342cdd-2b3d-406e-851a-d801d6f27616"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0d3a6b1-288e-4109-9b1d-8b82aff4b24b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be3dc759-6762-42c5-9163-1d37435d5109"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3d13d61-e45f-4c17-b202-093492c449c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebae9b1b-3027-4fbe-96f0-dffea9df9722"
                    }
                  }
                ]
              },
              {
                "id": "0807a73b-01a5-4112-9997-e346b3b15d96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eea48247-7fc7-41e9-914d-997f1c0c7fdc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05a3fa8-e4a5-4bfa-80ff-ae856bdcac98",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eb284e8d-f48e-42e7-a2a0-a93e1f720020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88afdd23-47f2-488d-8d0a-6b52ffba2d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df1b4ac3-3ea5-4344-bc63-e01e4d1a7fe2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cbf53b3-056a-488e-a2a0-509f32efd4ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd47b4e3-c93c-48ac-b7d1-fc6cde6cc901"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de8eae1e-1950-462e-8159-86dc1f739fa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bee32820-66ec-4222-a7cc-6abef48274ec"
                    }
                  }
                ]
              },
              {
                "id": "4806957b-90d7-4cd9-9a73-3b053b75eca1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d2120d84-814e-4b93-8f8a-de67ce274fcf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903a071b-666c-4043-81fd-d8749d1a8c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cb981d1d-12f6-4607-b93a-7744466e9b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaca5ea-e3d8-4047-94c4-028aebc6d8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c8d31c-6638-42b2-afeb-85f52afcbb30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f3b678af-20de-4814-94c4-bcaa8d820a61",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4f1f2f9-7dc7-421e-9aa1-19452ad295d9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc0f7b13-7b33-48f3-af9f-9c7693ff2333",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b009d5a1-8eac-4bb9-90ac-80fcc8f104cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69b0cfdf-4d6e-43fb-a182-db294403a0cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d45da19-ffe9-4f9e-a951-a2542f3b29bc"
                    }
                  }
                ]
              },
              {
                "id": "6f5286ff-b88c-44ab-aeda-0ab15c91050b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa5cd1b2-27fe-48dd-8b8b-cbfece532897",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "59a4acfa-f3ac-46d6-b184-ae5c1250a5a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11bafe1b-bf35-4e6d-b4de-9f5fc64162f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8509536a-f67a-4ace-9197-05bc1d21a749"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "727b02ac-8a8e-4f2c-84b8-70b83e97abce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d01c0131-4f8b-4008-96e9-45497bb9c26a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69a08c3f-b135-4c03-b753-6bcca151e923",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f12e13c7-e3c0-41d1-ba99-0bb477d9c5e8"
            }
          }
        ]
      },
      {
        "id": "fe9ae404-aece-4cd7-9d3e-c500eb00b2ae",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "494b9e9e-71c1-4aea-9fbb-bb6dc92a5127",
            "name": "Negative Testing",
            "item": [
              {
                "id": "519e51aa-9620-4ad4-9a4e-7c499454dc31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "746e23eb-3f90-46ed-8bf2-bf6668161d98",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2839c85-6027-47da-beda-752b0c7070c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "62a0ffe8-fa72-46e9-a3c2-941a0fcab6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ba020c-9c9c-43d0-a904-f9dbd4fb8c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3ce9974-d41b-42b5-abfa-7f188a475437"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0351deb1-3e7a-4e0f-b119-d051e76059ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc098e18-d9be-4dd4-b41b-14bed2dbbb46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cb8a0e6-ec60-44b7-a03b-57af0eae3b10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13246701-ce5a-4791-950b-0f11929570d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fed2934-c688-43c4-aa8d-0ff6b41583b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3ecf580a-a942-4870-9c09-36e7bf112ff8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93662338-27eb-4ba1-a5b6-9b26bd182e74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc7458f6-2f70-4c09-8e65-396c1c6063a7"
            }
          }
        ]
      },
      {
        "id": "65a6a929-f708-4f88-a8b9-5f275928fd58",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "027328b2-7c16-4387-927b-4df761d35206",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0dc18ed0-1502-44bf-ba5d-551375464e34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac8bba80-d4be-4599-a627-db387d9a6f6a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1658cd7e-94fb-49ba-ad51-728f924b16ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d6367fd-19f0-4ebb-af0f-7111ee0475a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "444401fd-ee8c-4ecf-981b-8831d707c2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fecd07f3-6880-49d1-8795-cb4326f98f28"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1582a49f-537a-44b5-897d-8a081bf849cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c47994c8-6a6d-4be7-8882-a4c834ebeb54"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48b317f2-0292-47b6-a3bc-c52fb64a8295",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6c364b9-456e-4491-87de-3a4c212c8fb7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e3c5178-c65d-49d3-a34a-544b883231e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b05d5342-39bd-4e03-af5c-bc549d9480e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a6b07cf-5e0b-4dee-bc4f-cb1af14a2525",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8ca3dc4-61a8-423b-9fc9-cd0c58f0c1f8"
            }
          }
        ]
      },
      {
        "id": "6eeac852-c528-427b-82b8-9bb404f6407e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c929adc9-ee0e-4201-9a4e-f6b829d9b76f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2963bc59-6548-4ef4-81c0-44f0945003b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bfa5ebe3-f8da-41de-be97-8bd2bd257545",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7d785c-be27-4349-9131-cc3d267cf817",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98a9c5ba-3855-43bc-a600-c39ad8adfd1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c949ff30-a14f-4316-9fa9-a092ba06712f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbc0b60f-2be8-4bef-8303-08000d53726b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d22a440d-c429-4b03-946b-ab0b6652160b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4689e0aa-40d4-47d1-9075-1b2bbfc09a4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be1c517e-2d03-49a0-b715-10b6696602e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6622274b-d080-4767-b268-48c53dd6b3d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "049fb7b0-9a09-41a7-94bd-10de471af96d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90f37121-e2f0-4c1b-97ba-f1b04ed934c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6872091-5004-4f6c-ab1f-54dd0e4fe0c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de31a778-aa6b-42f3-a2ab-92bf81d8e9ff"
            }
          }
        ]
      },
      {
        "id": "a7a80ede-bd61-4462-94c8-2ec2ad69be4c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a661049-a42e-4aca-a514-713ef291f6b3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "671cf024-eb1b-4142-83d9-2b004b254a5d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c9561aab-0def-4026-9873-f1e796045ce6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "735174df-d829-4e3f-941f-4c2cd7b9ce26",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0e35e83-3c67-4fd1-b2b8-350ecc9b7d12",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 658.595238095238,
      "responseMin": 6,
      "responseMax": 22071,
      "responseSd": 3308.3654314829396,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727052354816,
      "completed": 1727052529213
    },
    "executions": [
      {
        "id": "4873661c-018a-4f17-ad91-785aad1854ba",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "183d1478-33bd-4cbb-9f8f-e4e0ec1adb6e",
          "httpRequestId": "ec7c7731-3d6b-44b4-a0ba-b525dc462afe"
        },
        "item": {
          "id": "4873661c-018a-4f17-ad91-785aad1854ba",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1ef7e2dd-3060-447c-8dc3-f8cf93d870cc",
          "status": "OK",
          "code": 200,
          "responseTime": 390,
          "responseSize": 0
        }
      },
      {
        "id": "bebdaa4e-8d8f-4e7d-82a9-aeab93e05ac7",
        "cursor": {
          "ref": "23fd606a-dc51-4115-a4b2-b020dad5f940",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ff702b94-c62b-47e4-a9cf-319d88d4788d"
        },
        "item": {
          "id": "bebdaa4e-8d8f-4e7d-82a9-aeab93e05ac7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "94301853-09e5-4e17-9740-264682404af2",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "a3c89ace-56ee-492f-bfbf-782ae49c2e7c",
        "cursor": {
          "ref": "855d28d0-e687-45fd-add6-85efb90590e2",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "365ed419-d1e4-4a6c-83b9-cca789ed06ba"
        },
        "item": {
          "id": "a3c89ace-56ee-492f-bfbf-782ae49c2e7c",
          "name": "did_json"
        },
        "response": {
          "id": "97da4d5d-7cb2-4c98-a7c1-ac1186c5c4c3",
          "status": "OK",
          "code": 200,
          "responseTime": 285,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e3065f-1019-4556-9330-8d84da26ae1d",
        "cursor": {
          "ref": "177e29f4-2382-4f62-a5b6-410a42a90982",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "04d13cd5-2864-429b-a247-6f2558fd0174"
        },
        "item": {
          "id": "26e3065f-1019-4556-9330-8d84da26ae1d",
          "name": "did:invalid"
        },
        "response": {
          "id": "a961d190-866e-4781-9de1-aa9fe1b7c715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2317,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e3065f-1019-4556-9330-8d84da26ae1d",
        "cursor": {
          "ref": "177e29f4-2382-4f62-a5b6-410a42a90982",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "04d13cd5-2864-429b-a247-6f2558fd0174"
        },
        "item": {
          "id": "26e3065f-1019-4556-9330-8d84da26ae1d",
          "name": "did:invalid"
        },
        "response": {
          "id": "a961d190-866e-4781-9de1-aa9fe1b7c715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2317,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092a6c70-bfaa-4ab6-89d5-8b1daa12aa0d",
        "cursor": {
          "ref": "fd853041-859e-4d25-8571-7803386d1dcb",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "86d2eeb0-0dd7-439b-8568-f41f2148b8cd"
        },
        "item": {
          "id": "092a6c70-bfaa-4ab6-89d5-8b1daa12aa0d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b599551b-0548-4d69-a5ee-856768143eff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2800,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442636e3-63cd-4c7b-8a4d-f6dc38b8db89",
        "cursor": {
          "ref": "86c2aba4-b6af-4005-a5b5-573f4949cfd0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c9ad448c-4580-4eeb-bf98-24b96400caee"
        },
        "item": {
          "id": "442636e3-63cd-4c7b-8a4d-f6dc38b8db89",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7bde4ec3-d6ca-4cab-810d-2367151e7bb6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2572,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40ce318-3b13-4cd7-9bf5-5850f4213452",
        "cursor": {
          "ref": "242d0bcd-97f7-40e9-9cb6-7fcafbf1b99b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8b20113c-c777-447d-9308-db670e42541e"
        },
        "item": {
          "id": "e40ce318-3b13-4cd7-9bf5-5850f4213452",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a6961d14-dc06-4cf1-8f5d-87f6380c289a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 227,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d050741f-d8d8-4a1f-8fd7-6e3af3c69354",
        "cursor": {
          "ref": "48aab4f5-8ad3-4e38-814c-f8741aadc38e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "92702d0f-408c-43f2-b746-d2b475769614"
        },
        "item": {
          "id": "d050741f-d8d8-4a1f-8fd7-6e3af3c69354",
          "name": "identifiers"
        },
        "response": {
          "id": "0dc8f3f1-e697-4d1f-a0da-ad50efcd311d",
          "status": "OK",
          "code": 200,
          "responseTime": 2415,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ae75d0-bb83-4007-be60-b1a029d8383c",
        "cursor": {
          "ref": "9908e425-1ac5-4071-bd28-75f24dc3cd8d",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0c4077bb-2fb4-43b5-be21-6c31528c3759"
        },
        "item": {
          "id": "92ae75d0-bb83-4007-be60-b1a029d8383c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "33fbfc2b-0a97-48aa-9a3e-43e5bb4bd1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e62d88-df68-43de-9e7d-f395bd7cae33",
        "cursor": {
          "ref": "e5a312df-283b-4dd6-8fca-10bf2672b019",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "28d422df-6b9d-487b-a555-6532056d9a9c"
        },
        "item": {
          "id": "44e62d88-df68-43de-9e7d-f395bd7cae33",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0ba96b4b-4d5f-4ddd-8ba9-b439cf5d2c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e37517-bc6d-4e65-859c-210fa8a12bb2",
        "cursor": {
          "ref": "64bc4b90-f33b-4205-b264-7c582670bf2b",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aec3d289-90b1-4f57-8593-82c51cfde242"
        },
        "item": {
          "id": "42e37517-bc6d-4e65-859c-210fa8a12bb2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b7b0e87f-1d56-4fe1-a2eb-f074cbfa0641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ffd525-8633-4f85-a26f-dd12bf98a2ba",
        "cursor": {
          "ref": "1ddbbee9-474c-4221-bd74-91ce16df8770",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fec829c2-c010-42b5-ab13-760138e6cddd"
        },
        "item": {
          "id": "06ffd525-8633-4f85-a26f-dd12bf98a2ba",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7f655eae-90d3-4297-b56d-0cd25a96d33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197493f3-a579-4439-b959-5a9014856b76",
        "cursor": {
          "ref": "1fb0564c-8af3-4f45-8c7f-41b28ee08531",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "247497e5-5d1c-4f8c-b73c-b3c7e42aeeb4"
        },
        "item": {
          "id": "197493f3-a579-4439-b959-5a9014856b76",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2726dfde-c1d9-4f4d-82eb-3222632ae496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8777fe46-e5d3-460c-8268-208661bacd01",
        "cursor": {
          "ref": "1ef1a7c6-53c3-4a42-85d0-2cd899c8a924",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "96e5a62e-2228-4050-9d49-a83bd0c0213f"
        },
        "item": {
          "id": "8777fe46-e5d3-460c-8268-208661bacd01",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e52db0bc-9db2-485a-938a-6f35886eebf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b133bd8-f932-4069-97b6-7141d596b38d",
        "cursor": {
          "ref": "d269bf7c-8595-4390-8107-45268063144b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b5df17dd-dc48-4186-aae5-b62a7e02be50"
        },
        "item": {
          "id": "9b133bd8-f932-4069-97b6-7141d596b38d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a5c58314-9cba-4292-9a55-fdc332287058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad099c6-0305-4fc7-afe6-bc3879603776",
        "cursor": {
          "ref": "cee6bec7-7ea0-4b7c-9c73-fadc8d920bb2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6652182d-048d-4b07-8004-9877f412a9ec"
        },
        "item": {
          "id": "0ad099c6-0305-4fc7-afe6-bc3879603776",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b84ebe2a-7836-4946-aba7-c5a09bbcec7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f77978e-3fcd-4057-ba37-8c1b8c326664",
        "cursor": {
          "ref": "e95755be-ad38-4e6d-9050-01b6f7bc2885",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3627ac88-5d27-4477-89d8-90e763e58d9a"
        },
        "item": {
          "id": "2f77978e-3fcd-4057-ba37-8c1b8c326664",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "79fee4bf-9c53-4d8b-8bf3-d32872f29327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b795a7-e6d2-4833-8925-331a2ec00c05",
        "cursor": {
          "ref": "d50c741f-2795-4865-9784-6d8798ca0fde",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3b666e79-f293-482d-9ebf-9ee94064dcc2"
        },
        "item": {
          "id": "03b795a7-e6d2-4833-8925-331a2ec00c05",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "43518009-8564-4e1b-9961-d2f52dcdddbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db95aed2-cbdb-458d-9698-def34b36b014",
        "cursor": {
          "ref": "0cf8ebda-59dc-4ed2-8ca4-05bce64caa72",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e53fe224-10de-42e5-bdcb-e506fdb69167"
        },
        "item": {
          "id": "db95aed2-cbdb-458d-9698-def34b36b014",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9aacf2b2-dc2a-4d83-9269-d70f38c9fcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40460936-ed4a-4a22-a086-c5122aabf0fa",
        "cursor": {
          "ref": "f66a7911-c856-48d6-90e4-54a4a101b1c9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5689bafe-68bc-4079-bf94-bb50771de8e8"
        },
        "item": {
          "id": "40460936-ed4a-4a22-a086-c5122aabf0fa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7e852a1f-d5c8-4b78-9ae1-f2a8d6633142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d49ee4-5b71-4064-923a-a1e5d583b433",
        "cursor": {
          "ref": "b1b4df20-4847-43a9-828b-38b9f58900fe",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "655efd48-bfa0-4a9f-baf8-09c9a3f082cb"
        },
        "item": {
          "id": "b7d49ee4-5b71-4064-923a-a1e5d583b433",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bfdb40b4-80ba-40bc-a849-f600431613b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfde0d8-947e-43ff-84cd-d14a09481c24",
        "cursor": {
          "ref": "d0cdc30e-1ac0-46fd-8830-a9cf6094febb",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "14d65a46-acba-4389-8ca2-bdb3365a3b15"
        },
        "item": {
          "id": "1bfde0d8-947e-43ff-84cd-d14a09481c24",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e6c448d2-a8b3-4bdc-8a8b-786e86b99661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db94bd0f-2f8e-4dc9-9031-a8ecc3357254",
        "cursor": {
          "ref": "0c92a005-3e34-4e45-922a-3fe21d83d3a2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5d812216-e253-4815-ac25-4ca762e96674"
        },
        "item": {
          "id": "db94bd0f-2f8e-4dc9-9031-a8ecc3357254",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bb7366a7-0d60-4193-ad69-fc98b0f198c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bd0051-7a95-42e5-ab37-a7578a800d2d",
        "cursor": {
          "ref": "c5f9b5d8-8613-41df-9978-9ef6c4517410",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e592c805-48e5-4b88-a04d-2a51eb803043"
        },
        "item": {
          "id": "83bd0051-7a95-42e5-ab37-a7578a800d2d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "67414616-710f-496f-af92-4c7c954417ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679bea55-fbe8-4bec-82ee-33473728594f",
        "cursor": {
          "ref": "35bb44e3-53a3-4272-95f3-ad52b632ca81",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0c5e16d1-b9b7-449c-9be4-aa9d53a4ed51"
        },
        "item": {
          "id": "679bea55-fbe8-4bec-82ee-33473728594f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f5c23330-3194-468e-a1b5-b703a1282cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da8c71f-8194-41a6-b832-1cb9600560b1",
        "cursor": {
          "ref": "3cf2f6f1-2a18-462b-9b6a-56b8243bd680",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f8cb1d43-2c43-44c6-956c-0684353d456b"
        },
        "item": {
          "id": "9da8c71f-8194-41a6-b832-1cb9600560b1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c11b7466-2d98-4263-9d96-5282770ab47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f69440c-de81-426e-adfc-e33e4520b032",
        "cursor": {
          "ref": "019ed271-88ce-40c9-949d-003e0ac73f4b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d3224b5e-e081-4f4e-a99c-186932ff4d19"
        },
        "item": {
          "id": "7f69440c-de81-426e-adfc-e33e4520b032",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9ec211bd-1cf5-4183-b690-a2802acb512f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6943ef-3920-4638-9d87-eebe56aafb26",
        "cursor": {
          "ref": "a4ce207f-b98e-47aa-aa1e-a17e36b31a5f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cb7118d3-f742-4a0a-8256-74534e180a49"
        },
        "item": {
          "id": "6f6943ef-3920-4638-9d87-eebe56aafb26",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fce31e18-fc38-4734-9379-404e52609400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4554bbf4-47a5-4404-9e34-380704e2c072",
        "cursor": {
          "ref": "ac352c9b-71e5-4a50-b2ef-e20ee5a8d6dd",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dad4b73c-e24c-49e5-a8f4-d47b0f8fb642"
        },
        "item": {
          "id": "4554bbf4-47a5-4404-9e34-380704e2c072",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d436890d-1306-469c-b9d5-60da36d81d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b417abb3-8967-4f8a-9f77-54ad32c5a018",
        "cursor": {
          "ref": "ff2afdbb-a0fb-4c02-88cc-b234ce4dc4db",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4cc48550-cd0e-4449-9e86-11fe5757a8e0"
        },
        "item": {
          "id": "b417abb3-8967-4f8a-9f77-54ad32c5a018",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1ae6c206-8c80-466e-82aa-c0f9b3c5db24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50582ff-bfbb-4c44-9b92-c11282bf3651",
        "cursor": {
          "ref": "c7b5869f-2eda-47c2-86c3-6864ad5bd0e8",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "10523a43-b432-40a8-88bc-9d4cc2876b64"
        },
        "item": {
          "id": "e50582ff-bfbb-4c44-9b92-c11282bf3651",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7e9cbc97-4799-46b2-a0e9-f5f4da08f568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bd36a3-b2df-4ce2-afbf-04aa8720ba88",
        "cursor": {
          "ref": "e3154bc7-eba7-4843-b8e2-9b7a4ad703f1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b77bc134-ff82-444d-91bf-a19461a281b2"
        },
        "item": {
          "id": "33bd36a3-b2df-4ce2-afbf-04aa8720ba88",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "eb088309-f6d4-4d38-8705-c775ad2673b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8905666-ed58-4515-ae1f-a3e5bb36c73a",
        "cursor": {
          "ref": "82f5881c-1281-4bdc-92ef-9583d7f3af0c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "526e3ed8-1f4a-4857-bfdd-5f9aaa8ae6b1"
        },
        "item": {
          "id": "e8905666-ed58-4515-ae1f-a3e5bb36c73a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b23b924e-4c5a-43c3-9b5e-1fef875c3834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ac7883-7c42-482d-b16a-d9209d2e5933",
        "cursor": {
          "ref": "7a79c7e9-8c53-46d8-a1b9-97fd21d4e1a8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b0747b09-4922-43ac-b702-2bba541a2a5e"
        },
        "item": {
          "id": "f1ac7883-7c42-482d-b16a-d9209d2e5933",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a34ad311-7298-4746-bac2-2e269c29a29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e8e522-48a6-4647-9316-48964883f20c",
        "cursor": {
          "ref": "3fde2f39-98e6-464e-b55a-d4f62cf91f9b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "18ca0c55-212f-43df-99fd-e87533b2230d"
        },
        "item": {
          "id": "f5e8e522-48a6-4647-9316-48964883f20c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "497d130c-a1d0-4144-aee6-de1ff566316c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163362a3-0fff-4618-9a4e-0b30c883d9e8",
        "cursor": {
          "ref": "76f10b59-9195-462c-a235-d1429180f8c9",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "00493aa2-ca67-481a-bad8-08742f974395"
        },
        "item": {
          "id": "163362a3-0fff-4618-9a4e-0b30c883d9e8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "50c6c8f5-c0fc-4ec1-a629-ba320fa7e50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ec20e0-dfc7-443a-9e36-0c46653e1f8e",
        "cursor": {
          "ref": "e001542d-287f-4f4e-900d-a1e60195b535",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "609995b6-4b15-44ea-8010-db6cf16f924d"
        },
        "item": {
          "id": "29ec20e0-dfc7-443a-9e36-0c46653e1f8e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "eef1bf2f-95f5-40cd-8437-6db218f2634c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1d030a-b37b-4659-a4d5-84947f1f39e7",
        "cursor": {
          "ref": "8a0fa04e-9f21-4498-b53c-05c0710aa056",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "02ff7c15-f1e0-4c3e-9997-136afa9d9b94"
        },
        "item": {
          "id": "4c1d030a-b37b-4659-a4d5-84947f1f39e7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3fea0873-6951-49b0-a440-dc6ab5e8a798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756a2a3a-304c-459b-b0fb-c83a0bb3daf5",
        "cursor": {
          "ref": "15efd7a4-b9fa-46bf-92a6-6675ce9d7c6b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "755480ed-5084-4a2c-a8c4-8ea6413b45d4"
        },
        "item": {
          "id": "756a2a3a-304c-459b-b0fb-c83a0bb3daf5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "81963db7-0687-4cc4-a0a6-37dc22f7bbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3633d0cf-82ed-437e-a550-0d3f0ddd39aa",
        "cursor": {
          "ref": "51572c7e-3bda-4fa7-acf8-57a2ec527867",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ad49895e-154a-44a5-bf26-5035f5627ea3"
        },
        "item": {
          "id": "3633d0cf-82ed-437e-a550-0d3f0ddd39aa",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "80154543-a520-4bb9-a879-43d7b1096e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0781ccba-b41c-460e-bef6-924f0188ba9e",
        "cursor": {
          "ref": "f14e64a8-7d31-4595-9711-3391ed7a3872",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "242c548f-e62d-4085-bcb3-3c3ab05eaa21"
        },
        "item": {
          "id": "0781ccba-b41c-460e-bef6-924f0188ba9e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2f12be86-4373-4e44-af7c-e0f6304b66e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca82508-b656-482f-9de7-8d6c4ca1eedc",
        "cursor": {
          "ref": "9345660b-58d3-4540-9733-42e0a65711fd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "628ded0e-132a-442f-86ba-b70e9c0c32b7"
        },
        "item": {
          "id": "9ca82508-b656-482f-9de7-8d6c4ca1eedc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f3e4e54a-c819-42b9-ab4a-40288694fdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eff56d4-2e82-4164-a5a3-8e9e3aee75eb",
        "cursor": {
          "ref": "0e81ff1f-d679-43bd-89af-76a70ce3cf2f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b016463b-115b-4911-abbf-c57de4db9248"
        },
        "item": {
          "id": "2eff56d4-2e82-4164-a5a3-8e9e3aee75eb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "285e408e-5a3a-47ae-af1a-d62405e19d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06c6d87-068c-4b28-8fb7-c840ae4e6144",
        "cursor": {
          "ref": "106818b5-be2a-4cda-9740-e82071a793d3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "534c4469-fcb8-4db9-9f53-b25268ffd5b5"
        },
        "item": {
          "id": "f06c6d87-068c-4b28-8fb7-c840ae4e6144",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "76edc93e-65bc-46dc-838e-f27ca3108b72",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 67,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f18c58-9105-4219-acec-e6b1cb4aea5d",
        "cursor": {
          "ref": "fe0f7c0a-1a70-4778-8220-45366b27c2cc",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "90b978c3-30c8-4353-8bed-a70d425c8b81"
        },
        "item": {
          "id": "78f18c58-9105-4219-acec-e6b1cb4aea5d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "91fb710a-27d1-49df-9a7e-c5e0b735f6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755bc052-d6bc-4d72-acff-38f512ff7e79",
        "cursor": {
          "ref": "6b600932-d35c-487e-a398-9dc696010812",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "19b549ca-99d3-47ac-a948-8f743edd5599"
        },
        "item": {
          "id": "755bc052-d6bc-4d72-acff-38f512ff7e79",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "140433ce-dc31-4a80-8002-4f9936593bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1c83a7-2a4c-4bd8-92a1-53fa617551c1",
        "cursor": {
          "ref": "6287f894-3174-43c0-8d18-61f6b78a9c8c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3cff1063-13bd-45bf-8563-458ae84ec1bd"
        },
        "item": {
          "id": "4a1c83a7-2a4c-4bd8-92a1-53fa617551c1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ab194084-278c-4901-986b-32daaa9a7e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31510bcb-9536-4fdb-ae18-d498cdd26bbb",
        "cursor": {
          "ref": "a321f7bf-bac1-49ee-a6ed-cc5d5ac83237",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3b6c23a8-ad90-4891-81d0-aa2bdeeed8e0"
        },
        "item": {
          "id": "31510bcb-9536-4fdb-ae18-d498cdd26bbb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b7d06d50-73fa-4556-a649-3dc08ee5359a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d09afd1-59c6-43ad-ae2c-07341b19209f",
        "cursor": {
          "ref": "14795634-33c8-422d-b503-388b94e8efb9",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c39a2066-86ad-477b-a823-33f8d8de105d"
        },
        "item": {
          "id": "1d09afd1-59c6-43ad-ae2c-07341b19209f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7fcd10cd-15c5-4d8d-95a5-f5b8ae9a17f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d659e8-14ee-466a-9118-4fe28c4e4275",
        "cursor": {
          "ref": "62dc22b0-b8d5-4b36-9154-6962854be0fc",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bb5f3075-29b9-43a2-aa6b-f69a42da4cfb"
        },
        "item": {
          "id": "34d659e8-14ee-466a-9118-4fe28c4e4275",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5c4e46f5-f5cf-447c-9188-7c937b58a4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91128094-017b-4956-8f14-acf69301099a",
        "cursor": {
          "ref": "b23c0561-d07b-4448-ae40-bdebd9f57639",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a17db2ed-f046-4a44-af4d-ba24f6b02f6f"
        },
        "item": {
          "id": "91128094-017b-4956-8f14-acf69301099a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "032f77da-016a-406a-88b7-b0f585440bb2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 67,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7101f601-94df-459d-a1e0-49709e13582e",
        "cursor": {
          "ref": "5c912d5a-2d96-41ec-8b9d-62a8cfa78884",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c9ccfa6e-ccb7-4831-bc88-9aadcac3eedd"
        },
        "item": {
          "id": "7101f601-94df-459d-a1e0-49709e13582e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d442152e-09d5-445e-ac5e-447a08544749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e804246b-28b3-46a9-9f2e-8dd4374d9ec1",
        "cursor": {
          "ref": "923869b5-5e08-4593-b1cb-c3acd1752539",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "231f85f0-d734-48f3-bb43-e075d9131707"
        },
        "item": {
          "id": "e804246b-28b3-46a9-9f2e-8dd4374d9ec1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c572b7d1-0695-4523-b830-6ed7e93b8ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75704646-4af2-4e86-91ff-2754c337aee1",
        "cursor": {
          "ref": "80f34d46-209d-428b-bbbc-352071c7e749",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "22e221b0-e458-4519-baf8-12d5eae7948e"
        },
        "item": {
          "id": "75704646-4af2-4e86-91ff-2754c337aee1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fd791e21-91d2-49d4-a941-33d7fc5eeeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c42cd72-fe12-4495-85ea-c738260fcc54",
        "cursor": {
          "ref": "850ef4b4-4164-4ad8-918d-32a6228df305",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "df619b03-af9c-45a8-bcde-1d5bc03c3812"
        },
        "item": {
          "id": "6c42cd72-fe12-4495-85ea-c738260fcc54",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ccc49e84-d358-4490-8680-6c926b940048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a367098-c9af-4891-9386-6a55d9fd7414",
        "cursor": {
          "ref": "f7dacfb6-ecb8-4910-a36a-f9564cf686f1",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "392e8e9e-fe15-4fcf-8581-be04a6798966"
        },
        "item": {
          "id": "7a367098-c9af-4891-9386-6a55d9fd7414",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b17cd5d4-7238-4373-b5d6-7c0da3dba63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b597a539-551b-4ce3-83aa-19a6334620f0",
        "cursor": {
          "ref": "5a47c771-decc-44d1-bc3c-ca25d54f6d14",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b03ca910-dea9-4150-ac40-aa0b96b724cf"
        },
        "item": {
          "id": "b597a539-551b-4ce3-83aa-19a6334620f0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a1e51c23-7e0b-41f0-8486-7d9ae7f7c446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5beaec02-4c8e-4052-910d-56b27c152754",
        "cursor": {
          "ref": "b028451d-6221-4b35-bfef-b25f491b9006",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "80abb6a3-02b6-4c86-b01c-ad62cecfc8d7"
        },
        "item": {
          "id": "5beaec02-4c8e-4052-910d-56b27c152754",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5670b313-ed47-4a7f-a77e-456991b223d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35bc517-4878-4804-adbe-41f65c78f8c8",
        "cursor": {
          "ref": "fb7f268d-6c2d-4ce1-bc29-f5834ef3cd01",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "afcbb228-f7b4-4106-8c3e-0d6412576eb2"
        },
        "item": {
          "id": "d35bc517-4878-4804-adbe-41f65c78f8c8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0aeaab86-6ca5-4b8a-93a3-ab6070dc6954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8b601e-5bda-4ddc-9920-5ca569ab0e6c",
        "cursor": {
          "ref": "0b42c295-d000-4229-beb8-f63bc86845be",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0fbc436a-7fc7-4bba-8f1d-399614c92d4a"
        },
        "item": {
          "id": "9a8b601e-5bda-4ddc-9920-5ca569ab0e6c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d8094b1e-461d-4adb-a637-5fc598da91b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0b6279-fda1-4466-b525-ba552a032675",
        "cursor": {
          "ref": "76b04ff1-8e60-433a-9ccb-ecc538fb1f05",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1b5f7396-3def-4c12-b8c2-324b7b7360a1"
        },
        "item": {
          "id": "ae0b6279-fda1-4466-b525-ba552a032675",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c4d1e6c6-a247-4357-9569-0923d0ccd0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e500ba1d-ef3d-4e7c-8147-9875a3a3ed47",
        "cursor": {
          "ref": "38b0230a-571d-4f52-a269-2985cdc14f0b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9765660a-c07b-43e4-bde6-2ed698af0872"
        },
        "item": {
          "id": "e500ba1d-ef3d-4e7c-8147-9875a3a3ed47",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "77f2b69c-0b94-4bea-9a87-5e1f54d23bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70560a54-4916-458f-9726-b13201cafcee",
        "cursor": {
          "ref": "9750e789-9e71-4dd2-a888-b61121b2ee50",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "77ee750d-b267-4c4a-8c1c-f7c1478b520f"
        },
        "item": {
          "id": "70560a54-4916-458f-9726-b13201cafcee",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "641526ce-b7d6-4626-b651-3671e6f7316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18ca07a-46bb-457a-a6e1-c865b76fe6b0",
        "cursor": {
          "ref": "ed4c45dc-f550-4208-a425-1178137bea1d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "81d50829-e685-4995-8d8a-f8754582ec81"
        },
        "item": {
          "id": "f18ca07a-46bb-457a-a6e1-c865b76fe6b0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6e1d471e-06d8-4850-823e-f317b74ed5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d913e28a-0d93-4458-ba1f-e01e1db5dcea",
        "cursor": {
          "ref": "c007d7fc-3ba6-4243-be57-476f737156f7",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "164b76a8-0aa4-437f-9230-148b53a732b1"
        },
        "item": {
          "id": "d913e28a-0d93-4458-ba1f-e01e1db5dcea",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6433f1f3-77f6-4bfb-b850-408074ba0895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a040356e-4678-43b3-9284-151e1b1104ac",
        "cursor": {
          "ref": "ecffb33f-49a7-4a0a-85eb-fcd0f1339e26",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c9560b0c-4d65-4196-80a1-2237a843cdce"
        },
        "item": {
          "id": "a040356e-4678-43b3-9284-151e1b1104ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d3865e50-e545-431c-b4b5-4107b3018978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc726f6a-23e1-4b0d-b91b-02099d8a87bb",
        "cursor": {
          "ref": "ee719ad4-3947-4380-8f40-fe28dfcfe2a0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8d5f2e4b-6bec-4160-b65a-3a96c266466e"
        },
        "item": {
          "id": "dc726f6a-23e1-4b0d-b91b-02099d8a87bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "728fc09f-a593-47d2-8c17-60a76a10573b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7430e01-d265-4f73-a0fe-4dbfd38b0189",
        "cursor": {
          "ref": "567ebd88-619c-477f-8b32-c3941b36864d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "da8b8311-74d2-4435-9108-20958f8d06c5"
        },
        "item": {
          "id": "f7430e01-d265-4f73-a0fe-4dbfd38b0189",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1a8aaaf9-e1d9-45d0-8310-3e200703cd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8c36d7-e1cf-4f40-b06f-4e3360d5380c",
        "cursor": {
          "ref": "c73e5ebd-d8ff-453f-a39f-660c6e17ffb1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "35a7566b-96ab-4944-a69f-d6d689f94ce0"
        },
        "item": {
          "id": "7e8c36d7-e1cf-4f40-b06f-4e3360d5380c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b9df9b8b-194f-45e7-b56f-5dea6f18abcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba1c757-c646-483c-a0d3-f40909c9f0b3",
        "cursor": {
          "ref": "641e5ab9-92d0-4a8c-8df7-b48f27ff95aa",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3ab270c5-1134-4e7d-ba8f-d1bdb484ad56"
        },
        "item": {
          "id": "1ba1c757-c646-483c-a0d3-f40909c9f0b3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f7e32bc3-7c30-4965-821b-6de8174e3bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872ca506-c632-4a9a-9d16-cbaa864ac9ab",
        "cursor": {
          "ref": "d4de9380-a3de-477b-a417-59ae2b9d8b95",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fa934047-b5c4-4a62-bc9b-df00eccd5e6f"
        },
        "item": {
          "id": "872ca506-c632-4a9a-9d16-cbaa864ac9ab",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b8585797-c960-45cd-ad77-c06ee4d56a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929f2705-3ba6-4761-8fa0-e8dca008b811",
        "cursor": {
          "ref": "0af6bf3c-371b-4c8e-b05b-109c53ed1c3e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "895b0f37-5b75-4655-bd7e-adae07de9afe"
        },
        "item": {
          "id": "929f2705-3ba6-4761-8fa0-e8dca008b811",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0ca4dbc8-0b17-43f7-8b9a-96f7dd6630d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42d67fd-2ce6-473d-b077-ce306e15c572",
        "cursor": {
          "ref": "ee0a864e-25ad-4314-b5c6-283b7e8e99a0",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "953eb18e-481f-44be-8cb5-353b614bdbbe"
        },
        "item": {
          "id": "f42d67fd-2ce6-473d-b077-ce306e15c572",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4a2ade6a-c7b2-4c39-aa5e-8490641b331b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c0a9ee-0fb4-42ff-9a0a-bbf3c4ae149e",
        "cursor": {
          "ref": "2b3c936e-bbf6-4e77-836f-74687ed552e3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "20a7926a-753f-46d5-b5fe-34faece9d0f7"
        },
        "item": {
          "id": "a0c0a9ee-0fb4-42ff-9a0a-bbf3c4ae149e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6a824db8-04a8-465c-8b4a-d309b6a2bf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241337c9-1964-4195-b3b7-c992e0da140f",
        "cursor": {
          "ref": "98a4777e-0c3d-427c-a748-ae94673be738",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b75d7cb9-9a54-4972-87b0-08ce3a85199a"
        },
        "item": {
          "id": "241337c9-1964-4195-b3b7-c992e0da140f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b9cb73f5-5e0d-47c7-80b0-6013251a2748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a537acc-018d-4f1a-bd25-79453cab0b5a",
        "cursor": {
          "ref": "cd415976-08db-44c1-8581-dbd2d9cf4213",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "47c65d02-779d-4167-b42f-4720443ae881"
        },
        "item": {
          "id": "6a537acc-018d-4f1a-bd25-79453cab0b5a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "362d8639-5c22-45b5-b38e-d138c8834c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca6d73a-2475-41ba-8201-db14b15d4777",
        "cursor": {
          "ref": "1408f4b9-0a06-4dd9-899d-88082687c42b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2ee65952-f833-4a9c-a263-b036f6acd56e"
        },
        "item": {
          "id": "6ca6d73a-2475-41ba-8201-db14b15d4777",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b193b481-f084-420b-8129-f873a08a3e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8c4695-cf6c-4af4-8a5f-f191e7f12036",
        "cursor": {
          "ref": "b4743625-3cf4-4a86-98ab-d159b30ee890",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d7daaf0e-8201-4f13-8157-de98f3cf20a6"
        },
        "item": {
          "id": "3d8c4695-cf6c-4af4-8a5f-f191e7f12036",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "878df6a2-d1cb-4cd9-be21-215bbf5c62eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed43c7ee-c11f-4185-9c23-21d98d8f9aef",
        "cursor": {
          "ref": "d3c99085-415d-4cf5-b78a-8d797577d1f8",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4e2593dc-e6be-4915-8aa0-97ebb1917ca8"
        },
        "item": {
          "id": "ed43c7ee-c11f-4185-9c23-21d98d8f9aef",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a40f2837-dc12-44e1-971e-767e8f9edece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6413b7-243a-4406-bc96-1131732e4645",
        "cursor": {
          "ref": "1ee99e97-7f74-4a97-bf94-1f713e7c06ac",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fed376bd-9aba-4af7-9ea9-5ef07103cd6a"
        },
        "item": {
          "id": "6f6413b7-243a-4406-bc96-1131732e4645",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "521d0eb7-a1fb-40ed-9dd8-e457f4d75f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d72a0b-b205-46d3-9c5a-19d75441de2a",
        "cursor": {
          "ref": "253e9f6a-296c-426d-95c3-24dfde67858d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "df53a498-6582-4c15-9d7a-d65d71655e48"
        },
        "item": {
          "id": "91d72a0b-b205-46d3-9c5a-19d75441de2a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ee6758ef-5564-4980-b557-f612df9500a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cd1d1f-b74e-4eec-a24b-9d58b7bcfbac",
        "cursor": {
          "ref": "a1e8ece3-6b14-4307-88c0-1ec75bbb7a55",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9c3e91a7-c91b-4297-b5da-8110d8de9aea"
        },
        "item": {
          "id": "33cd1d1f-b74e-4eec-a24b-9d58b7bcfbac",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cca5c9f8-b130-43c3-9a63-911580f19980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c044679e-c9d8-4625-bb76-59b5a557f7af",
        "cursor": {
          "ref": "10e85b32-7196-4754-9f81-129412c05e0f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "00c996e0-b2e2-4a0a-9b91-60a22c6c6699"
        },
        "item": {
          "id": "c044679e-c9d8-4625-bb76-59b5a557f7af",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "011fe72d-41be-4c25-8fa3-b0e5de32ee43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d067ef2-e469-43c3-879b-51c41fdadd33",
        "cursor": {
          "ref": "c62babe9-e0fe-49f7-9d5f-2b89b3c7a945",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ec0cb0b8-c071-4aa8-abb0-9c1383e7636d"
        },
        "item": {
          "id": "9d067ef2-e469-43c3-879b-51c41fdadd33",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "30f7e3ca-8704-4ccf-906e-3579e189e938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8a397f-8c87-43c2-8290-682e96f3126c",
        "cursor": {
          "ref": "e57f961f-f867-4ccc-9d97-f969b244c5ff",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "220aea07-48da-4832-92c8-0949e7a81d82"
        },
        "item": {
          "id": "fd8a397f-8c87-43c2-8290-682e96f3126c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0229f52c-3a6c-4601-ab17-b4f16606c928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f60b37-1244-4a08-9746-838e2bdde17d",
        "cursor": {
          "ref": "3ceb16ce-83e7-4c52-98be-b54f4e0c8b65",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7e8b1f03-ab5b-4b57-a47b-ce66bc9460f9"
        },
        "item": {
          "id": "c2f60b37-1244-4a08-9746-838e2bdde17d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3999a029-d1fa-4a14-b6fa-a33fae240763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd4050d-14f5-497b-a77a-3df5eef9a15e",
        "cursor": {
          "ref": "d3e52ce3-cfcd-4321-83c6-e3c012831ba1",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "19cea0f5-04ce-4e61-8da3-259b14874646"
        },
        "item": {
          "id": "3bd4050d-14f5-497b-a77a-3df5eef9a15e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fb3c5962-16a1-4945-9d6f-5899203382a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62dd08b-1f0e-4a46-8693-956f29ae02aa",
        "cursor": {
          "ref": "3f1723ce-381c-45c3-8d41-015842429086",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f9a05d4f-10aa-4126-99d9-2aca3653c243"
        },
        "item": {
          "id": "e62dd08b-1f0e-4a46-8693-956f29ae02aa",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c50288c9-64bd-4d60-97a0-3d710bbdebd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec0ed1-1de5-4a36-b477-daee1a2690f2",
        "cursor": {
          "ref": "824a6969-7344-45e9-acff-87605fba50d5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "34d34f34-a70c-4293-9845-289e3cc5156e"
        },
        "item": {
          "id": "62ec0ed1-1de5-4a36-b477-daee1a2690f2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b02b0b4b-0b16-433d-ab28-28417c12a789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f8dc4c-2c09-4ea0-baf7-ed4de651d373",
        "cursor": {
          "ref": "58fb307a-3a1d-4571-b35a-24709b432ae9",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "438ea12a-d0e1-4c1e-99ff-7926e5f4be5f"
        },
        "item": {
          "id": "54f8dc4c-2c09-4ea0-baf7-ed4de651d373",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1d512903-d005-402f-aac7-d8d37e0d6a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ace8594-4a09-446b-abb7-9682beda99e9",
        "cursor": {
          "ref": "4e8e6c42-ed26-47c8-98df-d549427c751c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7df2018a-ac35-4725-b345-aa39f6bec27d"
        },
        "item": {
          "id": "3ace8594-4a09-446b-abb7-9682beda99e9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f9403c3a-e83b-4f65-8d06-006f902c9f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec092fe-d165-48fe-9ad7-72416794342c",
        "cursor": {
          "ref": "1c842911-535a-4138-a5d1-a7e78be94405",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c664222d-3c18-49ce-90d4-f7c21e1af48e"
        },
        "item": {
          "id": "1ec092fe-d165-48fe-9ad7-72416794342c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "645bc975-9b8f-45c7-adb0-1bbff0cd3dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77cd5b5-67da-43e3-89c8-2adf3b9af852",
        "cursor": {
          "ref": "b6a751ad-0e6c-4155-aaed-6a29be015c4d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1267f2a8-3e22-4a92-8d20-603f4cd8ea96"
        },
        "item": {
          "id": "b77cd5b5-67da-43e3-89c8-2adf3b9af852",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a91b5b74-92ed-4f0d-9704-7e16895fc39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfd5062-3eed-4e59-8fcd-e65513d212a1",
        "cursor": {
          "ref": "e7050ed2-fe65-4652-b4ce-130a19040f2b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bdbc130c-5f71-466a-8d63-95e6acfc2108"
        },
        "item": {
          "id": "bcfd5062-3eed-4e59-8fcd-e65513d212a1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "238d9252-848f-4f20-a496-696a06426f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7724d6-8df6-489f-8e20-67dee4c81ffc",
        "cursor": {
          "ref": "d9e930c1-b986-4924-8516-5ba0e9245989",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f5a4d25b-0a70-496a-bce1-33656653af69"
        },
        "item": {
          "id": "5f7724d6-8df6-489f-8e20-67dee4c81ffc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "855ce80f-95c1-4b14-9967-571d0337878a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b698e3-ed5c-4b02-8e2c-a6a83811ac50",
        "cursor": {
          "ref": "b8812d0c-9eab-4343-bb68-0d7c40c9e180",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ac824cda-d7b9-4c18-aeba-9139676d68a9"
        },
        "item": {
          "id": "b0b698e3-ed5c-4b02-8e2c-a6a83811ac50",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c67483bb-bb6c-40b4-80f8-6570238362f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05143ea-56a6-4b98-81dd-7b3a83cd96cc",
        "cursor": {
          "ref": "9dbdb705-72db-4efe-9d22-ac6e1f889864",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9b833356-28d3-4b4b-8b81-76f91c730d3f"
        },
        "item": {
          "id": "c05143ea-56a6-4b98-81dd-7b3a83cd96cc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "17858e61-1eeb-4b10-b766-5fac9205df55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b140cb7-192c-4927-9f11-776fdd774865",
        "cursor": {
          "ref": "b71efcd6-baf0-4163-b22d-53e4a6636a26",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bd959341-de01-4daa-9385-b26fd488a8ec"
        },
        "item": {
          "id": "4b140cb7-192c-4927-9f11-776fdd774865",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4fefd108-8b44-4f7f-9c63-a30e9f70ad83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89629dbe-c753-4509-8464-fa7d5af761f0",
        "cursor": {
          "ref": "78b5b3be-b70c-499d-9da1-9e336b302ac0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "85ccb694-02c6-4e18-bbd6-e1b83d650582"
        },
        "item": {
          "id": "89629dbe-c753-4509-8464-fa7d5af761f0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "dc8ecf72-27f0-4525-b83c-73043f900523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9260c479-a68c-4917-bc10-3c557522f520",
        "cursor": {
          "ref": "23981ffd-4aac-46af-8941-3304d9bc4c8e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0c37a432-ac62-4955-a037-26d1555c11a7"
        },
        "item": {
          "id": "9260c479-a68c-4917-bc10-3c557522f520",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "27b7a73e-8e23-4a30-b458-306dc0464390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accac9cd-188d-4c5c-bd1e-03b051f8aa4e",
        "cursor": {
          "ref": "f48befd7-88ff-4d7c-b895-a7d7d6737742",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bd636066-61b7-4c9d-bbc2-7aacb9f9bbd4"
        },
        "item": {
          "id": "accac9cd-188d-4c5c-bd1e-03b051f8aa4e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e00c667c-8942-4000-a777-f30447832601",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6aa6df-10cd-48c0-9b0e-45c1be831696",
        "cursor": {
          "ref": "8121bdce-1d3c-450b-8d7b-6ba07988468b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "58c11106-461b-40ac-9a38-b39efaba940f"
        },
        "item": {
          "id": "de6aa6df-10cd-48c0-9b0e-45c1be831696",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f9954982-cbc5-4dcc-8e25-107a3aa17edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "716d65c4-f646-416b-9370-b4026dbe9728",
        "cursor": {
          "ref": "08b48582-ee31-4718-b696-fdd5d992db17",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "65e6f8ac-5e78-49f4-a7cb-e4b0de95a6e2"
        },
        "item": {
          "id": "716d65c4-f646-416b-9370-b4026dbe9728",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8aee61f9-d3e9-4b13-ba97-d4fdabf1f77c",
          "status": "Created",
          "code": 201,
          "responseTime": 22071,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ccde5c-233c-4a1a-8afe-d46d9f3a9ea6",
        "cursor": {
          "ref": "a9f54357-bd06-448f-b800-8f68a34ac259",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a299c96d-2cff-45c6-a439-f92c21305ba9"
        },
        "item": {
          "id": "e6ccde5c-233c-4a1a-8afe-d46d9f3a9ea6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a770a9ef-1464-4700-9c1b-a89a55021f74",
          "status": "Created",
          "code": 201,
          "responseTime": 21942,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bba6c7-9091-41ae-871a-5275366ac3e7",
        "cursor": {
          "ref": "eb6e9195-de81-4bf2-b11c-ddedf9482e0e",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cfaf4f0b-13d2-452e-bf55-a3c55cc54078"
        },
        "item": {
          "id": "85bba6c7-9091-41ae-871a-5275366ac3e7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e930bee6-32dc-4844-816e-b1b86e2cea59",
          "status": "Created",
          "code": 201,
          "responseTime": 21267,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa9a744-3a49-4df9-9153-54c515fa2e31",
        "cursor": {
          "ref": "ff7cb324-22f1-4060-a095-ca258f1b9d82",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e49f8a26-cc0c-4238-8580-64c6100962e2"
        },
        "item": {
          "id": "afa9a744-3a49-4df9-9153-54c515fa2e31",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "32182657-1672-466c-b023-d000cf53b804",
          "status": "Created",
          "code": 201,
          "responseTime": 21340,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fa97d3-1510-4c8d-b020-f7a2507d04d9",
        "cursor": {
          "ref": "6439c1dc-4862-45d2-a487-c4b48f6a5270",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bb2aaef9-2e80-4d03-aa09-b98033ec29a3"
        },
        "item": {
          "id": "65fa97d3-1510-4c8d-b020-f7a2507d04d9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "11c4406e-fb6a-4b73-8ea2-8e15e3abd0b6",
          "status": "Created",
          "code": 201,
          "responseTime": 21336,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-23T00:48:04Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-23T00:48:04Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7aa8b8ee-24b5-4919-8cd3-396582450619",
        "cursor": {
          "ref": "b57dc75f-4a4a-4757-9664-ebfbea239b38",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "22acde3b-0bca-490b-8912-b113ec65d660"
        },
        "item": {
          "id": "7aa8b8ee-24b5-4919-8cd3-396582450619",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "568373ad-0191-43fb-ae3c-aa189b389b15",
          "status": "Created",
          "code": 201,
          "responseTime": 21858,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978d88c4-fcf0-4007-958c-51e3ecf14504",
        "cursor": {
          "ref": "a854ab6f-0e4b-471c-a3f9-02385855fab0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f9596a13-d401-4255-b4b8-b0cad8bb838b"
        },
        "item": {
          "id": "978d88c4-fcf0-4007-958c-51e3ecf14504",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "de6eba8d-b8ad-4916-87f8-ff897ab44baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352ba6e5-8240-4bce-997e-2cf32e20fb13",
        "cursor": {
          "ref": "d85c0175-fd97-4630-83d3-644cb41000a9",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0ee7866e-eadf-4f43-a4f3-80fa54816a4e"
        },
        "item": {
          "id": "352ba6e5-8240-4bce-997e-2cf32e20fb13",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "27cb3ab9-a8dd-4220-b96e-9449d1a25097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db29fc3e-6595-4e38-9230-a542c448ced0",
        "cursor": {
          "ref": "77e9a621-e6f9-482e-9d76-710b6c3d8cb4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4a71b939-40fa-43f9-9fbc-51b71b28e2f4"
        },
        "item": {
          "id": "db29fc3e-6595-4e38-9230-a542c448ced0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8dd22922-a1e0-4efb-8fe1-bea13cfa9e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8986fc-bb24-46ec-8b7a-3cf3e9a5be02",
        "cursor": {
          "ref": "e30763ac-080b-4b6f-ba4c-0a98d68c1e5e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "064ba4fc-b9b1-4798-b472-62e9c84130ec"
        },
        "item": {
          "id": "6e8986fc-bb24-46ec-8b7a-3cf3e9a5be02",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5bcd16c3-a110-4c51-a433-0e2fd4851907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381bbe94-649b-4928-8ca2-148bb1e0c435",
        "cursor": {
          "ref": "57631351-2e55-4378-a80e-636fb73c3535",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "042c9d58-b15f-4077-b812-0f5eb6175a65"
        },
        "item": {
          "id": "381bbe94-649b-4928-8ca2-148bb1e0c435",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d70cbb72-4f97-47b5-be1f-8b9cf6c294c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a635ed-5e7c-4c9d-9dae-757bfef6eb9c",
        "cursor": {
          "ref": "2262cff8-1a47-462b-90d4-c2417db44f71",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "499110a6-c8bb-421a-8501-616875077051"
        },
        "item": {
          "id": "78a635ed-5e7c-4c9d-9dae-757bfef6eb9c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e74201d8-8abf-4b0d-8c46-aa35ea615845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134cd713-a3cf-4b2c-b142-e763c2f0871a",
        "cursor": {
          "ref": "807ff416-4f84-4340-a7fc-79cfcd4796c9",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3c7e049b-9613-4c5a-b515-713384efc732"
        },
        "item": {
          "id": "134cd713-a3cf-4b2c-b142-e763c2f0871a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3e372cf7-b2c0-4d34-a61c-c1d1b1bc8668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f944eaf0-dab2-4cbf-b741-5979d2ecc302",
        "cursor": {
          "ref": "6f396adb-9676-4333-b7a1-4a3c65a491a1",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ee9a7417-1b54-4c56-825c-e16923e926cc"
        },
        "item": {
          "id": "f944eaf0-dab2-4cbf-b741-5979d2ecc302",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f5aad060-bf6d-49b6-be2b-593657893e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdd4505-e866-4509-bc0e-00a57fea1a8a",
        "cursor": {
          "ref": "cbdd2681-2dc7-4510-8a88-1bfc6fea4980",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7b5b1eb2-bb3c-4f75-8d40-c65b5d53c828"
        },
        "item": {
          "id": "afdd4505-e866-4509-bc0e-00a57fea1a8a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "70cc8ac7-4512-4b8a-95e8-2995a6f82b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ce19b0-6a4e-45f8-a3ba-5686c62596f1",
        "cursor": {
          "ref": "8f28cd3f-88dd-45ee-8d42-e182e1b2c660",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1678ef38-9cbc-4e66-9767-743eef8a88f6"
        },
        "item": {
          "id": "c4ce19b0-6a4e-45f8-a3ba-5686c62596f1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "99fb47d0-e505-4efd-b8e8-b2737c7762f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d901e3-b9f2-4b24-ae32-a74cd4246b70",
        "cursor": {
          "ref": "65e15744-c940-4ac1-9499-fa34f4fcc9bc",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9c13cb97-abe3-423d-9eb1-81c72bacc541"
        },
        "item": {
          "id": "24d901e3-b9f2-4b24-ae32-a74cd4246b70",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c0fdadf6-73cb-4803-8e26-de95b81ec2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6084671d-1ff5-40c7-bd17-8b9debad02e7",
        "cursor": {
          "ref": "b7c013ff-d693-489d-b0cc-be22a78d6be2",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "36518120-769d-4f3b-a4e8-4276752db3b3"
        },
        "item": {
          "id": "6084671d-1ff5-40c7-bd17-8b9debad02e7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a6d12e32-01ea-427c-9a62-0bb00fbceff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc95cad-85d6-4c18-b705-aaf731915551",
        "cursor": {
          "ref": "550357ac-5336-402b-9873-50bf631f684a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1a7149cd-55f7-4d5c-ac60-9b95430e3e50"
        },
        "item": {
          "id": "efc95cad-85d6-4c18-b705-aaf731915551",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "24b1688a-bfb3-479b-bc07-904f3f3a5312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d276c936-38a0-43bb-a7aa-c6833db6204b",
        "cursor": {
          "ref": "dccf67a5-0d84-4b23-b313-b8fc9dbdc5ff",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "aa5042d5-0202-4965-913a-cd628f45f627"
        },
        "item": {
          "id": "d276c936-38a0-43bb-a7aa-c6833db6204b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9201dbb1-606e-4271-9633-b44107e571f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ba70f6-82c4-4a7b-9217-867d261a1e49",
        "cursor": {
          "ref": "d238a4ee-1d32-4a81-b465-b8bedfb60d96",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1e601ac2-697e-4c46-b254-ea5ad4f7adae"
        },
        "item": {
          "id": "b9ba70f6-82c4-4a7b-9217-867d261a1e49",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b8691120-62e1-487c-90a7-a019ebdaa50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69e6cb8-e1e0-44a1-8d4f-fd7fc9c52d64",
        "cursor": {
          "ref": "95210d44-a9d8-44ec-8991-be51be0f5d6f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5d903528-471d-4b7b-8066-54464fab09be"
        },
        "item": {
          "id": "f69e6cb8-e1e0-44a1-8d4f-fd7fc9c52d64",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dbe103eb-840d-45a2-b773-0a25cab72431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b74db9-aa02-4098-9010-7de77128570a",
        "cursor": {
          "ref": "82b3b1bb-f7b2-4511-9582-781f99165443",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cc92fb9a-7de2-48d1-973a-0587af3befee"
        },
        "item": {
          "id": "b5b74db9-aa02-4098-9010-7de77128570a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "266eaa85-2a29-4e85-b8cc-cf0aa68aa7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0d34cd-22cb-4190-a749-02491f1917d4",
        "cursor": {
          "ref": "ecce4012-c9ea-4a20-a798-67d4b58af258",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4846900a-4ff5-4a50-8873-a2489b3f29c0"
        },
        "item": {
          "id": "5e0d34cd-22cb-4190-a749-02491f1917d4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c804d9ff-0619-4627-b00e-be32d8791040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc9900a-dff2-4512-ae7a-e42f19e46497",
        "cursor": {
          "ref": "d9f8afff-84e1-4aa9-b5b7-37932fb39cc2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3b374717-2819-405d-8882-4424a8aff4a8"
        },
        "item": {
          "id": "4cc9900a-dff2-4512-ae7a-e42f19e46497",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "39703f95-8361-4b46-82f3-f8f732dea648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f23b143-e7c4-430f-88ff-0faa13b1b9bf",
        "cursor": {
          "ref": "12c017ec-bae7-4065-b131-2a2c3fc274d6",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8fc82205-5d6d-4edf-8843-650c98d99bf2"
        },
        "item": {
          "id": "5f23b143-e7c4-430f-88ff-0faa13b1b9bf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b45762f1-4a71-4576-a23d-1f8ec68ac292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f38205d-c316-4bdf-ba60-e2014694f7a1",
        "cursor": {
          "ref": "692662c1-300c-4f63-84c1-3ed26e02a8cf",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5bc134d4-84ad-4f5b-8554-d6652a6ecefe"
        },
        "item": {
          "id": "3f38205d-c316-4bdf-ba60-e2014694f7a1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e80ffc34-6bc4-425b-9573-e96fcdc64b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fa1f39-5fbe-465a-8292-7e7b140706fa",
        "cursor": {
          "ref": "3e48f6b2-933d-4118-a19c-1881c56ae04d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eb5e0ccd-7466-4df0-aef0-4e058691260c"
        },
        "item": {
          "id": "b1fa1f39-5fbe-465a-8292-7e7b140706fa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "17768be8-45be-4268-b618-1d0e65632368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbb9f59-dd60-4e78-9d21-5549810915b6",
        "cursor": {
          "ref": "95b0786a-0774-490c-b3e9-973f53cc5f16",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "df12e2ba-e79b-4b8b-a500-4317625a9ac5"
        },
        "item": {
          "id": "1bbb9f59-dd60-4e78-9d21-5549810915b6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5713f849-3d04-4a60-aaca-530b41654db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdfa69e-5bd7-4f2e-84ea-58efc112ce02",
        "cursor": {
          "ref": "d29ddd9a-895c-4150-873a-8cdef42cb280",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "51f3fc60-9c57-47fc-8477-b8d38d0b768c"
        },
        "item": {
          "id": "4bdfa69e-5bd7-4f2e-84ea-58efc112ce02",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "32ed1fe1-71ba-4d4c-9da3-50b199fa5447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84c17fa-fd81-4b6c-a334-8f8de5f4cc55",
        "cursor": {
          "ref": "fdcbfb23-2d61-43e7-8a1a-1644adb31932",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "80b9dc7d-3fa7-48c1-849e-4b2fa39577b7"
        },
        "item": {
          "id": "a84c17fa-fd81-4b6c-a334-8f8de5f4cc55",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "806c2c50-fbf9-4c53-b538-75fe562f9da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f1918e-e293-4b4d-ae78-3789c55d829b",
        "cursor": {
          "ref": "99bae222-1b82-4e53-8a01-1046e88b1fda",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6f0a2dc1-d814-4f57-ab59-1066ac645ba0"
        },
        "item": {
          "id": "73f1918e-e293-4b4d-ae78-3789c55d829b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b3fa9f74-f3ab-4544-9fde-c9bbe178eb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d243528-a250-4338-bf4c-5959082441b6",
        "cursor": {
          "ref": "d217ee0d-da37-4588-a920-eee4fa54874b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fd1a2f34-17a3-4d3e-a36a-1881ec5fc3c7"
        },
        "item": {
          "id": "6d243528-a250-4338-bf4c-5959082441b6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "312b098b-54a0-4bed-b045-bc3badaab89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be0952f-3288-4969-a401-71269ec98c5a",
        "cursor": {
          "ref": "cc43c741-4912-4652-9463-888d30e6c7de",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "84dd9ac3-ab85-436c-8f6b-41aa28812837"
        },
        "item": {
          "id": "1be0952f-3288-4969-a401-71269ec98c5a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "72c5405f-77b8-4a12-b8e4-0f6dcc2a7aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee759020-2cbe-4c0d-a74d-f64b5d03b1f3",
        "cursor": {
          "ref": "ce4a52cc-fe03-4310-85c8-16facf2807b2",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "182abc88-4350-4e0c-9cd3-36f4b18bef3a"
        },
        "item": {
          "id": "ee759020-2cbe-4c0d-a74d-f64b5d03b1f3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "29d93b60-ec5d-48ba-82c0-d33af438816b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d3c6c3-bc7e-4942-a684-0e5ff7b37432",
        "cursor": {
          "ref": "ae5ca7ce-319b-4915-989b-853f981bd145",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b8cebe73-f4c9-47af-90e7-6088f9003161"
        },
        "item": {
          "id": "78d3c6c3-bc7e-4942-a684-0e5ff7b37432",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "24c1b627-e56f-48ec-a78c-3cb95b64570c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cbc4f6-577e-46bf-b21f-77729139c511",
        "cursor": {
          "ref": "defdd9cd-7e98-43bc-bfbc-650b8b03999d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a972a5f1-5d78-4dba-aa59-9502cc352583"
        },
        "item": {
          "id": "33cbc4f6-577e-46bf-b21f-77729139c511",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5842f2eb-bdb1-4562-aa86-30340d607d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c69be6-d847-41d1-b727-731c28c5bcb3",
        "cursor": {
          "ref": "f52b17a6-6ddb-4564-9a7a-b91a9a6a9666",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "875d7eaa-beea-48e7-b7bc-ab8362bbdca0"
        },
        "item": {
          "id": "a7c69be6-d847-41d1-b727-731c28c5bcb3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b28bc86c-3e68-43f5-8bf8-87047578968d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2715bbdd-ea59-488f-adec-f68ef10d8dc9",
        "cursor": {
          "ref": "2ca74a6a-bd6a-40d3-bd1e-601d743cda48",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a8fcf4c2-6781-4154-b058-129f3253d502"
        },
        "item": {
          "id": "2715bbdd-ea59-488f-adec-f68ef10d8dc9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d072e112-0c2d-4572-a2ff-5f60190ef2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e21a4c-b3ae-4376-9374-d5fd748e8e56",
        "cursor": {
          "ref": "a83d71e4-f95c-408f-8fe5-308a83a66563",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7a60dc2d-81b7-4918-9e13-df1c38d986cf"
        },
        "item": {
          "id": "28e21a4c-b3ae-4376-9374-d5fd748e8e56",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "14d7b26b-178c-46de-8562-4f79b163fc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cabdea-556c-4d52-a0f4-651ca007ca9c",
        "cursor": {
          "ref": "57ec85cc-1ec2-4609-8c89-1cbbebc39427",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "eef8c74e-cb88-4260-8a4d-7f612dfad765"
        },
        "item": {
          "id": "26cabdea-556c-4d52-a0f4-651ca007ca9c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "530aae91-7f1b-4e3b-88a1-25cfb8395fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4901251-0cd3-4a27-8324-78526d785fde",
        "cursor": {
          "ref": "cb1aede2-44bb-43b3-ae56-aecd553f70f0",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "77c0bc1f-f1e3-42eb-aa48-8c734b5d6b89"
        },
        "item": {
          "id": "b4901251-0cd3-4a27-8324-78526d785fde",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ef6b25ae-e791-4b5e-8ce5-47513a272534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a98850-92fd-4b53-9cd4-4e2d84015c23",
        "cursor": {
          "ref": "ab75af3f-cb6e-4b54-b16f-ced937e08ac3",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "130e85a8-dc98-4640-bc5b-f85e3b80cf9d"
        },
        "item": {
          "id": "79a98850-92fd-4b53-9cd4-4e2d84015c23",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6bccc2f4-a295-4002-93f6-0a46ac840c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c4c088-6094-4c5d-8414-fb1abaf1ef7b",
        "cursor": {
          "ref": "6c270762-ba6d-4cab-9e3e-cf3bc9f2dceb",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f7bf4d54-ebb2-4fc8-8522-85810b7d63ce"
        },
        "item": {
          "id": "15c4c088-6094-4c5d-8414-fb1abaf1ef7b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "25dad212-341e-451f-babb-92a97af76bce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb111f0-2b92-44ae-a491-28efcab740cc",
        "cursor": {
          "ref": "442f02b5-c8e5-4568-ae21-dbd19670bbda",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "49926336-c37e-4028-9a12-edb9834ceda6"
        },
        "item": {
          "id": "3bb111f0-2b92-44ae-a491-28efcab740cc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cc6849af-5b76-4880-991d-79ee2927848e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b540b63-503f-4948-a9c4-f662dfa42af4",
        "cursor": {
          "ref": "cc0cc994-7717-4a67-9379-fed07f7bf458",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cfda0ff9-cf46-4918-bef6-0d265b51450c"
        },
        "item": {
          "id": "5b540b63-503f-4948-a9c4-f662dfa42af4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fc973017-fa56-4cd4-acb3-7ecef856a984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2b6b9a-96c4-45df-8ada-4a0988e69495",
        "cursor": {
          "ref": "ab1cf882-3744-4d75-bb06-2e7c5de1d687",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "951b4fbf-a927-4e4f-baef-195aff8f1c6b"
        },
        "item": {
          "id": "0b2b6b9a-96c4-45df-8ada-4a0988e69495",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "59daedea-da83-43b8-a24e-1b3a608b9622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f4e2f9-dd51-4f5b-a642-76f06f2e8173",
        "cursor": {
          "ref": "6d501fc8-ec5f-4888-8dcc-c4bc4b3f3b6f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7a0d4296-5b84-40e2-ab0a-ad76ef56b96d"
        },
        "item": {
          "id": "23f4e2f9-dd51-4f5b-a642-76f06f2e8173",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "11d6443f-509b-4d9e-89f4-1b3a2746a074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1af7ecf-20b4-4390-9eff-bc0d146cbdd7",
        "cursor": {
          "ref": "0e1e22a0-ee4d-46d2-be7e-047cec1c4d7c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "973b2acf-df28-4ec4-9a2e-f77501bd882b"
        },
        "item": {
          "id": "d1af7ecf-20b4-4390-9eff-bc0d146cbdd7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "94f19d24-c0c6-4bdf-8e8e-3203482ea5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56c5a84-e996-41f0-8edc-0a4316d7405b",
        "cursor": {
          "ref": "4c87d649-1f50-4699-bfbb-b82a10a0e1cc",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "68bc0550-eb1e-479e-96bc-7e10d72e9a2c"
        },
        "item": {
          "id": "c56c5a84-e996-41f0-8edc-0a4316d7405b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fad48a6a-60e4-4705-8608-2710f64f9783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577dae4f-c845-45bd-8385-211d96ae8637",
        "cursor": {
          "ref": "79ba9043-1c71-49c9-935e-998d648f5e7e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "853063ca-c4f2-4e72-a04d-8eea3e497f02"
        },
        "item": {
          "id": "577dae4f-c845-45bd-8385-211d96ae8637",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "97d5fdec-e003-41dc-a548-3d9defb4bc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d062651-82bf-4e9e-af20-4cb8461c852a",
        "cursor": {
          "ref": "880e2788-269b-4556-813c-6bc014bd60d8",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0b786c9f-cd75-46e8-8387-9164b30146cf"
        },
        "item": {
          "id": "0d062651-82bf-4e9e-af20-4cb8461c852a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "93d8fd8c-5106-4ad9-9449-e032762aaefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849d6494-ae84-49d6-b7df-886de6b659ff",
        "cursor": {
          "ref": "4195072b-cb1c-4ac9-afec-5db5b786b6b6",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "da724b2c-34d8-481d-a877-b01b9b6f74e9"
        },
        "item": {
          "id": "849d6494-ae84-49d6-b7df-886de6b659ff",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c40495d3-4a4c-493f-a944-1713fb21a9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a92acb-dba4-48bf-b8ae-3424f8ecb8bd",
        "cursor": {
          "ref": "943f2395-6e3d-4e2c-b884-c40d5593b22f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "662930f3-1710-46bb-8919-4462e814cc6a"
        },
        "item": {
          "id": "22a92acb-dba4-48bf-b8ae-3424f8ecb8bd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "721be416-b877-4998-82aa-467829d94922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1906a384-8799-4290-876b-a8d122d2e908",
        "cursor": {
          "ref": "fbfa885f-c82b-46a3-b35e-ac1e8415ffe1",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "18e08908-c7df-4c41-9734-f635364d96be"
        },
        "item": {
          "id": "1906a384-8799-4290-876b-a8d122d2e908",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b9553984-dc23-4950-9f7a-1fcaa8561943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c25dfe-6d6c-4800-8dfb-158dbbda1c83",
        "cursor": {
          "ref": "9443569f-5e90-4999-acd9-0b736072399c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "231cea09-5c24-41d3-96a6-aed2a94a442f"
        },
        "item": {
          "id": "57c25dfe-6d6c-4800-8dfb-158dbbda1c83",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7ebe9f54-50bf-488b-af8f-fd42c937abd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a53ceb-5d42-47f0-b7f5-3c5ff368d61c",
        "cursor": {
          "ref": "9673f19f-b156-42f4-8205-ec4c2551da78",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f170fca2-6f03-4121-a13b-2fd9a5f5dba2"
        },
        "item": {
          "id": "91a53ceb-5d42-47f0-b7f5-3c5ff368d61c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6ea9a923-659d-4c1c-8ced-1ef0cf7c8ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9819439e-b71e-4e0c-9332-ea54923038b6",
        "cursor": {
          "ref": "e31ccb17-30b6-4d03-9229-b67563310e27",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8df05226-b53d-47f0-afff-03f9502a434d"
        },
        "item": {
          "id": "9819439e-b71e-4e0c-9332-ea54923038b6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6476ddf3-3d79-429b-8042-a4af53c9c09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f887cb1-73d1-4d6c-9e3d-8e313a39662d",
        "cursor": {
          "ref": "30f99955-31db-470a-99bc-a6f1ec4efcf2",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "26bfffe6-8e7b-43f9-9d40-7bb4d920fe33"
        },
        "item": {
          "id": "7f887cb1-73d1-4d6c-9e3d-8e313a39662d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8ea7a56d-1b11-49fe-9588-ca1e647d822e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9eedc5-5399-4708-ab3e-116b5e13cd60",
        "cursor": {
          "ref": "4c57c299-cbb7-4b0d-a34c-3ff038c4493f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d1b6adfe-9a93-4c03-8628-ef09854e22a2"
        },
        "item": {
          "id": "ee9eedc5-5399-4708-ab3e-116b5e13cd60",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7b4d093d-6efa-4fa8-978b-d72d9e3940c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d284881d-d1d0-4dfc-8a9d-11a8144ef939",
        "cursor": {
          "ref": "a95f32da-d7ba-4c99-871e-0d960f739b92",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2df5d093-c7db-4bdb-b16a-4b397226cdac"
        },
        "item": {
          "id": "d284881d-d1d0-4dfc-8a9d-11a8144ef939",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "35f62128-1e48-4bc2-9e77-60d0bd90321d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7e663c-f135-4a8f-ac00-34299f901190",
        "cursor": {
          "ref": "ccb0b86a-2cf8-4e49-b833-a215c50559da",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d776056f-1f1e-49ce-8d7d-99df2f186ea0"
        },
        "item": {
          "id": "9b7e663c-f135-4a8f-ac00-34299f901190",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b8f3db5f-11f5-46df-96c7-b903ca7a7378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4fa1b5-d990-4e78-aad1-ba84628a3cce",
        "cursor": {
          "ref": "d4faaa77-a0e0-41ac-9134-743ab69fc7ba",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a838a020-7a20-4995-b47b-0050e765ff37"
        },
        "item": {
          "id": "6f4fa1b5-d990-4e78-aad1-ba84628a3cce",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "14acf5c3-e9e6-4ecc-b4d0-35ff72f9410e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8706fbf1-a56d-4ad1-a1df-27e268ff7aaf",
        "cursor": {
          "ref": "0d28a6ba-3f48-4261-b886-f31300d671c3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f6c287c8-01b0-4b69-8695-d1e2521f40b9"
        },
        "item": {
          "id": "8706fbf1-a56d-4ad1-a1df-27e268ff7aaf",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e9561e65-eaa7-40ab-b199-6d338762c61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f9ece3-267b-4e9d-bd50-1447d7b7bbca",
        "cursor": {
          "ref": "203f4ec7-ea8b-4d85-9ca7-3cd2df3b012e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1c89470b-d6c2-4f7f-bdcf-4b33099973c2"
        },
        "item": {
          "id": "a0f9ece3-267b-4e9d-bd50-1447d7b7bbca",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "06929fd5-e11b-4359-a5ff-c5711c3b0461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9701a7e3-44c2-47ec-be27-382bccdc7da3",
        "cursor": {
          "ref": "5fd2900e-418f-4069-ba54-5ed981bc0714",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eb23d40f-1d91-4c4e-b373-e941cd1e9468"
        },
        "item": {
          "id": "9701a7e3-44c2-47ec-be27-382bccdc7da3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4f13077a-9a8a-4f6d-ab7e-ed190fc8865b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a38f75-557c-4029-9c73-0c9ed1ab678f",
        "cursor": {
          "ref": "583b759f-c9f4-4919-9e38-be87c949d907",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "39f93d8f-2f86-4db0-8098-a1e45d18a826"
        },
        "item": {
          "id": "90a38f75-557c-4029-9c73-0c9ed1ab678f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "480ca5e1-38e4-41e5-b861-2c26f90d4ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642dac31-eaa5-4c0d-a89b-94d1016e4791",
        "cursor": {
          "ref": "cf0fb642-b55a-4ccf-bcb3-0d8e900ff495",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "53064d42-626d-4f47-b3d8-407640ee54e1"
        },
        "item": {
          "id": "642dac31-eaa5-4c0d-a89b-94d1016e4791",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8e0660c8-2795-4e3a-a26a-3d968eb115dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7877f60c-477a-4a5a-bcec-b0abb7a4e1de",
        "cursor": {
          "ref": "c91fbd63-f3a9-49cc-b885-39f7379e478c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d77810a3-ae61-49c4-8f15-9027591adc05"
        },
        "item": {
          "id": "7877f60c-477a-4a5a-bcec-b0abb7a4e1de",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "846b173f-4b9b-4fce-9bd2-ea63a9637618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1604ddd-3254-4248-907a-a460379774b2",
        "cursor": {
          "ref": "ad29127e-3577-4b38-8b1d-8e8b09be0aaf",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "eb4f090b-8741-4718-a42b-6dc58341d1a8"
        },
        "item": {
          "id": "f1604ddd-3254-4248-907a-a460379774b2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6860a876-2681-4dbd-a963-7b5c2dc9825a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3d7e6a-134d-4c56-b7e5-6c48308c4ddc",
        "cursor": {
          "ref": "9760c956-0f50-4b69-8646-d625a9e401a3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ec67d92b-c486-4aeb-a763-7460f79975c9"
        },
        "item": {
          "id": "1f3d7e6a-134d-4c56-b7e5-6c48308c4ddc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4f3fdb90-2786-4c0e-bf79-e878a2694a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14fa253-d14f-4850-a9b0-5cc08cb523d4",
        "cursor": {
          "ref": "a1bfe86e-9a53-4d34-aaba-b8ec8efda539",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5d55eefc-63d8-492d-ac85-bf069432c79f"
        },
        "item": {
          "id": "d14fa253-d14f-4850-a9b0-5cc08cb523d4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6a38d925-8715-4dd6-85f8-0a611d6ea946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab400908-687b-4f08-b544-c03650e3cf4a",
        "cursor": {
          "ref": "2dc9b612-0599-4a88-8230-8b0a53b65341",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e93e0b1f-31a5-4dd4-a419-dcec52cb8bb7"
        },
        "item": {
          "id": "ab400908-687b-4f08-b544-c03650e3cf4a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4ce696ce-b414-4e1d-9bd6-39e92d39ede1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f99337-fef4-4c9d-9933-8fe47f7e8f9c",
        "cursor": {
          "ref": "ebd1993e-a4a8-427a-86bb-552b7ee9856c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bbc70700-b4bb-4d7a-80f9-b34ff82666a1"
        },
        "item": {
          "id": "89f99337-fef4-4c9d-9933-8fe47f7e8f9c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2edad4c8-cf59-43fd-b89c-8ad317f471d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925461ef-7550-4221-a155-459d555e8504",
        "cursor": {
          "ref": "d1758062-c728-49dd-b3aa-2cf4274b3232",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a0f8b4ee-f1d6-425f-8058-398da226ef27"
        },
        "item": {
          "id": "925461ef-7550-4221-a155-459d555e8504",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9963e83f-a30c-4a4e-8c8c-4253b116ae14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f99ca85-367d-4ec4-ba22-e0dfc53599f0",
        "cursor": {
          "ref": "ee8dc982-8f7e-44b7-b38e-352243853d3d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b0a5ad88-a714-4af8-b27b-17b7954f5fca"
        },
        "item": {
          "id": "3f99ca85-367d-4ec4-ba22-e0dfc53599f0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "50ba0a72-48a8-42d7-9913-39da54e546ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9871b09-f6c6-46ec-98a7-e6d07a3686ff",
        "cursor": {
          "ref": "f7826dd0-6d00-415e-89eb-f60086e02264",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d0d9734c-d7e4-48bb-8ee1-c1a791afbe0d"
        },
        "item": {
          "id": "b9871b09-f6c6-46ec-98a7-e6d07a3686ff",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0dff38b9-45ec-4b36-9e5e-c91e7cbb362b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869c9d13-8c3c-4342-a159-e72416362d51",
        "cursor": {
          "ref": "916f571c-1605-49f9-bb07-1436b1e757c1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a64b50a2-abc3-411a-a05d-456ceafe9d15"
        },
        "item": {
          "id": "869c9d13-8c3c-4342-a159-e72416362d51",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b0a7f5f8-5a66-432e-b57d-20669b31bae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f730c47b-7f9c-4bff-b5c5-be304f825087",
        "cursor": {
          "ref": "ace40c4c-966a-4b90-a7ea-42cb691f0fa3",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "84822b37-a8cc-457d-be2c-e2cd351546c1"
        },
        "item": {
          "id": "f730c47b-7f9c-4bff-b5c5-be304f825087",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "727ecc21-efc7-448d-b858-ff768b3147b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e34100e-c66f-4b73-bb71-f2bbdc458f00",
        "cursor": {
          "ref": "bbdf62d2-5afd-4536-ad0a-9911fd1593e1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c88b40bb-29c0-4aee-ac47-1308b09ac65c"
        },
        "item": {
          "id": "2e34100e-c66f-4b73-bb71-f2bbdc458f00",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ff9160d6-5ce7-4ce8-a9bd-0ab6e137b9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f319ece9-268b-4e4c-be17-12ad5f541aad",
        "cursor": {
          "ref": "cab8b291-aa99-4b2b-a803-de3526be5fd2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3e00a7d8-9325-4f5b-b5db-58ccc36fd8fe"
        },
        "item": {
          "id": "f319ece9-268b-4e4c-be17-12ad5f541aad",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3318790a-a481-4883-8927-2aa58050aaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64541c18-6265-409e-83fb-9c3e8ab092aa",
        "cursor": {
          "ref": "0115bea3-005c-43dd-b23f-1cf14b44e806",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e8bb7753-ace2-4e5f-a9e3-fcf6777dee5d"
        },
        "item": {
          "id": "64541c18-6265-409e-83fb-9c3e8ab092aa",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f065c8bf-1fef-45d1-9859-eeb81720f51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496124ff-9b12-438e-80f2-cb47209154f8",
        "cursor": {
          "ref": "3b9102bb-3891-4faf-9033-20a6286f0836",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9ea70e38-4989-4243-bd78-dbd03e0761ac"
        },
        "item": {
          "id": "496124ff-9b12-438e-80f2-cb47209154f8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3008e1a8-7ddd-49ac-8a75-b708e35fe06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50171f4a-e5aa-44ea-83aa-98b27c835180",
        "cursor": {
          "ref": "7e79ddbb-4086-45da-860d-5c6207b7c933",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1f743a2c-8887-4800-adf8-d19ddcecd8ba"
        },
        "item": {
          "id": "50171f4a-e5aa-44ea-83aa-98b27c835180",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e74f8184-f423-49c5-a730-105f1a86e4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071e49f9-114d-424d-b359-7632650479d7",
        "cursor": {
          "ref": "2204592c-c600-4de8-94cb-2c506ac8c729",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "887d13a7-4ac8-4fb1-b54e-3c94212d04f8"
        },
        "item": {
          "id": "071e49f9-114d-424d-b359-7632650479d7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5424aff4-907c-462c-9617-1ee545c767b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e55c1e3-67bd-417a-b6e1-9a223cc7f772",
        "cursor": {
          "ref": "a289fd9f-eac6-4441-8a6d-5f526652204d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a9b3bf64-dd51-40e4-a72d-5df03cc98382"
        },
        "item": {
          "id": "7e55c1e3-67bd-417a-b6e1-9a223cc7f772",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c3ae76ff-e5c0-4c4f-8bb6-474534f65838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dcfb14-6595-40f1-a5c4-82e9771b92f5",
        "cursor": {
          "ref": "afe6c072-6322-4da6-8c13-018598585366",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e76539b3-b69f-40b3-9892-113f415cf776"
        },
        "item": {
          "id": "b5dcfb14-6595-40f1-a5c4-82e9771b92f5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7dea07b6-39f6-40f1-ae01-bd14e0cf8c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4fa495-fa43-4f5d-b187-562fc4902451",
        "cursor": {
          "ref": "02ccfdfc-d154-490f-b219-5e13626056d1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1a8d2c4c-09e9-4385-bdb2-be54f95b78c5"
        },
        "item": {
          "id": "8a4fa495-fa43-4f5d-b187-562fc4902451",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "559c2f43-784e-49d0-aaaf-4d375c12f774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2745ee2d-0beb-4c5d-9f15-4f9f64e6be8c",
        "cursor": {
          "ref": "557e1148-5df1-4609-8a99-9adb67190aad",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "291dd009-bae1-4f26-bd6c-8df2377801c7"
        },
        "item": {
          "id": "2745ee2d-0beb-4c5d-9f15-4f9f64e6be8c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5c81af5e-f00f-424a-9776-10c412d6fad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ac7a36-cab2-4745-b0cf-54db415ace36",
        "cursor": {
          "ref": "89fe6ead-5751-42b2-adbd-972f06a4a285",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d6ae5f8e-8572-4a9f-b341-8194ddfd95e4"
        },
        "item": {
          "id": "03ac7a36-cab2-4745-b0cf-54db415ace36",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "640653f0-c02f-4823-9777-1d916fe36110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc60eca-8e45-43bf-8470-0fa527bf005a",
        "cursor": {
          "ref": "6bfb798a-26f3-4d50-8d8b-ec84b5dc8a9f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ed79246d-6cf0-4ba3-89ef-3e0a65db6b59"
        },
        "item": {
          "id": "6fc60eca-8e45-43bf-8470-0fa527bf005a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "198b2761-1a5f-4a98-8db6-49e597765568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a189ea9-b0f7-4436-8db8-a68a84e6438f",
        "cursor": {
          "ref": "76074a88-09c4-42c7-8327-c26d857e400f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "05066117-a2eb-4a94-b94a-c8f9a3593c66"
        },
        "item": {
          "id": "4a189ea9-b0f7-4436-8db8-a68a84e6438f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "040f6d75-079f-4711-9d3c-62106d5e5a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9496fc53-bedd-47d3-ade3-e0eb7cd04a7c",
        "cursor": {
          "ref": "4d0743f2-8363-416a-9a66-c57e9fad213b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2a7bd96d-d6bf-4156-9c52-d8dd8068fc4a"
        },
        "item": {
          "id": "9496fc53-bedd-47d3-ade3-e0eb7cd04a7c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c67c613f-efe9-47c9-a650-b92b88195d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af34c80-02ad-4895-ae82-8d21180e3f0a",
        "cursor": {
          "ref": "0601c046-7c8c-423a-aba8-11809eb1b56d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ebcc6433-e28c-4b66-8f3d-5bb6e3b0834c"
        },
        "item": {
          "id": "1af34c80-02ad-4895-ae82-8d21180e3f0a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3108b646-a5d8-41d2-b9ec-3ce544c78625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646e7d75-f61c-4bf1-8a1b-ffdfda9d7b85",
        "cursor": {
          "ref": "e58986d3-2d2d-4324-9fb9-5ecc5bcdc19a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2fab2082-b353-4ac7-9eec-aa2357ab3699"
        },
        "item": {
          "id": "646e7d75-f61c-4bf1-8a1b-ffdfda9d7b85",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e1d16def-a2b2-44d7-bcd2-791f281b205c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbd437b-28da-4150-9712-c141a0ac20bd",
        "cursor": {
          "ref": "89521cdf-d605-4ea7-aab1-f73d29e48042",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "36c3e05d-a26f-47f7-ab89-df355a833b12"
        },
        "item": {
          "id": "bdbd437b-28da-4150-9712-c141a0ac20bd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "23b1a98e-e3d3-414e-ab19-0939a25f659e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576dd369-9268-44d7-8631-d31a6804cea8",
        "cursor": {
          "ref": "e2ed205a-79a9-4a8a-b8bf-de0092d44b8b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8b6e90d6-cd73-4c5a-919a-3a989f552f0b"
        },
        "item": {
          "id": "576dd369-9268-44d7-8631-d31a6804cea8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b434f84b-2892-47d0-b0ab-75403aa4bc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4e6c05-4c2e-4b7b-8061-1e8fe11a62f4",
        "cursor": {
          "ref": "4850ac7f-8eb5-4db8-9fc1-49ad48319e80",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9678134c-1f1e-4404-b1aa-c7242bf6feb6"
        },
        "item": {
          "id": "6a4e6c05-4c2e-4b7b-8061-1e8fe11a62f4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9cb825d9-8f6c-4e19-acae-c614af24c5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d54482d-1787-4939-9b3f-1f0e556abf8a",
        "cursor": {
          "ref": "11d6bd7f-baaf-41cf-84f6-ae603433f67e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1f85c542-9e23-4fc9-99e5-d2718d58edd3"
        },
        "item": {
          "id": "5d54482d-1787-4939-9b3f-1f0e556abf8a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "de85e804-ba73-455e-b069-e02f56fda381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63acf565-0bd3-4571-ad3a-3dd3441e9f80",
        "cursor": {
          "ref": "9c4fd8e3-80ef-472f-a23e-a289d15a0923",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "460c23fa-04ef-48f3-8fe1-200e9e5587c4"
        },
        "item": {
          "id": "63acf565-0bd3-4571-ad3a-3dd3441e9f80",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "64ea5089-f37f-4d17-80c6-d1675c508a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494f8e6f-84e8-4e20-90bd-a4174d102ee8",
        "cursor": {
          "ref": "ade0b2d0-784c-4e95-8cbe-004506c498d1",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ef943e8a-0051-4268-9daa-51d4a2453fa2"
        },
        "item": {
          "id": "494f8e6f-84e8-4e20-90bd-a4174d102ee8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a4858a26-ab43-46df-8dc5-6335ba5df65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59d0137-636f-4efc-9cbb-59c25d5d93de",
        "cursor": {
          "ref": "72fc7268-4579-490f-bdec-f3dbf8f2c000",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c6deef83-1cce-4446-9061-f0943da0d2c1"
        },
        "item": {
          "id": "a59d0137-636f-4efc-9cbb-59c25d5d93de",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "98289dd0-7594-472f-98f3-a3cbae33347a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100b8a76-05e7-408e-a2a4-0b69bfd86361",
        "cursor": {
          "ref": "e1486d0b-c960-46d9-96f9-43cf49f07595",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cad1c2eb-96fd-45a2-90fe-bf660af00377"
        },
        "item": {
          "id": "100b8a76-05e7-408e-a2a4-0b69bfd86361",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7dbeaf59-b4e6-49bd-a129-d485e9ab79b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90a873c-d5f4-406a-ba54-f7906f752fdd",
        "cursor": {
          "ref": "cd29ca2b-4c3e-493e-b0ec-b9dcb2b7b426",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0614ab14-f7fb-4aae-a182-7b877e22ab58"
        },
        "item": {
          "id": "d90a873c-d5f4-406a-ba54-f7906f752fdd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6a953d4f-7cbd-4339-8a7c-98a2ba3372ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758e44e6-321b-47cc-b96d-627c4c6c6b2b",
        "cursor": {
          "ref": "8284b0cf-f5b9-4067-bacc-61aae78e2772",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a3a86e1f-0340-4eb9-86bc-b432b452e158"
        },
        "item": {
          "id": "758e44e6-321b-47cc-b96d-627c4c6c6b2b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f38e0884-930d-4118-b6e7-de425483a403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ae35f8-d08e-48fe-874a-4de253ef0749",
        "cursor": {
          "ref": "441c1c04-211e-46cb-b399-659a9f6b02f5",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "52409de5-5e59-4e50-9c59-8f98b3dac743"
        },
        "item": {
          "id": "89ae35f8-d08e-48fe-874a-4de253ef0749",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3449348d-8cab-43f5-976a-5b34474132e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bf02c1-9ceb-4b1e-953e-6f4a8111c6d7",
        "cursor": {
          "ref": "fcb2ca6d-321f-485d-bc10-7dd5e924327d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d116e708-010a-4525-8128-2dd08a987940"
        },
        "item": {
          "id": "b3bf02c1-9ceb-4b1e-953e-6f4a8111c6d7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0aecbf3d-a69a-43bb-b2fe-03ecb7159b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc56054-a601-4ce4-9e13-0ad607b53847",
        "cursor": {
          "ref": "eb60bff2-a06f-4e09-a108-0541ac4c5ee3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ef9fee27-9566-41e6-86c8-e4271c9c5f0b"
        },
        "item": {
          "id": "dbc56054-a601-4ce4-9e13-0ad607b53847",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "09b4875a-9b32-4536-8b7c-b1972218e3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b052db-cd44-4cfb-807d-a3027242da45",
        "cursor": {
          "ref": "1e431524-08ef-499e-bd0c-f6f165616bfe",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "92612752-fa11-42c1-8230-3b6ade4f5058"
        },
        "item": {
          "id": "e9b052db-cd44-4cfb-807d-a3027242da45",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "466ac1f0-0575-4507-82db-e817b76bd46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e32ba45-6142-4f56-a314-8073d70f74cf",
        "cursor": {
          "ref": "4fa2b481-5302-4023-ada7-5f44e4bc66e5",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3f5efec2-5f75-4ab9-a4cd-cd9829b0b65b"
        },
        "item": {
          "id": "5e32ba45-6142-4f56-a314-8073d70f74cf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ae2de7f8-615f-4e6e-9d33-753f333933e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30ff23d-648f-4fdc-b85d-95139a40f5c6",
        "cursor": {
          "ref": "00a5c129-8c2b-4d81-9abe-e1815312e0fa",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0cab820d-ed3c-4082-8ca3-6a2b4790b49c"
        },
        "item": {
          "id": "d30ff23d-648f-4fdc-b85d-95139a40f5c6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "116bed6d-459d-4e93-8901-c1f0fcf162b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbda2dd7-264c-41f8-862f-d9b3e15b6417",
        "cursor": {
          "ref": "3269949e-8496-4a1a-b059-5a0aa1ef6511",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4604af2f-f79a-411d-ad4f-ad730179030c"
        },
        "item": {
          "id": "fbda2dd7-264c-41f8-862f-d9b3e15b6417",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "308d6206-ed96-47a9-8715-72b10a8e1cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bdfe04-a869-4dfb-87cb-9dcc79c655f2",
        "cursor": {
          "ref": "2b45941a-ecd6-4ed9-b04c-1c2b3a5e2309",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c701402e-ea09-4d5d-a749-804bf7e3baeb"
        },
        "item": {
          "id": "56bdfe04-a869-4dfb-87cb-9dcc79c655f2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7a1e5fc6-88b0-4d0e-9506-302bc3bae618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faa836c-45c4-4e98-b043-05c99318bb08",
        "cursor": {
          "ref": "e6a01195-2498-4e12-90a8-94742fae5177",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1f83cb88-2214-4a50-988c-7ad576199e66"
        },
        "item": {
          "id": "5faa836c-45c4-4e98-b043-05c99318bb08",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "12e76491-14d9-4fa2-b380-9b72888b2eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f9ecba-f8df-4690-b5a7-e5c89a4d42f8",
        "cursor": {
          "ref": "40486c29-2906-4cd5-bd87-8c24f89c6d03",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "471e018d-a0c3-4c0f-9cdd-6453a1b77668"
        },
        "item": {
          "id": "67f9ecba-f8df-4690-b5a7-e5c89a4d42f8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e673a349-8783-4625-b2ea-ccb4ed29e9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f065c3-01a8-44a5-b5b5-00ff5fa803fc",
        "cursor": {
          "ref": "17e57039-4d13-43e0-9cc5-621ec8af85ea",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3000c6ce-7a95-4063-b815-d0bd758de947"
        },
        "item": {
          "id": "45f065c3-01a8-44a5-b5b5-00ff5fa803fc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fb1fc84d-c49d-4a0d-99e2-835893b3206c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4440819f-2c66-4823-bc65-de1df72800e7",
        "cursor": {
          "ref": "83db8240-d922-4b17-bf31-00add96d2fcc",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7951fde2-d13c-428b-9e07-e9ee9b74d628"
        },
        "item": {
          "id": "4440819f-2c66-4823-bc65-de1df72800e7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7ad1e209-6fc6-4549-ba45-8d537202127f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1c008f-1900-4843-ab61-f3fdbefb48ba",
        "cursor": {
          "ref": "b1316382-5a01-4bad-9e0a-24ba13452d94",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3f04d768-bba4-4c96-9ceb-5ccaae53b550"
        },
        "item": {
          "id": "5f1c008f-1900-4843-ab61-f3fdbefb48ba",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d40aa84f-b623-4ef3-bb8a-9878327a9b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeab104-aff1-483b-b5dd-fce4a0db513c",
        "cursor": {
          "ref": "a5f71eff-6635-46f9-b6f1-bc68734099e7",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "892a30d9-0a3f-46a0-93cc-d56374ccfdcd"
        },
        "item": {
          "id": "1aeab104-aff1-483b-b5dd-fce4a0db513c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cbf023a8-8398-4e3f-86ed-be66793a6f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfd8336-11da-43c8-a5a8-668f024ee79c",
        "cursor": {
          "ref": "f353dc72-ee2b-47bf-af24-3da01710825f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "08263d4f-16e7-40f8-843f-b270a9e850ac"
        },
        "item": {
          "id": "8cfd8336-11da-43c8-a5a8-668f024ee79c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9270bbc7-0cd5-4aeb-98d3-3c81e068381e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdde132-2b2b-4e26-8bce-15ca152a6abd",
        "cursor": {
          "ref": "34be89ff-1d7b-4ef5-96ed-2e172231941f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8e688f65-141f-4b99-876f-b054d2495e22"
        },
        "item": {
          "id": "dcdde132-2b2b-4e26-8bce-15ca152a6abd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "19e4a718-09c1-4441-bd76-8bfcf69f4b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4023ffc-f71e-49eb-9a44-184f4311b359",
        "cursor": {
          "ref": "61eb8d63-5e12-49f4-bafb-0185ebad7d41",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "01f92ef0-d238-42db-ac9f-e439ae358e37"
        },
        "item": {
          "id": "a4023ffc-f71e-49eb-9a44-184f4311b359",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cd39e8e3-e587-49fd-8ef1-f91df82544f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0987ad-6595-4cef-929b-f295efd38395",
        "cursor": {
          "ref": "5c982610-59ce-4e18-9b5d-b03b1947c11b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7dc20900-cac9-4837-94a7-370b87a65b3a"
        },
        "item": {
          "id": "ec0987ad-6595-4cef-929b-f295efd38395",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "679964ec-d8d7-4eae-9334-2a27b39c0bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a48b24-30db-47ff-a3ac-533217007236",
        "cursor": {
          "ref": "eba3876a-803c-4c07-8638-817bc362ac22",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9cea6052-381a-418f-83f3-844af2fefc58"
        },
        "item": {
          "id": "82a48b24-30db-47ff-a3ac-533217007236",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "730a9060-382b-4316-b540-6933ec622fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52973546-9355-4ac8-ad22-37cb186d478f",
        "cursor": {
          "ref": "647c289f-60a0-4e26-ad37-40385a84a5ec",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2858e4a7-fe73-40f0-ab1d-8b94967c3084"
        },
        "item": {
          "id": "52973546-9355-4ac8-ad22-37cb186d478f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5af9ba09-a629-4df6-a067-490d49a035de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa8e202-0112-435a-8cfb-f0f150c2db0b",
        "cursor": {
          "ref": "486d0703-2eac-4543-98ae-8ff4c918de95",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "44ccdbb2-e8c4-4ddf-9bed-65129cdd9e86"
        },
        "item": {
          "id": "ffa8e202-0112-435a-8cfb-f0f150c2db0b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "eb62b569-dd36-42c8-9826-c81df89519cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2ac886-d146-4dbe-9035-d6c0d9c1b325",
        "cursor": {
          "ref": "66f87979-e2be-4b27-bf09-756aafe20ceb",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f3bbf510-5fb3-428c-a218-535b4bdb3a16"
        },
        "item": {
          "id": "1e2ac886-d146-4dbe-9035-d6c0d9c1b325",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "608afca0-4e10-40c8-b837-28b2a5e8d4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bb8b42-3a85-49ec-8bf0-069f41aab6ba",
        "cursor": {
          "ref": "8a539338-c9bd-4324-a97d-4a0a19c5002c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "24979956-94d9-4083-a3f6-b2e23487aecb"
        },
        "item": {
          "id": "42bb8b42-3a85-49ec-8bf0-069f41aab6ba",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "98e36d39-4d31-41c4-a454-2469c5a15cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0e8c2f-6397-40f4-8a08-54fcd2048e8b",
        "cursor": {
          "ref": "ae855674-9cd4-471e-9bef-493f5d6b94bf",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c84e8598-5286-48e2-a4de-428c326826e5"
        },
        "item": {
          "id": "8e0e8c2f-6397-40f4-8a08-54fcd2048e8b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "08f061a7-202b-4aea-b790-30ebf39939ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85be7383-f268-414f-812c-d785ef849877",
        "cursor": {
          "ref": "99a8f5a4-8c23-4bf4-91a8-6e876de06ac7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f4ae7b27-809c-4725-a320-f5d58dc2188e"
        },
        "item": {
          "id": "85be7383-f268-414f-812c-d785ef849877",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3e8adee1-b389-4ade-8e43-c43762d1e30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d1a0fa-d69e-4a77-b989-50935fb9840e",
        "cursor": {
          "ref": "818e9061-20e3-43d3-b73e-85d35791d98f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "02dfa3c4-3e4e-4fbc-9131-c72836b8bf7a"
        },
        "item": {
          "id": "f9d1a0fa-d69e-4a77-b989-50935fb9840e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ec64d28c-2bdb-4dcc-a317-2972f905c390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8144d808-5afb-4ca0-a589-b33be3ce336a",
        "cursor": {
          "ref": "108a5e67-a461-41d0-950d-5fa80e7af020",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8b0de848-1420-4864-8fca-25138f071a65"
        },
        "item": {
          "id": "8144d808-5afb-4ca0-a589-b33be3ce336a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b7bd4fd4-fc7f-4d3b-a144-5ff8b7499058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56869da9-4f11-466b-bba6-9dd77144930f",
        "cursor": {
          "ref": "ee84a55f-d389-4781-9353-3f766cb5c5db",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c95367ca-3ff7-402c-9457-dd1a1b275e0a"
        },
        "item": {
          "id": "56869da9-4f11-466b-bba6-9dd77144930f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "02e8f717-18f0-4ca5-9f07-cb1de3e8be21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482b684c-1f7b-4093-95d2-ea913c9b6f65",
        "cursor": {
          "ref": "98ba9901-c373-4e09-8a42-694170228da6",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4e9a4a3c-2868-47d3-8cf8-2a67da7bf630"
        },
        "item": {
          "id": "482b684c-1f7b-4093-95d2-ea913c9b6f65",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d30f9abb-5818-4627-8a91-f71e870ea6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821cc19a-8f19-4748-ab49-2475bfeb7e68",
        "cursor": {
          "ref": "7dcfb9c0-27ad-46ff-ba2d-c16fe38d8a32",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c78ddc68-cc82-435f-a2ea-d6add6a135f6"
        },
        "item": {
          "id": "821cc19a-8f19-4748-ab49-2475bfeb7e68",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a158a2cb-0a5d-4dee-8d73-d799f7ffbb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f991a3a-bdf8-4e97-ba34-bf16fb43d958",
        "cursor": {
          "ref": "3305f936-bb15-41c2-bcd7-a1abb087d8b1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "91ca83d8-4ca9-416f-8df6-2982690db905"
        },
        "item": {
          "id": "4f991a3a-bdf8-4e97-ba34-bf16fb43d958",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "84cbf7b3-9101-4f1b-ab90-14a565e6708e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4cbd46-d040-4cd3-a603-767b6bb6f70f",
        "cursor": {
          "ref": "939feaa4-b6a7-4513-a94b-b7e3d3f61f3f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "77d94a1b-367b-4607-866f-c7442ffd36e4"
        },
        "item": {
          "id": "1c4cbd46-d040-4cd3-a603-767b6bb6f70f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "678e6d63-2a0a-4c3c-a351-8d6f5c806661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4899b02c-cd86-4680-bd40-be51378ff20d",
        "cursor": {
          "ref": "f4141f31-43ad-47be-8ba0-8ccfefc58c5c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a503a01f-d5fc-46b6-99d2-8595fd6a60b2"
        },
        "item": {
          "id": "4899b02c-cd86-4680-bd40-be51378ff20d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a984ca19-cfc2-4362-95d4-6808032a5342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de27fdc-5bef-495d-9cce-bff79c02774a",
        "cursor": {
          "ref": "6295a6f8-8946-452f-97cc-7d4d30ba027a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "30c887c2-546d-4aae-b42d-8a6b5e83cfde"
        },
        "item": {
          "id": "4de27fdc-5bef-495d-9cce-bff79c02774a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a83e5ff9-711a-41ad-a3b6-372548906864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09988474-38ec-43c8-a570-4965cc50f7ce",
        "cursor": {
          "ref": "b7c82d0e-01dc-4a6f-b087-60ddb5814ec5",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "68a79876-eb6f-43b3-8a70-7ff503859388"
        },
        "item": {
          "id": "09988474-38ec-43c8-a570-4965cc50f7ce",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e6234942-d58c-4914-b797-f299eee66dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62808ffa-c80d-450f-a5ff-2f26424aba5b",
        "cursor": {
          "ref": "aefc225e-f2f4-4c24-bac9-0a28f0848286",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5d543142-2285-4c70-b306-f20a29233cad"
        },
        "item": {
          "id": "62808ffa-c80d-450f-a5ff-2f26424aba5b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "df0ffa19-b19e-4168-a571-0df1414ee2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea48247-7fc7-41e9-914d-997f1c0c7fdc",
        "cursor": {
          "ref": "29884eb5-e4cd-4147-83ea-c9cd7f965c9d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "00fcf79e-47df-4044-af93-d1fdec38ebae"
        },
        "item": {
          "id": "eea48247-7fc7-41e9-914d-997f1c0c7fdc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7530c822-f47e-44e1-9fef-80bf76c06d0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2120d84-814e-4b93-8f8a-de67ce274fcf",
        "cursor": {
          "ref": "c46c5c3b-ab25-4e9e-9db9-a504746f3ee1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7035df06-325d-4610-969a-e5b68dc6c218"
        },
        "item": {
          "id": "d2120d84-814e-4b93-8f8a-de67ce274fcf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "93eab07b-c171-4106-b47c-7fed74c2b93b",
          "status": "OK",
          "code": 200,
          "responseTime": 2380,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f1f2f9-7dc7-421e-9aa1-19452ad295d9",
        "cursor": {
          "ref": "aa860a2f-6e29-49b5-a290-e63b975bab91",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bad671da-942e-4b42-a87a-5ff936963d13"
        },
        "item": {
          "id": "d4f1f2f9-7dc7-421e-9aa1-19452ad295d9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a7809464-7e81-4fc3-83c2-c10bd2f79792",
          "status": "OK",
          "code": 200,
          "responseTime": 3846,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5286ff-b88c-44ab-aeda-0ab15c91050b",
        "cursor": {
          "ref": "f5247f83-6428-40e5-a03e-9b0eef61c557",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e026489f-7fe5-452d-b35b-c41c3ee6e215"
        },
        "item": {
          "id": "6f5286ff-b88c-44ab-aeda-0ab15c91050b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1e5e050f-25e9-4b81-b856-e11ab9feea38",
          "status": "OK",
          "code": 200,
          "responseTime": 3286,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "746e23eb-3f90-46ed-8bf2-bf6668161d98",
        "cursor": {
          "ref": "e86fff32-b2d2-4611-813b-a14438cf1421",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5ae32817-d557-400f-83d4-d6926961842e"
        },
        "item": {
          "id": "746e23eb-3f90-46ed-8bf2-bf6668161d98",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "94cf6e11-0190-4eb9-8984-09136e1b8091",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746e23eb-3f90-46ed-8bf2-bf6668161d98",
        "cursor": {
          "ref": "e86fff32-b2d2-4611-813b-a14438cf1421",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5ae32817-d557-400f-83d4-d6926961842e"
        },
        "item": {
          "id": "746e23eb-3f90-46ed-8bf2-bf6668161d98",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "94cf6e11-0190-4eb9-8984-09136e1b8091",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8bba80-d4be-4599-a627-db387d9a6f6a",
        "cursor": {
          "ref": "35c937fe-fafb-46c4-817b-05dd134fc943",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6ca36bf1-ebe6-493e-a825-b7a0a28379bc"
        },
        "item": {
          "id": "ac8bba80-d4be-4599-a627-db387d9a6f6a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ee18eb41-af34-4e6c-87d1-e3358fd617e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa5ebe3-f8da-41de-be97-8bd2bd257545",
        "cursor": {
          "ref": "7da0003a-8af7-4954-bdb0-d66e51edd22a",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bc96c824-8ce8-4a65-af70-a70859295703"
        },
        "item": {
          "id": "bfa5ebe3-f8da-41de-be97-8bd2bd257545",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "045a3bde-3cbf-49b6-9309-e2d7001133e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}