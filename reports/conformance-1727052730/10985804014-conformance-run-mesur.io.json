{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f91f0d71-4aed-4ad3-9aca-bdc4af9ea0dc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f4d62344-3978-4640-b005-695aee5bd608",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "913b9add-468a-40a8-be0c-37fc52bfd68c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8b36b087-b956-44af-a096-bd552becc21d"
                }
              }
            ]
          },
          {
            "id": "cf6e5629-f8e3-4fb8-9af7-b79c9b8c8371",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8aabff20-2d1e-4f07-9dd5-2c1ea6bd3129",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "52a5a170-a3d2-4655-8cb8-d6fda09f9559"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1d32e213-6c9f-4f86-b76e-5b0b355c6b98",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b1b2110b-9416-48e6-b062-a8d20731071e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4b380a41-7eff-4624-851c-4e9d77bfd38b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ef0e9d4-8f5d-4812-8bec-ff479ec7081e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64a04f47-cc9e-4c50-bc02-aeab088ac346"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83b3461d-979a-4268-b3d1-0d0da97eed74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aeff86b5-4195-4b63-ad47-baa5333268ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "52a20a43-6a61-4f05-bbea-abae465e7e2e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3f3dc234-f45a-4d7e-89e6-ad1f6b3aac91"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f482a23b-acef-4120-8d82-53032eb3f065",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c4483b96-fa46-4588-af96-b3b4185768c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "437c8722-038b-4d42-90dc-d95963e5d23f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b657e0ee-9890-4e5d-937d-22dced51a086"
            }
          }
        ]
      },
      {
        "id": "df1618fe-9049-43ca-8315-a7f19f6d7877",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2cf89b2e-ef02-41a4-ae87-dfdbd6336f01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4a50688-cfa6-4c4b-93f5-7f27c2e1dfa4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f028ed41-1bfd-408b-bc84-d47969481d54",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f3eed6-b381-4afd-b225-0bbb184b8970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99cf23e2-0e43-4306-b1c3-bac466ca9d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf994a07-ce3b-4e7b-82f5-6b11de46a627",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372fefe3-3b09-432a-9f8e-87fc5127cd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11dc3a8f-b308-4f89-b7fd-04a17f3629be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e319a265-f1c2-4eaa-bb1b-7c4478c0b89d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2912da-3f94-44d7-944c-08b81d1dc872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62857861-2237-4459-be3a-732da60c57a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e650347e-6fe1-4dad-b6bf-c6d9cd5e3da1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80892e0d-7270-40f1-9b69-1fa979d903b4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27bbcb4-a1a2-434a-b306-bdd65f709fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79514a97-a159-4adf-851a-f0d01e84dffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c833465-7d3c-4224-92c2-7c64ac989ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bbc601-3e64-4ad2-ab19-9c2d9af4d294"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "81ef39dd-4ef7-4503-9d03-ca8eedf78f46",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e29c64fb-b66d-4c29-a681-0fcc1bf66f47",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a65ee274-12e3-46bb-a00b-1a00bc76b4eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "906d0139-aaf2-4e06-bbd8-837bc5b46c2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af4dfce1-e4c3-4a0a-98ea-d2ac9687da66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7b096f46-1f83-476a-8ee6-0cad5b05af3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7852764f-08ca-4c31-8300-ab7b0aa3eb12",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2684493-2649-4df0-ac2d-3f74ea48e9b5"
            }
          }
        ]
      },
      {
        "id": "7f714f9e-b2a0-437c-ae28-3242c8602738",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9a6d479b-9fff-4d8d-8b2f-2d971d7d135b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ceeb8fb-0e8f-42a2-8aad-a9f1b246f75f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ecfa6eac-f64e-4b1b-afba-849bb7380ae7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d982889-7a87-45b8-a4c0-6aadd8e28006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf743269-a1a1-45f6-aa17-9954d45a16de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9cbb63-4aba-4518-8f28-0933d9f3c4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d238e4b9-a146-4ad6-905d-c0fe85d8c452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcb03ef-70fe-4002-91f5-3892bc239e96",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f572876-16a4-44cd-a56e-aebf3b492a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09db3163-20ba-4320-9f34-f6099ca21502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa753114-2253-4d3c-83d6-90f98b6ea2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4abac293-dc8d-4363-bbc1-cfdb46c00e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893b0e7e-0227-4573-88a8-29c7c9a354b0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44b6fcc-48e2-4734-81b3-7f12147a5bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b5ca64-248a-4044-9776-ee6ef3137e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e498b142-181c-45ca-9cc5-0721a5b24901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba9fbb80-3cc1-4b91-a66c-4bf560ce00b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3c90cb-1a1c-4ad1-bcea-ea268c870b32",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fc1079-12cf-40e8-91d0-2cefe549727e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a2f1d0-e601-4898-8aa5-f998bd584dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc1b1ce-dd5c-4ada-a696-9e187349226e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3adb1dac-d834-4ab6-b41d-52133eb3d16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d234b93-86f7-4fd1-ae99-085c95b2c9e2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf344d4-336e-4833-bbd2-539460fdad12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d27848c-1af6-4791-9fd1-febe65280d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b9df89-3e61-45b2-be49-0b1f3b272ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84a117b0-407e-495d-af26-fdb3cd3ab859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1ec4e8-907d-42c9-b95d-34e2358a5a07",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad62c91-1e70-41c4-b768-b8b3425e935d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd25852-0d8a-4721-b9a5-871fa539f690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317d047d-050e-465e-8bc9-48bf8c778304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "279b9cf7-f75f-4117-b749-c6df0d1284f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c6b06f-cf28-483a-a154-a653d18aed1f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68576fa0-ee87-498d-84f8-c8f9b47635b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01bf360-5adb-4343-baf1-4768c99aea45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94da5d68-20b5-43b3-886f-5e20303932c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be8fb0ad-e021-4bcb-9d39-31a21539ea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1f70ec-bc06-4e21-bb77-2e53f8a719e6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0ff25e-5014-4c4c-aa80-d4ab9658e40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7060cdf3-ac7f-4a48-baad-6c7c942bd74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5787a453-abad-4d3b-a8e9-bf9bd0f81dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b137022-49d5-4c91-9e30-40d3027c7948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3106a006-9367-4444-8709-eef062f86594",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01accfc-348c-478f-bcba-b02ab723d81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0e9037-9142-48bc-88d5-96d109990f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2ceebd-1420-4cca-8e0a-3e76525a1dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77eac692-5821-43da-8116-0191bb20ee2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a3d95b-3ca3-48e4-b162-2e6d30dbf72d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193fa165-35e3-431f-8381-d39686775d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997884d3-5dbb-4b0c-9298-659eed5d7255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9150f7b5-116e-4e74-9d39-6dbae651e269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1437c24b-8b9a-4834-bd43-bb702978661d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4006a437-bda2-4cd6-aede-f2e6b62f417c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12655da8-2703-41b7-9b71-63f9784ab8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a41208-87a0-4759-a1a2-035ff3f4aed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c553d02b-0982-4799-9c00-97a3fbdd6933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5710b00-00a1-4a93-b2e7-cd54884cb60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49c72f2-0575-4f6d-a1c0-c4d6d9d8da5f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56caae32-e283-424c-b305-9b2abc05b29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a80fae-5552-4374-9263-2dab05a4f9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dc1087-aac1-41eb-be5f-6776d40cd334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ec4aa90-7cc9-4a70-a4a0-5b9b80b4ffbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edaad9e-68c6-4c26-b36c-6f6af3400ff0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603d2085-00a4-4d7c-9c4c-bc51121d1942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4906d359-f35d-4ad4-bc63-e05f3049c8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2815ebc0-1557-4cc5-92ad-3137d05b5512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35104117-a8d6-46c0-bec4-11dc01bcf830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a6b0f3-5a3d-4f4d-ada2-8ff282611726",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da0c07d-bc0c-4333-b16b-b0b4bce56455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329c40ca-90b3-4983-b68b-202025a1acc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5d981f-ddc8-4e12-b1e4-c1a532173c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58547896-9191-4521-b81f-f40bf3cf303d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ae28a3-d777-4407-a8c8-3d6e36b62dd3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831a07f8-bf24-4b2e-ae7d-6a7af90f29c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec7e868-7e79-4fcd-9a09-22218d3e5e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7b9bbf-8a29-4b3a-9b80-938eb8f5831c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9114ee15-eb8e-4027-af70-ce70045ede09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b2f997-35c6-4583-b4ac-214058bf9cab",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08e0340-a56b-418d-9416-a1d83ec0d719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abee066b-5680-4540-b2ed-04707975d6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c18d225-7ad1-4827-a35e-781dcfd8a489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52316965-06f8-478f-889e-7ec575aa755e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a064c40-1a00-4770-84e3-a2f6d00609ad",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c438e0-09a8-4428-a40f-63d31230e736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f8d378-28a1-41c1-a8b9-f76c354788b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274da089-2e7b-49cc-8bd2-da438e369f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "216bd837-fbe2-4c35-8186-04139f80d1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5400c595-577b-4ad4-88be-09e1fdad5d58",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9509347e-8b7c-4448-955e-f08741f238f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b79f85-305f-4449-b0cc-9166010c0b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce557a7-db5e-49de-88de-48ed612ba7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "521c59f6-cdc3-4514-85cc-74ee3b76a975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0aa667-0196-4fe5-9437-960c4c182c73",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11217067-3327-4252-b90c-a72730bdf910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb6c326-dfa5-4c0b-b4b2-561d703061ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2002945-9b94-4d3f-99ef-8968b76ef951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdefd56-e4d4-4b96-9898-02932919ec2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84802fc-dcf5-4978-890c-29e4afdb33e9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f08a23-8412-4799-b663-fc5f08b95e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c65923-db30-47c5-a593-2a85947da58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d015c47-8eca-4b11-a1d2-92a106087e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a452432-b6dd-4272-80b0-2f7e0ddd34d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dccc926-bd48-43b9-8e91-540b187023e5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51966b3-e00b-40fc-9cf5-46b14b280e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0feb314d-fddd-4626-885a-4bb15b297d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c67238-8291-4a09-bb5a-d655be89bcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df785e4c-0f02-41fa-9615-8bcfc2a8c084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482ced9e-08bd-486a-8c2a-1d9c48d24876",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e7063d-0c2c-4eda-b098-8080eb29d65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4397f9-5453-4455-abf2-9d8bdeb2e5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a3f049-0919-4062-9337-dde8ffd5ae43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad466c90-16ed-4ae1-8eea-c018de714d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e70488-ec89-45d5-b5a2-cebecd530b5e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041e529f-9bca-4568-938a-e802ed3f997f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3ba7ff-b004-4243-b4cd-704ffc54a502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c50ae48-17a3-4ae9-9f3b-d8f3fe6bbabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "459d7c6d-8872-47ef-8e17-9e42eabdce43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e808f56d-d65c-42c5-81a7-92abcff108fc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f90e95-192e-4707-aa89-9c2ceaa6c471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bea3db-c174-406f-a483-6fe9e39a38e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8484a73a-ee68-4582-91f2-890a2d2e9c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1227cc23-e4e0-4561-b21c-ea8ac6edb06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e733749-ed66-4fb9-bbe7-7edbf3261c6f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69248fae-5c7f-45b4-b1aa-23edb26b6c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3d564d-6774-4949-a256-84a82197df28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c54102-f5ae-4237-8cb2-9a4782f6fb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7d3da4-1b62-47ee-a2e4-06e5a1958612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df61226-77d9-4874-aa6f-b83480799505",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d42a25-6fad-4555-a755-1fd45c5d0cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4657f0-f148-40e4-aac1-b14366dd6b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c3e2ce-a32c-4152-b2f7-2897275d6ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c451ed85-19e2-4996-87c1-b5a9c1cc0d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a2b87c-8df9-4e06-ba05-cc9d6d221208",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b08a39-508a-41b3-8881-41acdbc4b0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb083eb-20ae-44b3-a91c-11e53d87f58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce10bbd2-a80a-491e-9a26-2c75f46046a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f19b65a-71b0-48d4-9c72-b2838b76e9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fcb6bf-2148-4e42-a52d-2f5c126f2756",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b327297c-57f2-47c8-b220-624b94bb2cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccde541b-093b-482e-ac28-a3ca930e5272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6be693e-7f6b-469b-88be-a146c913235e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68cd6f41-7b36-48c0-bf61-171f732ceedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef6288d-5814-4513-be30-c3febf129696",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce5a058-2e36-4a39-a582-9d79a335b90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1fcf47-d69b-4bf9-b03c-d597b61e94fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b01cf36-e62f-4a41-9aff-2d0a067194f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4557f8f5-92e0-40e7-85a3-4425e68fb170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf86fbaa-0683-4a8d-b8ab-ab417756ab6b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a726fe1b-2549-4dc9-bf3d-b4329999c239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2898ab-5079-49c3-8625-26332767de6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afae829-fca7-4138-826a-d7e11245fb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b3bee3-33cd-4e74-b2f1-648ab19e8997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8973b4f-59e0-4817-a244-32a38b49483b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9362b97f-a721-4d57-9092-a9c3e5f3fa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1b296f-e0a8-4461-be25-be71f0a10a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38662350-51c5-41a6-a197-3c1e9fe46d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac54711-63f3-48aa-9d7f-762a6f36aed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c143830-622b-41c2-9cfa-09ea1c338303",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac0cf90-1507-40bb-b6bb-5c7bddb196b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5679670-bb30-454a-b954-d4a9215be5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95772a28-4f0d-4d07-8197-2fad28bb96b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91457c10-35ac-4edd-b6ab-83283c75ff0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4fb42e-e6be-4c99-b2dd-477315072203",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195af253-abff-4a98-92cb-e9315b46e89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54773087-7a09-4a50-933b-76c7d9e63128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392f2521-ac54-41e1-bc1c-b76e980b4b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fd4c73-5d94-4dc2-8f2c-1e260d2a77e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff76e23-6320-4749-b5bf-21062f2a46b5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0f261e-f024-4f12-b593-3dcd559644c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bcd5dd-bd38-4fd8-a33f-457e30700689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d35bde-52f9-46bf-ba97-3072fd7931b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4d518b-4f6a-42d1-9ed6-ee9fa7c29922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122dd9e7-1183-430a-b285-6aca81c75a05",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc969fe-4b21-4f38-aa88-8e62f77958d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4099a812-25ee-4e81-a537-04ee41dd7da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9186f7-413f-4f6d-91ae-3863a4bde4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8476401f-234e-424a-a2b4-19f948971570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27490da-07a3-45af-aad2-3ceedcf39510",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23058335-c190-440f-aa69-b65a89688302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc2ea17d-ca3b-490f-b93a-64a2efc262fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f8f5e1-8ca7-47e3-a95c-e70adcf1f53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21c5873c-349d-4693-86e3-d26783877409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fc2684-734d-465c-8fed-e429660f780f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69075ab6-e27c-4cc5-aa04-593648dd0738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4cb66d-2454-48eb-9497-ea605ef6bfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4711c8d-5aef-4bf7-ba28-ddb765b68dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2db1245-2d29-4574-bb66-a5100f2f2e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9457a22-7f43-4bdc-afc9-7e049b57aa82",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f08be6-5cbc-4e17-a2b3-f10683f01d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab770124-e822-40b8-9dcb-861bf4fe8021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b9b393-106c-4ea8-b3a8-d16a3824462e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "07fb2543-d376-48af-ba50-5df5a940f58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecaec2e-aa4d-41a1-b5f5-2e11f4e97807",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e68f7f2-34fa-45c1-9cba-c53245232495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3646da-dc51-49ec-899f-5993b8be8f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3eb9f76-c5d7-447c-ba16-916a6b02fa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "058d9dfa-428f-4f2c-ae67-e1a62bdfd4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108a6219-23bd-46ae-818d-7aad7cc525fd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d02acf-f5db-4616-a2f1-47b2365361db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0ec973-3c83-4eaa-bf5f-d2826aeafb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf959a6-20da-43ac-801c-173691e9d08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2094d3b-2121-4ce9-a541-4bb0b9987716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5eeeabe-e6f8-4ce9-a259-47bd90e99d65",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29283a4d-ece2-4a2a-bdb9-2c5da223b112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2ab81c-166d-4ee4-bce4-62f67079eb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e6151c-5b92-4ab0-8691-b222ae9aa2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3d4a58-5c8f-46c9-be2a-ff9a3d9dbb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205bde80-d72b-4abc-a996-7ec1977012eb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb61c68-d580-48a8-bf37-a9f1de0afd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a18a710-b9af-4d4f-be99-d43cc5e2a3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9397a421-21cd-4731-bd60-ff43506b03d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b22cc8bc-1b98-4b44-82fd-c71d0e7f5c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d3342f-65b7-4e2a-b500-94ffa1d3cc16",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1d62d8-95eb-4fb5-a9fe-71376064c710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51867bd5-7fca-49c2-91c3-acb8f69e3553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3870d470-663e-46f0-a23b-06f42d32986f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b785512-c208-43f8-92fa-3d657ee0c711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f995ad95-6886-46bd-b0d6-0190d3d03450",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba63813b-0e5b-43b5-98c1-791151d9e44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc8ff83-5723-4c00-ba27-d21ac5c77da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b681d4-eb97-4cdf-91a3-efb3fd5efc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "084fbeec-7dec-4850-9cd7-756d6ba32849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0fe877-7e23-40e0-b8cb-70bada9395e3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f42864-53e4-4c9d-b1d6-cc21e9fbf259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73fc94b-7b7a-43b9-8beb-5565461d651f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9971d697-f62a-41e7-99cb-ba2901f61d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8cf53d3-0452-41b4-96cc-21697e70aa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a531790a-fd14-49c4-af42-57a3501de65a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418c0e3e-27f5-49d1-a923-e532075484d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f0e6a7-f115-40a3-be8c-d615ebc5c95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b666336-a845-4a65-8c93-d1fee823503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6619c43-b8c5-40f5-af52-d9f0289abfa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6adad8-1531-40eb-b76e-6b3bd0ddeb74",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d64a3b-4d5f-4172-90ca-d876f4982569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e91e74f-c194-4a83-977e-e35cf676c5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e0f21b-1a73-4e68-bdd3-833220c0ef0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6539aa70-ab82-49ba-97f0-c733e30e54c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed64835a-7ad1-464d-863c-0f20c1be3510",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f85c85-6c86-4243-ad12-f1fe83fe8b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555e1096-ec11-4c79-8097-a232ee52b476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9078ef61-3b62-4767-ae1d-26fb79a28218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc965ff-8cd1-4030-b13e-7b33268ac963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7db7a2-dc37-42e5-84e7-8f38f89227c5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658982df-7be9-4416-af53-7a34c370606b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfb735d-fa9c-4515-aa51-21f200b0bd73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68546fa-29a4-48ea-9990-16d15448e4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d84ba6c2-966f-411b-9e58-8290c2e2e1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62d62b7-f4d7-4a6b-bedb-2177bd0253ad",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4855fef3-1142-481a-85ab-90ca23781615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6df7225-2d43-4cfa-8431-a82eb825c5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8403734-7b86-4eb3-b9a4-da57cd093e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b91076-0896-4a9f-9ae6-cbe62b1a0930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d98d070-c4e5-4c28-b771-847ce22b05ad",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d22bb0-9f41-49a6-8845-d7ceecd264eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb5a7eb-8696-4766-bf5c-6ff2a653cc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f301dd-7e78-43ac-8431-5cef43c7e692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a250d3-6fa0-4845-b36b-62b8dc75c148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb77150-2f42-405a-830d-71445f63e004",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5804e0-d8e6-4977-b5ef-6ebdd96d60bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3f7ddf-5e97-4fb8-b05c-683461d0b097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5660165-33ff-4936-987a-06179b17e332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb3ae1a-c8e9-4578-9fee-c4c8fdbd47e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04557bfb-520a-4449-abb0-60f1ec714a4f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d98307-8118-4022-af0b-8ba0874a6b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02686623-f9e1-47ea-93ef-b85c4593e0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ec8a55-d1de-4517-b8f0-856a6f939eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "310285fa-0328-4559-a628-70ea1914e4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b80483-0052-488c-8155-e4d4ed49515d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e284772-252c-425c-a86e-d5a2da1b670c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee9f93a-ad46-4fbd-8b6e-8acd11a2d493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1b3aa6-b122-4ab4-b2b1-fc25214eb8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e221fd20-3c51-43c2-a915-c7631dddcd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a72fadf-c566-4985-864f-8741594b6002",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a3d7a0-33c5-4f4f-8b38-c75f300df3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9d9f7c-2811-4b4c-8267-b96acacad237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e95c411-abd9-4dd4-a1c9-8d3467fbeaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66d93a1f-6f80-41b9-a853-6eb23ad60262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723ca256-8e54-4ffd-902a-dacc3af294e3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2604d26-ff59-42d5-a485-d4a20185d0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33ae01a-c095-44e1-a111-cfd15e591d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5114eb0c-c631-4389-b5aa-189d11802adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2c363bd6-e02e-4652-bcac-2dec6da4b8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e25716-a85f-40f8-a031-d9c25e52ca95",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece55a26-ad5c-4b44-b026-377797fa3ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851c7576-ce83-4463-943f-a41bb5444067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50523475-30f8-4048-a022-5f0c9325ddfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2a3ee4-e571-4caa-8430-662c45ab3254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04844eef-1710-4884-b023-95d0ebc1c5b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58afe9fe-50e0-4487-a729-6e4f856410e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037a1f35-4518-4461-9695-61469cc15ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b4ba1e-6904-4b84-88c3-d00831f8f868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa24f2ca-30fd-4e19-a9cd-bdbc91df0284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ed9979-b1bb-470b-b8ba-89951b9cce36",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432fd3be-c0b4-47ea-9e40-0f3302b8fd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5c0f96-fbe5-4c5d-8554-fcc31e6ad1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c4f267-c212-4d8a-bb83-7ac56e1526dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "71b0d118-1916-44b0-9681-e0a0d1815fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f480e091-c47c-41ed-ab7d-f95b6730a000",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbac879-398b-44a8-a91d-8333b352d8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6430f33-b66c-40ce-ae57-6ebf94bb01e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfb63c0-1e1f-488b-b328-7764186f6af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "34475b35-9669-4b80-87b4-55aae05eb5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b36cd9-f471-4a05-be03-0031eb98fb28",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85568d31-78a3-467c-917b-0ea5c46942fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f5c611-bea5-4153-b41d-d28977b77768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2236e081-80ac-420f-8ade-db522dc33d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d81079d9-6f9c-4fb4-8a52-33d541efb761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed060df8-8617-4559-8dfe-8d43abe04889",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b8bc42-87a4-4145-a857-392c6cace9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b2b93b-ec93-421e-a820-dbee3f3fc179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4ae51b-2f56-4a67-aba3-ac5393086e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "927b672a-cfc0-41d4-8f56-45950ad5e699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1870da64-4f99-4a24-86af-fe3aee92b222",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453f33be-2eac-40b4-922b-943745c5c442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc09d9e-0de9-440b-9afb-77897cc29db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec13792d-5999-4b93-8483-eb9d14d8d4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "901233cf-8bc7-4131-961d-29180265c449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0e567b-03dd-4ab2-860c-6b180d9faec7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcf8f45-ab62-437a-9233-03408d29855e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b2d984-d237-462d-a4ce-4811f83916b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c236368-0cd8-4ba9-a2f6-7bc744803b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "396e6806-a830-4c2e-8ae6-41c9918611b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1b3b69-2d0b-4c75-be85-06741ce032e7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42096af4-65f7-4656-9b8a-48727e68fb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33498be-86d7-4016-a31f-d4449edc2370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bf2054-a195-4890-b200-09f95238b594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f8dbdb-3580-4c80-a9dd-da5b57ec90b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4faad37-2999-42a3-a14e-d5e66fd77786",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49680bf7-8591-40f0-8276-9db76af88518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e453b10-81eb-4003-a472-f729b8db551f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fbcd36-4543-474d-9195-09ce8d7c8ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "535e2d00-c1e2-4db7-9da5-99a2a1690e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2520a69c-d274-4e2b-ae09-7a8c8f89bc8f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f57389-10bc-43f7-9fdf-96ac94175bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e771e5bd-aebe-4fe9-b32b-e122245728c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f4b397-ddff-49e1-80e7-cc5612acfe11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2134c2-5400-419e-9ac4-292ae54c5af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23209276-54b4-4fe5-981d-32ca31b511f5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92acb817-cbcd-4770-84ba-10a3facaf4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a2f947-e63b-4fd7-bf75-f03ae7b2bfbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf946fb-ec52-454c-a9cc-a5810f478506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf6540c-1ea8-4620-a4ee-689ffb1dc558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316a4768-9b11-4d61-abef-15e90d3021db",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d753d2b-25a6-497f-b690-f428b45efc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e281b5-ca75-4382-966f-a803b788bdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24605f6d-1e2b-49ba-8a72-828b464496b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4f4fb0-6a17-43ad-8f9b-61f0925d43fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1258f2f1-a6da-4bdd-aea9-6ecbb31628f3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090c4637-c537-49c1-8dd9-bad5ddd31c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af284c5-2a73-47fe-be5e-519668f26a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8c64ab-3194-4af6-8114-5d24a3e0c01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c834548d-1adc-4186-9810-d94b55e6c0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197c8503-b21e-4e2c-989d-d2eabe92f9a5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45a050e-03f8-4c97-b7c6-b0481186c217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766f45fc-95eb-4f4b-85e4-c0a980393311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7107534d-28b8-4f3f-880a-164e26aff7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbae57ea-d5df-406b-8ae9-c8fe095a144d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1e283c-7619-4264-b6ef-f88c87c11b61",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0478bf-85fd-4d63-9a66-0813117ed204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fc5142-0592-4048-b721-7a23610af4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2106523e-8598-456c-9ce4-d3bd83dc0363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a46aab5c-540c-4481-8620-a57a82b58c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9540faf3-60fc-496b-937f-5165f0ce6a10",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b654ce8-e6a7-4e7a-a749-7777366ea673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55df492b-7d61-4eb2-b756-b08b626b5e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca29676f-7945-4dc0-86fc-2e2d31fc6757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50022961-ac4f-4ea5-8440-f19c617d9ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0696cb83-84dc-43be-8d66-4fdac165611c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b85f81a-7692-4bed-b446-11742a9db1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3886a1ca-72bc-4b7d-bd04-5a67e48d8838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c505be-7ce1-43eb-bd46-2e63eaa6911e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7f0b46-d9f7-46c0-b40e-0abad5702a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0d5f47-e58b-422e-9ce0-93a051163e52",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00edd465-9399-46ee-af44-a725e187393c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b184bc-890f-4d8d-aed5-2856e5dadc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8fce38-849d-49d8-a621-995690a2f4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2b7ac7-5296-4f9e-a1a1-a11bd744b0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77cc2e8-69ae-43d5-a44d-890a9cfd1219",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0a416b-4c09-44f5-8637-e192e635f62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837da995-078b-427f-937a-ccf2194862a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec4ebfe-2544-4597-b90f-f4bd9001b850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfdf7e2b-7ab9-4c78-bed6-93b7db8654d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb2ff17-74bb-41ab-b6db-335b17bf96ca",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f0ea3a-ae99-4ecc-863a-7a387c6434d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731b18d8-f151-4e8f-9fe9-4731672d5730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93817cb5-f9cf-4830-872d-f67f4586dea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19a110de-1f9f-4b81-bd51-9ff633cab897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7a0f10-108e-4e0c-9580-9f57c2f876d6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b6567a-53ba-4833-8dfa-e16c69bf72f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9092a6e0-11d6-455e-8004-38cc48c1d24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cdf266-21ac-43fb-8489-6c3947d8188c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0931f200-6aa6-4d69-8e9c-220a0389d2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8f4b69-35ac-4b90-8396-323caf7bdae2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5661ec-a7ee-40c9-8796-2dcfb1a9b40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f53b5f-22c2-40c5-b99c-206700140a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e672a11-078f-4b59-b765-5989681183cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f06a1f1-cb06-4e8d-8534-1ff0d7a5fa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6855a30f-e281-4afa-9667-72805bdfb456",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63418ad9-5707-43fe-bc0f-8d8af07599f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7dfb86-2356-4029-8ddf-211e5df215e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099a18ac-1598-4813-bcc4-84f82c749a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf926980-9f0c-44fb-993e-a75431cdcd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59e621e-c38e-421e-9dc9-bcd8e1a3acbf",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f2d862-b946-493c-91b5-d98286b7591f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762dc16d-0850-4d6d-aa40-1df5f92a63f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19b8f25-5870-46c2-8ab5-aac646825202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6b462f-b11c-4a81-bee5-f677dd19f829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844c52f6-f6ed-48b1-8e9f-1adf26b9d721",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da01ac67-8a0f-480e-87e5-b5207bd7a965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2ab292-9156-4246-b9e6-6734208afb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9816a8c-5c28-4ec7-a7f0-d5ead2495fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d571da2-12f3-4e9c-9d80-d69fd1e9695c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac4ce9c-a1e3-4cab-a1af-6319f6577f27",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d57bb2-5b52-4d4f-8fc9-61a5e67bf631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e49a00-61ff-4489-ae36-e673a68c3fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a1ce4c-cfb1-4c8f-809f-d5869b756c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ac2060-1379-4860-86b3-1c78524c5e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24018c93-300d-418b-8321-a69ea8930d80",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d552a8d8-1497-4295-81c8-7950b6cdc8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37baf9e6-c3c9-4225-b569-9ce3c17565f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb8300e-ef32-403a-8658-2e6cd1aec55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20cf1d3-7178-4aea-85a7-ff523093037e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2141d80e-77d1-4543-8a3c-396f71267c54",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea689239-ebad-4a45-9a51-2323441be283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bce0c61-eba1-46c8-8b88-3191c2e22b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decfe3ed-d85d-408b-87b4-0d8433a7da4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d59ba0a-d7a4-43fa-b436-ac96075bac89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa4cbbf-80c0-4534-8d80-94198eb0939a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7625dd74-288d-43db-b470-03fa4090b9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f3844d-4d48-44bd-a2ee-aaac86637bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1eea4c-29a8-4bd2-8ccb-3b8c3f28039f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd9df8a-dc7f-4f1e-85f2-1efd425970f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d8979c-cd66-4c0b-b2a3-3335d5c7080a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b8ba2f-fcea-43ad-90be-0c479eba6a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57352b10-7902-449c-884f-99b8e8240119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e008bb0-6ce3-49a8-8908-5a63742c04ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "973178c2-2159-44d0-b280-a7b9bfed9fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db00878d-99b1-4ef7-8b57-1a0165275cf3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c9ca6f-68fc-4453-863b-4ed9e391f571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e11896-ecba-4712-9d15-66a942921a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a7d635-ced9-4450-8127-233eded1b81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c968f5f6-cb17-45f2-a94b-f4ff4b730ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be3f3ed-c3ca-4c34-8499-10f3dba14218",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e4c8a8-41b7-4722-8146-f522bc70f355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6417791c-516c-477d-8d6a-74b74093837b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdfc8c3-7657-4b21-8acd-344c8914fba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "703eb2eb-b69b-40f6-a9da-74249a8e4a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856b6ec3-d8a3-4d29-9666-8163ba29004d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1697d8-c039-4f78-8ee7-5f8be57fc30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde45722-3650-4ef3-bc75-23f8b0fb56d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d41130-061c-43ab-a185-fc0c1974b6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3de72f60-cb4e-4096-a48c-935afcfc5bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567e15a2-4d71-4ad8-8b07-406233a36c34",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4e6570-58df-4ff6-bf25-b4c540820c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5399123-eb0c-424d-87e9-907b05987236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c62596-4f7c-48c0-9599-0d98d1204c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb349b85-9a1a-4b5c-b5f0-e7acdfc0674e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdb0d08-f9e3-4f54-816d-f004120cad5e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40440c04-aa44-415d-bb48-a46146a2fbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1b7f752c-8ab7-43a3-ac82-0b6dcd9fc5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861bce7b-e14d-437c-81eb-5b3a448e7739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d26c97-9178-4702-83ea-d0c98667099d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25752f73-3000-48ff-bed2-df3dcf8c3425",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1661bbc6-39a5-4eb2-b0b5-acab999b82f3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161dfdff-5ea5-4c2e-84a4-61bcf98d2dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c4dea04-f3ec-4153-a18d-8cb4370bc903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33b25b5-25f8-4e34-a715-a08889ef13c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ee89b26-5b75-495e-a976-5068dbe44a34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25c4dac4-3914-42f3-accb-639c963d0519",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80ec6acf-9055-4df3-b2ce-1287023fee53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0814b48-2630-4541-aa69-be5601a57b96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31fdaa68-695d-4838-a9e1-54dd2d79c855"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce93941a-6fb5-4e7e-9b0d-e16a7d62075a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87a850f9-5d81-48d7-b67f-9f240bd3602a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c9af41e7-7dc1-4336-907a-d35d74d221e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e31f5c1-f7f7-401b-b988-067b8d77f7f8"
                }
              }
            ]
          },
          {
            "id": "7f859f0b-251b-4e83-9b70-64c9cd1a0db9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1342b029-3e90-4d0c-9bdd-6a94c99a53c2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b4bbcc92-baf6-41af-b2b8-8dac803c3d90",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074e5a4e-1186-4731-bd4e-71a8cc830e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fa2600e8-b826-4e8f-af3e-d18de341991c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fbcc15-307d-44e7-b192-8eab1388dce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c8628e-6e17-45ea-8d53-1d73b448e140"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17fe0381-4b3f-4504-90e9-8ab597163731",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49da93df-9261-4eb5-92da-6d819e7aa784",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "169a7491-8f59-4841-9fb3-ffcbc8d1f11c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3980e83-66c9-4ef6-a9e3-f3ae0e590cca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08dda5cb-1b16-418e-90a1-2154c68c9078"
                    }
                  }
                ]
              },
              {
                "id": "09988bfc-30b7-47a6-b3e5-33e614b39af5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38a246a0-a921-48e6-aa5a-e2af8bb024cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d365c7a9-5303-4591-b082-1b62fec76b37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eaa1ba1-a8cc-463b-8fcd-63fba2ee2895",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e6063d0e-5e13-4787-8837-546b4dcc9498"
                    }
                  }
                ]
              },
              {
                "id": "b4aa5420-21ab-477a-b20a-acf36f2c5f7f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e3b90f2-cf2b-4d88-91fa-7fa9146250a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28a252b7-fd1b-43b1-b0a4-c912c099cc7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45b5a7dc-b08f-4791-8a59-28dd7b6376b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c14dac0-76a9-429a-b2ea-3c78c47051c5"
                    }
                  }
                ]
              },
              {
                "id": "af7a6601-8f7b-4dc5-ac55-19da2dd5ca42",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e751ff69-3003-450a-8abf-32bc7e2f5c56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7eec0662-2eb5-4087-880a-80f992ac0404"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abcdb5c5-6b15-4303-a93f-b3876193a985",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "95430223-cd25-4b49-b794-4d7fbacaaade"
                    }
                  }
                ]
              },
              {
                "id": "58bbb09e-74c7-4f92-a58a-a04ec6996001",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f23dae7-6e73-4c88-b133-f9d87558a71e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8a1f086-0d4f-40fc-9b7b-c8125015d4c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6711ab8-249d-42b7-ba22-157068cc21d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "402563b3-ef05-42c4-b88e-72b776a466bd"
                    }
                  }
                ]
              },
              {
                "id": "b285c4d7-1b6f-4b4d-a3ea-bbd66020abc6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "491f64cc-654b-4314-ad4c-5cdca5d52eb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcf81db1-6d39-4ab1-97fd-ea17c1f2e4fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98a42046-64bb-424d-b180-419ecefbf1cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63cfab4a-9f36-4c4d-a328-12a0b1688da4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e30acab-ba87-4385-9df1-9cda1c1ffa05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c317ef20-e83c-4d8d-afe6-f3a77d0b5477"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3730c6d7-6be1-40e3-9617-133d39aa8c5d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "039d29ba-2415-45cf-9669-9e32c458cfb5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cfd7bbd-9448-4cf0-a394-35b419143fcf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "644ba03e-9979-411c-86f5-5d81351ffc39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c8815d6-9c6d-4bf9-b3a3-d670c6d19fda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de6699e2-5efb-433d-85c4-e87b0a819a29"
            }
          }
        ]
      },
      {
        "id": "9b5d0527-a245-4666-b3d2-2d4d70939f7c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a2af9f4f-e352-4217-aaf3-07c1ab540d3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed502049-4576-442d-878d-11424f4ccf80",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd04228d-9399-40c7-9e88-0a019ecc0700",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72e5de2-fd29-4736-9cc0-09d918f4e012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3341a580-7136-4bf9-99db-43928112b1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca025d3-c477-4f4c-91f9-0a181b61d17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbdff19-1bd9-448b-9fca-7d12be6d8b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bbaa2d-0346-4712-a1ca-327a9540a808",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f070f8b4-24a4-4faa-a1a4-292317cb54ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6209bd-0664-4995-9646-7e87ed8b43e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce9c00f-ce0a-4b69-9b40-4493b2fc1e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a93dd70-9862-473d-8bca-6ecbe0d36c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb83fd7-132b-47e9-86c6-9ed2f357e7e0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e18be95-98fb-4a01-8cba-fac2c75285d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5bd0e7-59ba-4c70-ba50-be03c22db2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb629aca-7727-4ef5-bb7a-c276e0bc11ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "091badb3-7da2-4bbc-a7ea-eee82064a7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1b9fd9-095a-4459-9ef5-969ac58a1351",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15ac3d4-8d0b-4de1-9961-99eefd509e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f574aeb-2294-41b9-8562-1b5606cf7d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1e9b23-7ce1-4d66-8e6b-a84902bcaa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0b1b9b-8414-4dfa-ad04-656da0376be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8722be-d8d7-4627-9f90-fcf73195457c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f919679-dcb1-4842-ba64-8298a932577d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbc90b0-be85-479c-aa78-82b11ef51baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a6fe66-ffce-4145-b79c-ce6db4ebf50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e56402f7-52ec-4a67-a02f-293b16f6f7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683f9376-517a-47cf-a8d4-9d73a131ee31",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbe5965-0578-46b5-822b-e7a7f44d4bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e186228-1061-4bc4-b0a1-26ba7ac13d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e5993a-0949-4b1a-b003-e5b9e4298521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c954ed6-02c6-42a1-80b6-715a737c2c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c4ab3e-1d30-4bdf-99ba-222e90ca9a8f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1391d299-b85b-44aa-aa2d-872a5bd318a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf1f373-4021-431d-aab8-cf72732d45e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fabc61-7d55-4fb4-be67-321da5f133f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cd2033-80b4-4f00-8e7d-a60d4dbac2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32832cb-8fff-42d1-b17e-02c2a5e4ea2d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b568973-8ebd-46db-864c-6be45e5533c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f71e46-1733-49ef-8a24-e1c866b9a2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff1d6aa-c871-4426-ae74-80aed023ccc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "634eab01-7458-4d84-9f0d-35eb192adf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1480f5-09a5-413e-8f48-c0846e017aa7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122a19d3-efc4-44c4-a774-4c0beee7faf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf8a2a1-bfe2-4c29-9b3d-2feb838bb310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817d8347-f4e1-4982-8cc9-3124c9c16252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e1b36e-12e0-45bd-8fb7-3e14f30f4403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a028dbe-c418-49af-95e4-127a8b62e495",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a74bb69-3cf5-4b92-ac50-b975fc9edd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606fa267-ece1-4b81-9050-b3cfbbaca2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37590bd0-498f-4539-b757-1242278846fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e115571-9f63-4aea-ae94-87d988c29a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35603ab6-1521-442a-bf6a-6bce2f09713c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded14019-b22e-458e-ad0d-7d3cf1e708d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570e3998-6da9-486e-bf68-d55b75dc0637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8914799-be5f-4b4a-911b-d543e267d8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a61a3329-dd20-445f-a7a1-c4fce7ca8c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449cc055-49be-4190-b3ad-6b7bd166bf3d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbd075f-99fa-4e60-a8e2-e9a7b5dedff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fa2c1a-7246-432a-974d-c17ada1ee6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1c199f-e060-4abd-b512-9f746fdec4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ccaa25-bcd8-4878-b98e-7dad3bc08378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b990f5f-a1c5-4a20-bd6e-842e8e35c917",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3a0357-ed4d-4ac7-bb1e-416dbb89e635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edcc9c6-5463-4f5a-a89c-57ce5542d51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2125417a-7a52-4a27-897a-69934d336b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "580cd513-3c80-45dd-bf97-a9cc572e830c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1edfde-848f-4ea3-9c97-69be0288251e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf80717-765b-4dc5-bd13-54419ad946c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eee2d73-83a3-40f9-a88b-611c22eb5658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d147bb56-e06f-4d9e-8662-10fb8f8238e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "631f1db7-3150-40cf-96fc-946b3a5f126a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22910de9-9e9d-427b-a06b-cd1c4484e506",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2f4edb-d0da-4256-bfc3-55e6eed24dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d844dbc4-d643-4800-971a-256ab88ecdfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd5ecc2-df4f-43f8-ac7b-a0b47ab65630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b671bc-5991-45fc-bfed-ea812caf8556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8b0789-bcd2-41dd-a61d-5e7171935d99",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df81aaa-881d-4c7b-bf2a-54d2d7c6b4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45cfe5d-23c9-40ce-b7ed-bbfdfbcc259f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a876b94f-f7f6-4d8d-b447-77d957f0c345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f740767-0dd3-4545-bfc7-e2eaa2d17083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c4d8d0-1fcc-49a2-8422-21553b620bcc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8c7e06-7ef8-425a-83f0-ffc7b4438c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60948733-e45e-4a05-8970-7343101e2e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5c864c-1792-49d9-8ce1-a9f6e8c2b49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "70ea695d-e88e-41a0-8e67-68cc5c34398b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88aa763-ad56-47d5-b30a-813fd96643fd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c9ac8d-5466-4d58-8d69-3540b73c990f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef54fc8-d262-4895-b1b0-82d1e99a4d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beadfc67-3a8a-4f58-954f-741ec29143da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "367611d1-5c67-44d5-bb10-c5ef85797530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a3cb13-29d2-4266-9309-ad345960e37b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eeda87-091f-4fbe-8805-7b60b1d9a244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ab1375-682f-4acd-b2ba-a706ea8ee996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd21f5d-9d76-45c7-b62b-f547919a7678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09cebd58-4014-47b5-bf08-c4e12305cda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205627c1-d30b-45c7-90c4-579738d85cba",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bde0d1d-2242-4374-8273-28285c30b1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d8bacc-c048-4439-aeed-08e9ca08cd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c4fb9f-1ed8-4fb2-bf55-69e00638eca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce57f9e-04b3-4342-a472-ef303592aa4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77d7a29-086a-46a1-8578-69648220c782",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6e221f-accd-49ac-a72d-6781760e7287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe8078d-9b5a-4eeb-917a-883455c10d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782f98b5-c362-4fb9-b76d-9d4b87cb4be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eafaa888-72b6-44ce-8ae9-44e4f5900634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd66dadf-a63f-4bf7-bf28-d95355cc8beb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d50101-45c2-41dc-91e5-ebe5620819f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addf8d5e-f01d-4c25-b7ff-501e8607c337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31dc6ec-a05e-443e-a4b7-b95109d72ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abf6a8c3-2bd9-403e-b50f-0f0df76671f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b813e5-1058-421c-9563-4218e4f40b7e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f7865c-bbd8-4d13-951a-8218941c1b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af185b7a-c27b-496c-81ab-5aec05ba8dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30014b2-4e99-4777-8c7e-d3d30faf1760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d01e7dec-ea2a-486e-b32c-e6bbc2bfa9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1431f3ef-c028-4f76-94d9-b13f80673ea1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8f2c67-1632-416f-a773-4b841eccd0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcaaed4-45a6-4223-8517-468721e38fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab7bac5-46fc-4a76-81d2-aeb709cfb13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7e593b-1e8e-4fb6-a207-14ba54bc1efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3334c9a-7afe-4c72-bf8c-3d1ecf59ab1e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2f90a3-82fb-4d44-a5b3-02f03740a5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1539be-80c9-4bcb-8aec-49de49ba71bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff96b02-9454-4686-a6d5-95575b45a963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7afdf546-81d2-43f2-a7cd-0016975966d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadeaf95-7e93-4d0e-96ca-8288e4f304b2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aaf8b34-96a6-4ce4-a3a4-c7a9a9eba905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc7c435-e327-4ed7-bf55-b29c1711dae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c71107e-bf52-440d-ab07-81945f3a41f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25127fe2-c6c1-48db-b472-431dbd91e75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352dd25d-f12a-45ac-b539-a86417e79f75",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07848d6b-0efc-4018-8f97-110703b4fd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f275e663-8470-41ca-a793-24d1dd8be4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965c48a6-01a8-4355-bec7-eb06a8df63e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f50515f-e2ca-4572-8ec7-553fb55d57c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5f36f1-dfd1-4254-87e1-db4e37fa9ad8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d506b46-2bb4-406c-ba9a-d1e656ea5154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896e1569-ecda-49e8-985c-727205273951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7cfee6-e28c-451d-99e0-c13ee44d4427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abdc7b74-ed19-47e6-9c38-3ee92e8fa280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bf1a61-1dce-48d3-ba01-9fee52aaab71",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3660997e-e024-43cf-be3d-3e45ea9ba7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbfb2bf-263f-4120-bf5e-1449fcd744ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8680def3-216e-4d68-842a-6478f9ebee23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "415789c8-571f-4f6a-ab58-020e09ccca70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f42843c-b19a-463d-9ea8-dd7942de388b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a6ceb1-8bd4-487f-a7d8-e9d605d88227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ddeda2-1fe2-45c0-9305-0b2c141e7d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b16f558-3f05-42b5-9cef-4b051f26215f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "080410ca-62b8-40fb-b3ba-a6756fa229b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3010ef3-52ea-4539-ac0a-a263e1f17817",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f4ffd1-c51b-4c46-8626-47489ba94089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4919d5-ea62-427f-8131-943721749b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3048db-b55d-4965-84ea-16fcd500d73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1378b99b-8a72-40db-91db-963a8dd76795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e147343-5dc0-4473-bab1-d458a7bf194c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a98702-5e84-444e-876a-e06b17de868e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1296ace1-0927-4466-a440-e45eb3743653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a74ebc8-c52d-430e-91f1-65efa4170cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "304488dc-4486-4c73-8f60-de9a7151be31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27743600-c4cf-430a-89f3-05ffc5f6a404",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db47efc3-94a0-4621-8ebe-55896d562a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e06c33-24c9-4f4e-b03a-70678098a6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bf71d5-7af7-4f84-8082-9937ca9f3cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdb0cee-7c98-47f5-925d-1ae50489106c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a121929-4a43-4546-a34a-cb47f332928c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a04458c-ac7e-4dd8-b720-b0b0b4290a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8073076c-9b49-4688-8899-20e74182b4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d78c0d-12a9-4f26-894e-984f43892674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc71eff-4ad1-46f7-a560-d71a23210e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e34dc8-567c-466a-8305-f9caa9d13b64",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683af39d-893e-4d93-ab22-0354a9f2cc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b75451-021b-4c28-9741-90ada0e3be35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b39ed2-97fd-4a68-8610-5a178fda3cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77fab97d-bd45-4c8d-8628-4e9e7026814d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2031285c-49e8-4821-b616-e980409b60c7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4bf5f8-cc6f-47d1-b622-851aab5d1aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee48d7d2-2f9a-4dfa-942c-92e670f52f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debbfe14-6072-4aac-818c-fdf47b09b204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a24505da-4f7d-432b-9ecf-28f85243bde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2263507-e8ec-4484-8019-4c1a7641d817",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e39ee20-90c0-40eb-8662-f828bca9b922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f2ba71-9b76-43e3-9274-7a97173dc3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853a508e-d402-4dfb-9e32-d782f358232c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7fa7692-6a8d-4bba-98b0-98392a8d9255"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f65d6b0d-8ca6-41a0-9d1d-ed76af94330d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f1576cc-e954-4be5-b19c-19243236bb4d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad68ac08-d379-47a0-8f7d-926a5d59996d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "26b043f4-e964-4c82-8bbf-cdf2080cf451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836f8b57-6e53-4f21-9c3d-116cba6bd66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fecd09b4-3105-4ff2-ac99-dbd75bdee7d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "452adeae-9992-4d6f-94f7-5b86b6b522d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d21b7c76-7721-4c94-ad6d-94cb0cfb19be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f36e75f9-bb80-47b4-9e1b-680ade1dd236",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03aafe9c-b992-48bc-8925-d9d151a84cee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed744618-3361-43de-a9eb-e27b7db82842",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "88b8d7a3-b31c-4113-81be-8d95baa308fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eaf2d5e7-a33c-41d0-86e1-771f77f35d72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e541e978-1640-49fa-b407-16a54458693e"
            }
          }
        ]
      },
      {
        "id": "9a24f630-9f9a-420c-8d97-a01ee453fe21",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f4fb8e68-142e-47c6-a121-a7fbe01e38b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de9d34b7-a0bd-4fa7-9698-2537624cb50f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bed0f81a-0599-49e9-bb04-01a43253601f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab01dba-b505-41c9-8a4e-55c8c7f13cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0456eab-9168-4769-87b4-b1ce00c391f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d314fb45-6ccc-4a5f-8062-d7d44d4d0f5a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b138733-979a-48bf-8096-f8c3c31d1874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be626135-d0cd-4b62-af71-730bd199f179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed22eb5-9165-4738-b031-60e03b9bf652",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b4bfa4-4150-42e4-8328-19290039e40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29355847-94a6-4958-b9ca-354d673a83a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a040c713-5449-4889-90d4-01651eb98581",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62421e28-182a-418b-a926-9b70e06306c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d01217-cbe6-4441-9f80-d3665f51dc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80933f3a-1122-4ca1-a12c-90efedfebb1b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1e3dba-c4f5-445c-8ef8-efb620ce7ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efac5e56-cc19-4619-a04c-767a07b46491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95324d26-5340-486c-aa7f-1c7289b12a05",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3e4ff6-5217-46b9-a72e-c21a11f50eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3414d0d-4d41-4729-b75a-4f7e3a7c1cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a181e899-91b0-4df5-83d5-6b4f2c676a67",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed50cfb-cdf7-45a3-bf4c-415fa84dd479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05139dc-a199-4bc6-bc7f-e1f40af04ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136ada62-5955-4d9e-94dd-810ee7fc0638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6f09b1-2f26-42d0-8f51-bb1c38dda798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107fb503-0db5-4dc5-9762-a3be6f1676de",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3196b2-30b1-441d-8b9d-a531ddf715bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be83354-5e8c-44f7-b921-03723b973590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f68182-5c3a-41b2-8e8f-91f67eacac72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a95a5b9-7d8c-4dae-be3d-665a875d983c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3be7f9-9d34-4e66-a64c-88099ccef315",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2000c6c8-13da-4056-b94d-228fb3e67d16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbbef852-ee70-4fc3-995b-2f1a04a73918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f101401b-d1cb-422d-b653-92ec1b3e00f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29087a46-1064-4693-a5c9-dd3b7b5bbc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77eacbc1-e83e-4de2-8141-40288ab3cbd3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb9aee4-642f-4811-a38c-c1085187569e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b819cb8e-4e67-425d-86e0-5912edfc8df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec468cd9-089a-43d9-be57-ca656e6887a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca625f63-5846-42e6-a11e-883fe3cc3a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a733e4da-bd2d-46ce-b8d8-5e0c90c49ed9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4685d1-8a1b-4175-956f-7bb9a7d73ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9a9be2-31e1-47c0-9eaf-04b6e9d53703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec546adc-c6af-443e-9c90-060239303ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8708c433-00a2-421b-aeb1-5ef5249fe325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4e0b3e-f1d2-4719-a814-eff85812dad7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88efed6e-b19b-4cfb-9d2c-c1d071efd1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ede6f72-1d17-4792-8a0e-135858751e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786e2d78-ee43-40ac-91ec-51e9d3f6c8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda4ada4-b4a2-42f3-9ccb-ab89f77c0658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4e13aa-8cbd-461d-a58e-532faccadc3e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec451b9-5982-42ff-b222-35fcff3e9193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e398bae-c6bf-4be0-b1cc-d29577780f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa5bc5b-fa65-4673-9d9c-03e957bdf82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cdc4d7-3777-4c7a-ad3a-85fc7d47d0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9936247e-338b-49a8-a1b5-3dcde38e0c77",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647efdbd-67f8-46d4-8fe6-6c5468b66fe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdf6e028-3e38-4fec-a2ea-9955d78a450f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca2842a-4907-43d5-ae8d-18716fb8b4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a62bb4-cfcb-4e5d-af9d-b71e2b065995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9683beb-ebe4-4b45-b692-ca0f55c1764c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4f815c-d337-4026-958e-85265bae5d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e67b55a-0534-4856-9256-af66d7e604c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8963cf-7625-488b-b9d3-55edbcaf790e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9bd0fb6-1dff-4722-8a2a-356be960961e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a292c0-a593-48bd-ab0e-411437aedcce",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb5d1d1-979d-4f1d-aae9-9a6aff0e5672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46880fa0-3b9d-4b46-bc07-9b7f9e4863a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56df713e-40c6-4993-8539-b7da2f3a109b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e243f1-b2a4-428c-90cb-8ce04bcb08f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28341e5b-350d-4643-b78c-49aecf2c8350",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0749a9bf-a5c6-4016-8097-f2da4acfef6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbfe229-8126-48a3-a887-19f398300db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5fe502-8498-414d-aba5-28bea54c3df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d57606-3211-4e4d-9ac4-379d987c89b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b217cbe-eabf-45e1-929a-c848e4f733ee",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b579564-f31e-4a00-a26f-ee4ffb2264f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda9b63e-9c85-45d3-882d-22b354be2e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dc0eeb-3392-4755-a3ed-e51ee545d8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202cd0ba-e3ea-490a-b631-ee0e9c3d0476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e38554-eb00-479f-b6a0-8659301682a0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bb4aea-1ddf-429a-bca3-017446cdc164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec625170-1237-4152-a104-962177353907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf61f5ae-6240-4618-9e74-6474fe69b561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3cdacd-73eb-4b32-a64f-a0c84a129a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee818639-d830-4fd1-9d77-5a623a69b28e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6b39f2-9133-47c1-844f-59250dcb42c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63271a35-b1cc-41cd-b242-9d86eca476c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b87d55d-544e-4b9a-b3ea-e27dbf928a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c69dc0-0dc9-4bee-856e-0cab848cc649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997ac43d-0ebe-4dbf-89c0-c1279bd87ab4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e130b4-2bbb-410b-9017-1664677ebb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea7e4f1-7aa6-437c-a98b-d2057a9ac1c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95555e99-2683-41c0-8300-bfc1cc38b9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a2f77d-7eec-4fb7-b430-a4d2bf9eff7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0ae596-823f-42c0-9543-255bd8d30249",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b046d15a-46ad-420d-9f42-7be498e6a515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d02f7c-532c-4553-a627-fa2ca55085d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50d7602-a999-4e9e-8ae5-70510d1296a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13946d84-26ed-48cb-8ce6-a45cc44ec3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98779b9e-fedd-4ff8-a939-ca5f3a3b89f8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dd9532-4dab-4337-a990-ddee92089667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9215e7b5-4761-4ab2-af22-4f3f79f9a5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba7013a-9bf2-4144-957f-e9773a51787d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b0b299-515a-41c3-872c-3bcb51a178a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494139bd-7a06-4831-9820-b2780797bd26",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6f562d-c07a-4666-8fe1-cde3fa5c6b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62bc1e45-47c5-46f2-bf43-48d8920bd830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea639570-2cfd-40ce-bd1c-b9100fe7fb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bf3ec4-ddca-463f-be3e-9f5659ce754f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f21c7a-30b9-4263-9c47-1ccf245f1e92",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27624275-2c56-4756-a6ab-f20490a1fd6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e3dfefb-a6b3-4c39-bba4-da164654bbda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d37a4e-dad1-4368-9943-531980312896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ae33a1-15e9-4326-ae43-ff086682798d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae310db-81db-41cc-b559-54c96edeb836",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ea4e4f-247d-447a-a035-6e996545e2e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8784ae9-81f1-44d8-8a53-9bd3b071136a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89e6eb0-006f-4719-868c-a3412cfbcb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462b4e82-b651-47e9-af25-0a2b98303c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f0ec7c-6dd7-45d8-9e61-46aed7f4fbdd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4c15e2-6d57-4e92-bbc9-172e10098479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f90a5029-e711-4019-924a-f7489932dbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e301c88f-a246-462c-9ec3-c30cb231e496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130ef4f3-af0a-4625-8469-b9fc15edea9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7529f5-3a5e-4563-934d-e4bd722d5a85",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdaaeec-d8ab-4c90-a26e-236ee9702b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196ba05c-a094-4d0c-9c0e-d25ef4659f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773fdeda-b02c-4ff4-bf4b-4bd8e8943718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00007508-9adb-4cad-a58b-5bb613a088a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e50a7d-0c14-464b-91c9-aebad5030360",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078f9de5-344a-400a-914c-2750483e7dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42488f9a-1636-40eb-bf08-4ab48c51b934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615b94a5-8637-40fe-a99e-32e337c77745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5788fac0-1ac6-4bd7-8cc6-aef67b205bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f506217e-8142-4ff8-b01f-638b47c53880",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98945acb-b114-43fa-8080-9cdbd0854cd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59e32cdd-34d5-43d3-b999-846f2745ef17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3f5b92-1975-473e-9ced-dd85290bdfcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab0a48c-1983-43cc-a575-b6e6980b0175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b010bbd-da78-4ea8-8d40-81b0a9b40c29",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f98c97-2c41-4663-a7da-385476465839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b88a5ec9-837e-481a-b11a-8e4f58ceedc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b26e7f-5e3a-4016-bd76-9e350a8296dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa0c11e-5ec4-437a-ad20-bd13c0c5ed70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2e28df-34b4-4569-b399-867a9c82414f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3a6767-6825-4969-9044-6604f925dab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "500d793a-0df6-44cd-8111-2eb5eeb1b5cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d04186-b87e-46af-8fea-1484948216a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df641c0-6f6c-4942-badb-6f46396eb469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1275c48-af91-4d52-9de9-4b1ae50f4ea6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ef98bc-8ca0-4295-8e21-394078c112f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63977b1d-5fe9-4a69-97ed-f89684555fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c594e15f-ed1b-4f74-b9c2-f837dabfb14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00804f00-df73-4a9e-b6bc-60050e430db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a592bdf-c28a-4f05-8331-171323e72afc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3bb657-bd7f-452a-a762-78de60324135",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bd7095f-08c2-4632-b6e3-a47bdb81995c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd99731c-f6a7-4183-ae22-c9984f5fa0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d54d38-d429-4260-a91c-8287a2a3013c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdf56b9-f703-4a92-9fb8-644a70a95f9b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8f4754-2a24-4213-b1c8-b0d0566933fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39503ae-a009-4a62-9c7c-eea0854b284b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eeb316a-40c4-4ed7-ac22-2f550fd344f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077fcd4c-b655-4f53-bf17-e10d5e30c986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64386728-4462-4923-b0d2-194fb7e7c644",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3a1635-39a1-4d1b-9196-0c7a6d427e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3058e1-2681-47ca-99aa-ad8618c16fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514ea6a9-3a13-4804-be1e-a38b20f58bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76623208-760d-40d4-a72b-e2d964e1c338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bfebd3-00c2-4551-ae83-9402d25a98f4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306d43ba-9129-40a3-88da-92e32c4f9aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4261504c-223f-4601-a93c-c06ee439a1ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b41cb0-9071-4f7f-bc6c-836eedc21fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216fb8f8-0a0c-4216-bb96-0fd997ea27c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3a0bde-09cf-4856-b7ea-a16f6a33351c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b12194-b6b1-4fc1-9c56-56fc4efccb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fc0559-b6ad-4fb4-a5f8-8e2e8247f12b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22b0f99-820c-43bd-aaab-baccc162b168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1540ab03-44f2-466d-b5b9-679c61e4cee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc524195-eed1-4a87-b206-05c4a408d84f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24d761b-6e25-4d51-a769-719ac993dff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbb1a26-6a1b-4b25-b04a-9d4cf0b5706f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db31c0c-b169-42fc-97c7-e956b805ddf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2c655e-be89-4f33-8c43-6a76cba06e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a77c85-d88c-4a65-848b-078b18c35e7c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2559f5-bb5c-4851-bd71-a1a1f503a6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d074a4c-87ca-4556-8f8f-5de817828d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b8f5c4-a011-4490-8d21-f986f5957929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4888bfe-877a-489a-b069-74002f3f7e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e19ec2e-0079-4bdd-a12a-03708a894afc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d550773-e89b-42af-be2a-129087fb55fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70688f68-4cbc-4090-bbbd-316a50ba5fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305a944b-9461-4716-829f-4b6d37801734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0a44d0-501f-4cf5-8f19-6cc62e47d494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee63fc3-0b7c-43bc-a595-472561470a54",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8982bd-b0ae-423b-9ac5-c395f2748cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f6d88d-67e2-4835-927a-bd855aece025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b189bff-ea16-447a-9f6e-8670a60794e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb23844f-f049-4981-9783-a36d89ae501b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e30550-0122-45f7-8653-c4701e243056",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0808cca-feb9-4132-8d30-d02f678c10f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174d0aeb-f48b-4759-bfb1-318639f09602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0afc27-db78-4cdf-b0f8-92d7b1fa3420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e119be61-81dd-47a1-99b5-3c7c8e053ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8534fdd4-5b44-4b16-888a-b6a2983bbf70",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc36a842-0cf9-4ab1-83db-7cfb2dda6b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b505050-7765-4b5f-81aa-7be557b0d199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c1a656-8334-49e0-8439-41bcaea6f1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2b7bbd-ee3f-4aeb-b692-ef0129d102c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3606df37-1412-470f-8368-4a5ac9913657",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3006ab0b-d04a-4d57-81bb-15b052268a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df064428-71bc-4888-bbcb-f56edf005b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86064bb1-886f-4f1f-a8c7-133366d2f04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdb107d-af23-408a-8ff1-4d859fb00c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87138545-04b8-4f40-875f-be379b05270d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc5a4e5-1a1d-46bf-843a-da0dd6bf0f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ed07b9-b741-457d-9fd1-9185a6eb192e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c94c65a-91ac-4bb5-a664-1942b8f1befe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d4b227-0934-4676-9563-27999f4726b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00281f4b-0ffd-440e-bf98-5d15958bf9a0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515e59af-5dd7-4ca6-a05e-0d842813eb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af66c50a-4515-4d9f-a812-68b8bc79daa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb2bf02-973b-4ee7-98ad-2ec3903b4e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c726b9-9cb5-44fe-90d4-2c27fd71e352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02088ad-16f9-4bfc-b7f6-639d61d700fc",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7790c9-41e9-490c-9661-77a968e912fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3f6c2f-61bc-4976-8f61-70a27fb03040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2542de8-4ffa-4234-9d17-5cc5987a149a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7eeb46b-1403-402a-9086-65a0594c740e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a9a8b7-7205-45e9-8ef2-874406b24dce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80adc38-fbec-4306-afcd-ca852c848b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326fe709-836d-4450-9eac-1b7b8f036554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08177dff-47db-4568-a8da-390c8e400cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5deea71c-52a2-4f9e-b462-f19fc78fefd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed330b7-0f97-4866-a240-d38510dc7775",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73f9649-33a7-4191-9ad1-64a4dc5a154d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161bdf5d-1cbf-41d1-9493-d25a968c3e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d7770d-5fe0-4a4e-aaac-a3af6ebe3752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed1e231-1d3e-4ede-b810-cc7260479a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fef61f1-0940-47a5-a62f-3911b9573ca9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ba22ce-d2f3-4950-a255-ad844abf192a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5038c871-8125-4f50-b589-a36e1674f678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e99cda4-b86d-4b3f-b399-0495e7c39e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720e4576-dde2-486a-bd17-269c38096b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112825ec-48af-4b18-a928-5c4e508cb078",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3192f258-3be7-45b2-899d-88dd72265428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bff9c3-a7bf-48b4-8b18-cc94277f4ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc57e54-15e0-49b2-beb3-b524e0e91e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21aff9b6-471a-4a9e-8aa2-0797756e259a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfa8eb7-215c-476c-a153-f0cea3896bb3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828c93b1-ded8-4e10-bf56-ead97c9a51f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4eca367-a8a1-4f9a-ac54-274a55374047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffee9cc3-1a17-43c4-8d9e-98c1df74a242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebdd06e3-2d7e-4ef2-a99f-0166e954c635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c97b754-c915-4e74-90cf-f32242e3d724",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7526992-801f-419b-884f-9f2ec59ca0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb4e093-537f-46ae-8e74-440ff78e405d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349af4d7-486b-4000-9a9c-6a421be6743e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f3332a-dc8d-4774-b303-85d834a68224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97926f8a-21af-4709-9964-d07cb9958f68",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5c90ca-e775-41eb-9ae6-ba4fbda11a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73113509-34fa-459f-b765-1090aea4200a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c846868-0d53-4557-932d-c8793a1faf1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36993ab0-ce07-4496-a2fd-b602a2499982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17eb96f0-4903-436b-9d91-d791f7b4af3f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec6bf15-2631-4db8-bdfd-65230fb44cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cd724c-9855-4a79-b4c8-d62a49459df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0004b80c-28d0-4b59-bf62-f1e1b64b41f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f9dba1-942a-42b9-bbea-a704284d2888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7efe958-82aa-4950-8ce4-2266b867cb2c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f8f0a4-c240-4b2c-b7dd-be0a7b4e99aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b500f23-148b-4d36-97a1-292fb27d451f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbe209d-b919-4511-97fb-81e4d07513c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bddd138-4ad9-475f-9fab-4eebe72bd016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a35f22c-1d90-4e2d-a161-17b1b0ebb735",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e2a2d2-1ec4-4193-a2de-be5c4a9920eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cb39cf-4799-4dd1-b136-287d27315a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20446397-a1ef-4771-a74e-3436b626de6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b5b916-1f34-4d7c-838f-b8b469158c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef33796-1519-4ed6-8838-174f6d06d5dd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdcbc0d-b36c-4a64-b8fc-a0da6007b990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fde465-d87a-4a40-bd2e-9ae1d170a5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f942ca64-f49a-46cd-b689-7f201de60ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2925f615-46cb-47c5-bd5f-534ac419e663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2969cc1-8fee-44d8-822c-d41e2293e90c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d64566-ff04-44a7-af77-81df2b9574f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6193cac4-ec9e-4458-86be-d9d2ccd26df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faeac6f-ded3-45ca-a723-9f18babb2d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83acb5c5-80e5-4c33-88ab-75ffaa07c914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5676b9ef-4a62-4bbd-85f2-fe4274a1d10e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83ba50b-a62e-4c57-a669-a8842d2f6f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47530f87-8e0c-4f74-b903-74b5ed6d87d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f22d91a-9b09-43bc-98c0-85d7482568ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7148b0ee-5ec6-49ed-9258-d85d252005b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6a09af-5800-4d90-92c0-6d4aa4ea0044",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970b9b60-c92a-4e47-b681-79641ae6128a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858b3413-d3aa-430b-9253-3cd72c09c88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f37d89a-dab3-4ce6-a858-feaa729ad471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1988cfd-fcdc-4e57-828a-e87af7cae6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79925cee-9378-4779-b069-16d03a05cb0d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bf8a1f-9659-4d3f-a96f-117fcc70e20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42430a6-19be-49b1-9969-895278c2017c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255e1364-f92d-4d5d-9087-6ff426c6ed62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f22543c-0f15-4599-bed8-92cb0419e1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87804519-36d7-439c-982f-edc777716532",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c0079a-47f7-401c-9503-50e81019dd85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e4a56b9-5135-48ae-b528-171a72484d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac7e2ba-be05-46ed-81f5-04f16f58a8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8dfb66-4283-4343-a67c-dbab1c3ab63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c553474-69e4-4819-bdc1-0992f886f532",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49763209-0f23-4b4e-aa09-dcac67a2df74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2923c95-7b77-43df-8e6a-86650fd250db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ee8656-c0e7-4913-806e-e4d81729e84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d98791-ad6a-4cf4-9692-8eac5da1c3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3c7093-e5bd-4e5b-9fac-ecde3f63509f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3312426f-e43b-4f54-98fa-dc1daa72956e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c9834a-6619-44ff-922e-6b31b9250317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d08b219-80b1-41c6-80df-3e74a7926e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39953f35-3317-4ad2-bfd2-f3f2ed250be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460df54a-b08a-4e75-8fa6-99f8a716815a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef4f244-df3f-464f-a6e7-4c97791e8ce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d311f6ab-0ddc-423f-b963-dacf8eb02507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b185f9a4-ad45-43a2-a570-b85c596beff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac2865b-74fd-4827-a76f-86051a734743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695f2dec-c2c3-4edb-9e0a-572d08ec9015",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6f3166-b8f3-4a66-bd6b-921832721bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "483e8293-1cd1-47ce-a283-e17f096c6242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ef9dcc-6b2c-4cdd-b08e-54042a2fa9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221e3fe2-b2bd-4b80-ab78-f7868c5dea19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22efba83-5001-4920-9cc8-2bcc03430a25",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8683f1-773a-4086-9219-521bbb2e9297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a50b35d-d94c-4076-bd54-652187e94200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71f060b-6910-4ee3-a971-0d674449e5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06bfd32-39ab-4da4-a6d7-c25236c916d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9f6707-4d9d-4b9f-ad67-6d688607d644",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e1c9e0-152f-453e-ac87-6c1bdb9be068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da5d854-444b-4355-89ec-ab226745ee94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40de675f-4f38-4939-b7b9-a42b96088484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430867a8-83af-4479-91a1-b7ebc89c2d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28872b4-041e-4af8-8c19-9fab2dfaf8d8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2e9d34-8683-4cff-8cb7-477f06acbcb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b29b38c-48fe-4618-94aa-d8321d79ac75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42b2cce-58fc-4169-a395-be7050bfccdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b328704-07fb-4a61-abcc-7c7ff85884b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8488c5e7-316e-4eae-ab0c-39ac3fdc03d2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5a6151-bf38-475a-a7e0-acd38d9847cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "416d2f99-ba3b-46ef-9f6b-bf0839acb4b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61631328-a3ce-441f-b68c-bb9648f7313d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5f2ab7-2c0e-45bb-9b90-b9773ae64402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e5c2c8-2ce1-47ad-9b92-daf576403064",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa098e0-fee6-429b-bb87-e3193491e564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e59718c7-223a-4f09-9e3b-3151895d92ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78211f78-af16-448f-b8a4-0c7c90ad5e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc515ba-fe56-448e-8465-0ebebe0d482c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f400718-33ae-437c-af97-6be2796e2b57",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c1324e-720e-41d1-9c0c-6b1215209a55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "231fe55f-8b02-4b77-b45c-f2db1fd9fac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0c3626-b06a-4acb-94e1-0b8083b78d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc04b5a5-c78a-4943-b158-e91f56ff834b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0963ef-66fc-495c-89c0-862ea8575883",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4c3bda-ba11-4530-8e04-4ea65c98b1f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f286cefd-2b3d-4ea2-89b6-151ef03d79aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d002e1d-1959-48d1-80c7-b3ee0fda501e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0112c602-5689-49ec-bacd-69b492ce7f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470b47f8-5501-4997-b21f-8b5587dda16a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2e2db2-5576-4a76-8c2f-5efc6e6ee837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6fffd32-80ec-4543-a124-0b82b76b1ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f96804-04e6-4aa0-8d76-c9755c704f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3c78fd-41a9-4f23-b248-0225176f51e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dca5ea-2acc-4c9a-9a4c-05d84c69b1e4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb5a6b1-f632-4e85-90b0-0e9671e21824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5cf6adb-fe37-4b23-900d-7f195568117c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f05142-87c8-4357-bfa0-313193e65d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f037ce4-199b-4811-b4d9-f5c05405b29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e53adf-fbb9-4cbb-8ca8-5b94668e11ae",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf4ab9c-ef8b-44b2-b951-88b1374681f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72668a0b-e69d-4d38-9eb6-7e4d5050123b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8912aa-bb14-4875-bebd-3916368d3dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd5083d-50ce-40d2-8937-cae02de63456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14824106-3199-494d-aa20-63e4627a2017",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b6f313-81e4-433c-ba87-47de93ab587d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e999241-7173-465d-b55a-6eb2b3463611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ccfd96-e66b-4260-80fb-51b424d97bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7edd4b-06bf-4698-94ef-4168ae296361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb8d3ae-1191-465e-b0e9-836889a2cf5a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a2e902-924d-491f-a55f-e2f7384963b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a9c7781-b27e-4498-ae9e-adba2f48cc82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfcd24f-bcd2-4bc2-b331-239bd4fcf1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0645d9e8-3aeb-4e97-8d59-0a630deb4866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cf79a6-461f-44da-999a-d2ea421e6b96",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74fec97-4d42-4d62-9e02-811677eb1328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eead8d8-c23f-4eba-97d1-8345ec74d017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4597800-45ef-43a0-8920-c0e9f7991dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b03ebc-36d7-4fd0-9f4e-08a6a8e2bab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85638afe-190a-4df6-a414-5670a1b87a31",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c14c115-4b84-431e-b913-8ff27684a98d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a74848bc-b563-4aef-93e1-5bd2f26a07b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37766a3-e068-4378-894c-a0e912614972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dd7787-8049-4169-b68c-27f1d1fb341f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b18d53-e507-4f30-891f-163625cf8804",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f42444-d33e-4ebf-969d-012fca711152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f799b1e-3230-4705-a816-e887db439c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df63b19e-beef-4a60-86d1-067750c3d29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a392e985-1c62-4a27-8c2c-e17e00fafc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaab43d5-78a0-4648-97c3-cbb805de3d71",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa262baf-647a-4d76-ae07-917a09fc889a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f154759-c864-4c17-8c92-5c9bd49e5697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc09b52-0e15-4a0b-b986-3fcf92c6234c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931544c0-a0c1-4fb0-a719-4afcc03b8e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e09c3b2-71d1-4591-a7f9-5b51351d349d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb20489a-e112-4ad8-a9f7-6f964b1c96f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a01e019c-f372-48d5-9ce2-c0bd6e207985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcd8514-ef6e-444d-a825-5c0b806fcd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557f419a-e76b-4532-9c93-ec8d10c897bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac13e36-37a9-4626-837f-7e99373fe3f5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6111207-24ac-41ea-851e-73bbbe0deb3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18043d2-c049-499f-a507-a789f97e3eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13143533-3018-4485-8507-d6a6f58e2cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ca11ef-2265-47e6-b35b-01ab69c7433b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0122b060-0b7b-4f92-9efa-6eb7b7b8731f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59e1ef8-d2ab-4f7e-9a86-d08521314883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f2043b0-71a0-4a51-9a5f-289ec742fd20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72687a7-57c9-4df8-a5a7-cba64ee39273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c28def5-fb85-4273-b943-a84e95279559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9fadfc-137c-44a6-8969-f204fd19dabc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e290881d-5b59-4e73-9b22-0df7bf7167ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a43931-b3e3-4553-a8bd-0544d47bbf83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce150aa-ce80-49c4-a6cc-bfced05b4160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec097bec-3ed4-4e95-ab51-ec6d653d3543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb805ee-4091-4a83-bd9d-095635225c87",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550ab759-b10b-44cf-be5c-87cdddf0de34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fbf6f01-0b0d-4fa1-8353-19d83c79e313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e8f9f2-4695-42ef-8e78-b10f2f36ef85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3b517f-1ee8-4495-a06e-f492f574df61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665b3185-3394-49ca-80be-3355027745d7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72663780-03e7-4ccc-9a82-820e74b61176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e29a084-6fbd-4d62-aae0-327f78da8fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbeafae0-f174-4625-ab20-82a1dcdd255b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9eb124-0e94-4a56-af9b-1aeb09020078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e56bba-f776-4310-8333-c9dd6b6b41cf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d56968-ef1b-47c8-9302-35770ebe4c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b8a48f2-0f01-424a-babe-c0420a5a7eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5665639-eeb5-4b38-ad7e-ada98a06894d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062dad12-05b1-457c-a6b0-b1b3fe40a625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427a3e37-1680-4030-8f22-9b4a65e772b8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2617b607-d072-412d-be1a-e1e8732834af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba2c73ac-d9d2-4d96-811b-68af665f613b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1876e600-d219-477a-a82d-093751da48a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25eb03c3-2fa9-49a6-9366-a27072e24a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f00c21-3e6d-4277-949d-64268c839adb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1182da-0a47-4cc3-9c54-af5b02a4fee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60665d0c-011e-4099-99d6-5ac4ffbfe4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e142538a-3815-44ce-a48f-466480fb09c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8e7ec4-58c2-4751-87bd-085cb3bdad29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e1e795-6acd-4b5a-8f31-bde01503bdd6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15430e02-1b99-4e54-9533-4be9d413b006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9b5504f-6854-48b6-8442-415f9f373806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00f8266-2729-44d2-a103-94dee998583c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d024462f-fc3f-4f92-9072-71ced75720fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2b1e19-d5d9-4aab-badc-32f1c8a640c2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2225d2-25c1-4c21-89d1-a8508110a8d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deec446f-8948-4ebf-94d9-1c085ca0ade2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86c8cf4-b6c6-428d-88bc-bc5864052579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3a1eb7-7411-4db0-9c97-b7fed22e576a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0440759d-aac3-4f26-abfe-15fe22e3988e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d55ec59-96ff-49a7-8bb6-9d5bf1467e1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4436417d-3fde-43f7-bd4c-05ed41c46c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab11b0f-2c3a-4356-8a30-3b91d4d6b7ab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4c138c-13b1-4529-b2e6-b82ce6b08fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776975dc-6781-4aac-985c-152674771074",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc64d64c-75ff-4c74-81da-0660bde382db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63ab413-d813-4e96-803c-2295ce60cbec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87be8ceb-acb6-41e5-8e33-8f72db3c0295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72eef2f-588a-4a0d-974f-5575e9cd5d33"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e79d8c1-6c76-4e8b-82af-6659822449ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76817eba-b084-42d9-866b-dab68abf18c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ead5e56-8345-43a9-97e8-ca86d09e8ad0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8afe532e-8d03-44b4-9620-281eb0d04541"
                    }
                  }
                ]
              },
              {
                "id": "d31fa6a2-c4af-4841-95b5-9f28885269d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16170578-f576-4ead-8d78-956d0400e371",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de29172a-6c08-4203-b8c0-5949d56584b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4a7a0e05-ce1b-46b1-9f18-6dcf3a76ccf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09057071-2431-4914-849f-7eaf2f3d2123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e11dbb00-6960-4d3a-93cd-8a6ffbe8b36b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e178db8-752b-4bf3-9b00-d19289823c52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e37acf9-89c0-43a4-888d-8b59dff2aec2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36520f66-d836-43dd-bb02-633fd39fdf80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4323209e-4b0a-4e9c-9f5f-a3acd820fabf"
                    }
                  }
                ]
              },
              {
                "id": "9a3d45dd-8967-493d-8bde-518ec4881dc1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ae004d8d-0332-457f-96c4-36cf5ab49791",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2baf2d4e-e11c-4b6f-8ca7-4e13a52041cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "16bec21c-73a2-4583-ba49-786b2ae5ed95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f4d98a-c901-4739-a413-8076aaa6c4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82c6f7b-5cd3-4f45-891e-6c01e281e181"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e20ab9fb-1220-4c52-8201-876e1caffed7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "627b15e7-92be-41b0-b627-74436b24897e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "299014f0-ae44-4ba0-9b07-1a9e00060613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b5192c09-1c0a-4e85-afb0-fd78dd412f7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73caf471-6ef5-4e57-8da7-ae0c93fb6c3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85021743-b1c8-414f-b7d1-9ee9a7f1604e"
                    }
                  }
                ]
              },
              {
                "id": "21752a89-2137-4bbd-a113-ad848ef43ec5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9da94bd-368c-48d5-9088-289f7bdd1535",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "01f9a746-985e-4398-801d-f4f73fcb78c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8329f5c-d084-4889-9b3c-b741896c0452",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c049890d-e86e-4291-a549-45541d6de2e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82b08e3b-c496-46c4-9452-62f847b01a47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a0900a14-0b62-41c3-be84-2ba24b15b026"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "deca3a1e-fecb-4cc3-a17a-5e256aada10f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a74f1191-60d8-43cf-a77a-9acc9845f5e7"
            }
          }
        ]
      },
      {
        "id": "8fb9467a-8d18-444e-884d-a7faae2fa643",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "168d85fe-d0db-486b-9160-13957eec9745",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4a9e87c-2855-4ab2-95ab-598ec113c22e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efff0e9a-d64d-4130-9e9a-a55ccd074c83",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4874330b-784a-4a83-a605-bb40abb25028",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "114197f1-7295-440d-92ff-5437fb8dd314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f11237f-c20c-40d7-b2f2-39d3870fbf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "690dc39f-54bb-42af-9018-9ae609d86a95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffb6a1f6-9d3d-4ddc-8eb2-957c17775510",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6058205-e033-44b6-b626-9b76b4ab45de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15ac0e5e-825c-4709-b5b9-b81d4d672cf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ad9c446-79a5-4b55-bdec-22bbceee8808"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ab15701-1e12-4c03-a616-729a8f2c678d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c4e2c78a-b885-49ab-8e5c-45ce2c267a0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9581bcaf-a7a6-4d62-98ab-ed4e091a121d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd8fad25-2a04-45ae-bd7d-07cd190b4bf8"
            }
          }
        ]
      },
      {
        "id": "e9d666bf-78d2-44f1-a8c7-6bd965bef905",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "04c9d9ea-1f77-4308-9b87-34194045eb98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3fc66b8d-4ef8-4e40-8dbc-6660a9fcda82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ea243ec-8f09-46e5-9b28-a6636ac43ccd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d33cf6-1925-4234-8a30-ab2ff3018b00",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be062541-43c4-4c7f-8d29-37e8b7576056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16535a2a-2d46-4b00-8e6b-33d0fa795cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfdd435a-f5bd-4a14-9f08-b6f02f8a97fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4f9ad79-5a37-4c2f-ba52-3505cb711321",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2ef7086-2b6d-4207-aa40-b419a9e56fa9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74ee1cf4-787d-4f89-9996-eb9aadb7cfcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b87d8abe-e47c-40a0-beae-80cdf6e436d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e91a62e5-66c6-45a0-8334-8fd1ed0d8e1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "73ef0390-6367-4972-9eb8-00c8281a0771"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aed0a8bd-e279-4b05-b178-58dde0a7c7f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30201f48-b56e-4721-8d58-52bf579d8c66"
            }
          }
        ]
      },
      {
        "id": "d645c6e4-b02b-4ce1-87e4-4db7e4de6cd3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3d12c819-44a5-4686-b084-d0510f1c1580",
            "name": "Negative Testing",
            "item": [
              {
                "id": "432a441e-a88e-4fdc-ab00-479a40edf6e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1af9eca7-226f-4bd2-8038-5db7a8335a17",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522fd2ce-89ef-4cb3-b49a-b63861dec19d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e033c610-816f-49d4-a6c4-854d88dce69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7ed78b-9780-4962-91d6-d08f64f380dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc67b7a9-9022-4cce-91cf-d8846b89196a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08a92d0f-9816-4219-9334-c567be9b6bed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4afb9768-c19c-4ca1-8e85-d1fb505c4d19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6e11fe8-fa22-4aea-b550-7e05c43c301e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70c905d4-3ce7-4f4e-9c5a-198cbfb920da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19860208-9df8-494b-8d70-092e7c6725a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a3b94102-996e-4846-bc63-db198f1c17f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f26ac7a4-f80c-4a82-88af-36f45ba31eab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d306f70f-60e7-4b08-9982-b02e22d27b24"
            }
          }
        ]
      },
      {
        "id": "9c951335-1d7d-4fd3-8251-5a9b8176fb6a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a0dae20-d953-44fc-8b2f-521d8b1c7f21",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88e41ac4-39cc-49c1-84f3-5300b17ab9a0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "de8ac58c-e70c-4342-804a-7eac6e104116",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab17c189-8429-4072-ac7e-ee47d1ec7569",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fe7f5fb-351a-45ca-9e41-a346d842dc07",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 33.734126984126966,
      "responseMin": 9,
      "responseMax": 702,
      "responseSd": 45.19539529624543,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727052355284,
      "completed": 1727052372197
    },
    "executions": [
      {
        "id": "f4d62344-3978-4640-b005-695aee5bd608",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "89906124-afc2-43ca-ad37-4548df5bde02",
          "httpRequestId": "3a7f45bd-610f-4256-9e87-5abfe7668754"
        },
        "item": {
          "id": "f4d62344-3978-4640-b005-695aee5bd608",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8a057fbe-315f-434b-878c-dfd8e7705081",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "cf6e5629-f8e3-4fb8-9af7-b79c9b8c8371",
        "cursor": {
          "ref": "09c9ad39-08a7-45d3-934c-ece6d50f5f68",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "89f15afc-5eb9-4704-9522-ff181975ff61"
        },
        "item": {
          "id": "cf6e5629-f8e3-4fb8-9af7-b79c9b8c8371",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0114616f-f060-4353-9645-38b522d4d0dd",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "4b380a41-7eff-4624-851c-4e9d77bfd38b",
        "cursor": {
          "ref": "520dbe3a-7595-4897-a843-72c13de1ea0e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "828da058-a04a-4be4-a9b2-0c70d85665f3"
        },
        "item": {
          "id": "4b380a41-7eff-4624-851c-4e9d77bfd38b",
          "name": "did_json"
        },
        "response": {
          "id": "0130a3e3-7dd3-4bf9-aaf7-4f790072647a",
          "status": "OK",
          "code": 200,
          "responseTime": 263,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f028ed41-1bfd-408b-bc84-d47969481d54",
        "cursor": {
          "ref": "bbd2544e-f98f-4626-98cf-164a79716c49",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9edf9a83-9430-4930-9ee4-a9798105b1c0"
        },
        "item": {
          "id": "f028ed41-1bfd-408b-bc84-d47969481d54",
          "name": "did:invalid"
        },
        "response": {
          "id": "df79a469-eba4-414a-86dd-7dea20370f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f028ed41-1bfd-408b-bc84-d47969481d54",
        "cursor": {
          "ref": "bbd2544e-f98f-4626-98cf-164a79716c49",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9edf9a83-9430-4930-9ee4-a9798105b1c0"
        },
        "item": {
          "id": "f028ed41-1bfd-408b-bc84-d47969481d54",
          "name": "did:invalid"
        },
        "response": {
          "id": "df79a469-eba4-414a-86dd-7dea20370f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf994a07-ce3b-4e7b-82f5-6b11de46a627",
        "cursor": {
          "ref": "50712f07-37ef-46a9-89a3-a2b0319104c8",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "007f2c31-ff73-48f7-afae-b52a64cffabc"
        },
        "item": {
          "id": "bf994a07-ce3b-4e7b-82f5-6b11de46a627",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "05628e9e-da36-453d-b478-ae58fb313eae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e319a265-f1c2-4eaa-bb1b-7c4478c0b89d",
        "cursor": {
          "ref": "575de963-bddf-459c-902d-47640f27fd85",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "030614ba-cd5b-4c3e-8fb7-1467cafeb6da"
        },
        "item": {
          "id": "e319a265-f1c2-4eaa-bb1b-7c4478c0b89d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4f5cabe2-aedf-4d20-bb53-cda33951a963",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80892e0d-7270-40f1-9b69-1fa979d903b4",
        "cursor": {
          "ref": "64206684-3ac5-43bc-8caa-06448af48b84",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "418606cb-a078-4e38-ae7d-9880baecec59"
        },
        "item": {
          "id": "80892e0d-7270-40f1-9b69-1fa979d903b4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "eb818c55-6d4d-4a64-a91c-292185a99cb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29c64fb-b66d-4c29-a681-0fcc1bf66f47",
        "cursor": {
          "ref": "7929e2d3-7910-44de-a3ee-06e7c5a82d6a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5d53b5c3-c0f5-4fdc-b108-54cea84fb3f5"
        },
        "item": {
          "id": "e29c64fb-b66d-4c29-a681-0fcc1bf66f47",
          "name": "identifiers"
        },
        "response": {
          "id": "dd1c8786-dff4-46eb-b2fc-305f52dd07c4",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfa6eac-f64e-4b1b-afba-849bb7380ae7",
        "cursor": {
          "ref": "b769578b-839f-4bb6-a871-63561c8550f0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bc96bd07-8f17-40de-b811-32273dbeb220"
        },
        "item": {
          "id": "ecfa6eac-f64e-4b1b-afba-849bb7380ae7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7e43e3a6-9e13-40ac-85fe-d462b67358aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcb03ef-70fe-4002-91f5-3892bc239e96",
        "cursor": {
          "ref": "d246706f-49bf-4af1-9015-3cd4c1252818",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f0109e1e-a52e-4f41-bbdf-66947d832ba8"
        },
        "item": {
          "id": "fbcb03ef-70fe-4002-91f5-3892bc239e96",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f545df4d-f794-4f16-99e7-6e72fe917e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893b0e7e-0227-4573-88a8-29c7c9a354b0",
        "cursor": {
          "ref": "0bca19cf-9359-4b1e-991c-36ad46c5927e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "02eb73bf-4550-45fe-928f-afe66c636367"
        },
        "item": {
          "id": "893b0e7e-0227-4573-88a8-29c7c9a354b0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0c594046-b51b-49c1-9528-0cbbde73b3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3c90cb-1a1c-4ad1-bcea-ea268c870b32",
        "cursor": {
          "ref": "f4b44c67-044f-41db-9046-84cf1ee27075",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "78fa9a52-cfbe-4835-bbea-44cbc5ae6bc3"
        },
        "item": {
          "id": "4e3c90cb-1a1c-4ad1-bcea-ea268c870b32",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "45306c4f-9347-4cd6-8a3f-7851bfb13ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d234b93-86f7-4fd1-ae99-085c95b2c9e2",
        "cursor": {
          "ref": "2d402ea5-3f7e-450c-a798-7ce5fb349256",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "933b93cc-24a0-404a-a842-541b92dd66f4"
        },
        "item": {
          "id": "9d234b93-86f7-4fd1-ae99-085c95b2c9e2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9e6a8669-cb1e-42dc-b0d4-82c0cfc67915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1ec4e8-907d-42c9-b95d-34e2358a5a07",
        "cursor": {
          "ref": "10e258c1-5add-4055-b9ac-66e23fe5f7ca",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "be86ba43-be35-449a-8317-7abb03433b1d"
        },
        "item": {
          "id": "3f1ec4e8-907d-42c9-b95d-34e2358a5a07",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "525fa0b3-0341-48a3-83ef-88dfd24d39c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c6b06f-cf28-483a-a154-a653d18aed1f",
        "cursor": {
          "ref": "b3e3ad47-d2a1-4c75-aee6-8f447af69da4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "595b1fd4-8448-41d1-9598-c12fe3ee23c8"
        },
        "item": {
          "id": "33c6b06f-cf28-483a-a154-a653d18aed1f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "63d013f7-087b-44cb-a5e0-bc1bc37f004e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1f70ec-bc06-4e21-bb77-2e53f8a719e6",
        "cursor": {
          "ref": "ee176b33-f1d0-496f-9047-034dcf8e029b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "07ab0976-0bb5-40bb-b0d7-2a991b80c90b"
        },
        "item": {
          "id": "2c1f70ec-bc06-4e21-bb77-2e53f8a719e6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fab773f1-8797-46a9-beef-d89ddad470c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3106a006-9367-4444-8709-eef062f86594",
        "cursor": {
          "ref": "10f6380e-ba3f-4928-a176-23e916f764b5",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "98cad15d-f2de-4e5d-a0ff-49d7872d12d5"
        },
        "item": {
          "id": "3106a006-9367-4444-8709-eef062f86594",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c4ad6362-ce90-4cd0-a2ca-f3eb1f302884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a3d95b-3ca3-48e4-b162-2e6d30dbf72d",
        "cursor": {
          "ref": "57a978b3-da49-48ba-b56f-6b1b24d811a1",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9b38fb23-e403-4c27-a879-5f7169845b49"
        },
        "item": {
          "id": "34a3d95b-3ca3-48e4-b162-2e6d30dbf72d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8cd04346-7210-463e-b084-f89b13a76d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4006a437-bda2-4cd6-aede-f2e6b62f417c",
        "cursor": {
          "ref": "cfae4257-5d03-4040-bdd6-3f0caff09693",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "81a2b5c2-9eb6-4697-8215-dd42882782c2"
        },
        "item": {
          "id": "4006a437-bda2-4cd6-aede-f2e6b62f417c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0987533a-bf31-403a-b8ea-95f3312d3fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49c72f2-0575-4f6d-a1c0-c4d6d9d8da5f",
        "cursor": {
          "ref": "4d2384fa-bac7-416d-b827-9a46bdb259f5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "df87668d-bbe7-4d77-89cf-e40914a5243f"
        },
        "item": {
          "id": "d49c72f2-0575-4f6d-a1c0-c4d6d9d8da5f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3687f42f-8047-4e8a-9b70-0f982d58f6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edaad9e-68c6-4c26-b36c-6f6af3400ff0",
        "cursor": {
          "ref": "16da8b40-194d-4997-a896-268a13b85af7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4a26d757-5f6a-40fc-a3ec-49d79cb7c363"
        },
        "item": {
          "id": "8edaad9e-68c6-4c26-b36c-6f6af3400ff0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "81107433-45b1-480a-b4f3-48b5cde827ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a6b0f3-5a3d-4f4d-ada2-8ff282611726",
        "cursor": {
          "ref": "57ba2203-4bf3-4e6f-91fb-3bd7181e6907",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "91c06365-c4c1-45d8-8db9-133203376acb"
        },
        "item": {
          "id": "c0a6b0f3-5a3d-4f4d-ada2-8ff282611726",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bbbb80da-aad2-4ba8-90e3-dcae3e54cfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ae28a3-d777-4407-a8c8-3d6e36b62dd3",
        "cursor": {
          "ref": "f6f17ce2-6fcb-4461-892d-ad66424c9bfb",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "24e76a6f-6e65-47b4-80aa-437e1920bfea"
        },
        "item": {
          "id": "49ae28a3-d777-4407-a8c8-3d6e36b62dd3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dd8ad2e1-2a67-4f9b-a934-18afdf969634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b2f997-35c6-4583-b4ac-214058bf9cab",
        "cursor": {
          "ref": "481a1985-bb6e-4aef-8c73-a510ce7ddc6e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4b46629a-90bd-4fe0-be70-6c5957993acd"
        },
        "item": {
          "id": "16b2f997-35c6-4583-b4ac-214058bf9cab",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d7b935ff-89ee-494e-a411-f4ef8c3e9380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a064c40-1a00-4770-84e3-a2f6d00609ad",
        "cursor": {
          "ref": "a423d97c-b7ac-49fb-9797-6155bc0d741c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c51a42db-605b-4fcf-962c-4e7eb1768f9c"
        },
        "item": {
          "id": "9a064c40-1a00-4770-84e3-a2f6d00609ad",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f958cdbe-fd57-4c4e-a0ed-8fffaa2195fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5400c595-577b-4ad4-88be-09e1fdad5d58",
        "cursor": {
          "ref": "b616f3de-a039-4023-9a35-1844c3f95789",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4bf14902-45b7-45bc-86a0-0246a80fe83b"
        },
        "item": {
          "id": "5400c595-577b-4ad4-88be-09e1fdad5d58",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5c8ceba7-3066-4b8e-a324-a444e7418842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0aa667-0196-4fe5-9437-960c4c182c73",
        "cursor": {
          "ref": "43484cbc-51fd-4d58-870a-e7b7057345c6",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6c835fcb-a187-4c90-86af-fab3edb9049d"
        },
        "item": {
          "id": "1c0aa667-0196-4fe5-9437-960c4c182c73",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6df2791b-7eae-4e7d-ba50-77ded904a08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84802fc-dcf5-4978-890c-29e4afdb33e9",
        "cursor": {
          "ref": "6144ed6e-5d84-41a8-ade2-f771850bfc8b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "07d86249-abd8-471f-a512-048a7f638edf"
        },
        "item": {
          "id": "b84802fc-dcf5-4978-890c-29e4afdb33e9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2a01dcd4-809d-4c73-bee4-76879e6a9a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dccc926-bd48-43b9-8e91-540b187023e5",
        "cursor": {
          "ref": "097e175a-8ca3-44fb-863d-0e413058fef6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9e3a3333-521b-4d7f-8c4f-7c7277bcaaff"
        },
        "item": {
          "id": "4dccc926-bd48-43b9-8e91-540b187023e5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "69859498-6157-467f-8aad-41e971b33679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482ced9e-08bd-486a-8c2a-1d9c48d24876",
        "cursor": {
          "ref": "dadb0616-ca16-44f6-af13-0a6477d6ff24",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d94457b8-3932-45a9-b356-e12ad8d268dc"
        },
        "item": {
          "id": "482ced9e-08bd-486a-8c2a-1d9c48d24876",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f82c535b-a482-4bca-b64d-00265b53fb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e70488-ec89-45d5-b5a2-cebecd530b5e",
        "cursor": {
          "ref": "2c79d77b-a3d3-44db-996d-73875679c8fa",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0bc478be-0478-4980-988c-1b929d07d2cc"
        },
        "item": {
          "id": "a7e70488-ec89-45d5-b5a2-cebecd530b5e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0912079d-0182-46e0-9093-38b9de8044f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e808f56d-d65c-42c5-81a7-92abcff108fc",
        "cursor": {
          "ref": "1c8d3397-bd3b-4a1f-89b4-c8051b083411",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "60087d3a-0831-479a-b4da-b61c87752ad3"
        },
        "item": {
          "id": "e808f56d-d65c-42c5-81a7-92abcff108fc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "51d4ee1c-ea47-4b65-8fa4-8212463644b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e733749-ed66-4fb9-bbe7-7edbf3261c6f",
        "cursor": {
          "ref": "737a0db3-09e1-454f-aacf-c453c07d9e3c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a2fcf6bc-775b-4023-ad79-a1ff7068eed6"
        },
        "item": {
          "id": "2e733749-ed66-4fb9-bbe7-7edbf3261c6f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5f10fe14-f665-4481-8dc1-d1596a371e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df61226-77d9-4874-aa6f-b83480799505",
        "cursor": {
          "ref": "f756b508-3feb-4a66-a8db-7d4f9e3ad874",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "826973b5-3f7e-4127-885f-e073fb916fc2"
        },
        "item": {
          "id": "6df61226-77d9-4874-aa6f-b83480799505",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1eda2dbc-d93f-4fac-b02b-b0b8f61b153f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a2b87c-8df9-4e06-ba05-cc9d6d221208",
        "cursor": {
          "ref": "52996b9b-993a-440b-a36f-b276e13f4811",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "74566c23-9657-4f55-bc6a-df5417295134"
        },
        "item": {
          "id": "28a2b87c-8df9-4e06-ba05-cc9d6d221208",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5a953b03-5167-49ca-ae9c-0c28bc19a35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fcb6bf-2148-4e42-a52d-2f5c126f2756",
        "cursor": {
          "ref": "409469a1-6cbf-4c43-8c08-c452f3c8ee82",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a4156428-84cf-4331-be89-7dd1c5ddc608"
        },
        "item": {
          "id": "33fcb6bf-2148-4e42-a52d-2f5c126f2756",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "962f023c-1924-4b95-be41-629c44c0b6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef6288d-5814-4513-be30-c3febf129696",
        "cursor": {
          "ref": "475907fc-cf55-4fec-b590-093ccd779c44",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "993979c3-683f-4a50-9f7f-ec9b4bf94d75"
        },
        "item": {
          "id": "cef6288d-5814-4513-be30-c3febf129696",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6684a8ce-9208-4db7-a5ac-51818d4e3c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf86fbaa-0683-4a8d-b8ab-ab417756ab6b",
        "cursor": {
          "ref": "f4116639-7b43-4483-96c9-fc0c9e1ad1d5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6d870d3c-6481-4df2-9716-6e0b40ccceb1"
        },
        "item": {
          "id": "cf86fbaa-0683-4a8d-b8ab-ab417756ab6b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9099d770-86cc-4b02-a6f3-ceb9a71439d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8973b4f-59e0-4817-a244-32a38b49483b",
        "cursor": {
          "ref": "b1686dea-7b7d-4fdd-9765-acd324eba3f5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ba155b9b-1057-4b60-9e7a-3df26ea4f69e"
        },
        "item": {
          "id": "d8973b4f-59e0-4817-a244-32a38b49483b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a234d1f1-63f7-42af-9251-b9018e503335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c143830-622b-41c2-9cfa-09ea1c338303",
        "cursor": {
          "ref": "3374a1e9-1289-4416-9999-940cda448659",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8aa650bc-61d2-4d4c-8f37-d8e75c74fa5d"
        },
        "item": {
          "id": "2c143830-622b-41c2-9cfa-09ea1c338303",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8d2b4dd2-7581-4870-a5e0-fe1aae2c3385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4fb42e-e6be-4c99-b2dd-477315072203",
        "cursor": {
          "ref": "fcc7bf19-4496-4153-a20b-8e65bb57e9ae",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cc697681-e845-4dd9-b385-58797a4bd7fc"
        },
        "item": {
          "id": "4d4fb42e-e6be-4c99-b2dd-477315072203",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7555d527-4e1f-4eb8-8be9-e5851c289ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff76e23-6320-4749-b5bf-21062f2a46b5",
        "cursor": {
          "ref": "ae6db041-005a-449e-ae73-f8d0f030d702",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9ebc2441-a2c0-4215-95d5-384c147f76a6"
        },
        "item": {
          "id": "7ff76e23-6320-4749-b5bf-21062f2a46b5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "30606e36-ce7b-4cf5-87c9-32d41de302bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122dd9e7-1183-430a-b285-6aca81c75a05",
        "cursor": {
          "ref": "7dd9f5b1-b6c3-4316-be9c-1d5a3c0af0f8",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "13101f3a-e838-479e-b483-09e49e5b0370"
        },
        "item": {
          "id": "122dd9e7-1183-430a-b285-6aca81c75a05",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ea5c6e74-38b0-4660-b3a4-6b77603af3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27490da-07a3-45af-aad2-3ceedcf39510",
        "cursor": {
          "ref": "6773e949-8d5c-4a7a-af05-3c32f6b55a99",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "132f1e68-1aa6-4b43-9e80-4b6a181bc835"
        },
        "item": {
          "id": "b27490da-07a3-45af-aad2-3ceedcf39510",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "73d45ece-7620-4508-ae2a-c1b77a85c8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fc2684-734d-465c-8fed-e429660f780f",
        "cursor": {
          "ref": "b6ad6b9b-32ee-4096-8ec0-c02640721b49",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "039c927f-9a14-42bd-9bd8-c4f2e6b549b3"
        },
        "item": {
          "id": "20fc2684-734d-465c-8fed-e429660f780f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bf0341ea-b55d-4107-825c-04b0adef7191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9457a22-7f43-4bdc-afc9-7e049b57aa82",
        "cursor": {
          "ref": "aed7b32f-0c70-49a2-b551-e4ca26a56d32",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6eab9a1e-3700-4124-86cc-b6c760d2b0c2"
        },
        "item": {
          "id": "d9457a22-7f43-4bdc-afc9-7e049b57aa82",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0b8ce124-0126-49c6-967c-34365dac2efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecaec2e-aa4d-41a1-b5f5-2e11f4e97807",
        "cursor": {
          "ref": "57819dff-6872-429d-86c6-7243df47ded9",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "59fe9210-9629-4c3e-8020-90d804ab4216"
        },
        "item": {
          "id": "eecaec2e-aa4d-41a1-b5f5-2e11f4e97807",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "36722469-e811-4129-8bf2-4a01fa8ac222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108a6219-23bd-46ae-818d-7aad7cc525fd",
        "cursor": {
          "ref": "58a7919d-9565-49ff-b9e6-b2f86a432dd5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c8ac7bfd-8bd7-47d9-9369-bb54d392d2da"
        },
        "item": {
          "id": "108a6219-23bd-46ae-818d-7aad7cc525fd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "61e9253e-20c0-4fca-9f77-fece60c0ee91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5eeeabe-e6f8-4ce9-a259-47bd90e99d65",
        "cursor": {
          "ref": "cdbdcb18-d524-4ffa-873d-99ed704bc327",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "796635e5-321a-42ae-a84f-6a9a4dacc7f4"
        },
        "item": {
          "id": "e5eeeabe-e6f8-4ce9-a259-47bd90e99d65",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "edf0261b-e58b-4742-9e2b-139129137bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205bde80-d72b-4abc-a996-7ec1977012eb",
        "cursor": {
          "ref": "a1beeb91-a38a-4875-938b-7cb2aaaf6c4c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a2e47812-85ef-43e2-9e70-7baab656a595"
        },
        "item": {
          "id": "205bde80-d72b-4abc-a996-7ec1977012eb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "705f4232-130b-43ba-a702-6641a974c126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d3342f-65b7-4e2a-b500-94ffa1d3cc16",
        "cursor": {
          "ref": "e3fbb2b5-cf7c-4569-bed2-52561eef4c1a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4da84657-91c6-4d39-8635-880c8f3c0f41"
        },
        "item": {
          "id": "d5d3342f-65b7-4e2a-b500-94ffa1d3cc16",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "93ba1aec-04d4-49a6-b8a1-17e2ef6a3cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f995ad95-6886-46bd-b0d6-0190d3d03450",
        "cursor": {
          "ref": "83a84a88-7872-454c-9bd2-9aa510bcc92b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7dd6d9d6-e632-485b-98fb-fb4829142a85"
        },
        "item": {
          "id": "f995ad95-6886-46bd-b0d6-0190d3d03450",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bc6a7547-c780-4478-8a2c-1e6873973e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0fe877-7e23-40e0-b8cb-70bada9395e3",
        "cursor": {
          "ref": "a10ddb33-4c54-448e-b355-cda474a5854e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dc090b98-977c-495c-a54a-54ccde616f26"
        },
        "item": {
          "id": "2b0fe877-7e23-40e0-b8cb-70bada9395e3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "992631c4-ac76-4d96-a031-d600c650da40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a531790a-fd14-49c4-af42-57a3501de65a",
        "cursor": {
          "ref": "5e59918c-1128-46a6-867e-489ce169491f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0a340552-90d6-4dc3-b90f-235ba3720559"
        },
        "item": {
          "id": "a531790a-fd14-49c4-af42-57a3501de65a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9307b3b9-1ad0-429f-9549-59764ffcb2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6adad8-1531-40eb-b76e-6b3bd0ddeb74",
        "cursor": {
          "ref": "e3daf7c7-6a7a-4633-8ec1-9819e546374f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fa488a74-b422-4334-b56c-bcb1e5e053ab"
        },
        "item": {
          "id": "ab6adad8-1531-40eb-b76e-6b3bd0ddeb74",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fe583dfc-7e5c-49cf-978a-a4af3b6d5f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed64835a-7ad1-464d-863c-0f20c1be3510",
        "cursor": {
          "ref": "eadbeb21-d3fe-4628-ac10-4b7bf8b4f0d9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "81f24722-de2d-4246-9191-7c9baf44f220"
        },
        "item": {
          "id": "ed64835a-7ad1-464d-863c-0f20c1be3510",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "85e3adcf-afe8-46bb-9127-092ba2237b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7db7a2-dc37-42e5-84e7-8f38f89227c5",
        "cursor": {
          "ref": "89c17c71-2e25-495c-93fe-2ded9a0f6875",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b9654339-c323-43a9-9412-72aeff8216e8"
        },
        "item": {
          "id": "4e7db7a2-dc37-42e5-84e7-8f38f89227c5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "48da91eb-d6f8-47ad-b078-9e2242a48ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62d62b7-f4d7-4a6b-bedb-2177bd0253ad",
        "cursor": {
          "ref": "11278d8b-92c5-4109-8a1d-7ef4c9be55ab",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a12dced0-3602-4fc2-91f8-584c10c35f71"
        },
        "item": {
          "id": "d62d62b7-f4d7-4a6b-bedb-2177bd0253ad",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a3607b29-5ac9-4730-ae26-240b45a20e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d98d070-c4e5-4c28-b771-847ce22b05ad",
        "cursor": {
          "ref": "35f56f6b-4b23-432a-9f53-11de25f9aa43",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "52167181-9c4b-4dd8-a37c-09bde7b39b56"
        },
        "item": {
          "id": "5d98d070-c4e5-4c28-b771-847ce22b05ad",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8cb584f6-aee7-4b4f-ab87-8c9bd8552065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb77150-2f42-405a-830d-71445f63e004",
        "cursor": {
          "ref": "5f5d829b-b5e6-42bc-b322-31bb3389a0ed",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "78d216e1-dd26-4501-a1d8-a20472c743df"
        },
        "item": {
          "id": "deb77150-2f42-405a-830d-71445f63e004",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "16bc7767-a455-4cae-a254-d7d9b1247a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04557bfb-520a-4449-abb0-60f1ec714a4f",
        "cursor": {
          "ref": "bbbd151e-5b0f-48cb-8d13-77d0173ecca4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1034081d-8dca-4db6-9741-735e09c0e224"
        },
        "item": {
          "id": "04557bfb-520a-4449-abb0-60f1ec714a4f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0ca4872a-4024-4361-a326-6fb3eca6c409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b80483-0052-488c-8155-e4d4ed49515d",
        "cursor": {
          "ref": "11a210b4-1c76-42ec-86f6-bd9584e89433",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "66edb4c2-e16a-4026-ac1a-dae18b4712d2"
        },
        "item": {
          "id": "32b80483-0052-488c-8155-e4d4ed49515d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "218ace24-986d-4afa-8749-aa1e1ea90933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a72fadf-c566-4985-864f-8741594b6002",
        "cursor": {
          "ref": "6e883208-a777-487f-8ae1-886ef56bde8e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4457720c-af92-49ce-84ee-d5e0d5e0c211"
        },
        "item": {
          "id": "2a72fadf-c566-4985-864f-8741594b6002",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6b093352-4eea-4ad9-8ec9-dbb330ea3f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723ca256-8e54-4ffd-902a-dacc3af294e3",
        "cursor": {
          "ref": "5ee43bc9-8062-49b1-8ee6-e5701ce9f9fb",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4547c3f0-293e-42f8-ba3a-46cd63c73630"
        },
        "item": {
          "id": "723ca256-8e54-4ffd-902a-dacc3af294e3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "76788b1a-0b5c-44da-bc7f-e5cdf25f1731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e25716-a85f-40f8-a031-d9c25e52ca95",
        "cursor": {
          "ref": "4b40b5de-6d2c-4de1-8e49-bbe0753207a1",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7bf7ba40-0694-4e01-9fd1-118d0cab0fed"
        },
        "item": {
          "id": "e9e25716-a85f-40f8-a031-d9c25e52ca95",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "09bfd79e-9170-4e6f-8a1f-5f7a51575715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04844eef-1710-4884-b023-95d0ebc1c5b3",
        "cursor": {
          "ref": "87632925-2bf5-46c5-a45b-c1cc358f6075",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9859b5e6-c35b-4f05-ad50-55a41a5713d4"
        },
        "item": {
          "id": "04844eef-1710-4884-b023-95d0ebc1c5b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "38031280-bb76-4f85-8d25-c03c791e6cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ed9979-b1bb-470b-b8ba-89951b9cce36",
        "cursor": {
          "ref": "5e6a106f-f80e-45e7-8401-c142d381feea",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f31ff095-9ee2-40f9-a57b-2257d45f116e"
        },
        "item": {
          "id": "01ed9979-b1bb-470b-b8ba-89951b9cce36",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "da939eeb-74ad-4862-8f62-69826407c1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f480e091-c47c-41ed-ab7d-f95b6730a000",
        "cursor": {
          "ref": "469d1e96-c275-4b6a-be06-7683d365b61d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "496e0e86-713a-4b95-b139-39e51a900326"
        },
        "item": {
          "id": "f480e091-c47c-41ed-ab7d-f95b6730a000",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ae391079-d181-4730-b00c-85d9cef1222d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b36cd9-f471-4a05-be03-0031eb98fb28",
        "cursor": {
          "ref": "03d4d13c-2146-4152-8dca-89786f7e8b56",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "eb9be9be-5177-4f50-b92b-4f43b1b42142"
        },
        "item": {
          "id": "60b36cd9-f471-4a05-be03-0031eb98fb28",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2fc2bb23-dac4-4712-bb17-7618ed55f9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed060df8-8617-4559-8dfe-8d43abe04889",
        "cursor": {
          "ref": "a4b6f21c-162f-474c-9383-8acb3ac1f78f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d0283679-fd74-4310-935a-cae8f0ae1235"
        },
        "item": {
          "id": "ed060df8-8617-4559-8dfe-8d43abe04889",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "23ad6d15-9584-4abf-a171-770b6c81723a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1870da64-4f99-4a24-86af-fe3aee92b222",
        "cursor": {
          "ref": "89da01e7-f0af-4090-8093-c3a4c693f0b4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d8e7bcf6-e42f-4e0b-9032-25890f03bf37"
        },
        "item": {
          "id": "1870da64-4f99-4a24-86af-fe3aee92b222",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6a69d039-0e65-4009-854f-3197ea71c746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0e567b-03dd-4ab2-860c-6b180d9faec7",
        "cursor": {
          "ref": "a88e6886-3e8c-44d8-8ab5-95c71458d14d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f66af781-20dd-4097-b892-9276ee12e83f"
        },
        "item": {
          "id": "aa0e567b-03dd-4ab2-860c-6b180d9faec7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e3b31334-33a9-4b37-8111-c351b3e85183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1b3b69-2d0b-4c75-be85-06741ce032e7",
        "cursor": {
          "ref": "633a8a81-e5eb-4d92-b9e2-6b9ebeee0f71",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d9f0dd1d-9fce-4e78-a3ee-697332e2d6c9"
        },
        "item": {
          "id": "3c1b3b69-2d0b-4c75-be85-06741ce032e7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f9d30833-c8cc-44f9-9552-d6df31f243c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4faad37-2999-42a3-a14e-d5e66fd77786",
        "cursor": {
          "ref": "5a9f3a97-f231-4b82-a2d6-39f9f3be8bd2",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "07d33105-2721-4eac-ab72-d2139188e36a"
        },
        "item": {
          "id": "b4faad37-2999-42a3-a14e-d5e66fd77786",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "03a8346f-e575-4679-b07f-ea298862a999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2520a69c-d274-4e2b-ae09-7a8c8f89bc8f",
        "cursor": {
          "ref": "38450154-e651-42ac-ac3a-21de7124de6b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "add39249-5e81-4002-a138-07f918fa676e"
        },
        "item": {
          "id": "2520a69c-d274-4e2b-ae09-7a8c8f89bc8f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "da241b65-c752-4072-90d9-4737710a541e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23209276-54b4-4fe5-981d-32ca31b511f5",
        "cursor": {
          "ref": "a3ef5b5b-ff4a-4b1e-8657-e96041cbac9f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5672a102-b0c5-43a9-a1fa-095551e0cfa3"
        },
        "item": {
          "id": "23209276-54b4-4fe5-981d-32ca31b511f5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2c7d3969-3739-40d6-a163-648e080f3391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316a4768-9b11-4d61-abef-15e90d3021db",
        "cursor": {
          "ref": "0f3aa232-a94a-4c98-b138-906f039a6132",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "35c6044f-c90b-4555-829b-aa49740a8a5c"
        },
        "item": {
          "id": "316a4768-9b11-4d61-abef-15e90d3021db",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6aa9a956-b592-414b-b6f6-eef8e5012dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1258f2f1-a6da-4bdd-aea9-6ecbb31628f3",
        "cursor": {
          "ref": "72d65aef-a292-4294-a8d5-dc776a11a8e4",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "58d77a13-2f4f-491d-8c1e-97d230d7a02d"
        },
        "item": {
          "id": "1258f2f1-a6da-4bdd-aea9-6ecbb31628f3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2d5ce158-dde6-49e9-a575-0ace5342e548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197c8503-b21e-4e2c-989d-d2eabe92f9a5",
        "cursor": {
          "ref": "25e6d97c-32dd-4fc3-9791-30a520944760",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "51d7287f-c259-4b54-9f37-b2d4442810ce"
        },
        "item": {
          "id": "197c8503-b21e-4e2c-989d-d2eabe92f9a5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "953e734c-9690-422b-b8e7-c13b3670649d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1e283c-7619-4264-b6ef-f88c87c11b61",
        "cursor": {
          "ref": "bc872957-537e-427c-ae6c-2f78cd33d0dc",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a7c80fd7-46f0-4e95-9902-bed09ed1cd27"
        },
        "item": {
          "id": "ce1e283c-7619-4264-b6ef-f88c87c11b61",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ff20835a-6e48-4002-8273-199804840628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9540faf3-60fc-496b-937f-5165f0ce6a10",
        "cursor": {
          "ref": "ca9b25f1-19e6-4f9f-8343-c3242a058ba2",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6b011d04-185e-4e5a-ba7b-220cfaf69d3d"
        },
        "item": {
          "id": "9540faf3-60fc-496b-937f-5165f0ce6a10",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aa5e6052-ef46-44ac-847f-6b10d2ae2a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0696cb83-84dc-43be-8d66-4fdac165611c",
        "cursor": {
          "ref": "335ed178-57d9-47a8-bdb4-89e3427521a9",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bbd5d36f-a06b-460f-a8e3-9c65222c50ae"
        },
        "item": {
          "id": "0696cb83-84dc-43be-8d66-4fdac165611c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5a90fda3-02f3-47a0-bc2f-5546bc7bcb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0d5f47-e58b-422e-9ce0-93a051163e52",
        "cursor": {
          "ref": "2a9a8b83-579f-41a4-aa7c-d4c6d0101ae4",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "81bb4ed2-dd89-4b5b-9fa7-e7ff806a304d"
        },
        "item": {
          "id": "3a0d5f47-e58b-422e-9ce0-93a051163e52",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bdf9444a-e0aa-4eaf-8059-11c429aa6b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77cc2e8-69ae-43d5-a44d-890a9cfd1219",
        "cursor": {
          "ref": "7592f847-9155-446a-95b2-dca1d22b9cd8",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bd36e45e-6218-4283-b896-f711607e8f4d"
        },
        "item": {
          "id": "f77cc2e8-69ae-43d5-a44d-890a9cfd1219",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "91a30fe4-31f1-4107-954f-8878815e1aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb2ff17-74bb-41ab-b6db-335b17bf96ca",
        "cursor": {
          "ref": "3d2acf92-f71d-4b70-aed7-cf420ba4b43d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "36afa27e-b059-457e-9af8-e28258f30fb2"
        },
        "item": {
          "id": "ccb2ff17-74bb-41ab-b6db-335b17bf96ca",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bda0865c-4b36-41c0-b754-93d1f8a2a6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7a0f10-108e-4e0c-9580-9f57c2f876d6",
        "cursor": {
          "ref": "a843c998-9516-4e46-83f5-da92c1b44084",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4e2017a7-6254-4942-989b-5d06425b1d1f"
        },
        "item": {
          "id": "6a7a0f10-108e-4e0c-9580-9f57c2f876d6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "854eea51-05e9-4678-80bf-50dfa53ab811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8f4b69-35ac-4b90-8396-323caf7bdae2",
        "cursor": {
          "ref": "9015f8e4-e48b-4027-b14b-f3bf8c9eb287",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "40ec6215-56a1-4494-a320-166c62a8e4b4"
        },
        "item": {
          "id": "6d8f4b69-35ac-4b90-8396-323caf7bdae2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "25b9f665-7e36-4061-955c-df84451fb987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6855a30f-e281-4afa-9667-72805bdfb456",
        "cursor": {
          "ref": "54244831-83ff-4681-9a5d-9865e08ea81e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b7bf4f44-26d3-4670-b571-8cff5be800da"
        },
        "item": {
          "id": "6855a30f-e281-4afa-9667-72805bdfb456",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c5e858bd-24e9-4fa7-b907-1e7ca06a7f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59e621e-c38e-421e-9dc9-bcd8e1a3acbf",
        "cursor": {
          "ref": "6eac401d-1950-4aa8-b234-60e7218ea05c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "af085230-dbc8-4888-a39c-abc7ddb91042"
        },
        "item": {
          "id": "a59e621e-c38e-421e-9dc9-bcd8e1a3acbf",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a8bf0832-866e-430f-8301-bfc566ebebc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844c52f6-f6ed-48b1-8e9f-1adf26b9d721",
        "cursor": {
          "ref": "28e3923e-5d68-4058-be6f-a941befdaa51",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ca93d7cb-d256-4398-a1bb-eef56b6fcb8a"
        },
        "item": {
          "id": "844c52f6-f6ed-48b1-8e9f-1adf26b9d721",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1e10e8a8-5b88-450f-9635-e16ff4ab1f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac4ce9c-a1e3-4cab-a1af-6319f6577f27",
        "cursor": {
          "ref": "8103c67e-90c0-4577-b0ce-fd4dead1d38c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9dcf813d-3026-48ef-9d80-35d755ace452"
        },
        "item": {
          "id": "8ac4ce9c-a1e3-4cab-a1af-6319f6577f27",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3601c233-f535-4fcb-a928-f677a5900347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24018c93-300d-418b-8321-a69ea8930d80",
        "cursor": {
          "ref": "118aa28e-99e6-480a-9ad1-416d67024c8b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5772b763-88d6-4f7c-ae58-f0c1d2e956f7"
        },
        "item": {
          "id": "24018c93-300d-418b-8321-a69ea8930d80",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "edddc7b5-abc1-4b5b-a432-739d51d58faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2141d80e-77d1-4543-8a3c-396f71267c54",
        "cursor": {
          "ref": "d1efa246-b875-49fb-9b9e-5e23df923097",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "862f784e-d52f-492f-b9e3-635e42d2d9d9"
        },
        "item": {
          "id": "2141d80e-77d1-4543-8a3c-396f71267c54",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6a47ab54-525d-4f86-a54e-b817f5ff4a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa4cbbf-80c0-4534-8d80-94198eb0939a",
        "cursor": {
          "ref": "5cc6ba5f-d6e9-4bec-abd8-20b63df1e44e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "86834b71-fc41-426b-a524-be41627be765"
        },
        "item": {
          "id": "ffa4cbbf-80c0-4534-8d80-94198eb0939a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "01c66155-82a0-4bc6-a9e6-08c5aa680458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d8979c-cd66-4c0b-b2a3-3335d5c7080a",
        "cursor": {
          "ref": "ff325627-304f-4b9f-ac62-2ec9aa863226",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5494fae4-19f4-427d-a6fd-e1bcc1a63f62"
        },
        "item": {
          "id": "80d8979c-cd66-4c0b-b2a3-3335d5c7080a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "311968ff-2154-4606-a85c-acab575312d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db00878d-99b1-4ef7-8b57-1a0165275cf3",
        "cursor": {
          "ref": "bd78bc96-8bf6-4b9c-87a5-17a1c81e0cab",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6293158f-c176-4320-b857-9eb856b48b7e"
        },
        "item": {
          "id": "db00878d-99b1-4ef7-8b57-1a0165275cf3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6334a5a9-5d45-47e4-8934-13857abfe61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be3f3ed-c3ca-4c34-8499-10f3dba14218",
        "cursor": {
          "ref": "10b2d063-9ade-4601-9a66-02f1a73265cd",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a4fbd7a1-80ea-4e8f-8f8c-e10b16087ad6"
        },
        "item": {
          "id": "7be3f3ed-c3ca-4c34-8499-10f3dba14218",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1de756b8-c3da-4358-919e-bb273b7804b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856b6ec3-d8a3-4d29-9666-8163ba29004d",
        "cursor": {
          "ref": "88e8602a-0962-4c63-8818-ffe42f4da9a0",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6ed2e32a-19f5-44c4-a10e-ce8a457994a5"
        },
        "item": {
          "id": "856b6ec3-d8a3-4d29-9666-8163ba29004d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "61711a74-06e9-403f-a39a-df330d452717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567e15a2-4d71-4ad8-8b07-406233a36c34",
        "cursor": {
          "ref": "46ea6351-f229-41c4-a755-15634c454117",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "259ad118-9e63-41d3-91f6-d1397eba32fd"
        },
        "item": {
          "id": "567e15a2-4d71-4ad8-8b07-406233a36c34",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e5dec871-cf98-4401-9c3d-052ff3411060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdb0d08-f9e3-4f54-816d-f004120cad5e",
        "cursor": {
          "ref": "8bf80cc6-5606-44c0-9e9c-fc2531050e05",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e32bd112-ed01-490b-899a-41deadfc2c07"
        },
        "item": {
          "id": "8cdb0d08-f9e3-4f54-816d-f004120cad5e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "201ba167-37a7-4a0b-a740-612dd6a7b140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1661bbc6-39a5-4eb2-b0b5-acab999b82f3",
        "cursor": {
          "ref": "51f4a2d2-08a7-43a9-af88-603ac6d748bc",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "18cc539c-e453-4d55-9807-e9e62cad69e9"
        },
        "item": {
          "id": "1661bbc6-39a5-4eb2-b0b5-acab999b82f3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8948b0dd-7cfe-4756-a5b9-28bbcecca07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bbcc92-baf6-41af-b2b8-8dac803c3d90",
        "cursor": {
          "ref": "e2e8f0f5-1f09-4cd1-b45c-3c4ffe7e70d2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f1215d8c-7c70-4060-94a4-c7990344abeb"
        },
        "item": {
          "id": "b4bbcc92-baf6-41af-b2b8-8dac803c3d90",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "828e8966-f29b-4901-b615-07686d8d02d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "17fe0381-4b3f-4504-90e9-8ab597163731",
        "cursor": {
          "ref": "c3f6500d-031b-4921-b38e-9ff249c069d0",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f1386572-9eaf-4de1-a017-6e5d6308f901"
        },
        "item": {
          "id": "17fe0381-4b3f-4504-90e9-8ab597163731",
          "name": "credentials_issue"
        },
        "response": {
          "id": "43e5ccd0-6071-4fd0-98ee-617cb0696d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "09988bfc-30b7-47a6-b3e5-33e614b39af5",
        "cursor": {
          "ref": "b720ea7d-b184-49ca-9edd-d97a75b7c306",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "397cfac1-bcc7-4dea-96ff-05002b0d9488"
        },
        "item": {
          "id": "09988bfc-30b7-47a6-b3e5-33e614b39af5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "39720360-4517-49c3-9b23-ad79ca826e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b4aa5420-21ab-477a-b20a-acf36f2c5f7f",
        "cursor": {
          "ref": "d93b2deb-b28a-46fd-9276-de2c1b66750a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6f8f9735-c268-47c9-bc86-a7c3e5ce8383"
        },
        "item": {
          "id": "b4aa5420-21ab-477a-b20a-acf36f2c5f7f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2e83927f-88e4-45b1-a227-009c82dcbecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "af7a6601-8f7b-4dc5-ac55-19da2dd5ca42",
        "cursor": {
          "ref": "6b8dc143-549a-4a63-8052-b5222043e098",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c542e276-24d1-4b96-a2e3-68597d9961ed"
        },
        "item": {
          "id": "af7a6601-8f7b-4dc5-ac55-19da2dd5ca42",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3eb7114a-d546-454b-9145-935ef286ad3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "58bbb09e-74c7-4f92-a58a-a04ec6996001",
        "cursor": {
          "ref": "1ac747ad-def9-49a9-a531-f6a156bc6c8f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "afe60610-5857-41c4-a35e-aa60fe2c77be"
        },
        "item": {
          "id": "58bbb09e-74c7-4f92-a58a-a04ec6996001",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b4fe4b82-bca8-4a1a-861c-3abb5de6632a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b285c4d7-1b6f-4b4d-a3ea-bbd66020abc6",
        "cursor": {
          "ref": "f01ea325-c979-45f4-a8b9-552938a8ca12",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "57f74f5d-d611-4a83-a829-4400646adac4"
        },
        "item": {
          "id": "b285c4d7-1b6f-4b4d-a3ea-bbd66020abc6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "26df2fcf-55f8-4815-8e19-90e4613fa4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "cd04228d-9399-40c7-9e88-0a019ecc0700",
        "cursor": {
          "ref": "77982dab-0895-4380-87cc-6629f694329d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "be466a53-e229-480e-bee8-f9d9706b042a"
        },
        "item": {
          "id": "cd04228d-9399-40c7-9e88-0a019ecc0700",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "59b79f27-c9ed-491a-80a6-247a716fb655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bbaa2d-0346-4712-a1ca-327a9540a808",
        "cursor": {
          "ref": "d61bb63c-5c52-4968-a45d-263fabbc9cad",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "470cbe58-b5c8-4be0-83c1-2b0fa5d7023f"
        },
        "item": {
          "id": "e4bbaa2d-0346-4712-a1ca-327a9540a808",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "911b3b05-ee02-4d42-a627-7c26b783e5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb83fd7-132b-47e9-86c6-9ed2f357e7e0",
        "cursor": {
          "ref": "34e4d412-9e14-48ac-8e96-ab3bddba1661",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "de095b5f-3dd7-4e99-b587-969cf958d36b"
        },
        "item": {
          "id": "0bb83fd7-132b-47e9-86c6-9ed2f357e7e0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "334a0c53-c4a6-4835-899e-6ffe201889e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1b9fd9-095a-4459-9ef5-969ac58a1351",
        "cursor": {
          "ref": "5ce0c6a6-162b-44e1-bf2a-72b0bd00cec3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2e386f23-07f2-4403-854f-387d32b7731a"
        },
        "item": {
          "id": "8d1b9fd9-095a-4459-9ef5-969ac58a1351",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7f0700f8-afa1-4c4e-a224-6b8cbad873c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8722be-d8d7-4627-9f90-fcf73195457c",
        "cursor": {
          "ref": "a0cbf18f-a297-4a90-846a-ce4f9cf9830d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2a9d9010-c032-4ecc-9917-d0e4e00e300b"
        },
        "item": {
          "id": "7c8722be-d8d7-4627-9f90-fcf73195457c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "256d0d51-d8db-4dd3-8f38-f670db43aa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683f9376-517a-47cf-a8d4-9d73a131ee31",
        "cursor": {
          "ref": "3e852c9c-1fdf-4a70-9e4f-8998d31479a1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fe35fcd6-70fd-48ba-9f54-b454cb59086a"
        },
        "item": {
          "id": "683f9376-517a-47cf-a8d4-9d73a131ee31",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5d822158-c851-458b-838d-b2a4bf966fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c4ab3e-1d30-4bdf-99ba-222e90ca9a8f",
        "cursor": {
          "ref": "9bab8a9b-e99c-4644-ac67-c83bcdff9070",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c1560ec2-e29a-49e9-962d-b740b9ff4712"
        },
        "item": {
          "id": "62c4ab3e-1d30-4bdf-99ba-222e90ca9a8f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e1cd9966-0099-44dd-8443-6cc138cec2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32832cb-8fff-42d1-b17e-02c2a5e4ea2d",
        "cursor": {
          "ref": "6b893ba3-c1d1-40f4-a688-98672d87970d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "897709c0-be09-4377-9419-041c342b0c17"
        },
        "item": {
          "id": "a32832cb-8fff-42d1-b17e-02c2a5e4ea2d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fa1d2acd-a649-4d2b-a29a-882ac042af8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1480f5-09a5-413e-8f48-c0846e017aa7",
        "cursor": {
          "ref": "7f00b14b-3334-4f3b-accc-128f3bb865e4",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5eb2603a-bd03-4afb-b7c0-f8c329f02335"
        },
        "item": {
          "id": "cb1480f5-09a5-413e-8f48-c0846e017aa7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "424b72ad-966d-4c2b-9ebb-cc1b1b2709f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a028dbe-c418-49af-95e4-127a8b62e495",
        "cursor": {
          "ref": "77701103-ba20-400a-a4c9-cd13b8c8701f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "51e3ee9d-c958-4562-af60-b8f855e3ab60"
        },
        "item": {
          "id": "6a028dbe-c418-49af-95e4-127a8b62e495",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1d9a9b29-d771-47aa-9662-153646f35923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35603ab6-1521-442a-bf6a-6bce2f09713c",
        "cursor": {
          "ref": "d1dcfce0-fff1-4e3e-bd04-21ecf150bad8",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "db73a41b-eaf2-41ba-bd36-d9b61a719e95"
        },
        "item": {
          "id": "35603ab6-1521-442a-bf6a-6bce2f09713c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9d1f311f-b692-4567-bc0b-dc2838bb6f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449cc055-49be-4190-b3ad-6b7bd166bf3d",
        "cursor": {
          "ref": "c680210e-260b-42bb-85d2-bb8dedb6bf30",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "41467c6e-4e47-415a-b214-7a6ac3be92c4"
        },
        "item": {
          "id": "449cc055-49be-4190-b3ad-6b7bd166bf3d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4c1798fe-a3a9-4a7f-bb3f-5367ced28885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b990f5f-a1c5-4a20-bd6e-842e8e35c917",
        "cursor": {
          "ref": "7d150a4e-68ba-4bdb-a4b5-be49b729b1d5",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d8e2b5e7-b544-4e24-8790-64d28963873c"
        },
        "item": {
          "id": "0b990f5f-a1c5-4a20-bd6e-842e8e35c917",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "910a4802-fc90-4def-a033-763d02b89252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1edfde-848f-4ea3-9c97-69be0288251e",
        "cursor": {
          "ref": "5c70d783-3766-4333-9c81-f858bff57424",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "24671ee8-e9cc-484b-87bc-f5563f867007"
        },
        "item": {
          "id": "2a1edfde-848f-4ea3-9c97-69be0288251e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f1f94b02-0eea-4aca-85d7-066b197d4ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22910de9-9e9d-427b-a06b-cd1c4484e506",
        "cursor": {
          "ref": "36a92702-dda0-4ace-9d99-0a83132a50dd",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "63a5e978-2667-4026-a123-a6789149b49f"
        },
        "item": {
          "id": "22910de9-9e9d-427b-a06b-cd1c4484e506",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4c2e8ce5-051a-4ceb-b138-e48a1d7308dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8b0789-bcd2-41dd-a61d-5e7171935d99",
        "cursor": {
          "ref": "a9db78e8-4140-4cce-98ef-c83d21cf4274",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f88c6400-e65d-4119-9085-7765b18836cd"
        },
        "item": {
          "id": "6b8b0789-bcd2-41dd-a61d-5e7171935d99",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b387d394-6460-4233-8fa5-d641f32aac13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c4d8d0-1fcc-49a2-8422-21553b620bcc",
        "cursor": {
          "ref": "acd3cfe7-5b0c-435a-80b1-4ff0fc7da8fa",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b80d70d2-af74-41d8-8acb-0b3c9f03c9f6"
        },
        "item": {
          "id": "e6c4d8d0-1fcc-49a2-8422-21553b620bcc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "46061612-d8a8-401a-8dca-f5e745cc898a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88aa763-ad56-47d5-b30a-813fd96643fd",
        "cursor": {
          "ref": "00a2f4a3-371d-4b70-a164-7a71e2e92482",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9b0f933a-954c-4caf-9bd5-7a8a8d32418e"
        },
        "item": {
          "id": "f88aa763-ad56-47d5-b30a-813fd96643fd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "304a3982-2ae4-48e1-87ee-3b3159bae6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a3cb13-29d2-4266-9309-ad345960e37b",
        "cursor": {
          "ref": "21b21751-b1dc-4ab6-aeb8-296dab43c903",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "47d4dc71-19fa-45dc-8a1c-96ceb405fbbf"
        },
        "item": {
          "id": "70a3cb13-29d2-4266-9309-ad345960e37b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1ec18c5f-7b69-4497-8ec7-f36f15657bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205627c1-d30b-45c7-90c4-579738d85cba",
        "cursor": {
          "ref": "e921316e-92e0-4678-a95c-d963c27b36f3",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7ddcf462-dff8-4623-919f-54736517a427"
        },
        "item": {
          "id": "205627c1-d30b-45c7-90c4-579738d85cba",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "260deab7-d999-404d-b24d-8cc44426669c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77d7a29-086a-46a1-8578-69648220c782",
        "cursor": {
          "ref": "0525e7eb-2a9a-4e51-8281-a6c583e3996e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7be95403-0bae-45ca-bf0c-123a31039005"
        },
        "item": {
          "id": "b77d7a29-086a-46a1-8578-69648220c782",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fe3a0a42-40b6-4072-bf46-dafa51640ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd66dadf-a63f-4bf7-bf28-d95355cc8beb",
        "cursor": {
          "ref": "ad99c401-4fcf-42c3-a177-929abb720654",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "184ba358-8d28-4279-a5ad-2f36356f50e9"
        },
        "item": {
          "id": "bd66dadf-a63f-4bf7-bf28-d95355cc8beb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8cab3edb-8d8e-48c1-8db1-bd067f583c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b813e5-1058-421c-9563-4218e4f40b7e",
        "cursor": {
          "ref": "2a14e58f-1c08-4b99-a8c5-f8d121367e48",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0ebec0a7-4517-43c4-a57b-9e2e1688dff7"
        },
        "item": {
          "id": "49b813e5-1058-421c-9563-4218e4f40b7e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "08f75bdd-03d3-4b6a-be06-ccf4fe4e2fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1431f3ef-c028-4f76-94d9-b13f80673ea1",
        "cursor": {
          "ref": "454c11a0-cbfc-467d-b012-d6be39e9a014",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ffc0d65d-3205-4770-9344-24533a2af18b"
        },
        "item": {
          "id": "1431f3ef-c028-4f76-94d9-b13f80673ea1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aafc2eb1-76e8-4a4b-b77a-3af71a37a30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3334c9a-7afe-4c72-bf8c-3d1ecf59ab1e",
        "cursor": {
          "ref": "360eefdf-c47b-45c4-828f-ca3654efae71",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "176445b6-8149-4257-b6f2-391bb3630168"
        },
        "item": {
          "id": "c3334c9a-7afe-4c72-bf8c-3d1ecf59ab1e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "aed63caa-ba80-473b-aa57-e77213a4f7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadeaf95-7e93-4d0e-96ca-8288e4f304b2",
        "cursor": {
          "ref": "d24896b7-0023-4bfb-9dbb-e61597c705fd",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2b589397-1f00-4209-81c6-0145d242f371"
        },
        "item": {
          "id": "eadeaf95-7e93-4d0e-96ca-8288e4f304b2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cbd6f2a2-ea0e-487c-835b-d1155dbe3a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352dd25d-f12a-45ac-b539-a86417e79f75",
        "cursor": {
          "ref": "d821b8cd-7bf4-4ecd-9f8c-20c3549e8874",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9d715b18-bef7-45e8-8c1d-e8e2c04a729d"
        },
        "item": {
          "id": "352dd25d-f12a-45ac-b539-a86417e79f75",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e1dbc10d-7760-4bcc-b43b-f556515d2768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5f36f1-dfd1-4254-87e1-db4e37fa9ad8",
        "cursor": {
          "ref": "09eb599f-e65e-49eb-89c0-9dca9a881bbc",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fbb84ac5-dd28-4942-9033-1424699da91c"
        },
        "item": {
          "id": "8b5f36f1-dfd1-4254-87e1-db4e37fa9ad8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0a382071-e5b8-47cd-b2b8-dd7dd7d20b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bf1a61-1dce-48d3-ba01-9fee52aaab71",
        "cursor": {
          "ref": "fe2c3316-b124-4c14-ae6b-c241e63d7b02",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c7286fb9-6b7f-4382-977f-47de3cba2ee3"
        },
        "item": {
          "id": "32bf1a61-1dce-48d3-ba01-9fee52aaab71",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f389687c-bbc7-430d-b599-909c62963964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f42843c-b19a-463d-9ea8-dd7942de388b",
        "cursor": {
          "ref": "ae3b3966-e480-4467-a872-b1f1753c819b",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "74888a6f-fa90-4b31-b848-6ae33d0319bc"
        },
        "item": {
          "id": "8f42843c-b19a-463d-9ea8-dd7942de388b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "061ccf5e-9451-49e3-b659-8ec607a58f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3010ef3-52ea-4539-ac0a-a263e1f17817",
        "cursor": {
          "ref": "e71ca2e2-cc14-4863-b85f-9eb3cf93042e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "854752ce-d75d-4dc6-b1eb-bc835ed7ec95"
        },
        "item": {
          "id": "c3010ef3-52ea-4539-ac0a-a263e1f17817",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2d4ae89e-e0be-484f-b8e9-10d0efb931ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e147343-5dc0-4473-bab1-d458a7bf194c",
        "cursor": {
          "ref": "4a795980-c1c6-4daa-ba1b-842f31f1c1a9",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ba4cbd31-3f28-4e07-9faf-e70f51e08755"
        },
        "item": {
          "id": "9e147343-5dc0-4473-bab1-d458a7bf194c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3c34e036-3d67-4d00-9206-002b6c5c2de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27743600-c4cf-430a-89f3-05ffc5f6a404",
        "cursor": {
          "ref": "4a698399-f29f-479a-9479-70e6ac3d89b3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4a6d5646-fbcd-4378-8a3c-2c4618fcd528"
        },
        "item": {
          "id": "27743600-c4cf-430a-89f3-05ffc5f6a404",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "07775016-af78-4890-b02f-0f96f0d256e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a121929-4a43-4546-a34a-cb47f332928c",
        "cursor": {
          "ref": "6beaca25-fbbd-4edd-87f1-cb954580b751",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cd0c3893-9829-482f-841f-87db097f054f"
        },
        "item": {
          "id": "9a121929-4a43-4546-a34a-cb47f332928c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "44cdf3ee-27b9-4531-998a-00035dfe5d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e34dc8-567c-466a-8305-f9caa9d13b64",
        "cursor": {
          "ref": "ddf983c0-ef0c-42c2-91ac-883a05a7815e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ac6d4539-b5a3-481b-978d-625502a799b0"
        },
        "item": {
          "id": "03e34dc8-567c-466a-8305-f9caa9d13b64",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ba81853f-c532-40ec-a817-ec8c8ec5322a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2031285c-49e8-4821-b616-e980409b60c7",
        "cursor": {
          "ref": "b291629f-f389-40bc-b8da-da3ab8ee8faf",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6423f06e-c0f2-4b8d-85a4-ce9e512088b8"
        },
        "item": {
          "id": "2031285c-49e8-4821-b616-e980409b60c7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "34f78d71-802d-4adc-ad2f-a0c2204e86ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2263507-e8ec-4484-8019-4c1a7641d817",
        "cursor": {
          "ref": "9bc513b8-70cd-4caf-a1e0-3e3a4c746b08",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7bebda43-ec4c-4a81-a045-d28a99e6c889"
        },
        "item": {
          "id": "a2263507-e8ec-4484-8019-4c1a7641d817",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "670517b5-df33-4f75-8bcf-a70ef40331ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1576cc-e954-4be5-b19c-19243236bb4d",
        "cursor": {
          "ref": "9f9d85d8-1724-498f-84c5-ec1bed9aef9c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "82ce4dcb-0d4b-40f0-b273-d382b19e56a9"
        },
        "item": {
          "id": "8f1576cc-e954-4be5-b19c-19243236bb4d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f64d854b-e738-433a-9931-d36847abcc8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed0f81a-0599-49e9-bb04-01a43253601f",
        "cursor": {
          "ref": "356178e9-b679-40a3-9e09-cb6998608ebf",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fcadfe61-904a-4df7-9357-b931bbfa4f13"
        },
        "item": {
          "id": "bed0f81a-0599-49e9-bb04-01a43253601f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "36e55820-6205-4c62-a8b3-9778f9e8d223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d314fb45-6ccc-4a5f-8062-d7d44d4d0f5a",
        "cursor": {
          "ref": "2b1793f8-9d3e-4802-bece-9b876662bddb",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7b70df1e-a766-4dca-b131-88e7502dfcaa"
        },
        "item": {
          "id": "d314fb45-6ccc-4a5f-8062-d7d44d4d0f5a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "049278c6-ef27-4896-8404-f82db816ce2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed22eb5-9165-4738-b031-60e03b9bf652",
        "cursor": {
          "ref": "d3135ab8-8de1-4a9a-99cd-bf9018cde888",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4e581283-9969-447c-ab0c-fd86f5af11bd"
        },
        "item": {
          "id": "2ed22eb5-9165-4738-b031-60e03b9bf652",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d91950c3-87b1-4486-b450-ec7bad38d726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a040c713-5449-4889-90d4-01651eb98581",
        "cursor": {
          "ref": "84c412f1-e4cf-4535-9c70-34e54f9f57d5",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fb033328-5177-4ed0-b089-070f4a34b2a6"
        },
        "item": {
          "id": "a040c713-5449-4889-90d4-01651eb98581",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d29ae915-18db-4e73-b4dc-994cc85258d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80933f3a-1122-4ca1-a12c-90efedfebb1b",
        "cursor": {
          "ref": "95a6d13e-72af-48e7-bf99-86a3b10dbac5",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "33a353cd-5c88-43f4-8593-9a059222f735"
        },
        "item": {
          "id": "80933f3a-1122-4ca1-a12c-90efedfebb1b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "442b28a6-4abc-4fc5-9784-431344fd9e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95324d26-5340-486c-aa7f-1c7289b12a05",
        "cursor": {
          "ref": "54362038-6e45-4b7e-98e1-ab67f5219558",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f0afda7f-56cf-4979-8d7b-3b4eaf68e986"
        },
        "item": {
          "id": "95324d26-5340-486c-aa7f-1c7289b12a05",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "622ca7e7-3303-414e-8e07-b5736006487f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a181e899-91b0-4df5-83d5-6b4f2c676a67",
        "cursor": {
          "ref": "915c785c-5fd6-41e1-b60f-4f0c5b1dc1c6",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3702b894-a1ff-4cc7-8cc2-fcf8a8957ce3"
        },
        "item": {
          "id": "a181e899-91b0-4df5-83d5-6b4f2c676a67",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0064ec70-9b8d-44b6-b54e-e5e696bbd2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107fb503-0db5-4dc5-9762-a3be6f1676de",
        "cursor": {
          "ref": "fddc3583-fab4-4240-902f-4df70fa688ea",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dd6e069f-846a-4d6f-8019-574f0c3e682c"
        },
        "item": {
          "id": "107fb503-0db5-4dc5-9762-a3be6f1676de",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4235edb0-79f7-4b19-8890-a4cea2d59bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3be7f9-9d34-4e66-a64c-88099ccef315",
        "cursor": {
          "ref": "b2a7173d-11da-4311-ac0f-f441b8024753",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "96b9c50d-cd50-4d92-a70c-a48fa38aee00"
        },
        "item": {
          "id": "fc3be7f9-9d34-4e66-a64c-88099ccef315",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "69e42ea2-81cf-48a1-902f-55442a6a5320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77eacbc1-e83e-4de2-8141-40288ab3cbd3",
        "cursor": {
          "ref": "73277af2-ecba-421e-b688-fe71c0d294e3",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6d5a7065-931f-4f0d-a3e4-c435657cd9c9"
        },
        "item": {
          "id": "77eacbc1-e83e-4de2-8141-40288ab3cbd3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5620814c-2c76-44be-92ee-6fcb1e31d598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a733e4da-bd2d-46ce-b8d8-5e0c90c49ed9",
        "cursor": {
          "ref": "3f7cf916-3c35-4485-a365-69440b55161e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f6e86f91-f311-4bc5-ba2d-ecb12fe4c514"
        },
        "item": {
          "id": "a733e4da-bd2d-46ce-b8d8-5e0c90c49ed9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2d0cdb02-2695-4993-bc66-024077ae2461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4e0b3e-f1d2-4719-a814-eff85812dad7",
        "cursor": {
          "ref": "730918bd-5835-41d9-9a8c-5ee0daec57a8",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "248741e9-d9e3-4416-b75b-d730ceea08bf"
        },
        "item": {
          "id": "ce4e0b3e-f1d2-4719-a814-eff85812dad7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a2f765b9-d45e-4f3f-88d6-25a0a22e2026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4e13aa-8cbd-461d-a58e-532faccadc3e",
        "cursor": {
          "ref": "439208fe-bcff-4ffc-bed5-08c2b7da36d7",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e8def4d6-5205-4ef7-84d0-09ee075aaed5"
        },
        "item": {
          "id": "0d4e13aa-8cbd-461d-a58e-532faccadc3e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7dc1932e-2eb4-4d3b-bbf9-71fef83399c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9936247e-338b-49a8-a1b5-3dcde38e0c77",
        "cursor": {
          "ref": "352f73cf-050b-4fea-b39d-13876ca65aec",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8b57556a-2479-4334-8c5d-ec92e1015b3e"
        },
        "item": {
          "id": "9936247e-338b-49a8-a1b5-3dcde38e0c77",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7964282e-0118-4c8c-b4d0-c11556dbaf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9683beb-ebe4-4b45-b692-ca0f55c1764c",
        "cursor": {
          "ref": "f875d408-d45d-446b-965a-03e497b2c6a4",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a95388aa-b913-4ddc-83df-94732bb1da56"
        },
        "item": {
          "id": "f9683beb-ebe4-4b45-b692-ca0f55c1764c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "52ba0cac-8945-4e57-bf24-83a157914413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a292c0-a593-48bd-ab0e-411437aedcce",
        "cursor": {
          "ref": "1beaf821-a645-481e-9b75-666b23ddc8c9",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ff663920-4883-4d00-920b-7a1307c9a177"
        },
        "item": {
          "id": "30a292c0-a593-48bd-ab0e-411437aedcce",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e39a6fd9-2a5a-4365-901e-89363ee777e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28341e5b-350d-4643-b78c-49aecf2c8350",
        "cursor": {
          "ref": "11d5cf22-068a-4c48-9be3-c9b95201e4aa",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4ba0a1a2-61e2-4385-9718-7f12476fdfe9"
        },
        "item": {
          "id": "28341e5b-350d-4643-b78c-49aecf2c8350",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "55fa3a09-735c-4f95-bb33-0302ee33fd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b217cbe-eabf-45e1-929a-c848e4f733ee",
        "cursor": {
          "ref": "554ee0ea-341e-44cc-87e7-896dc1baa18e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0f0860ce-6c04-4c89-8827-d9aad739cb89"
        },
        "item": {
          "id": "2b217cbe-eabf-45e1-929a-c848e4f733ee",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "87889616-20ec-4b81-9861-e41fe44ad129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e38554-eb00-479f-b6a0-8659301682a0",
        "cursor": {
          "ref": "8bcb79ad-6d72-4392-9977-46a1a35d03a8",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1f7eab52-2c4e-4b69-ab3e-6c7ad55abe87"
        },
        "item": {
          "id": "a8e38554-eb00-479f-b6a0-8659301682a0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4cfc3dad-34d2-44fe-a0bc-a8025fb707fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee818639-d830-4fd1-9d77-5a623a69b28e",
        "cursor": {
          "ref": "a15e5f00-d23a-468b-886b-7d37ec1428eb",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3fc68c99-b139-4f11-b0e0-4be264a3d2c8"
        },
        "item": {
          "id": "ee818639-d830-4fd1-9d77-5a623a69b28e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3d1cfdc2-5a65-4cfd-b474-ad7753431bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997ac43d-0ebe-4dbf-89c0-c1279bd87ab4",
        "cursor": {
          "ref": "38b8b712-c58e-4176-b5e9-1a799e1b04e5",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1b42efc7-f935-4f06-8568-bd4d54ed8af2"
        },
        "item": {
          "id": "997ac43d-0ebe-4dbf-89c0-c1279bd87ab4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d60e6c1d-ba5e-4842-9a72-a063461f7b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0ae596-823f-42c0-9543-255bd8d30249",
        "cursor": {
          "ref": "e351ec36-dfa1-44cf-9bf9-41e7cf741160",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e652254b-b7ae-4618-b465-3497a88e80ed"
        },
        "item": {
          "id": "7c0ae596-823f-42c0-9543-255bd8d30249",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1891d8e1-20ec-4a6c-93ef-fc75a1a63e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98779b9e-fedd-4ff8-a939-ca5f3a3b89f8",
        "cursor": {
          "ref": "b1f3b4f8-a9f5-426d-877f-2b48d5a475e3",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "572334b3-b5b3-48cc-82ce-e829074deb3b"
        },
        "item": {
          "id": "98779b9e-fedd-4ff8-a939-ca5f3a3b89f8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "395ed40d-621f-4803-a0fd-457e2a9385cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494139bd-7a06-4831-9820-b2780797bd26",
        "cursor": {
          "ref": "6ba80c27-8e5a-4ac1-b758-01bc318d04d9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7737e85a-1691-4d6e-9311-8b09973044f7"
        },
        "item": {
          "id": "494139bd-7a06-4831-9820-b2780797bd26",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "72f0a517-edb2-4b56-8f06-b612d9a8b16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f21c7a-30b9-4263-9c47-1ccf245f1e92",
        "cursor": {
          "ref": "6ef7bb40-f74d-4e55-a38d-865abaf87242",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "eb0ae558-7fd6-492f-967f-6f7c708b1751"
        },
        "item": {
          "id": "88f21c7a-30b9-4263-9c47-1ccf245f1e92",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5267a736-55eb-4226-ac1d-4cb641a3f354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae310db-81db-41cc-b559-54c96edeb836",
        "cursor": {
          "ref": "05a6e5b3-d920-4936-959a-e1c902160f6a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "10369eca-eddb-4f74-9d0c-0a8eeafc07b9"
        },
        "item": {
          "id": "6ae310db-81db-41cc-b559-54c96edeb836",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bc0972f6-9dfe-4d95-b2b2-9cec9715d118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f0ec7c-6dd7-45d8-9e61-46aed7f4fbdd",
        "cursor": {
          "ref": "4e635ee5-a841-4d86-a0b6-05b53769049c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6d7bc70b-6123-4bab-86bd-bb700a46ec21"
        },
        "item": {
          "id": "b3f0ec7c-6dd7-45d8-9e61-46aed7f4fbdd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fdea2e78-ecd9-42e5-8b15-2f5449d5abc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7529f5-3a5e-4563-934d-e4bd722d5a85",
        "cursor": {
          "ref": "18082fb4-2a4a-48f6-b766-29f90de007a5",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6a7a1edc-0dfd-480e-9ca2-d26410dff6f1"
        },
        "item": {
          "id": "2f7529f5-3a5e-4563-934d-e4bd722d5a85",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "83aee662-9d4d-4c4d-901d-d34eda325f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e50a7d-0c14-464b-91c9-aebad5030360",
        "cursor": {
          "ref": "6999121d-244b-4179-8332-eb5f12fb69f5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "eb9499f3-9cb0-4ac7-93b1-a462bd869064"
        },
        "item": {
          "id": "33e50a7d-0c14-464b-91c9-aebad5030360",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6c9e54ce-4fb5-4bfd-aa93-91bc859614e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f506217e-8142-4ff8-b01f-638b47c53880",
        "cursor": {
          "ref": "ffc1b30d-aa67-4ea9-9119-e8fd40b3642a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c25ba00c-5d80-4411-b3bd-6f247613b724"
        },
        "item": {
          "id": "f506217e-8142-4ff8-b01f-638b47c53880",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6528e135-6531-427d-9fde-8fee2d558e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b010bbd-da78-4ea8-8d40-81b0a9b40c29",
        "cursor": {
          "ref": "3d322b19-1da5-430d-908b-9a68e411cd74",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9f86d07a-7580-42c7-89f4-e5e4608b6c4c"
        },
        "item": {
          "id": "2b010bbd-da78-4ea8-8d40-81b0a9b40c29",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6bd85ab6-8074-4145-ad65-cf826bca4f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2e28df-34b4-4569-b399-867a9c82414f",
        "cursor": {
          "ref": "e04e1f17-75e5-4269-a66e-b0080bc18716",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2274e7bb-3a7d-40c7-8dfa-8e91e827dcce"
        },
        "item": {
          "id": "2c2e28df-34b4-4569-b399-867a9c82414f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c13be4e4-e6ca-4c1c-95e1-7811fa11b862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1275c48-af91-4d52-9de9-4b1ae50f4ea6",
        "cursor": {
          "ref": "640f43e2-6be2-4a6b-8a3b-a1e7b6d3096b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7cfac74f-7afe-4389-8424-f37d661514f6"
        },
        "item": {
          "id": "c1275c48-af91-4d52-9de9-4b1ae50f4ea6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "af4d5bc3-39c9-46bc-92c1-f0d11eb03834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a592bdf-c28a-4f05-8331-171323e72afc",
        "cursor": {
          "ref": "8769a8d7-e2cb-4cbe-b64d-c759ed385bda",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e75c479e-d96d-4ce7-8fb5-2d57c877ecb1"
        },
        "item": {
          "id": "0a592bdf-c28a-4f05-8331-171323e72afc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2fae93e9-dd0e-42f2-903b-ffa54dc4c0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdf56b9-f703-4a92-9fb8-644a70a95f9b",
        "cursor": {
          "ref": "3eeef4d0-5e35-455b-bbcb-cc23a697c51f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "43d5529b-0308-4f12-8499-10a8743711f4"
        },
        "item": {
          "id": "8bdf56b9-f703-4a92-9fb8-644a70a95f9b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9bb2eea3-7e29-447a-995f-85d8db03bfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64386728-4462-4923-b0d2-194fb7e7c644",
        "cursor": {
          "ref": "4c4cd46d-1dd9-4013-bcbe-145c6fe2d6dd",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "aecc5cce-ed2b-4fe8-b28c-42f7900a2290"
        },
        "item": {
          "id": "64386728-4462-4923-b0d2-194fb7e7c644",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f18362f2-7e9a-4bfd-b33d-54fbe7f56376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bfebd3-00c2-4551-ae83-9402d25a98f4",
        "cursor": {
          "ref": "66162fea-0c24-4a83-be81-0e6019d5f578",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "93a1e41b-c5ac-48b2-a604-c788fb991356"
        },
        "item": {
          "id": "a4bfebd3-00c2-4551-ae83-9402d25a98f4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4250e051-8158-481b-8bc4-0f8e16b3d999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3a0bde-09cf-4856-b7ea-a16f6a33351c",
        "cursor": {
          "ref": "0f662c09-3d5d-4981-958d-6767a7bd3683",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2a995415-e1ca-4256-896d-cc4544b26858"
        },
        "item": {
          "id": "ff3a0bde-09cf-4856-b7ea-a16f6a33351c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7a15c6b1-35a7-4f81-b8dd-8d96926ebbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc524195-eed1-4a87-b206-05c4a408d84f",
        "cursor": {
          "ref": "3d69232a-46cd-4cb3-b00e-4aacc054d6c5",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4ad95993-9e61-4418-888c-f5d39434f4ab"
        },
        "item": {
          "id": "dc524195-eed1-4a87-b206-05c4a408d84f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "05293b91-9a82-4004-8b08-7164f7841b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a77c85-d88c-4a65-848b-078b18c35e7c",
        "cursor": {
          "ref": "f253415d-b0d7-4b59-a257-5277bbb465da",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f6376979-3900-4b17-8389-73af8b6317e2"
        },
        "item": {
          "id": "45a77c85-d88c-4a65-848b-078b18c35e7c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bcc94914-80a8-47b1-b36b-ec5921e2a7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e19ec2e-0079-4bdd-a12a-03708a894afc",
        "cursor": {
          "ref": "8608b337-2e6f-45a1-9735-4354e35996f7",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5400148f-823b-47be-b3b9-7ee7fb834ab4"
        },
        "item": {
          "id": "1e19ec2e-0079-4bdd-a12a-03708a894afc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5204ad4b-45ca-45ab-ad9a-9c3cb8b20190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee63fc3-0b7c-43bc-a595-472561470a54",
        "cursor": {
          "ref": "4372d700-26a1-425c-a2e3-681787bdced8",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1e6ce48b-8e95-4ef0-973d-5ea480fbb5f8"
        },
        "item": {
          "id": "5ee63fc3-0b7c-43bc-a595-472561470a54",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6b187b67-bed2-4318-ad53-ec6e00122e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e30550-0122-45f7-8653-c4701e243056",
        "cursor": {
          "ref": "a25e32a1-2b66-4d12-b7d2-5d9f4eca1c77",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "09714330-7a4b-4898-8528-9e753424842e"
        },
        "item": {
          "id": "51e30550-0122-45f7-8653-c4701e243056",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6497a5a1-bfc9-4968-abec-84875cb77000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8534fdd4-5b44-4b16-888a-b6a2983bbf70",
        "cursor": {
          "ref": "ad417dc6-3a01-4eeb-88b9-5d33015fa20d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ec027e3c-9f2f-465b-a1f5-4abfcbd9d522"
        },
        "item": {
          "id": "8534fdd4-5b44-4b16-888a-b6a2983bbf70",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "40bcf07c-b078-42a0-98c1-e05770182b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3606df37-1412-470f-8368-4a5ac9913657",
        "cursor": {
          "ref": "c38a8b2f-aa3a-44d2-ab6c-d41987ce8754",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0e95cb64-85eb-4ce4-875e-ff10501ed1c7"
        },
        "item": {
          "id": "3606df37-1412-470f-8368-4a5ac9913657",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ec5ccd78-a6f4-4ea1-ba55-bd40c34e9aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87138545-04b8-4f40-875f-be379b05270d",
        "cursor": {
          "ref": "2a5248bb-3025-49f1-8c26-4df4cad85cf1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cf03db60-9a1a-4671-9355-2eae4ba2c4d4"
        },
        "item": {
          "id": "87138545-04b8-4f40-875f-be379b05270d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "58f487fc-361a-404e-839f-1a79c453895e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00281f4b-0ffd-440e-bf98-5d15958bf9a0",
        "cursor": {
          "ref": "ff8581e1-c6f9-474a-af95-9c6347158525",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7970afd8-4ef4-47ea-9cc8-d5bbf2247945"
        },
        "item": {
          "id": "00281f4b-0ffd-440e-bf98-5d15958bf9a0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ba4cf65b-6ab6-4234-97c0-6d79a6d2c115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02088ad-16f9-4bfc-b7f6-639d61d700fc",
        "cursor": {
          "ref": "3dffb95d-1c12-4128-b0ec-dfcc048a34a9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "444629c3-c08d-469c-90d1-5d37a1dd6e5d"
        },
        "item": {
          "id": "d02088ad-16f9-4bfc-b7f6-639d61d700fc",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "48924689-bfdf-466b-aa03-868c92c2c22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a9a8b7-7205-45e9-8ef2-874406b24dce",
        "cursor": {
          "ref": "c127dd6c-0496-4554-8450-6f2aa9f0babd",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1cdcc9c7-5b50-422a-a257-442ecf935b8c"
        },
        "item": {
          "id": "58a9a8b7-7205-45e9-8ef2-874406b24dce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2487c5ea-ea24-4c6e-bf53-1f26e7dd39e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed330b7-0f97-4866-a240-d38510dc7775",
        "cursor": {
          "ref": "8448053c-a393-4543-8d9e-e7994864c737",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "21ba5e0e-a5cb-4e62-a135-2264e66c7681"
        },
        "item": {
          "id": "7ed330b7-0f97-4866-a240-d38510dc7775",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "70beb9af-0f8b-49ad-9df7-be9e4db3da2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fef61f1-0940-47a5-a62f-3911b9573ca9",
        "cursor": {
          "ref": "c3ec5428-b29f-480a-bb0f-172d6cffbb2a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "95980cb6-f26e-46b1-b398-8420b4e11312"
        },
        "item": {
          "id": "2fef61f1-0940-47a5-a62f-3911b9573ca9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "30ca5a5a-e882-4984-99a0-b5ac74e34845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112825ec-48af-4b18-a928-5c4e508cb078",
        "cursor": {
          "ref": "9a68a300-c4e5-459c-abe7-c8b5926dafca",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c16ca0b3-d252-432f-9231-093606a26605"
        },
        "item": {
          "id": "112825ec-48af-4b18-a928-5c4e508cb078",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6d4b7a28-e4a3-4259-a29e-664b123e6357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfa8eb7-215c-476c-a153-f0cea3896bb3",
        "cursor": {
          "ref": "c65c6e8c-efe0-4152-b0b1-244527b789a6",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "165cf4a8-a564-4088-a545-501c89897c24"
        },
        "item": {
          "id": "4bfa8eb7-215c-476c-a153-f0cea3896bb3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "07230d04-827d-4ff0-b9e2-20670a8bda0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c97b754-c915-4e74-90cf-f32242e3d724",
        "cursor": {
          "ref": "30b8a9c4-0681-4a85-a060-2885e8b29927",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5aab9278-b632-4ea8-b82f-b43aa535b3b6"
        },
        "item": {
          "id": "4c97b754-c915-4e74-90cf-f32242e3d724",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0017fdae-5a59-40c5-a097-2692a320611f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97926f8a-21af-4709-9964-d07cb9958f68",
        "cursor": {
          "ref": "77dd9ffb-e884-427e-b834-f95199d1d056",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0f6521ea-3623-47e2-beb0-8b8fbc751179"
        },
        "item": {
          "id": "97926f8a-21af-4709-9964-d07cb9958f68",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8b752b34-4403-46ea-9bad-6745cb065112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17eb96f0-4903-436b-9d91-d791f7b4af3f",
        "cursor": {
          "ref": "316b9342-0c73-4bbb-b86d-ffba948b06aa",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1bc339b3-0878-46f5-a2e6-d2019fc7cc35"
        },
        "item": {
          "id": "17eb96f0-4903-436b-9d91-d791f7b4af3f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bade0dfd-b5d6-4a6b-a5a2-8040640d4665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7efe958-82aa-4950-8ce4-2266b867cb2c",
        "cursor": {
          "ref": "6b95bc3f-4943-4ca3-945f-60b9459510b7",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "46b59266-60b6-4934-a313-1dbc5c10b098"
        },
        "item": {
          "id": "f7efe958-82aa-4950-8ce4-2266b867cb2c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "802c43e2-d26c-4cd9-a29d-9a3e1081f9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a35f22c-1d90-4e2d-a161-17b1b0ebb735",
        "cursor": {
          "ref": "49c9d84b-a332-448d-a6e8-f8c77d483d19",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e4355a6e-87b1-42c7-9550-3c8c98105d78"
        },
        "item": {
          "id": "6a35f22c-1d90-4e2d-a161-17b1b0ebb735",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "60ea24cc-8b37-4962-9492-51e5289f1827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef33796-1519-4ed6-8838-174f6d06d5dd",
        "cursor": {
          "ref": "1e5039a2-75a0-463a-a29f-99b3c95a0134",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cddbbc20-8214-423b-a319-805ff87b0e4d"
        },
        "item": {
          "id": "fef33796-1519-4ed6-8838-174f6d06d5dd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f9ceb916-df56-45b0-abd0-5a37dc4bab72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2969cc1-8fee-44d8-822c-d41e2293e90c",
        "cursor": {
          "ref": "d99edd94-720a-4fb7-811b-af095f8504cd",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8de8c672-15c2-41c5-ad93-bd36aae8376c"
        },
        "item": {
          "id": "f2969cc1-8fee-44d8-822c-d41e2293e90c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "902d3014-3bb0-4c51-af3a-1d3fe0a5c415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5676b9ef-4a62-4bbd-85f2-fe4274a1d10e",
        "cursor": {
          "ref": "46b88d15-b938-487b-a31c-17ba6bb0e63e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "989b6f19-62e9-4604-bf49-5bcc825b91f8"
        },
        "item": {
          "id": "5676b9ef-4a62-4bbd-85f2-fe4274a1d10e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e4df2adb-1859-4829-8ca4-d33d3498998d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6a09af-5800-4d90-92c0-6d4aa4ea0044",
        "cursor": {
          "ref": "8fcc0571-75cd-43b3-a0c7-8f657acb0e3d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b5c43269-7cc0-49d8-be0d-5af85aacdf47"
        },
        "item": {
          "id": "5d6a09af-5800-4d90-92c0-6d4aa4ea0044",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c6875478-2b66-46a5-81fb-b24d47dbfdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79925cee-9378-4779-b069-16d03a05cb0d",
        "cursor": {
          "ref": "19b13990-ffea-48cf-bb73-3012b5042897",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "28e692e8-953e-4272-af2a-7c489877b2e5"
        },
        "item": {
          "id": "79925cee-9378-4779-b069-16d03a05cb0d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f6a9a8f1-67ea-4f38-952e-d9b3be2cb29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87804519-36d7-439c-982f-edc777716532",
        "cursor": {
          "ref": "de3b7f22-98e6-4dc1-8bba-eb15938ac1f5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9ac5954e-e0fc-419b-ae75-bf64c640db4f"
        },
        "item": {
          "id": "87804519-36d7-439c-982f-edc777716532",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "829c19f7-ac71-42f9-b2d6-c0c2594cb321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c553474-69e4-4819-bdc1-0992f886f532",
        "cursor": {
          "ref": "e17e1c25-0fab-4d6f-ad8e-a8c7cff44fe7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "80369194-7ebd-48ea-9211-857111912f18"
        },
        "item": {
          "id": "8c553474-69e4-4819-bdc1-0992f886f532",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d844a6f8-2748-4713-967e-157df4c47885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3c7093-e5bd-4e5b-9fac-ecde3f63509f",
        "cursor": {
          "ref": "58a72a97-ffb9-451b-911f-4cfd7d111f77",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d7d76a73-2880-424d-8969-c2f2bd50ee1a"
        },
        "item": {
          "id": "ce3c7093-e5bd-4e5b-9fac-ecde3f63509f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c794aa41-65c1-48e7-a63e-64a43448be65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460df54a-b08a-4e75-8fa6-99f8a716815a",
        "cursor": {
          "ref": "b8832df8-6362-4299-992f-bbc6f22f62f4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "59e97db7-8b1f-49e6-9d3c-eb4509af75c2"
        },
        "item": {
          "id": "460df54a-b08a-4e75-8fa6-99f8a716815a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7ae2a844-6a2c-4cd4-9b89-2284df0ff438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695f2dec-c2c3-4edb-9e0a-572d08ec9015",
        "cursor": {
          "ref": "c6a8cf76-803e-4dca-84ce-d635b126ef3e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "818d9bcc-6afa-4c52-8551-f6fad1b1c838"
        },
        "item": {
          "id": "695f2dec-c2c3-4edb-9e0a-572d08ec9015",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c6af5347-37a9-46e8-a284-c83d03e05052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22efba83-5001-4920-9cc8-2bcc03430a25",
        "cursor": {
          "ref": "ef9a61ec-fd60-4f5c-a57e-7550ef9c2bbf",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8e4cf873-f86c-44c4-97a4-01f529facaa2"
        },
        "item": {
          "id": "22efba83-5001-4920-9cc8-2bcc03430a25",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ca0ac58e-b43c-4a07-bf47-62ec687b6ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9f6707-4d9d-4b9f-ad67-6d688607d644",
        "cursor": {
          "ref": "db5407fd-d1cd-4140-8aa5-47639dec5a7d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6e875817-eab2-4083-8653-88d962b0d408"
        },
        "item": {
          "id": "bd9f6707-4d9d-4b9f-ad67-6d688607d644",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6a0ea590-864f-4666-8ba8-023f01785a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28872b4-041e-4af8-8c19-9fab2dfaf8d8",
        "cursor": {
          "ref": "29b9cd92-110e-4492-99c0-cc1d31872f8f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5105c8f4-b964-4f38-91f7-9dff9667df6f"
        },
        "item": {
          "id": "b28872b4-041e-4af8-8c19-9fab2dfaf8d8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6160af3d-0966-4a9a-ae24-36b493dd9f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8488c5e7-316e-4eae-ab0c-39ac3fdc03d2",
        "cursor": {
          "ref": "ebe2f3ce-7c0a-479a-8837-4afe85939349",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "85b185a7-f805-47a2-bf70-c2227b11a8eb"
        },
        "item": {
          "id": "8488c5e7-316e-4eae-ab0c-39ac3fdc03d2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "721f626e-86eb-42dc-bf84-6333744eb8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e5c2c8-2ce1-47ad-9b92-daf576403064",
        "cursor": {
          "ref": "d9b54cb9-cc47-4aac-b4aa-c4b9fd775c39",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "941dc7d1-22e0-4e7e-82b1-6bbbaf6aa2a2"
        },
        "item": {
          "id": "75e5c2c8-2ce1-47ad-9b92-daf576403064",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eefb409b-b326-4f7e-9f26-8d86e0ed2e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f400718-33ae-437c-af97-6be2796e2b57",
        "cursor": {
          "ref": "6ecd1796-92fb-4bdd-9385-977ab8196708",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "37920a84-fcf5-4637-8e18-c02beb07bd21"
        },
        "item": {
          "id": "4f400718-33ae-437c-af97-6be2796e2b57",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a15bbb17-6034-4a95-9fe6-c7abeb59269a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0963ef-66fc-495c-89c0-862ea8575883",
        "cursor": {
          "ref": "3343c3d2-8d39-4edd-b73a-f97a5c529afc",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b75d00a6-f11b-4661-877e-163f26816545"
        },
        "item": {
          "id": "8b0963ef-66fc-495c-89c0-862ea8575883",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e879fd4f-fba5-4d51-9597-449beb43ac58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470b47f8-5501-4997-b21f-8b5587dda16a",
        "cursor": {
          "ref": "ba6bc66e-e7d7-4704-87b8-9ac5015e8720",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "70f8be99-99bf-4840-8845-ab165a8f5385"
        },
        "item": {
          "id": "470b47f8-5501-4997-b21f-8b5587dda16a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a88065b8-64be-47d5-8a32-bc35326ef8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dca5ea-2acc-4c9a-9a4c-05d84c69b1e4",
        "cursor": {
          "ref": "62f5a231-3716-447c-ac60-5e7b34d88951",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d6fee04c-2534-4c02-819f-786bb0f2ee9c"
        },
        "item": {
          "id": "c9dca5ea-2acc-4c9a-9a4c-05d84c69b1e4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b6b5353b-70f3-4b15-a9b4-2d11f3d6868a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e53adf-fbb9-4cbb-8ca8-5b94668e11ae",
        "cursor": {
          "ref": "77ef35c4-3be5-4e11-8a4b-97c04e512361",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9a57200d-a072-4cf2-bbd4-e165c09b01ae"
        },
        "item": {
          "id": "f1e53adf-fbb9-4cbb-8ca8-5b94668e11ae",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "58f6c64e-f961-4992-819c-8519f4c2c20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14824106-3199-494d-aa20-63e4627a2017",
        "cursor": {
          "ref": "7022ad18-d365-43cb-94a2-b36ab4051721",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5041fcb9-de17-4d1e-9d69-701ab665562b"
        },
        "item": {
          "id": "14824106-3199-494d-aa20-63e4627a2017",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d6b74e90-8717-4452-a7d7-ee4a210ad36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb8d3ae-1191-465e-b0e9-836889a2cf5a",
        "cursor": {
          "ref": "f1cda76e-fc58-4aa2-a721-66eeed6a522a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1077b46a-4ec8-4e38-8c92-9b3fb99a3a17"
        },
        "item": {
          "id": "8eb8d3ae-1191-465e-b0e9-836889a2cf5a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "36b2178b-f058-4f1f-b931-e0e19d522843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cf79a6-461f-44da-999a-d2ea421e6b96",
        "cursor": {
          "ref": "c5f41339-4e5a-499b-b230-1d921a602658",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ee5dfbac-8624-4ea5-ad0d-676cff7fd413"
        },
        "item": {
          "id": "b7cf79a6-461f-44da-999a-d2ea421e6b96",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9088e7f6-26d4-4eca-8d6b-147fdd36c28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85638afe-190a-4df6-a414-5670a1b87a31",
        "cursor": {
          "ref": "cab37ab6-9da4-4cb3-b3ce-cdf872dfcec0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1ec21d3b-93e0-49d8-84e9-51656897df6c"
        },
        "item": {
          "id": "85638afe-190a-4df6-a414-5670a1b87a31",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c2d28286-6ed8-4f2a-bda4-8c08828c5f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b18d53-e507-4f30-891f-163625cf8804",
        "cursor": {
          "ref": "23ae2739-1f4c-4322-97a8-25272f0b9e27",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ba252516-6a1a-4a32-9c78-4c98c58b1525"
        },
        "item": {
          "id": "55b18d53-e507-4f30-891f-163625cf8804",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "42122418-aa23-4c8e-a9a6-d524e29698ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaab43d5-78a0-4648-97c3-cbb805de3d71",
        "cursor": {
          "ref": "137a8e75-411f-4bf2-9586-0e372042499d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "30883b35-83d0-46d6-a3f3-27f72991bef1"
        },
        "item": {
          "id": "eaab43d5-78a0-4648-97c3-cbb805de3d71",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a4240c92-bad0-4eb6-acf5-fc0bdef86952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e09c3b2-71d1-4591-a7f9-5b51351d349d",
        "cursor": {
          "ref": "caf22014-247d-437b-b854-622bb6a533d0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c65e87d3-7bf8-4621-a7cd-6b174d501cee"
        },
        "item": {
          "id": "5e09c3b2-71d1-4591-a7f9-5b51351d349d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "82faefcb-ac30-475d-b0c4-0a03d83bae94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac13e36-37a9-4626-837f-7e99373fe3f5",
        "cursor": {
          "ref": "7821edf4-5c5c-47fa-b0bc-9193892abebc",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "95ee93db-6740-4118-bde4-4c9d5dd4f4bc"
        },
        "item": {
          "id": "7ac13e36-37a9-4626-837f-7e99373fe3f5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7461a29b-2acc-40cc-8863-e97393c56915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0122b060-0b7b-4f92-9efa-6eb7b7b8731f",
        "cursor": {
          "ref": "577bb7f8-8143-4303-8187-5825d171122e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9c44b741-5831-4539-82df-2a3ba5c86c57"
        },
        "item": {
          "id": "0122b060-0b7b-4f92-9efa-6eb7b7b8731f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9f6e5e1a-71ad-4058-8032-aaa563df3320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9fadfc-137c-44a6-8969-f204fd19dabc",
        "cursor": {
          "ref": "c3e2bd4d-2740-4d50-bd1b-2f40115156db",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0dd9f3f5-11ef-4320-834c-c967e4f794fa"
        },
        "item": {
          "id": "2a9fadfc-137c-44a6-8969-f204fd19dabc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e714594a-b39f-465c-ad22-678c96c08d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb805ee-4091-4a83-bd9d-095635225c87",
        "cursor": {
          "ref": "20fb26ca-dc92-4e8a-b3de-260443e46869",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "72d58966-0d1d-4ee9-8b7e-2b653638b60f"
        },
        "item": {
          "id": "8cb805ee-4091-4a83-bd9d-095635225c87",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "01f683db-9946-4087-8643-456a58ff3a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665b3185-3394-49ca-80be-3355027745d7",
        "cursor": {
          "ref": "e55a5070-7496-4ed3-91ff-5957b69d92d3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "78bffc58-c44d-460f-a199-22d138644ed2"
        },
        "item": {
          "id": "665b3185-3394-49ca-80be-3355027745d7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6369979b-329a-410e-8d5e-6723096fe5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e56bba-f776-4310-8333-c9dd6b6b41cf",
        "cursor": {
          "ref": "25d3f7f7-0103-4376-a8d3-50a8103354c4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "833e41ec-507e-41f3-ac29-198db2fa5d22"
        },
        "item": {
          "id": "86e56bba-f776-4310-8333-c9dd6b6b41cf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "68dd5fb9-014a-4620-9c3d-51e613462b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427a3e37-1680-4030-8f22-9b4a65e772b8",
        "cursor": {
          "ref": "6b4e6018-51c2-47b8-96e4-06aaae580b07",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d7ee8b1e-4b2f-4d57-ad9e-292b4258fb07"
        },
        "item": {
          "id": "427a3e37-1680-4030-8f22-9b4a65e772b8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "725cf03a-8dce-49f4-b87b-ea3158ef803e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f00c21-3e6d-4277-949d-64268c839adb",
        "cursor": {
          "ref": "2f648ff4-051a-43e9-9f78-0a0f9ff98d8b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "62873040-ed14-41dd-8c20-3e2c941803a0"
        },
        "item": {
          "id": "c8f00c21-3e6d-4277-949d-64268c839adb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "437eab56-caa9-4bbf-94aa-ce3ef862e88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e1e795-6acd-4b5a-8f31-bde01503bdd6",
        "cursor": {
          "ref": "eebb4c20-1019-4915-a8b5-898cf4901f55",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "01b9db48-0a8d-48d5-bfbf-5d961469ccc8"
        },
        "item": {
          "id": "e9e1e795-6acd-4b5a-8f31-bde01503bdd6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "503b0106-b63e-4058-b8a2-206822087bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2b1e19-d5d9-4aab-badc-32f1c8a640c2",
        "cursor": {
          "ref": "a3cbc947-fe14-4d7f-80a7-9a8f8959370b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4aef3f81-9242-4b1a-bdb3-1d51ef1f8766"
        },
        "item": {
          "id": "8f2b1e19-d5d9-4aab-badc-32f1c8a640c2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "39c5e21c-4113-4f41-b94a-457c694a3eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0440759d-aac3-4f26-abfe-15fe22e3988e",
        "cursor": {
          "ref": "0975812c-c992-498a-a720-298432425eaf",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "55dcc611-6235-4209-a4cb-606273c546e1"
        },
        "item": {
          "id": "0440759d-aac3-4f26-abfe-15fe22e3988e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "053efa6c-98c0-45be-9660-c9722da293fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776975dc-6781-4aac-985c-152674771074",
        "cursor": {
          "ref": "c477e721-51d5-4b16-9573-dff2c68836a0",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "99a276c0-7d0e-43d9-a718-e0605fce4e92"
        },
        "item": {
          "id": "776975dc-6781-4aac-985c-152674771074",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cfafdfd9-d76d-4278-868d-11eefd5eac28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16170578-f576-4ead-8d78-956d0400e371",
        "cursor": {
          "ref": "a51bb8db-63b5-43a2-ac0a-bf180cc101da",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fd325b68-aff9-411c-9731-ba1e11261f0e"
        },
        "item": {
          "id": "16170578-f576-4ead-8d78-956d0400e371",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d252bfe4-a5f1-4199-8d16-f9f667689cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae004d8d-0332-457f-96c4-36cf5ab49791",
        "cursor": {
          "ref": "92736844-e514-4382-bbae-2405ed195a8c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "13fad847-59f4-4429-8315-f3c8a02317d1"
        },
        "item": {
          "id": "ae004d8d-0332-457f-96c4-36cf5ab49791",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a621e75b-2e84-4abb-9c9c-cf69fe5a638b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "627b15e7-92be-41b0-b627-74436b24897e",
        "cursor": {
          "ref": "798b2fcb-2c7b-4a11-bb26-1f99e236a283",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9f3c31f0-a90d-44c2-aed6-56406635fe43"
        },
        "item": {
          "id": "627b15e7-92be-41b0-b627-74436b24897e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1e6baf96-ffb7-4d55-bb7b-5895d9a67d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "21752a89-2137-4bbd-a113-ad848ef43ec5",
        "cursor": {
          "ref": "8e1ddce1-ae61-4749-a14c-c5cc8186dba0",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "eea46568-c5c5-4083-8d86-31fffee36a5e"
        },
        "item": {
          "id": "21752a89-2137-4bbd-a113-ad848ef43ec5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "06c24186-7c82-45ad-acd1-15cfe888fef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "efff0e9a-d64d-4130-9e9a-a55ccd074c83",
        "cursor": {
          "ref": "6cc8e57a-e8e1-4ece-b885-6e5e77653a45",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e56164c3-90fe-48ee-9b54-e44f77b8b5a9"
        },
        "item": {
          "id": "efff0e9a-d64d-4130-9e9a-a55ccd074c83",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bcd1ae39-9b4e-4948-9f6e-b1adb164b5cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efff0e9a-d64d-4130-9e9a-a55ccd074c83",
        "cursor": {
          "ref": "6cc8e57a-e8e1-4ece-b885-6e5e77653a45",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e56164c3-90fe-48ee-9b54-e44f77b8b5a9"
        },
        "item": {
          "id": "efff0e9a-d64d-4130-9e9a-a55ccd074c83",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bcd1ae39-9b4e-4948-9f6e-b1adb164b5cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea243ec-8f09-46e5-9b28-a6636ac43ccd",
        "cursor": {
          "ref": "b0203da2-5fa2-4e63-a63d-7530f10cdb08",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7d87aff2-dd83-4d42-907c-0372f934a942"
        },
        "item": {
          "id": "5ea243ec-8f09-46e5-9b28-a6636ac43ccd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "387908e2-a0ac-4626-b59c-bc30d0f00151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af9eca7-226f-4bd2-8038-5db7a8335a17",
        "cursor": {
          "ref": "e3fa2d85-ade9-4919-8d8a-1524a94f1154",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2542f11a-ad64-4c93-ba8e-1883b5695920"
        },
        "item": {
          "id": "1af9eca7-226f-4bd2-8038-5db7a8335a17",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "27869f80-a465-478f-99a1-6ffda256da3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}